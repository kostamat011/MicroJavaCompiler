INFO  20:38:20,929 - Compiling source file: D:\source\repos\PP_Projekat\MicroJavaCompiler\test\program.mj
INFO  20:38:20,952 - #2 program
INFO  20:38:20,952 - #48 test301
INFO  20:38:20,952 - #7 const
INFO  20:38:20,952 - #48 int
INFO  20:38:20,952 - #48 nula
INFO  20:38:20,953 - #27 =
INFO  20:38:20,953 - #51 0
INFO  20:38:20,953 - #38 ;
INFO  20:38:20,953 - #7 const
INFO  20:38:20,954 - #48 int
INFO  20:38:20,954 - #48 jedan
INFO  20:38:20,954 - #27 =
INFO  20:38:20,954 - #51 1
INFO  20:38:20,954 - #38 ;
INFO  20:38:20,954 - #7 const
INFO  20:38:20,954 - #48 int
INFO  20:38:20,954 - #48 pet
INFO  20:38:20,954 - #27 =
INFO  20:38:20,954 - #51 5
INFO  20:38:20,954 - #38 ;
INFO  20:38:20,954 - #48 int
INFO  20:38:20,963 - #48 o
INFO  20:38:20,963 - #38 ;
INFO  20:38:20,963 - #48 int
INFO  20:38:20,964 - #48 niz
INFO  20:38:20,964 - #42 [
INFO  20:38:20,964 - #43 ]
INFO  20:38:20,964 - #38 ;
INFO  20:38:20,964 - #48 char
INFO  20:38:20,964 - #48 nizch
INFO  20:38:20,964 - #42 [
INFO  20:38:20,964 - #43 ]
INFO  20:38:20,964 - #38 ;
INFO  20:38:20,964 - #44 {
INFO  20:38:20,964 - #48 int
INFO  20:38:20,965 - #48 p
INFO  20:38:20,965 - #40 (
INFO  20:38:20,965 - #48 int
INFO  20:38:20,966 - #48 x
INFO  20:38:20,966 - #39 ,
INFO  20:38:20,966 - #48 int
INFO  20:38:20,966 - #48 y
INFO  20:38:20,966 - #42 [
INFO  20:38:20,966 - #43 ]
INFO  20:38:20,966 - #39 ,
INFO  20:38:20,966 - #48 int
INFO  20:38:20,966 - #48 z
INFO  20:38:20,966 - #41 )
INFO  20:38:20,966 - #48 int
INFO  20:38:20,966 - #48 pp
INFO  20:38:20,967 - #38 ;
INFO  20:38:20,967 - #44 {
INFO  20:38:20,967 - #15 return
INFO  20:38:20,967 - #51 0
INFO  20:38:20,967 - #38 ;
INFO  20:38:20,967 - #45 }
INFO  20:38:20,967 - #14 void
INFO  20:38:20,968 - #48 main
INFO  20:38:20,968 - #40 (
INFO  20:38:20,968 - #41 )
INFO  20:38:20,968 - #44 {
INFO  20:38:20,968 - #48 o
INFO  20:38:20,968 - #27 =
INFO  20:38:20,968 - #48 p
INFO  20:38:20,968 - #40 (
INFO  20:38:20,968 - #51 1
INFO  20:38:20,969 - #39 ,
INFO  20:38:20,969 - #48 niz
INFO  20:38:20,969 - #39 ,
INFO  20:38:20,969 - #51 3
INFO  20:38:20,969 - #41 )
INFO  20:38:20,969 - #38 ;
INFO  20:38:20,970 - #45 }
INFO  20:38:20,970 - #45 }
INFO  20:38:20,970 - Program(
  ProgramName(
   test301
  ) [ProgramName]
  AllDeclListMultiple(
    AllDeclListMultiple(
      AllDeclListMultiple(
        AllDeclListMultiple(
          AllDeclListMultiple(
            AllDeclListMultiple(
              NoDecl(
              ) [NoDecl]
              ConstDeclaration(
                ConstDeclarationExpr(
                  Type(
                   int
                  ) [Type]
                  ConstAssignSingle(
                    ConstAssign(
                     nula
                      NumberConst(
                       0
                      ) [NumberConst]
                    ) [ConstAssign]
                  ) [ConstAssignSingle]
                ) [ConstDeclarationExpr]
              ) [ConstDeclaration]
            ) [AllDeclListMultiple]
            ConstDeclaration(
              ConstDeclarationExpr(
                Type(
                 int
                ) [Type]
                ConstAssignSingle(
                  ConstAssign(
                   jedan
                    NumberConst(
                     1
                    ) [NumberConst]
                  ) [ConstAssign]
                ) [ConstAssignSingle]
              ) [ConstDeclarationExpr]
            ) [ConstDeclaration]
          ) [AllDeclListMultiple]
          ConstDeclaration(
            ConstDeclarationExpr(
              Type(
               int
              ) [Type]
              ConstAssignSingle(
                ConstAssign(
                 pet
                  NumberConst(
                   5
                  ) [NumberConst]
                ) [ConstAssign]
              ) [ConstAssignSingle]
            ) [ConstDeclarationExpr]
          ) [ConstDeclaration]
        ) [AllDeclListMultiple]
        GlobalVarDeclaration(
          GlobalVarDeclarationExpr(
            Type(
             int
            ) [Type]
            GlobalVarDeclListSingle(
              GlobalVarDeclarationSingle(
               o
                NoArray(
                ) [NoArray]
              ) [GlobalVarDeclarationSingle]
            ) [GlobalVarDeclListSingle]
          ) [GlobalVarDeclarationExpr]
        ) [GlobalVarDeclaration]
      ) [AllDeclListMultiple]
      GlobalVarDeclaration(
        GlobalVarDeclarationExpr(
          Type(
           int
          ) [Type]
          GlobalVarDeclListSingle(
            GlobalVarDeclarationSingle(
             niz
              ArrayBrackets(
              ) [ArrayBrackets]
            ) [GlobalVarDeclarationSingle]
          ) [GlobalVarDeclListSingle]
        ) [GlobalVarDeclarationExpr]
      ) [GlobalVarDeclaration]
    ) [AllDeclListMultiple]
    GlobalVarDeclaration(
      GlobalVarDeclarationExpr(
        Type(
         char
        ) [Type]
        GlobalVarDeclListSingle(
          GlobalVarDeclarationSingle(
           nizch
            ArrayBrackets(
            ) [ArrayBrackets]
          ) [GlobalVarDeclarationSingle]
        ) [GlobalVarDeclListSingle]
      ) [GlobalVarDeclarationExpr]
    ) [GlobalVarDeclaration]
  ) [AllDeclListMultiple]
  MethodDeclListMultiple(
    MethodDeclListMultiple(
      MethodDeclListNo(
      ) [MethodDeclListNo]
      MethodDeclaration(
        MethodSignatureParams(
          MethodTypeType(
            Type(
             int
            ) [Type]
          ) [MethodTypeType]
          MethodName(
           p
          ) [MethodName]
          FormParsMultiple(
            FormParsMultiple(
              FormParsSingle(
                FormParSingle(
                  Type(
                   int
                  ) [Type]
                 x
                  NoArray(
                  ) [NoArray]
                ) [FormParSingle]
              ) [FormParsSingle]
              FormParSingle(
                Type(
                 int
                ) [Type]
               y
                ArrayBrackets(
                ) [ArrayBrackets]
              ) [FormParSingle]
            ) [FormParsMultiple]
            FormParSingle(
              Type(
               int
              ) [Type]
             z
              NoArray(
              ) [NoArray]
            ) [FormParSingle]
          ) [FormParsMultiple]
        ) [MethodSignatureParams]
        VarDeclOptionTrue(
          NoVarDeclOption(
          ) [NoVarDeclOption]
          VarDeclarationExpr(
            Type(
             int
            ) [Type]
            VarDeclListSingle(
              VarDeclSingle(
               pp
                NoArray(
                ) [NoArray]
              ) [VarDeclSingle]
            ) [VarDeclListSingle]
          ) [VarDeclarationExpr]
        ) [VarDeclOptionTrue]
        StatementListMultiple(
          StatementListNo(
          ) [StatementListNo]
          StatementSingle(
            SingleReturnExprStatement(
              SingleTermExprPositive(
                SingleFactorTerm(
                  NumConstFactor(
                   0
                  ) [NumConstFactor]
                ) [SingleFactorTerm]
              ) [SingleTermExprPositive]
            ) [SingleReturnExprStatement]
          ) [StatementSingle]
        ) [StatementListMultiple]
      ) [MethodDeclaration]
    ) [MethodDeclListMultiple]
    MethodDeclaration(
      MethodSignaturePlain(
        MethodTypeVoid(
        ) [MethodTypeVoid]
        MethodName(
         main
        ) [MethodName]
      ) [MethodSignaturePlain]
      NoVarDeclOption(
      ) [NoVarDeclOption]
      StatementListMultiple(
        StatementListNo(
        ) [StatementListNo]
        StatementSingle(
          SingleDesignatorStatement(
            DesignatorStmtAssign(
              DesignatorStmtAssignCorrect(
                IdentDesignator(
                 o
                ) [IdentDesignator]
                SingleTermExprPositive(
                  SingleFactorTerm(
                    MethodCallFactor(
                      MethodCall(
                        IdentDesignator(
                         p
                        ) [IdentDesignator]
                        ActParsLeftParen(
                        ) [ActParsLeftParen]
                        ActParsYes(
                          ActParsMultiExpr(
                            ActParsMultiExpr(
                              ActParsSingleExpr(
                                SingleTermExprPositive(
                                  SingleFactorTerm(
                                    NumConstFactor(
                                     1
                                    ) [NumConstFactor]
                                  ) [SingleFactorTerm]
                                ) [SingleTermExprPositive]
                              ) [ActParsSingleExpr]
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentDesignator(
                                     niz
                                    ) [IdentDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [ActParsMultiExpr]
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                NumConstFactor(
                                 3
                                ) [NumConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [ActParsMultiExpr]
                        ) [ActParsYes]
                        ActParsRightParen(
                        ) [ActParsRightParen]
                      ) [MethodCall]
                    ) [MethodCallFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
              ) [DesignatorStmtAssignCorrect]
            ) [DesignatorStmtAssign]
          ) [SingleDesignatorStatement]
        ) [StatementSingle]
      ) [StatementListMultiple]
    ) [MethodDeclaration]
  ) [MethodDeclListMultiple]
) [Program]
INFO  20:38:20,970 - ===================================
INFO  20:39:47,672 - Compiling source file: D:\source\repos\PP_Projekat\MicroJavaCompiler\test\program.mj
INFO  20:39:47,695 - #2 program
INFO  20:39:47,695 - #48 test301
INFO  20:39:47,695 - #7 const
INFO  20:39:47,696 - #48 int
INFO  20:39:47,696 - #48 nula
INFO  20:39:47,696 - #27 =
INFO  20:39:47,696 - #51 0
INFO  20:39:47,696 - #38 ;
INFO  20:39:47,696 - #7 const
INFO  20:39:47,697 - #48 int
INFO  20:39:47,697 - #48 jedan
INFO  20:39:47,697 - #27 =
INFO  20:39:47,697 - #51 1
INFO  20:39:47,697 - #38 ;
INFO  20:39:47,697 - #7 const
INFO  20:39:47,697 - #48 int
INFO  20:39:47,697 - #48 pet
INFO  20:39:47,697 - #27 =
INFO  20:39:47,697 - #51 5
INFO  20:39:47,697 - #38 ;
INFO  20:39:47,697 - #48 int
INFO  20:39:47,697 - #48 o
INFO  20:39:47,697 - #38 ;
INFO  20:39:47,698 - #48 int
INFO  20:39:47,698 - #48 niz
INFO  20:39:47,698 - #42 [
INFO  20:39:47,698 - #43 ]
INFO  20:39:47,698 - #38 ;
INFO  20:39:47,698 - #48 char
INFO  20:39:47,698 - #48 nizch
INFO  20:39:47,698 - #42 [
INFO  20:39:47,698 - #43 ]
INFO  20:39:47,698 - #38 ;
INFO  20:39:47,698 - #44 {
INFO  20:39:47,698 - #48 int
INFO  20:39:47,699 - #48 p
INFO  20:39:47,699 - #40 (
INFO  20:39:47,699 - #48 int
INFO  20:39:47,699 - #48 x
INFO  20:39:47,699 - #39 ,
INFO  20:39:47,699 - #48 int
INFO  20:39:47,699 - #48 y
INFO  20:39:47,699 - #42 [
INFO  20:39:47,699 - #43 ]
INFO  20:39:47,699 - #39 ,
INFO  20:39:47,699 - #48 int
INFO  20:39:47,699 - #48 z
INFO  20:39:47,699 - #41 )
INFO  20:39:47,699 - #48 int
INFO  20:39:47,700 - #48 pp
INFO  20:39:47,700 - #38 ;
INFO  20:39:47,700 - #44 {
INFO  20:39:47,700 - #15 return
INFO  20:39:47,701 - #51 0
INFO  20:39:47,701 - #38 ;
INFO  20:39:47,701 - #45 }
INFO  20:39:47,701 - #14 void
INFO  20:39:47,701 - #48 main
INFO  20:39:47,701 - #40 (
INFO  20:39:47,701 - #41 )
INFO  20:39:47,701 - #44 {
INFO  20:39:47,701 - #48 o
INFO  20:39:47,701 - #27 =
INFO  20:39:47,702 - #48 p
INFO  20:39:47,702 - #40 (
INFO  20:39:47,702 - #51 1
INFO  20:39:47,702 - #39 ,
INFO  20:39:47,702 - #48 niz
INFO  20:39:47,702 - #39 ,
INFO  20:39:47,702 - #51 3
INFO  20:39:47,702 - #41 )
INFO  20:39:47,702 - #38 ;
INFO  20:39:47,703 - #45 }
INFO  20:39:47,703 - #45 }
INFO  20:39:47,704 - Program(
  ProgramName(
   test301
  ) [ProgramName]
  AllDeclListMultiple(
    AllDeclListMultiple(
      AllDeclListMultiple(
        AllDeclListMultiple(
          AllDeclListMultiple(
            AllDeclListMultiple(
              NoDecl(
              ) [NoDecl]
              ConstDeclaration(
                ConstDeclarationExpr(
                  Type(
                   int
                  ) [Type]
                  ConstAssignSingle(
                    ConstAssign(
                     nula
                      NumberConst(
                       0
                      ) [NumberConst]
                    ) [ConstAssign]
                  ) [ConstAssignSingle]
                ) [ConstDeclarationExpr]
              ) [ConstDeclaration]
            ) [AllDeclListMultiple]
            ConstDeclaration(
              ConstDeclarationExpr(
                Type(
                 int
                ) [Type]
                ConstAssignSingle(
                  ConstAssign(
                   jedan
                    NumberConst(
                     1
                    ) [NumberConst]
                  ) [ConstAssign]
                ) [ConstAssignSingle]
              ) [ConstDeclarationExpr]
            ) [ConstDeclaration]
          ) [AllDeclListMultiple]
          ConstDeclaration(
            ConstDeclarationExpr(
              Type(
               int
              ) [Type]
              ConstAssignSingle(
                ConstAssign(
                 pet
                  NumberConst(
                   5
                  ) [NumberConst]
                ) [ConstAssign]
              ) [ConstAssignSingle]
            ) [ConstDeclarationExpr]
          ) [ConstDeclaration]
        ) [AllDeclListMultiple]
        GlobalVarDeclaration(
          GlobalVarDeclarationExpr(
            Type(
             int
            ) [Type]
            GlobalVarDeclListSingle(
              GlobalVarDeclarationSingle(
               o
                NoArray(
                ) [NoArray]
              ) [GlobalVarDeclarationSingle]
            ) [GlobalVarDeclListSingle]
          ) [GlobalVarDeclarationExpr]
        ) [GlobalVarDeclaration]
      ) [AllDeclListMultiple]
      GlobalVarDeclaration(
        GlobalVarDeclarationExpr(
          Type(
           int
          ) [Type]
          GlobalVarDeclListSingle(
            GlobalVarDeclarationSingle(
             niz
              ArrayBrackets(
              ) [ArrayBrackets]
            ) [GlobalVarDeclarationSingle]
          ) [GlobalVarDeclListSingle]
        ) [GlobalVarDeclarationExpr]
      ) [GlobalVarDeclaration]
    ) [AllDeclListMultiple]
    GlobalVarDeclaration(
      GlobalVarDeclarationExpr(
        Type(
         char
        ) [Type]
        GlobalVarDeclListSingle(
          GlobalVarDeclarationSingle(
           nizch
            ArrayBrackets(
            ) [ArrayBrackets]
          ) [GlobalVarDeclarationSingle]
        ) [GlobalVarDeclListSingle]
      ) [GlobalVarDeclarationExpr]
    ) [GlobalVarDeclaration]
  ) [AllDeclListMultiple]
  MethodDeclListMultiple(
    MethodDeclListMultiple(
      MethodDeclListNo(
      ) [MethodDeclListNo]
      MethodDeclaration(
        MethodSignatureParams(
          MethodTypeType(
            Type(
             int
            ) [Type]
          ) [MethodTypeType]
          MethodName(
           p
          ) [MethodName]
          FormParsMultiple(
            FormParsMultiple(
              FormParsSingle(
                FormParSingle(
                  Type(
                   int
                  ) [Type]
                 x
                  NoArray(
                  ) [NoArray]
                ) [FormParSingle]
              ) [FormParsSingle]
              FormParSingle(
                Type(
                 int
                ) [Type]
               y
                ArrayBrackets(
                ) [ArrayBrackets]
              ) [FormParSingle]
            ) [FormParsMultiple]
            FormParSingle(
              Type(
               int
              ) [Type]
             z
              NoArray(
              ) [NoArray]
            ) [FormParSingle]
          ) [FormParsMultiple]
        ) [MethodSignatureParams]
        VarDeclOptionTrue(
          NoVarDeclOption(
          ) [NoVarDeclOption]
          VarDeclarationExpr(
            Type(
             int
            ) [Type]
            VarDeclListSingle(
              VarDeclSingle(
               pp
                NoArray(
                ) [NoArray]
              ) [VarDeclSingle]
            ) [VarDeclListSingle]
          ) [VarDeclarationExpr]
        ) [VarDeclOptionTrue]
        StatementListMultiple(
          StatementListNo(
          ) [StatementListNo]
          StatementSingle(
            SingleReturnExprStatement(
              SingleTermExprPositive(
                SingleFactorTerm(
                  NumConstFactor(
                   0
                  ) [NumConstFactor]
                ) [SingleFactorTerm]
              ) [SingleTermExprPositive]
            ) [SingleReturnExprStatement]
          ) [StatementSingle]
        ) [StatementListMultiple]
      ) [MethodDeclaration]
    ) [MethodDeclListMultiple]
    MethodDeclaration(
      MethodSignaturePlain(
        MethodTypeVoid(
        ) [MethodTypeVoid]
        MethodName(
         main
        ) [MethodName]
      ) [MethodSignaturePlain]
      NoVarDeclOption(
      ) [NoVarDeclOption]
      StatementListMultiple(
        StatementListNo(
        ) [StatementListNo]
        StatementSingle(
          SingleDesignatorStatement(
            DesignatorStmtAssign(
              DesignatorStmtAssignCorrect(
                IdentDesignator(
                 o
                ) [IdentDesignator]
                SingleTermExprPositive(
                  SingleFactorTerm(
                    MethodCallFactor(
                      MethodCall(
                        IdentDesignator(
                         p
                        ) [IdentDesignator]
                        ActParsLeftParen(
                        ) [ActParsLeftParen]
                        ActParsYes(
                          ActParsMultiExpr(
                            ActParsMultiExpr(
                              ActParsSingleExpr(
                                SingleTermExprPositive(
                                  SingleFactorTerm(
                                    NumConstFactor(
                                     1
                                    ) [NumConstFactor]
                                  ) [SingleFactorTerm]
                                ) [SingleTermExprPositive]
                              ) [ActParsSingleExpr]
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentDesignator(
                                     niz
                                    ) [IdentDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [ActParsMultiExpr]
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                NumConstFactor(
                                 3
                                ) [NumConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [ActParsMultiExpr]
                        ) [ActParsYes]
                        ActParsRightParen(
                        ) [ActParsRightParen]
                      ) [MethodCall]
                    ) [MethodCallFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
              ) [DesignatorStmtAssignCorrect]
            ) [DesignatorStmtAssign]
          ) [SingleDesignatorStatement]
        ) [StatementSingle]
      ) [StatementListMultiple]
    ) [MethodDeclaration]
  ) [MethodDeclListMultiple]
) [Program]
INFO  20:39:47,704 - ===================================
INFO  20:39:57,735 - Method Call detected. Method name: p
ERROR 20:39:57,735 - Invalid number of function parameters.
INFO  20:39:59,270 - One or more errors found!
INFO  20:40:07,155 - Compiling source file: D:\source\repos\PP_Projekat\MicroJavaCompiler\test\program.mj
INFO  20:40:07,178 - #2 program
INFO  20:40:07,178 - #48 test301
INFO  20:40:07,178 - #7 const
INFO  20:40:07,178 - #48 int
INFO  20:40:07,178 - #48 nula
INFO  20:40:07,179 - #27 =
INFO  20:40:07,179 - #51 0
INFO  20:40:07,179 - #38 ;
INFO  20:40:07,179 - #7 const
INFO  20:40:07,179 - #48 int
INFO  20:40:07,179 - #48 jedan
INFO  20:40:07,179 - #27 =
INFO  20:40:07,179 - #51 1
INFO  20:40:07,179 - #38 ;
INFO  20:40:07,179 - #7 const
INFO  20:40:07,180 - #48 int
INFO  20:40:07,180 - #48 pet
INFO  20:40:07,180 - #27 =
INFO  20:40:07,180 - #51 5
INFO  20:40:07,180 - #38 ;
INFO  20:40:07,180 - #48 int
INFO  20:40:07,180 - #48 o
INFO  20:40:07,180 - #38 ;
INFO  20:40:07,180 - #48 int
INFO  20:40:07,180 - #48 niz
INFO  20:40:07,181 - #42 [
INFO  20:40:07,181 - #43 ]
INFO  20:40:07,181 - #38 ;
INFO  20:40:07,181 - #48 char
INFO  20:40:07,181 - #48 nizch
INFO  20:40:07,181 - #42 [
INFO  20:40:07,181 - #43 ]
INFO  20:40:07,181 - #38 ;
INFO  20:40:07,181 - #44 {
INFO  20:40:07,181 - #48 int
INFO  20:40:07,181 - #48 p
INFO  20:40:07,181 - #40 (
INFO  20:40:07,182 - #48 int
INFO  20:40:07,182 - #48 x
INFO  20:40:07,182 - #39 ,
INFO  20:40:07,182 - #48 int
INFO  20:40:07,182 - #48 y
INFO  20:40:07,182 - #42 [
INFO  20:40:07,182 - #43 ]
INFO  20:40:07,182 - #39 ,
INFO  20:40:07,182 - #48 int
INFO  20:40:07,182 - #48 z
INFO  20:40:07,182 - #41 )
INFO  20:40:07,182 - #48 int
INFO  20:40:07,183 - #48 pp
INFO  20:40:07,183 - #38 ;
INFO  20:40:07,183 - #44 {
INFO  20:40:07,183 - #15 return
INFO  20:40:07,183 - #51 0
INFO  20:40:07,183 - #38 ;
INFO  20:40:07,183 - #45 }
INFO  20:40:07,183 - #14 void
INFO  20:40:07,184 - #48 main
INFO  20:40:07,184 - #40 (
INFO  20:40:07,184 - #41 )
INFO  20:40:07,184 - #44 {
INFO  20:40:07,184 - #48 o
INFO  20:40:07,184 - #27 =
INFO  20:40:07,184 - #48 p
INFO  20:40:07,184 - #40 (
INFO  20:40:07,184 - #51 1
INFO  20:40:07,184 - #39 ,
INFO  20:40:07,185 - #48 niz
INFO  20:40:07,185 - #39 ,
INFO  20:40:07,185 - #51 3
INFO  20:40:07,185 - #41 )
INFO  20:40:07,185 - #38 ;
INFO  20:40:07,185 - #45 }
INFO  20:40:07,185 - #45 }
INFO  20:40:07,186 - Program(
  ProgramName(
   test301
  ) [ProgramName]
  AllDeclListMultiple(
    AllDeclListMultiple(
      AllDeclListMultiple(
        AllDeclListMultiple(
          AllDeclListMultiple(
            AllDeclListMultiple(
              NoDecl(
              ) [NoDecl]
              ConstDeclaration(
                ConstDeclarationExpr(
                  Type(
                   int
                  ) [Type]
                  ConstAssignSingle(
                    ConstAssign(
                     nula
                      NumberConst(
                       0
                      ) [NumberConst]
                    ) [ConstAssign]
                  ) [ConstAssignSingle]
                ) [ConstDeclarationExpr]
              ) [ConstDeclaration]
            ) [AllDeclListMultiple]
            ConstDeclaration(
              ConstDeclarationExpr(
                Type(
                 int
                ) [Type]
                ConstAssignSingle(
                  ConstAssign(
                   jedan
                    NumberConst(
                     1
                    ) [NumberConst]
                  ) [ConstAssign]
                ) [ConstAssignSingle]
              ) [ConstDeclarationExpr]
            ) [ConstDeclaration]
          ) [AllDeclListMultiple]
          ConstDeclaration(
            ConstDeclarationExpr(
              Type(
               int
              ) [Type]
              ConstAssignSingle(
                ConstAssign(
                 pet
                  NumberConst(
                   5
                  ) [NumberConst]
                ) [ConstAssign]
              ) [ConstAssignSingle]
            ) [ConstDeclarationExpr]
          ) [ConstDeclaration]
        ) [AllDeclListMultiple]
        GlobalVarDeclaration(
          GlobalVarDeclarationExpr(
            Type(
             int
            ) [Type]
            GlobalVarDeclListSingle(
              GlobalVarDeclarationSingle(
               o
                NoArray(
                ) [NoArray]
              ) [GlobalVarDeclarationSingle]
            ) [GlobalVarDeclListSingle]
          ) [GlobalVarDeclarationExpr]
        ) [GlobalVarDeclaration]
      ) [AllDeclListMultiple]
      GlobalVarDeclaration(
        GlobalVarDeclarationExpr(
          Type(
           int
          ) [Type]
          GlobalVarDeclListSingle(
            GlobalVarDeclarationSingle(
             niz
              ArrayBrackets(
              ) [ArrayBrackets]
            ) [GlobalVarDeclarationSingle]
          ) [GlobalVarDeclListSingle]
        ) [GlobalVarDeclarationExpr]
      ) [GlobalVarDeclaration]
    ) [AllDeclListMultiple]
    GlobalVarDeclaration(
      GlobalVarDeclarationExpr(
        Type(
         char
        ) [Type]
        GlobalVarDeclListSingle(
          GlobalVarDeclarationSingle(
           nizch
            ArrayBrackets(
            ) [ArrayBrackets]
          ) [GlobalVarDeclarationSingle]
        ) [GlobalVarDeclListSingle]
      ) [GlobalVarDeclarationExpr]
    ) [GlobalVarDeclaration]
  ) [AllDeclListMultiple]
  MethodDeclListMultiple(
    MethodDeclListMultiple(
      MethodDeclListNo(
      ) [MethodDeclListNo]
      MethodDeclaration(
        MethodSignatureParams(
          MethodTypeType(
            Type(
             int
            ) [Type]
          ) [MethodTypeType]
          MethodName(
           p
          ) [MethodName]
          FormParsMultiple(
            FormParsMultiple(
              FormParsSingle(
                FormParSingle(
                  Type(
                   int
                  ) [Type]
                 x
                  NoArray(
                  ) [NoArray]
                ) [FormParSingle]
              ) [FormParsSingle]
              FormParSingle(
                Type(
                 int
                ) [Type]
               y
                ArrayBrackets(
                ) [ArrayBrackets]
              ) [FormParSingle]
            ) [FormParsMultiple]
            FormParSingle(
              Type(
               int
              ) [Type]
             z
              NoArray(
              ) [NoArray]
            ) [FormParSingle]
          ) [FormParsMultiple]
        ) [MethodSignatureParams]
        VarDeclOptionTrue(
          NoVarDeclOption(
          ) [NoVarDeclOption]
          VarDeclarationExpr(
            Type(
             int
            ) [Type]
            VarDeclListSingle(
              VarDeclSingle(
               pp
                NoArray(
                ) [NoArray]
              ) [VarDeclSingle]
            ) [VarDeclListSingle]
          ) [VarDeclarationExpr]
        ) [VarDeclOptionTrue]
        StatementListMultiple(
          StatementListNo(
          ) [StatementListNo]
          StatementSingle(
            SingleReturnExprStatement(
              SingleTermExprPositive(
                SingleFactorTerm(
                  NumConstFactor(
                   0
                  ) [NumConstFactor]
                ) [SingleFactorTerm]
              ) [SingleTermExprPositive]
            ) [SingleReturnExprStatement]
          ) [StatementSingle]
        ) [StatementListMultiple]
      ) [MethodDeclaration]
    ) [MethodDeclListMultiple]
    MethodDeclaration(
      MethodSignaturePlain(
        MethodTypeVoid(
        ) [MethodTypeVoid]
        MethodName(
         main
        ) [MethodName]
      ) [MethodSignaturePlain]
      NoVarDeclOption(
      ) [NoVarDeclOption]
      StatementListMultiple(
        StatementListNo(
        ) [StatementListNo]
        StatementSingle(
          SingleDesignatorStatement(
            DesignatorStmtAssign(
              DesignatorStmtAssignCorrect(
                IdentDesignator(
                 o
                ) [IdentDesignator]
                SingleTermExprPositive(
                  SingleFactorTerm(
                    MethodCallFactor(
                      MethodCall(
                        IdentDesignator(
                         p
                        ) [IdentDesignator]
                        ActParsLeftParen(
                        ) [ActParsLeftParen]
                        ActParsYes(
                          ActParsMultiExpr(
                            ActParsMultiExpr(
                              ActParsSingleExpr(
                                SingleTermExprPositive(
                                  SingleFactorTerm(
                                    NumConstFactor(
                                     1
                                    ) [NumConstFactor]
                                  ) [SingleFactorTerm]
                                ) [SingleTermExprPositive]
                              ) [ActParsSingleExpr]
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentDesignator(
                                     niz
                                    ) [IdentDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [ActParsMultiExpr]
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                NumConstFactor(
                                 3
                                ) [NumConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [ActParsMultiExpr]
                        ) [ActParsYes]
                        ActParsRightParen(
                        ) [ActParsRightParen]
                      ) [MethodCall]
                    ) [MethodCallFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
              ) [DesignatorStmtAssignCorrect]
            ) [DesignatorStmtAssign]
          ) [SingleDesignatorStatement]
        ) [StatementSingle]
      ) [StatementListMultiple]
    ) [MethodDeclaration]
  ) [MethodDeclListMultiple]
) [Program]
INFO  20:40:07,186 - ===================================
INFO  20:53:20,283 - Compiling source file: D:\source\repos\PP_Projekat\MicroJavaCompiler\test\program.mj
INFO  20:53:20,300 - #2 program
INFO  20:53:20,300 - #48 test301
INFO  20:53:20,300 - #7 const
INFO  20:53:20,301 - #48 int
INFO  20:53:20,301 - #48 nula
INFO  20:53:20,301 - #27 =
INFO  20:53:20,301 - #51 0
INFO  20:53:20,301 - #38 ;
INFO  20:53:20,301 - #7 const
INFO  20:53:20,301 - #48 int
INFO  20:53:20,302 - #48 jedan
INFO  20:53:20,302 - #27 =
INFO  20:53:20,302 - #51 1
INFO  20:53:20,302 - #38 ;
INFO  20:53:20,302 - #7 const
INFO  20:53:20,302 - #48 int
INFO  20:53:20,302 - #48 pet
INFO  20:53:20,302 - #27 =
INFO  20:53:20,302 - #51 5
INFO  20:53:20,302 - #38 ;
INFO  20:53:20,302 - #48 int
INFO  20:53:20,302 - #48 o
INFO  20:53:20,302 - #38 ;
INFO  20:53:20,302 - #48 int
INFO  20:53:20,303 - #48 niz
INFO  20:53:20,303 - #42 [
INFO  20:53:20,303 - #43 ]
INFO  20:53:20,303 - #38 ;
INFO  20:53:20,303 - #48 char
INFO  20:53:20,303 - #48 nizch
INFO  20:53:20,303 - #42 [
INFO  20:53:20,303 - #43 ]
INFO  20:53:20,303 - #38 ;
INFO  20:53:20,303 - #44 {
INFO  20:53:20,303 - #48 int
INFO  20:53:20,303 - #48 p
INFO  20:53:20,303 - #40 (
INFO  20:53:20,304 - #48 int
INFO  20:53:20,304 - #48 x
INFO  20:53:20,304 - #39 ,
INFO  20:53:20,304 - #48 int
INFO  20:53:20,304 - #48 y
INFO  20:53:20,304 - #42 [
INFO  20:53:20,304 - #43 ]
INFO  20:53:20,304 - #39 ,
INFO  20:53:20,304 - #48 int
INFO  20:53:20,304 - #48 z
INFO  20:53:20,304 - #41 )
INFO  20:53:20,304 - #48 int
INFO  20:53:20,305 - #48 pp
INFO  20:53:20,305 - #38 ;
INFO  20:53:20,305 - #44 {
INFO  20:53:20,305 - #15 return
INFO  20:53:20,306 - #51 0
INFO  20:53:20,306 - #38 ;
INFO  20:53:20,306 - #45 }
INFO  20:53:20,306 - #14 void
INFO  20:53:20,306 - #48 main
INFO  20:53:20,306 - #40 (
INFO  20:53:20,306 - #41 )
INFO  20:53:20,306 - #44 {
INFO  20:53:20,306 - #48 o
INFO  20:53:20,307 - #27 =
INFO  20:53:20,307 - #48 p
INFO  20:53:20,307 - #40 (
INFO  20:53:20,307 - #51 1
INFO  20:53:20,308 - #39 ,
INFO  20:53:20,308 - #48 niz
INFO  20:53:20,308 - #39 ,
INFO  20:53:20,308 - #51 3
INFO  20:53:20,308 - #41 )
INFO  20:53:20,308 - #38 ;
INFO  20:53:20,308 - #45 }
INFO  20:53:20,308 - #45 }
INFO  20:53:20,309 - Program(
  ProgramName(
   test301
  ) [ProgramName]
  AllDeclListMultiple(
    AllDeclListMultiple(
      AllDeclListMultiple(
        AllDeclListMultiple(
          AllDeclListMultiple(
            AllDeclListMultiple(
              NoDecl(
              ) [NoDecl]
              ConstDeclaration(
                ConstDeclarationExpr(
                  Type(
                   int
                  ) [Type]
                  ConstAssignSingle(
                    ConstAssign(
                     nula
                      NumberConst(
                       0
                      ) [NumberConst]
                    ) [ConstAssign]
                  ) [ConstAssignSingle]
                ) [ConstDeclarationExpr]
              ) [ConstDeclaration]
            ) [AllDeclListMultiple]
            ConstDeclaration(
              ConstDeclarationExpr(
                Type(
                 int
                ) [Type]
                ConstAssignSingle(
                  ConstAssign(
                   jedan
                    NumberConst(
                     1
                    ) [NumberConst]
                  ) [ConstAssign]
                ) [ConstAssignSingle]
              ) [ConstDeclarationExpr]
            ) [ConstDeclaration]
          ) [AllDeclListMultiple]
          ConstDeclaration(
            ConstDeclarationExpr(
              Type(
               int
              ) [Type]
              ConstAssignSingle(
                ConstAssign(
                 pet
                  NumberConst(
                   5
                  ) [NumberConst]
                ) [ConstAssign]
              ) [ConstAssignSingle]
            ) [ConstDeclarationExpr]
          ) [ConstDeclaration]
        ) [AllDeclListMultiple]
        GlobalVarDeclaration(
          GlobalVarDeclarationExpr(
            Type(
             int
            ) [Type]
            GlobalVarDeclListSingle(
              GlobalVarDeclarationSingle(
               o
                NoArray(
                ) [NoArray]
              ) [GlobalVarDeclarationSingle]
            ) [GlobalVarDeclListSingle]
          ) [GlobalVarDeclarationExpr]
        ) [GlobalVarDeclaration]
      ) [AllDeclListMultiple]
      GlobalVarDeclaration(
        GlobalVarDeclarationExpr(
          Type(
           int
          ) [Type]
          GlobalVarDeclListSingle(
            GlobalVarDeclarationSingle(
             niz
              ArrayBrackets(
              ) [ArrayBrackets]
            ) [GlobalVarDeclarationSingle]
          ) [GlobalVarDeclListSingle]
        ) [GlobalVarDeclarationExpr]
      ) [GlobalVarDeclaration]
    ) [AllDeclListMultiple]
    GlobalVarDeclaration(
      GlobalVarDeclarationExpr(
        Type(
         char
        ) [Type]
        GlobalVarDeclListSingle(
          GlobalVarDeclarationSingle(
           nizch
            ArrayBrackets(
            ) [ArrayBrackets]
          ) [GlobalVarDeclarationSingle]
        ) [GlobalVarDeclListSingle]
      ) [GlobalVarDeclarationExpr]
    ) [GlobalVarDeclaration]
  ) [AllDeclListMultiple]
  MethodDeclListMultiple(
    MethodDeclListMultiple(
      MethodDeclListNo(
      ) [MethodDeclListNo]
      MethodDeclaration(
        MethodSignatureParams(
          MethodTypeType(
            Type(
             int
            ) [Type]
          ) [MethodTypeType]
          MethodName(
           p
          ) [MethodName]
          FormParsMultiple(
            FormParsMultiple(
              FormParsSingle(
                FormParSingle(
                  Type(
                   int
                  ) [Type]
                 x
                  NoArray(
                  ) [NoArray]
                ) [FormParSingle]
              ) [FormParsSingle]
              FormParSingle(
                Type(
                 int
                ) [Type]
               y
                ArrayBrackets(
                ) [ArrayBrackets]
              ) [FormParSingle]
            ) [FormParsMultiple]
            FormParSingle(
              Type(
               int
              ) [Type]
             z
              NoArray(
              ) [NoArray]
            ) [FormParSingle]
          ) [FormParsMultiple]
          FormParsEnd(
          ) [FormParsEnd]
        ) [MethodSignatureParams]
        VarDeclOptionTrue(
          NoVarDeclOption(
          ) [NoVarDeclOption]
          VarDeclarationExpr(
            Type(
             int
            ) [Type]
            VarDeclListSingle(
              VarDeclSingle(
               pp
                NoArray(
                ) [NoArray]
              ) [VarDeclSingle]
            ) [VarDeclListSingle]
          ) [VarDeclarationExpr]
        ) [VarDeclOptionTrue]
        StatementListMultiple(
          StatementListNo(
          ) [StatementListNo]
          StatementSingle(
            SingleReturnExprStatement(
              SingleTermExprPositive(
                SingleFactorTerm(
                  NumConstFactor(
                   0
                  ) [NumConstFactor]
                ) [SingleFactorTerm]
              ) [SingleTermExprPositive]
            ) [SingleReturnExprStatement]
          ) [StatementSingle]
        ) [StatementListMultiple]
      ) [MethodDeclaration]
    ) [MethodDeclListMultiple]
    MethodDeclaration(
      MethodSignaturePlain(
        MethodTypeVoid(
        ) [MethodTypeVoid]
        MethodName(
         main
        ) [MethodName]
      ) [MethodSignaturePlain]
      NoVarDeclOption(
      ) [NoVarDeclOption]
      StatementListMultiple(
        StatementListNo(
        ) [StatementListNo]
        StatementSingle(
          SingleDesignatorStatement(
            DesignatorStmtAssign(
              DesignatorStmtAssignCorrect(
                IdentDesignator(
                 o
                ) [IdentDesignator]
                SingleTermExprPositive(
                  SingleFactorTerm(
                    MethodCallFactor(
                      MethodCall(
                        IdentDesignator(
                         p
                        ) [IdentDesignator]
                        ActParsLeftParen(
                        ) [ActParsLeftParen]
                        ActParsYes(
                          ActParsMultiExpr(
                            ActParsMultiExpr(
                              ActParsSingleExpr(
                                SingleTermExprPositive(
                                  SingleFactorTerm(
                                    NumConstFactor(
                                     1
                                    ) [NumConstFactor]
                                  ) [SingleFactorTerm]
                                ) [SingleTermExprPositive]
                              ) [ActParsSingleExpr]
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentDesignator(
                                     niz
                                    ) [IdentDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [ActParsMultiExpr]
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                NumConstFactor(
                                 3
                                ) [NumConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [ActParsMultiExpr]
                        ) [ActParsYes]
                        ActParsRightParen(
                        ) [ActParsRightParen]
                      ) [MethodCall]
                    ) [MethodCallFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
              ) [DesignatorStmtAssignCorrect]
            ) [DesignatorStmtAssign]
          ) [SingleDesignatorStatement]
        ) [StatementSingle]
      ) [StatementListMultiple]
    ) [MethodDeclaration]
  ) [MethodDeclListMultiple]
) [Program]
INFO  20:53:20,309 - ===================================
INFO  20:53:20,312 - Method Call detected. Method name: p
ERROR 20:53:20,312 - Invalid number of function parameters.
INFO  20:53:20,313 - One or more errors found!
INFO  20:53:50,852 - Compiling source file: D:\source\repos\PP_Projekat\MicroJavaCompiler\test\program.mj
INFO  20:53:50,876 - #2 program
INFO  20:53:50,876 - #48 test301
INFO  20:53:50,876 - #7 const
INFO  20:53:50,877 - #48 int
INFO  20:53:50,877 - #48 nula
INFO  20:53:50,877 - #27 =
INFO  20:53:50,877 - #51 0
INFO  20:53:50,877 - #38 ;
INFO  20:53:50,878 - #7 const
INFO  20:53:50,878 - #48 int
INFO  20:53:50,878 - #48 jedan
INFO  20:53:50,878 - #27 =
INFO  20:53:50,878 - #51 1
INFO  20:53:50,878 - #38 ;
INFO  20:53:50,878 - #7 const
INFO  20:53:50,878 - #48 int
INFO  20:53:50,878 - #48 pet
INFO  20:53:50,878 - #27 =
INFO  20:53:50,878 - #51 5
INFO  20:53:50,878 - #38 ;
INFO  20:53:50,878 - #48 int
INFO  20:53:50,878 - #48 o
INFO  20:53:50,878 - #38 ;
INFO  20:53:50,879 - #48 int
INFO  20:53:50,879 - #48 niz
INFO  20:53:50,879 - #42 [
INFO  20:53:50,879 - #43 ]
INFO  20:53:50,879 - #38 ;
INFO  20:53:50,879 - #48 char
INFO  20:53:50,879 - #48 nizch
INFO  20:53:50,880 - #42 [
INFO  20:53:50,880 - #43 ]
INFO  20:53:50,880 - #38 ;
INFO  20:53:50,880 - #44 {
INFO  20:53:50,880 - #48 int
INFO  20:53:50,880 - #48 p
INFO  20:53:50,880 - #40 (
INFO  20:53:50,880 - #48 int
INFO  20:53:50,880 - #48 x
INFO  20:53:50,880 - #39 ,
INFO  20:53:50,881 - #48 int
INFO  20:53:50,881 - #48 y
INFO  20:53:50,881 - #42 [
INFO  20:53:50,881 - #43 ]
INFO  20:53:50,881 - #39 ,
INFO  20:53:50,881 - #48 int
INFO  20:53:50,881 - #48 z
INFO  20:53:50,881 - #41 )
INFO  20:53:50,881 - #48 int
INFO  20:53:50,881 - #48 pp
INFO  20:53:50,881 - #38 ;
INFO  20:53:50,882 - #44 {
INFO  20:53:50,882 - #15 return
INFO  20:53:50,882 - #51 0
INFO  20:53:50,882 - #38 ;
INFO  20:53:50,882 - #45 }
INFO  20:53:50,882 - #14 void
INFO  20:53:50,882 - #48 main
INFO  20:53:50,883 - #40 (
INFO  20:53:50,883 - #41 )
INFO  20:53:50,883 - #44 {
INFO  20:53:50,883 - #48 o
INFO  20:53:50,883 - #27 =
INFO  20:53:50,883 - #48 p
INFO  20:53:50,883 - #40 (
INFO  20:53:50,883 - #51 1
INFO  20:53:50,883 - #39 ,
INFO  20:53:50,884 - #48 niz
INFO  20:53:50,884 - #39 ,
INFO  20:53:50,884 - #51 3
INFO  20:53:50,884 - #41 )
INFO  20:53:50,884 - #38 ;
INFO  20:53:50,884 - #45 }
INFO  20:53:50,884 - #45 }
INFO  20:53:50,885 - Program(
  ProgramName(
   test301
  ) [ProgramName]
  AllDeclListMultiple(
    AllDeclListMultiple(
      AllDeclListMultiple(
        AllDeclListMultiple(
          AllDeclListMultiple(
            AllDeclListMultiple(
              NoDecl(
              ) [NoDecl]
              ConstDeclaration(
                ConstDeclarationExpr(
                  Type(
                   int
                  ) [Type]
                  ConstAssignSingle(
                    ConstAssign(
                     nula
                      NumberConst(
                       0
                      ) [NumberConst]
                    ) [ConstAssign]
                  ) [ConstAssignSingle]
                ) [ConstDeclarationExpr]
              ) [ConstDeclaration]
            ) [AllDeclListMultiple]
            ConstDeclaration(
              ConstDeclarationExpr(
                Type(
                 int
                ) [Type]
                ConstAssignSingle(
                  ConstAssign(
                   jedan
                    NumberConst(
                     1
                    ) [NumberConst]
                  ) [ConstAssign]
                ) [ConstAssignSingle]
              ) [ConstDeclarationExpr]
            ) [ConstDeclaration]
          ) [AllDeclListMultiple]
          ConstDeclaration(
            ConstDeclarationExpr(
              Type(
               int
              ) [Type]
              ConstAssignSingle(
                ConstAssign(
                 pet
                  NumberConst(
                   5
                  ) [NumberConst]
                ) [ConstAssign]
              ) [ConstAssignSingle]
            ) [ConstDeclarationExpr]
          ) [ConstDeclaration]
        ) [AllDeclListMultiple]
        GlobalVarDeclaration(
          GlobalVarDeclarationExpr(
            Type(
             int
            ) [Type]
            GlobalVarDeclListSingle(
              GlobalVarDeclarationSingle(
               o
                NoArray(
                ) [NoArray]
              ) [GlobalVarDeclarationSingle]
            ) [GlobalVarDeclListSingle]
          ) [GlobalVarDeclarationExpr]
        ) [GlobalVarDeclaration]
      ) [AllDeclListMultiple]
      GlobalVarDeclaration(
        GlobalVarDeclarationExpr(
          Type(
           int
          ) [Type]
          GlobalVarDeclListSingle(
            GlobalVarDeclarationSingle(
             niz
              ArrayBrackets(
              ) [ArrayBrackets]
            ) [GlobalVarDeclarationSingle]
          ) [GlobalVarDeclListSingle]
        ) [GlobalVarDeclarationExpr]
      ) [GlobalVarDeclaration]
    ) [AllDeclListMultiple]
    GlobalVarDeclaration(
      GlobalVarDeclarationExpr(
        Type(
         char
        ) [Type]
        GlobalVarDeclListSingle(
          GlobalVarDeclarationSingle(
           nizch
            ArrayBrackets(
            ) [ArrayBrackets]
          ) [GlobalVarDeclarationSingle]
        ) [GlobalVarDeclListSingle]
      ) [GlobalVarDeclarationExpr]
    ) [GlobalVarDeclaration]
  ) [AllDeclListMultiple]
  MethodDeclListMultiple(
    MethodDeclListMultiple(
      MethodDeclListNo(
      ) [MethodDeclListNo]
      MethodDeclaration(
        MethodSignatureParams(
          MethodTypeType(
            Type(
             int
            ) [Type]
          ) [MethodTypeType]
          MethodName(
           p
          ) [MethodName]
          FormParsMultiple(
            FormParsMultiple(
              FormParsSingle(
                FormParSingle(
                  Type(
                   int
                  ) [Type]
                 x
                  NoArray(
                  ) [NoArray]
                ) [FormParSingle]
              ) [FormParsSingle]
              FormParSingle(
                Type(
                 int
                ) [Type]
               y
                ArrayBrackets(
                ) [ArrayBrackets]
              ) [FormParSingle]
            ) [FormParsMultiple]
            FormParSingle(
              Type(
               int
              ) [Type]
             z
              NoArray(
              ) [NoArray]
            ) [FormParSingle]
          ) [FormParsMultiple]
          FormParsEnd(
          ) [FormParsEnd]
        ) [MethodSignatureParams]
        VarDeclOptionTrue(
          NoVarDeclOption(
          ) [NoVarDeclOption]
          VarDeclarationExpr(
            Type(
             int
            ) [Type]
            VarDeclListSingle(
              VarDeclSingle(
               pp
                NoArray(
                ) [NoArray]
              ) [VarDeclSingle]
            ) [VarDeclListSingle]
          ) [VarDeclarationExpr]
        ) [VarDeclOptionTrue]
        StatementListMultiple(
          StatementListNo(
          ) [StatementListNo]
          StatementSingle(
            SingleReturnExprStatement(
              SingleTermExprPositive(
                SingleFactorTerm(
                  NumConstFactor(
                   0
                  ) [NumConstFactor]
                ) [SingleFactorTerm]
              ) [SingleTermExprPositive]
            ) [SingleReturnExprStatement]
          ) [StatementSingle]
        ) [StatementListMultiple]
      ) [MethodDeclaration]
    ) [MethodDeclListMultiple]
    MethodDeclaration(
      MethodSignaturePlain(
        MethodTypeVoid(
        ) [MethodTypeVoid]
        MethodName(
         main
        ) [MethodName]
      ) [MethodSignaturePlain]
      NoVarDeclOption(
      ) [NoVarDeclOption]
      StatementListMultiple(
        StatementListNo(
        ) [StatementListNo]
        StatementSingle(
          SingleDesignatorStatement(
            DesignatorStmtAssign(
              DesignatorStmtAssignCorrect(
                IdentDesignator(
                 o
                ) [IdentDesignator]
                SingleTermExprPositive(
                  SingleFactorTerm(
                    MethodCallFactor(
                      MethodCall(
                        IdentDesignator(
                         p
                        ) [IdentDesignator]
                        ActParsLeftParen(
                        ) [ActParsLeftParen]
                        ActParsYes(
                          ActParsMultiExpr(
                            ActParsMultiExpr(
                              ActParsSingleExpr(
                                SingleTermExprPositive(
                                  SingleFactorTerm(
                                    NumConstFactor(
                                     1
                                    ) [NumConstFactor]
                                  ) [SingleFactorTerm]
                                ) [SingleTermExprPositive]
                              ) [ActParsSingleExpr]
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentDesignator(
                                     niz
                                    ) [IdentDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [ActParsMultiExpr]
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                NumConstFactor(
                                 3
                                ) [NumConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [ActParsMultiExpr]
                        ) [ActParsYes]
                        ActParsRightParen(
                        ) [ActParsRightParen]
                      ) [MethodCall]
                    ) [MethodCallFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
              ) [DesignatorStmtAssignCorrect]
            ) [DesignatorStmtAssign]
          ) [SingleDesignatorStatement]
        ) [StatementSingle]
      ) [StatementListMultiple]
    ) [MethodDeclaration]
  ) [MethodDeclListMultiple]
) [Program]
INFO  20:53:50,885 - ===================================
INFO  20:53:50,894 - Method Call detected. Method name: p
ERROR 20:53:50,894 - Invalid number of function parameters.
INFO  20:53:50,894 - One or more errors found!
INFO  20:53:59,757 - Compiling source file: D:\source\repos\PP_Projekat\MicroJavaCompiler\test\program.mj
INFO  20:53:59,780 - #2 program
INFO  20:53:59,780 - #48 test301
INFO  20:53:59,781 - #7 const
INFO  20:53:59,781 - #48 int
INFO  20:53:59,781 - #48 nula
INFO  20:53:59,781 - #27 =
INFO  20:53:59,781 - #51 0
INFO  20:53:59,781 - #38 ;
INFO  20:53:59,782 - #7 const
INFO  20:53:59,782 - #48 int
INFO  20:53:59,782 - #48 jedan
INFO  20:53:59,782 - #27 =
INFO  20:53:59,782 - #51 1
INFO  20:53:59,782 - #38 ;
INFO  20:53:59,782 - #7 const
INFO  20:53:59,782 - #48 int
INFO  20:53:59,782 - #48 pet
INFO  20:53:59,782 - #27 =
INFO  20:53:59,782 - #51 5
INFO  20:53:59,782 - #38 ;
INFO  20:53:59,782 - #48 int
INFO  20:53:59,782 - #48 o
INFO  20:53:59,782 - #38 ;
INFO  20:53:59,783 - #48 int
INFO  20:53:59,783 - #48 niz
INFO  20:53:59,783 - #42 [
INFO  20:53:59,783 - #43 ]
INFO  20:53:59,783 - #38 ;
INFO  20:53:59,783 - #48 char
INFO  20:53:59,783 - #48 nizch
INFO  20:53:59,783 - #42 [
INFO  20:53:59,783 - #43 ]
INFO  20:53:59,783 - #38 ;
INFO  20:53:59,783 - #44 {
INFO  20:53:59,783 - #48 int
INFO  20:53:59,784 - #48 p
INFO  20:53:59,784 - #40 (
INFO  20:53:59,784 - #48 int
INFO  20:53:59,784 - #48 x
INFO  20:53:59,784 - #39 ,
INFO  20:53:59,784 - #48 int
INFO  20:53:59,784 - #48 y
INFO  20:53:59,784 - #42 [
INFO  20:53:59,784 - #43 ]
INFO  20:53:59,784 - #39 ,
INFO  20:53:59,784 - #48 int
INFO  20:53:59,785 - #48 z
INFO  20:53:59,785 - #41 )
INFO  20:53:59,785 - #48 int
INFO  20:53:59,785 - #48 pp
INFO  20:53:59,785 - #38 ;
INFO  20:53:59,785 - #44 {
INFO  20:53:59,785 - #15 return
INFO  20:53:59,786 - #51 0
INFO  20:53:59,786 - #38 ;
INFO  20:53:59,786 - #45 }
INFO  20:53:59,786 - #14 void
INFO  20:53:59,786 - #48 main
INFO  20:53:59,786 - #40 (
INFO  20:53:59,786 - #41 )
INFO  20:53:59,786 - #44 {
INFO  20:53:59,787 - #48 o
INFO  20:53:59,787 - #27 =
INFO  20:53:59,787 - #48 p
INFO  20:53:59,787 - #40 (
INFO  20:53:59,787 - #51 1
INFO  20:53:59,787 - #39 ,
INFO  20:53:59,787 - #48 niz
INFO  20:53:59,787 - #39 ,
INFO  20:53:59,787 - #51 3
INFO  20:53:59,787 - #41 )
INFO  20:53:59,787 - #38 ;
INFO  20:53:59,788 - #45 }
INFO  20:53:59,788 - #45 }
INFO  20:53:59,789 - Program(
  ProgramName(
   test301
  ) [ProgramName]
  AllDeclListMultiple(
    AllDeclListMultiple(
      AllDeclListMultiple(
        AllDeclListMultiple(
          AllDeclListMultiple(
            AllDeclListMultiple(
              NoDecl(
              ) [NoDecl]
              ConstDeclaration(
                ConstDeclarationExpr(
                  Type(
                   int
                  ) [Type]
                  ConstAssignSingle(
                    ConstAssign(
                     nula
                      NumberConst(
                       0
                      ) [NumberConst]
                    ) [ConstAssign]
                  ) [ConstAssignSingle]
                ) [ConstDeclarationExpr]
              ) [ConstDeclaration]
            ) [AllDeclListMultiple]
            ConstDeclaration(
              ConstDeclarationExpr(
                Type(
                 int
                ) [Type]
                ConstAssignSingle(
                  ConstAssign(
                   jedan
                    NumberConst(
                     1
                    ) [NumberConst]
                  ) [ConstAssign]
                ) [ConstAssignSingle]
              ) [ConstDeclarationExpr]
            ) [ConstDeclaration]
          ) [AllDeclListMultiple]
          ConstDeclaration(
            ConstDeclarationExpr(
              Type(
               int
              ) [Type]
              ConstAssignSingle(
                ConstAssign(
                 pet
                  NumberConst(
                   5
                  ) [NumberConst]
                ) [ConstAssign]
              ) [ConstAssignSingle]
            ) [ConstDeclarationExpr]
          ) [ConstDeclaration]
        ) [AllDeclListMultiple]
        GlobalVarDeclaration(
          GlobalVarDeclarationExpr(
            Type(
             int
            ) [Type]
            GlobalVarDeclListSingle(
              GlobalVarDeclarationSingle(
               o
                NoArray(
                ) [NoArray]
              ) [GlobalVarDeclarationSingle]
            ) [GlobalVarDeclListSingle]
          ) [GlobalVarDeclarationExpr]
        ) [GlobalVarDeclaration]
      ) [AllDeclListMultiple]
      GlobalVarDeclaration(
        GlobalVarDeclarationExpr(
          Type(
           int
          ) [Type]
          GlobalVarDeclListSingle(
            GlobalVarDeclarationSingle(
             niz
              ArrayBrackets(
              ) [ArrayBrackets]
            ) [GlobalVarDeclarationSingle]
          ) [GlobalVarDeclListSingle]
        ) [GlobalVarDeclarationExpr]
      ) [GlobalVarDeclaration]
    ) [AllDeclListMultiple]
    GlobalVarDeclaration(
      GlobalVarDeclarationExpr(
        Type(
         char
        ) [Type]
        GlobalVarDeclListSingle(
          GlobalVarDeclarationSingle(
           nizch
            ArrayBrackets(
            ) [ArrayBrackets]
          ) [GlobalVarDeclarationSingle]
        ) [GlobalVarDeclListSingle]
      ) [GlobalVarDeclarationExpr]
    ) [GlobalVarDeclaration]
  ) [AllDeclListMultiple]
  MethodDeclListMultiple(
    MethodDeclListMultiple(
      MethodDeclListNo(
      ) [MethodDeclListNo]
      MethodDeclaration(
        MethodSignatureParams(
          MethodTypeType(
            Type(
             int
            ) [Type]
          ) [MethodTypeType]
          MethodName(
           p
          ) [MethodName]
          FormParsMultiple(
            FormParsMultiple(
              FormParsSingle(
                FormParSingle(
                  Type(
                   int
                  ) [Type]
                 x
                  NoArray(
                  ) [NoArray]
                ) [FormParSingle]
              ) [FormParsSingle]
              FormParSingle(
                Type(
                 int
                ) [Type]
               y
                ArrayBrackets(
                ) [ArrayBrackets]
              ) [FormParSingle]
            ) [FormParsMultiple]
            FormParSingle(
              Type(
               int
              ) [Type]
             z
              NoArray(
              ) [NoArray]
            ) [FormParSingle]
          ) [FormParsMultiple]
          FormParsEnd(
          ) [FormParsEnd]
        ) [MethodSignatureParams]
        VarDeclOptionTrue(
          NoVarDeclOption(
          ) [NoVarDeclOption]
          VarDeclarationExpr(
            Type(
             int
            ) [Type]
            VarDeclListSingle(
              VarDeclSingle(
               pp
                NoArray(
                ) [NoArray]
              ) [VarDeclSingle]
            ) [VarDeclListSingle]
          ) [VarDeclarationExpr]
        ) [VarDeclOptionTrue]
        StatementListMultiple(
          StatementListNo(
          ) [StatementListNo]
          StatementSingle(
            SingleReturnExprStatement(
              SingleTermExprPositive(
                SingleFactorTerm(
                  NumConstFactor(
                   0
                  ) [NumConstFactor]
                ) [SingleFactorTerm]
              ) [SingleTermExprPositive]
            ) [SingleReturnExprStatement]
          ) [StatementSingle]
        ) [StatementListMultiple]
      ) [MethodDeclaration]
    ) [MethodDeclListMultiple]
    MethodDeclaration(
      MethodSignaturePlain(
        MethodTypeVoid(
        ) [MethodTypeVoid]
        MethodName(
         main
        ) [MethodName]
      ) [MethodSignaturePlain]
      NoVarDeclOption(
      ) [NoVarDeclOption]
      StatementListMultiple(
        StatementListNo(
        ) [StatementListNo]
        StatementSingle(
          SingleDesignatorStatement(
            DesignatorStmtAssign(
              DesignatorStmtAssignCorrect(
                IdentDesignator(
                 o
                ) [IdentDesignator]
                SingleTermExprPositive(
                  SingleFactorTerm(
                    MethodCallFactor(
                      MethodCall(
                        IdentDesignator(
                         p
                        ) [IdentDesignator]
                        ActParsLeftParen(
                        ) [ActParsLeftParen]
                        ActParsYes(
                          ActParsMultiExpr(
                            ActParsMultiExpr(
                              ActParsSingleExpr(
                                SingleTermExprPositive(
                                  SingleFactorTerm(
                                    NumConstFactor(
                                     1
                                    ) [NumConstFactor]
                                  ) [SingleFactorTerm]
                                ) [SingleTermExprPositive]
                              ) [ActParsSingleExpr]
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentDesignator(
                                     niz
                                    ) [IdentDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [ActParsMultiExpr]
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                NumConstFactor(
                                 3
                                ) [NumConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [ActParsMultiExpr]
                        ) [ActParsYes]
                        ActParsRightParen(
                        ) [ActParsRightParen]
                      ) [MethodCall]
                    ) [MethodCallFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
              ) [DesignatorStmtAssignCorrect]
            ) [DesignatorStmtAssign]
          ) [SingleDesignatorStatement]
        ) [StatementSingle]
      ) [StatementListMultiple]
    ) [MethodDeclaration]
  ) [MethodDeclListMultiple]
) [Program]
INFO  20:53:59,789 - ===================================
INFO  20:53:59,797 - Method Call detected. Method name: p
ERROR 20:53:59,797 - Invalid number of function parameters.
INFO  20:53:59,797 - One or more errors found!
INFO  20:54:15,717 - Compiling source file: D:\source\repos\PP_Projekat\MicroJavaCompiler\test\program.mj
INFO  20:54:15,741 - #2 program
INFO  20:54:15,741 - #48 test301
INFO  20:54:15,741 - #7 const
INFO  20:54:15,741 - #48 int
INFO  20:54:15,741 - #48 nula
INFO  20:54:15,742 - #27 =
INFO  20:54:15,742 - #51 0
INFO  20:54:15,742 - #38 ;
INFO  20:54:15,742 - #7 const
INFO  20:54:15,742 - #48 int
INFO  20:54:15,742 - #48 jedan
INFO  20:54:15,742 - #27 =
INFO  20:54:15,742 - #51 1
INFO  20:54:15,742 - #38 ;
INFO  20:54:15,742 - #7 const
INFO  20:54:15,742 - #48 int
INFO  20:54:15,742 - #48 pet
INFO  20:54:15,742 - #27 =
INFO  20:54:15,743 - #51 5
INFO  20:54:15,743 - #38 ;
INFO  20:54:15,743 - #48 int
INFO  20:54:15,743 - #48 o
INFO  20:54:15,743 - #38 ;
INFO  20:54:15,743 - #48 int
INFO  20:54:15,743 - #48 niz
INFO  20:54:15,743 - #42 [
INFO  20:54:15,743 - #43 ]
INFO  20:54:15,743 - #38 ;
INFO  20:54:15,744 - #48 char
INFO  20:54:15,744 - #48 nizch
INFO  20:54:15,744 - #42 [
INFO  20:54:15,744 - #43 ]
INFO  20:54:15,744 - #38 ;
INFO  20:54:15,744 - #44 {
INFO  20:54:15,744 - #48 int
INFO  20:54:15,744 - #48 p
INFO  20:54:15,744 - #40 (
INFO  20:54:15,744 - #48 int
INFO  20:54:15,744 - #48 x
INFO  20:54:15,744 - #39 ,
INFO  20:54:15,745 - #48 int
INFO  20:54:15,745 - #48 y
INFO  20:54:15,745 - #42 [
INFO  20:54:15,745 - #43 ]
INFO  20:54:15,745 - #39 ,
INFO  20:54:15,745 - #48 int
INFO  20:54:15,745 - #48 z
INFO  20:54:15,745 - #41 )
INFO  20:54:15,745 - #48 int
INFO  20:54:15,745 - #48 pp
INFO  20:54:15,746 - #38 ;
INFO  20:54:15,746 - #44 {
INFO  20:54:15,746 - #15 return
INFO  20:54:15,746 - #51 0
INFO  20:54:15,746 - #38 ;
INFO  20:54:15,746 - #45 }
INFO  20:54:15,746 - #14 void
INFO  20:54:15,747 - #48 main
INFO  20:54:15,747 - #40 (
INFO  20:54:15,747 - #41 )
INFO  20:54:15,747 - #44 {
INFO  20:54:15,747 - #48 o
INFO  20:54:15,747 - #27 =
INFO  20:54:15,747 - #48 p
INFO  20:54:15,747 - #40 (
INFO  20:54:15,747 - #51 1
INFO  20:54:15,748 - #39 ,
INFO  20:54:15,748 - #48 niz
INFO  20:54:15,748 - #39 ,
INFO  20:54:15,748 - #51 3
INFO  20:54:15,748 - #41 )
INFO  20:54:15,748 - #38 ;
INFO  20:54:15,748 - #45 }
INFO  20:54:15,749 - #45 }
INFO  20:54:15,749 - Program(
  ProgramName(
   test301
  ) [ProgramName]
  AllDeclListMultiple(
    AllDeclListMultiple(
      AllDeclListMultiple(
        AllDeclListMultiple(
          AllDeclListMultiple(
            AllDeclListMultiple(
              NoDecl(
              ) [NoDecl]
              ConstDeclaration(
                ConstDeclarationExpr(
                  Type(
                   int
                  ) [Type]
                  ConstAssignSingle(
                    ConstAssign(
                     nula
                      NumberConst(
                       0
                      ) [NumberConst]
                    ) [ConstAssign]
                  ) [ConstAssignSingle]
                ) [ConstDeclarationExpr]
              ) [ConstDeclaration]
            ) [AllDeclListMultiple]
            ConstDeclaration(
              ConstDeclarationExpr(
                Type(
                 int
                ) [Type]
                ConstAssignSingle(
                  ConstAssign(
                   jedan
                    NumberConst(
                     1
                    ) [NumberConst]
                  ) [ConstAssign]
                ) [ConstAssignSingle]
              ) [ConstDeclarationExpr]
            ) [ConstDeclaration]
          ) [AllDeclListMultiple]
          ConstDeclaration(
            ConstDeclarationExpr(
              Type(
               int
              ) [Type]
              ConstAssignSingle(
                ConstAssign(
                 pet
                  NumberConst(
                   5
                  ) [NumberConst]
                ) [ConstAssign]
              ) [ConstAssignSingle]
            ) [ConstDeclarationExpr]
          ) [ConstDeclaration]
        ) [AllDeclListMultiple]
        GlobalVarDeclaration(
          GlobalVarDeclarationExpr(
            Type(
             int
            ) [Type]
            GlobalVarDeclListSingle(
              GlobalVarDeclarationSingle(
               o
                NoArray(
                ) [NoArray]
              ) [GlobalVarDeclarationSingle]
            ) [GlobalVarDeclListSingle]
          ) [GlobalVarDeclarationExpr]
        ) [GlobalVarDeclaration]
      ) [AllDeclListMultiple]
      GlobalVarDeclaration(
        GlobalVarDeclarationExpr(
          Type(
           int
          ) [Type]
          GlobalVarDeclListSingle(
            GlobalVarDeclarationSingle(
             niz
              ArrayBrackets(
              ) [ArrayBrackets]
            ) [GlobalVarDeclarationSingle]
          ) [GlobalVarDeclListSingle]
        ) [GlobalVarDeclarationExpr]
      ) [GlobalVarDeclaration]
    ) [AllDeclListMultiple]
    GlobalVarDeclaration(
      GlobalVarDeclarationExpr(
        Type(
         char
        ) [Type]
        GlobalVarDeclListSingle(
          GlobalVarDeclarationSingle(
           nizch
            ArrayBrackets(
            ) [ArrayBrackets]
          ) [GlobalVarDeclarationSingle]
        ) [GlobalVarDeclListSingle]
      ) [GlobalVarDeclarationExpr]
    ) [GlobalVarDeclaration]
  ) [AllDeclListMultiple]
  MethodDeclListMultiple(
    MethodDeclListMultiple(
      MethodDeclListNo(
      ) [MethodDeclListNo]
      MethodDeclaration(
        MethodSignatureParams(
          MethodTypeType(
            Type(
             int
            ) [Type]
          ) [MethodTypeType]
          MethodName(
           p
          ) [MethodName]
          FormParsMultiple(
            FormParsMultiple(
              FormParsSingle(
                FormParSingle(
                  Type(
                   int
                  ) [Type]
                 x
                  NoArray(
                  ) [NoArray]
                ) [FormParSingle]
              ) [FormParsSingle]
              FormParSingle(
                Type(
                 int
                ) [Type]
               y
                ArrayBrackets(
                ) [ArrayBrackets]
              ) [FormParSingle]
            ) [FormParsMultiple]
            FormParSingle(
              Type(
               int
              ) [Type]
             z
              NoArray(
              ) [NoArray]
            ) [FormParSingle]
          ) [FormParsMultiple]
          FormParsEnd(
          ) [FormParsEnd]
        ) [MethodSignatureParams]
        VarDeclOptionTrue(
          NoVarDeclOption(
          ) [NoVarDeclOption]
          VarDeclarationExpr(
            Type(
             int
            ) [Type]
            VarDeclListSingle(
              VarDeclSingle(
               pp
                NoArray(
                ) [NoArray]
              ) [VarDeclSingle]
            ) [VarDeclListSingle]
          ) [VarDeclarationExpr]
        ) [VarDeclOptionTrue]
        StatementListMultiple(
          StatementListNo(
          ) [StatementListNo]
          StatementSingle(
            SingleReturnExprStatement(
              SingleTermExprPositive(
                SingleFactorTerm(
                  NumConstFactor(
                   0
                  ) [NumConstFactor]
                ) [SingleFactorTerm]
              ) [SingleTermExprPositive]
            ) [SingleReturnExprStatement]
          ) [StatementSingle]
        ) [StatementListMultiple]
      ) [MethodDeclaration]
    ) [MethodDeclListMultiple]
    MethodDeclaration(
      MethodSignaturePlain(
        MethodTypeVoid(
        ) [MethodTypeVoid]
        MethodName(
         main
        ) [MethodName]
      ) [MethodSignaturePlain]
      NoVarDeclOption(
      ) [NoVarDeclOption]
      StatementListMultiple(
        StatementListNo(
        ) [StatementListNo]
        StatementSingle(
          SingleDesignatorStatement(
            DesignatorStmtAssign(
              DesignatorStmtAssignCorrect(
                IdentDesignator(
                 o
                ) [IdentDesignator]
                SingleTermExprPositive(
                  SingleFactorTerm(
                    MethodCallFactor(
                      MethodCall(
                        IdentDesignator(
                         p
                        ) [IdentDesignator]
                        ActParsLeftParen(
                        ) [ActParsLeftParen]
                        ActParsYes(
                          ActParsMultiExpr(
                            ActParsMultiExpr(
                              ActParsSingleExpr(
                                SingleTermExprPositive(
                                  SingleFactorTerm(
                                    NumConstFactor(
                                     1
                                    ) [NumConstFactor]
                                  ) [SingleFactorTerm]
                                ) [SingleTermExprPositive]
                              ) [ActParsSingleExpr]
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentDesignator(
                                     niz
                                    ) [IdentDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [ActParsMultiExpr]
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                NumConstFactor(
                                 3
                                ) [NumConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [ActParsMultiExpr]
                        ) [ActParsYes]
                        ActParsRightParen(
                        ) [ActParsRightParen]
                      ) [MethodCall]
                    ) [MethodCallFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
              ) [DesignatorStmtAssignCorrect]
            ) [DesignatorStmtAssign]
          ) [SingleDesignatorStatement]
        ) [StatementSingle]
      ) [StatementListMultiple]
    ) [MethodDeclaration]
  ) [MethodDeclListMultiple]
) [Program]
INFO  20:54:15,749 - ===================================
INFO  20:54:20,176 - Method Call detected. Method name: p
INFO  20:55:17,946 - Compiling source file: D:\source\repos\PP_Projekat\MicroJavaCompiler\test\program.mj
INFO  20:55:17,969 - #2 program
INFO  20:55:17,969 - #48 test301
INFO  20:55:17,969 - #7 const
INFO  20:55:17,969 - #48 int
INFO  20:55:17,969 - #48 nula
INFO  20:55:17,970 - #27 =
INFO  20:55:17,970 - #51 0
INFO  20:55:17,970 - #38 ;
INFO  20:55:17,970 - #7 const
INFO  20:55:17,970 - #48 int
INFO  20:55:17,970 - #48 jedan
INFO  20:55:17,970 - #27 =
INFO  20:55:17,970 - #51 1
INFO  20:55:17,970 - #38 ;
INFO  20:55:17,970 - #7 const
INFO  20:55:17,970 - #48 int
INFO  20:55:17,970 - #48 pet
INFO  20:55:17,970 - #27 =
INFO  20:55:17,970 - #51 5
INFO  20:55:17,970 - #38 ;
INFO  20:55:17,970 - #48 int
INFO  20:55:17,971 - #48 o
INFO  20:55:17,971 - #38 ;
INFO  20:55:17,971 - #48 int
INFO  20:55:17,971 - #48 niz
INFO  20:55:17,971 - #42 [
INFO  20:55:17,971 - #43 ]
INFO  20:55:17,971 - #38 ;
INFO  20:55:17,971 - #48 char
INFO  20:55:17,972 - #48 nizch
INFO  20:55:17,972 - #42 [
INFO  20:55:17,972 - #43 ]
INFO  20:55:17,972 - #38 ;
INFO  20:55:17,972 - #44 {
INFO  20:55:17,972 - #48 int
INFO  20:55:17,972 - #48 p
INFO  20:55:17,972 - #40 (
INFO  20:55:17,972 - #48 int
INFO  20:55:17,972 - #48 x
INFO  20:55:17,972 - #39 ,
INFO  20:55:17,972 - #48 int
INFO  20:55:17,972 - #48 y
INFO  20:55:17,973 - #42 [
INFO  20:55:17,973 - #43 ]
INFO  20:55:17,973 - #39 ,
INFO  20:55:17,973 - #48 int
INFO  20:55:17,973 - #48 z
INFO  20:55:17,973 - #41 )
INFO  20:55:17,973 - #48 int
INFO  20:55:17,973 - #48 pp
INFO  20:55:17,974 - #38 ;
INFO  20:55:17,974 - #44 {
INFO  20:55:17,974 - #15 return
INFO  20:55:17,974 - #51 0
INFO  20:55:17,974 - #38 ;
INFO  20:55:17,974 - #45 }
INFO  20:55:17,974 - #14 void
INFO  20:55:17,975 - #48 main
INFO  20:55:17,975 - #40 (
INFO  20:55:17,975 - #41 )
INFO  20:55:17,975 - #44 {
INFO  20:55:17,975 - #48 o
INFO  20:55:17,975 - #27 =
INFO  20:55:17,975 - #48 p
INFO  20:55:17,975 - #40 (
INFO  20:55:17,975 - #51 1
INFO  20:55:17,975 - #39 ,
INFO  20:55:17,976 - #48 niz
INFO  20:55:17,976 - #39 ,
INFO  20:55:17,976 - #51 3
INFO  20:55:17,976 - #41 )
INFO  20:55:17,976 - #38 ;
INFO  20:55:17,976 - #45 }
INFO  20:55:17,976 - #45 }
INFO  20:55:17,977 - Program(
  ProgramName(
   test301
  ) [ProgramName]
  AllDeclListMultiple(
    AllDeclListMultiple(
      AllDeclListMultiple(
        AllDeclListMultiple(
          AllDeclListMultiple(
            AllDeclListMultiple(
              NoDecl(
              ) [NoDecl]
              ConstDeclaration(
                ConstDeclarationExpr(
                  Type(
                   int
                  ) [Type]
                  ConstAssignSingle(
                    ConstAssign(
                     nula
                      NumberConst(
                       0
                      ) [NumberConst]
                    ) [ConstAssign]
                  ) [ConstAssignSingle]
                ) [ConstDeclarationExpr]
              ) [ConstDeclaration]
            ) [AllDeclListMultiple]
            ConstDeclaration(
              ConstDeclarationExpr(
                Type(
                 int
                ) [Type]
                ConstAssignSingle(
                  ConstAssign(
                   jedan
                    NumberConst(
                     1
                    ) [NumberConst]
                  ) [ConstAssign]
                ) [ConstAssignSingle]
              ) [ConstDeclarationExpr]
            ) [ConstDeclaration]
          ) [AllDeclListMultiple]
          ConstDeclaration(
            ConstDeclarationExpr(
              Type(
               int
              ) [Type]
              ConstAssignSingle(
                ConstAssign(
                 pet
                  NumberConst(
                   5
                  ) [NumberConst]
                ) [ConstAssign]
              ) [ConstAssignSingle]
            ) [ConstDeclarationExpr]
          ) [ConstDeclaration]
        ) [AllDeclListMultiple]
        GlobalVarDeclaration(
          GlobalVarDeclarationExpr(
            Type(
             int
            ) [Type]
            GlobalVarDeclListSingle(
              GlobalVarDeclarationSingle(
               o
                NoArray(
                ) [NoArray]
              ) [GlobalVarDeclarationSingle]
            ) [GlobalVarDeclListSingle]
          ) [GlobalVarDeclarationExpr]
        ) [GlobalVarDeclaration]
      ) [AllDeclListMultiple]
      GlobalVarDeclaration(
        GlobalVarDeclarationExpr(
          Type(
           int
          ) [Type]
          GlobalVarDeclListSingle(
            GlobalVarDeclarationSingle(
             niz
              ArrayBrackets(
              ) [ArrayBrackets]
            ) [GlobalVarDeclarationSingle]
          ) [GlobalVarDeclListSingle]
        ) [GlobalVarDeclarationExpr]
      ) [GlobalVarDeclaration]
    ) [AllDeclListMultiple]
    GlobalVarDeclaration(
      GlobalVarDeclarationExpr(
        Type(
         char
        ) [Type]
        GlobalVarDeclListSingle(
          GlobalVarDeclarationSingle(
           nizch
            ArrayBrackets(
            ) [ArrayBrackets]
          ) [GlobalVarDeclarationSingle]
        ) [GlobalVarDeclListSingle]
      ) [GlobalVarDeclarationExpr]
    ) [GlobalVarDeclaration]
  ) [AllDeclListMultiple]
  MethodDeclListMultiple(
    MethodDeclListMultiple(
      MethodDeclListNo(
      ) [MethodDeclListNo]
      MethodDeclaration(
        MethodSignatureParams(
          MethodTypeType(
            Type(
             int
            ) [Type]
          ) [MethodTypeType]
          MethodName(
           p
          ) [MethodName]
          FormParsMultiple(
            FormParsMultiple(
              FormParsSingle(
                FormParSingle(
                  Type(
                   int
                  ) [Type]
                 x
                  NoArray(
                  ) [NoArray]
                ) [FormParSingle]
              ) [FormParsSingle]
              FormParSingle(
                Type(
                 int
                ) [Type]
               y
                ArrayBrackets(
                ) [ArrayBrackets]
              ) [FormParSingle]
            ) [FormParsMultiple]
            FormParSingle(
              Type(
               int
              ) [Type]
             z
              NoArray(
              ) [NoArray]
            ) [FormParSingle]
          ) [FormParsMultiple]
          FormParsEnd(
          ) [FormParsEnd]
        ) [MethodSignatureParams]
        VarDeclOptionTrue(
          NoVarDeclOption(
          ) [NoVarDeclOption]
          VarDeclarationExpr(
            Type(
             int
            ) [Type]
            VarDeclListSingle(
              VarDeclSingle(
               pp
                NoArray(
                ) [NoArray]
              ) [VarDeclSingle]
            ) [VarDeclListSingle]
          ) [VarDeclarationExpr]
        ) [VarDeclOptionTrue]
        StatementListMultiple(
          StatementListNo(
          ) [StatementListNo]
          StatementSingle(
            SingleReturnExprStatement(
              SingleTermExprPositive(
                SingleFactorTerm(
                  NumConstFactor(
                   0
                  ) [NumConstFactor]
                ) [SingleFactorTerm]
              ) [SingleTermExprPositive]
            ) [SingleReturnExprStatement]
          ) [StatementSingle]
        ) [StatementListMultiple]
      ) [MethodDeclaration]
    ) [MethodDeclListMultiple]
    MethodDeclaration(
      MethodSignaturePlain(
        MethodTypeVoid(
        ) [MethodTypeVoid]
        MethodName(
         main
        ) [MethodName]
      ) [MethodSignaturePlain]
      NoVarDeclOption(
      ) [NoVarDeclOption]
      StatementListMultiple(
        StatementListNo(
        ) [StatementListNo]
        StatementSingle(
          SingleDesignatorStatement(
            DesignatorStmtAssign(
              DesignatorStmtAssignCorrect(
                IdentDesignator(
                 o
                ) [IdentDesignator]
                SingleTermExprPositive(
                  SingleFactorTerm(
                    MethodCallFactor(
                      MethodCall(
                        IdentDesignator(
                         p
                        ) [IdentDesignator]
                        ActParsLeftParen(
                        ) [ActParsLeftParen]
                        ActParsYes(
                          ActParsMultiExpr(
                            ActParsMultiExpr(
                              ActParsSingleExpr(
                                SingleTermExprPositive(
                                  SingleFactorTerm(
                                    NumConstFactor(
                                     1
                                    ) [NumConstFactor]
                                  ) [SingleFactorTerm]
                                ) [SingleTermExprPositive]
                              ) [ActParsSingleExpr]
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentDesignator(
                                     niz
                                    ) [IdentDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [ActParsMultiExpr]
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                NumConstFactor(
                                 3
                                ) [NumConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [ActParsMultiExpr]
                        ) [ActParsYes]
                        ActParsRightParen(
                        ) [ActParsRightParen]
                      ) [MethodCall]
                    ) [MethodCallFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
              ) [DesignatorStmtAssignCorrect]
            ) [DesignatorStmtAssign]
          ) [SingleDesignatorStatement]
        ) [StatementSingle]
      ) [StatementListMultiple]
    ) [MethodDeclaration]
  ) [MethodDeclListMultiple]
) [Program]
INFO  20:55:17,977 - ===================================
INFO  20:55:26,119 - Method Call detected. Method name: p
INFO  20:55:55,423 - Compile successful!
INFO  20:56:42,013 - Compiling source file: D:\source\repos\PP_Projekat\MicroJavaCompiler\test\program.mj
INFO  20:56:42,030 - #2 program
INFO  20:56:42,030 - #48 test302
INFO  20:56:42,030 - #7 const
INFO  20:56:42,031 - #48 int
INFO  20:56:42,031 - #48 jedan
INFO  20:56:42,031 - #27 =
INFO  20:56:42,031 - #51 1
INFO  20:56:42,031 - #38 ;
INFO  20:56:42,031 - #48 int
INFO  20:56:42,032 - #48 i
INFO  20:56:42,032 - #38 ;
INFO  20:56:42,032 - #48 bool
INFO  20:56:42,032 - #48 ibool
INFO  20:56:42,032 - #38 ;
INFO  20:56:42,032 - #48 int
INFO  20:56:42,032 - #48 niz2
INFO  20:56:42,032 - #38 ;
INFO  20:56:42,033 - #48 int
INFO  20:56:42,033 - #48 niz
INFO  20:56:42,033 - #42 [
INFO  20:56:42,033 - #43 ]
INFO  20:56:42,033 - #38 ;
INFO  20:56:42,033 - #48 int
INFO  20:56:42,033 - #48 a
INFO  20:56:42,033 - #38 ;
INFO  20:56:42,033 - #44 {
INFO  20:56:42,033 - #48 int
INFO  20:56:42,033 - #48 sum
INFO  20:56:42,033 - #40 (
INFO  20:56:42,034 - #48 int
INFO  20:56:42,034 - #48 z
INFO  20:56:42,034 - #39 ,
INFO  20:56:42,034 - #48 int
INFO  20:56:42,034 - #48 d
INFO  20:56:42,034 - #41 )
INFO  20:56:42,034 - #44 {
INFO  20:56:42,034 - #15 return
INFO  20:56:42,034 - #48 z
INFO  20:56:42,034 - #22 +
INFO  20:56:42,035 - #48 d
INFO  20:56:42,035 - #38 ;
INFO  20:56:42,035 - #45 }
INFO  20:56:42,035 - #48 int
INFO  20:56:42,035 - #48 inkrement
INFO  20:56:42,035 - #40 (
INFO  20:56:42,035 - #48 int
INFO  20:56:42,036 - #48 a
INFO  20:56:42,036 - #39 ,
INFO  20:56:42,036 - #48 int
INFO  20:56:42,036 - #48 inc
INFO  20:56:42,036 - #41 )
INFO  20:56:42,036 - #48 int
INFO  20:56:42,036 - #48 pom
INFO  20:56:42,036 - #38 ;
INFO  20:56:42,036 - #44 {
INFO  20:56:42,036 - #5 if
INFO  20:56:42,036 - #40 (
INFO  20:56:42,036 - #48 inc
INFO  20:56:42,036 - #28 ==
INFO  20:56:42,036 - #48 jedan
INFO  20:56:42,037 - #41 )
INFO  20:56:42,037 - #48 pom
INFO  20:56:42,037 - #27 =
INFO  20:56:42,037 - #51 1
INFO  20:56:42,037 - #38 ;
INFO  20:56:42,037 - #6 else
INFO  20:56:42,037 - #5 if
INFO  20:56:42,037 - #40 (
INFO  20:56:42,037 - #48 inc
INFO  20:56:42,037 - #28 ==
INFO  20:56:42,037 - #51 2
INFO  20:56:42,037 - #41 )
INFO  20:56:42,037 - #48 pom
INFO  20:56:42,037 - #27 =
INFO  20:56:42,037 - #48 a
INFO  20:56:42,037 - #38 ;
INFO  20:56:42,037 - #15 return
INFO  20:56:42,038 - #48 sum
INFO  20:56:42,038 - #40 (
INFO  20:56:42,038 - #48 a
INFO  20:56:42,038 - #39 ,
INFO  20:56:42,038 - #48 pom
INFO  20:56:42,038 - #41 )
INFO  20:56:42,038 - #38 ;
INFO  20:56:42,038 - #45 }
INFO  20:56:42,038 - #48 bool
INFO  20:56:42,038 - #48 verify
INFO  20:56:42,038 - #40 (
INFO  20:56:42,038 - #41 )
INFO  20:56:42,039 - #44 {
INFO  20:56:42,039 - #12 print
INFO  20:56:42,039 - #40 (
INFO  20:56:42,039 - #50 v
INFO  20:56:42,039 - #41 )
INFO  20:56:42,039 - #38 ;
INFO  20:56:42,039 - #15 return
INFO  20:56:42,039 - #49 false
INFO  20:56:42,039 - #38 ;
INFO  20:56:42,039 - #45 }
INFO  20:56:42,039 - #14 void
INFO  20:56:42,039 - #48 main
INFO  20:56:42,039 - #40 (
INFO  20:56:42,039 - #41 )
INFO  20:56:42,040 - #44 {
INFO  20:56:42,040 - #5 if
INFO  20:56:42,040 - #40 (
INFO  20:56:42,040 - #51 1
INFO  20:56:42,040 - #29 !=
INFO  20:56:42,040 - #51 1
INFO  20:56:42,040 - #41 )
INFO  20:56:42,040 - #12 print
INFO  20:56:42,040 - #40 (
INFO  20:56:42,040 - #23 -
INFO  20:56:42,040 - #51 6
INFO  20:56:42,040 - #41 )
INFO  20:56:42,040 - #38 ;
INFO  20:56:42,040 - #6 else
INFO  20:56:42,040 - #12 print
INFO  20:56:42,040 - #40 (
INFO  20:56:42,040 - #51 0
INFO  20:56:42,040 - #41 )
INFO  20:56:42,040 - #38 ;
INFO  20:56:42,040 - #48 ibool
INFO  20:56:42,040 - #27 =
INFO  20:56:42,040 - #49 false
INFO  20:56:42,040 - #38 ;
INFO  20:56:42,040 - #48 i
INFO  20:56:42,040 - #27 =
INFO  20:56:42,040 - #51 0
INFO  20:56:42,040 - #38 ;
INFO  20:56:42,040 - #9 do
INFO  20:56:42,041 - #44 {
INFO  20:56:42,041 - #5 if
INFO  20:56:42,041 - #40 (
INFO  20:56:42,041 - #48 i
INFO  20:56:42,041 - #28 ==
INFO  20:56:42,041 - #51 2
INFO  20:56:42,041 - #41 )
INFO  20:56:42,041 - #48 ibool
INFO  20:56:42,041 - #27 =
INFO  20:56:42,041 - #49 true
INFO  20:56:42,041 - #38 ;
INFO  20:56:42,041 - #48 i
INFO  20:56:42,041 - #36 ++
INFO  20:56:42,041 - #38 ;
INFO  20:56:42,041 - #45 }
INFO  20:56:42,041 - #10 while
INFO  20:56:42,041 - #40 (
INFO  20:56:42,041 - #48 i
INFO  20:56:42,041 - #32 <
INFO  20:56:42,041 - #51 5
INFO  20:56:42,041 - #41 )
INFO  20:56:42,041 - #38 ;
INFO  20:56:42,041 - #5 if
INFO  20:56:42,042 - #40 (
INFO  20:56:42,042 - #48 ibool
INFO  20:56:42,042 - #41 )
INFO  20:56:42,042 - #5 if
INFO  20:56:42,042 - #40 (
INFO  20:56:42,042 - #48 i
INFO  20:56:42,042 - #28 ==
INFO  20:56:42,042 - #51 5
INFO  20:56:42,042 - #41 )
INFO  20:56:42,042 - #12 print
INFO  20:56:42,042 - #40 (
INFO  20:56:42,042 - #51 1
INFO  20:56:42,042 - #41 )
INFO  20:56:42,042 - #38 ;
INFO  20:56:42,042 - #6 else
INFO  20:56:42,042 - #12 print
INFO  20:56:42,042 - #40 (
INFO  20:56:42,042 - #23 -
INFO  20:56:42,042 - #51 1
INFO  20:56:42,042 - #41 )
INFO  20:56:42,042 - #38 ;
INFO  20:56:42,042 - #48 a
INFO  20:56:42,042 - #27 =
INFO  20:56:42,042 - #51 2
INFO  20:56:42,042 - #38 ;
INFO  20:56:42,042 - #48 niz
INFO  20:56:42,042 - #27 =
INFO  20:56:42,042 - #11 new
INFO  20:56:42,042 - #48 int
INFO  20:56:42,042 - #42 [
INFO  20:56:42,042 - #51 3
INFO  20:56:42,042 - #43 ]
INFO  20:56:42,042 - #38 ;
INFO  20:56:42,042 - #48 niz
INFO  20:56:42,042 - #42 [
INFO  20:56:42,042 - #51 0
INFO  20:56:42,042 - #43 ]
INFO  20:56:42,042 - #27 =
INFO  20:56:42,042 - #51 1
INFO  20:56:42,042 - #24 *
INFO  20:56:42,043 - #48 a
INFO  20:56:42,043 - #38 ;
INFO  20:56:42,043 - #48 niz
INFO  20:56:42,043 - #42 [
INFO  20:56:42,043 - #51 1
INFO  20:56:42,043 - #43 ]
INFO  20:56:42,043 - #27 =
INFO  20:56:42,043 - #51 2
INFO  20:56:42,043 - #24 *
INFO  20:56:42,043 - #48 a
INFO  20:56:42,043 - #38 ;
INFO  20:56:42,043 - #48 niz
INFO  20:56:42,043 - #42 [
INFO  20:56:42,043 - #51 2
INFO  20:56:42,043 - #43 ]
INFO  20:56:42,043 - #27 =
INFO  20:56:42,043 - #48 sum
INFO  20:56:42,043 - #40 (
INFO  20:56:42,043 - #48 niz
INFO  20:56:42,043 - #42 [
INFO  20:56:42,043 - #51 1
INFO  20:56:42,043 - #43 ]
INFO  20:56:42,043 - #39 ,
INFO  20:56:42,044 - #48 niz
INFO  20:56:42,044 - #42 [
INFO  20:56:42,044 - #51 0
INFO  20:56:42,044 - #43 ]
INFO  20:56:42,044 - #41 )
INFO  20:56:42,044 - #24 *
INFO  20:56:42,044 - #48 a
INFO  20:56:42,044 - #22 +
INFO  20:56:42,044 - #51 1
INFO  20:56:42,044 - #38 ;
INFO  20:56:42,044 - #5 if
INFO  20:56:42,044 - #40 (
INFO  20:56:42,044 - #48 verify
INFO  20:56:42,044 - #40 (
INFO  20:56:42,044 - #41 )
INFO  20:56:42,044 - #35 ||
INFO  20:56:42,044 - #48 niz
INFO  20:56:42,044 - #42 [
INFO  20:56:42,044 - #51 2
INFO  20:56:42,044 - #43 ]
INFO  20:56:42,044 - #28 ==
INFO  20:56:42,044 - #51 4
INFO  20:56:42,044 - #41 )
INFO  20:56:42,044 - #12 print
INFO  20:56:42,044 - #40 (
INFO  20:56:42,044 - #48 ord
INFO  20:56:42,044 - #40 (
INFO  20:56:42,044 - #50 A
INFO  20:56:42,044 - #41 )
INFO  20:56:42,044 - #41 )
INFO  20:56:42,044 - #38 ;
INFO  20:56:42,044 - #6 else
INFO  20:56:42,044 - #12 print
INFO  20:56:42,044 - #40 (
INFO  20:56:42,044 - #48 ord
INFO  20:56:42,044 - #40 (
INFO  20:56:42,044 - #50 a
INFO  20:56:42,044 - #41 )
INFO  20:56:42,044 - #41 )
INFO  20:56:42,044 - #38 ;
INFO  20:56:42,044 - #12 print
INFO  20:56:42,045 - #40 (
INFO  20:56:42,045 - #48 eol
INFO  20:56:42,045 - #41 )
INFO  20:56:42,045 - #38 ;
INFO  20:56:42,045 - #48 i
INFO  20:56:42,045 - #27 =
INFO  20:56:42,045 - #51 0
INFO  20:56:42,045 - #38 ;
INFO  20:56:42,045 - #9 do
INFO  20:56:42,045 - #44 {
INFO  20:56:42,045 - #5 if
INFO  20:56:42,045 - #40 (
INFO  20:56:42,045 - #48 i
INFO  20:56:42,045 - #28 ==
INFO  20:56:42,045 - #51 3
INFO  20:56:42,045 - #41 )
INFO  20:56:42,045 - #44 {
INFO  20:56:42,045 - #48 i
INFO  20:56:42,045 - #36 ++
INFO  20:56:42,045 - #38 ;
INFO  20:56:42,045 - #4 continue
INFO  20:56:42,045 - #38 ;
INFO  20:56:42,045 - #45 }
INFO  20:56:42,045 - #5 if
INFO  20:56:42,045 - #40 (
INFO  20:56:42,045 - #48 i
INFO  20:56:42,045 - #28 ==
INFO  20:56:42,045 - #51 4
INFO  20:56:42,045 - #41 )
INFO  20:56:42,045 - #3 break
INFO  20:56:42,045 - #38 ;
INFO  20:56:42,045 - #48 i
INFO  20:56:42,046 - #27 =
INFO  20:56:42,046 - #48 inkrement
INFO  20:56:42,046 - #40 (
INFO  20:56:42,046 - #48 i
INFO  20:56:42,046 - #39 ,
INFO  20:56:42,046 - #51 1
INFO  20:56:42,046 - #41 )
INFO  20:56:42,046 - #38 ;
INFO  20:56:42,046 - #45 }
INFO  20:56:42,046 - #10 while
INFO  20:56:42,046 - #40 (
INFO  20:56:42,046 - #48 i
INFO  20:56:42,046 - #32 <
INFO  20:56:42,046 - #51 10
INFO  20:56:42,046 - #41 )
INFO  20:56:42,046 - #38 ;
INFO  20:56:42,046 - #5 if
INFO  20:56:42,046 - #40 (
INFO  20:56:42,046 - #48 i
INFO  20:56:42,046 - #28 ==
INFO  20:56:42,046 - #51 3
INFO  20:56:42,046 - #34 &&
INFO  20:56:42,046 - #48 verify
INFO  20:56:42,046 - #40 (
INFO  20:56:42,046 - #41 )
INFO  20:56:42,046 - #41 )
INFO  20:56:42,046 - #12 print
INFO  20:56:42,046 - #40 (
INFO  20:56:42,046 - #23 -
INFO  20:56:42,046 - #51 4
INFO  20:56:42,046 - #41 )
INFO  20:56:42,046 - #38 ;
INFO  20:56:42,046 - #6 else
INFO  20:56:42,046 - #12 print
INFO  20:56:42,046 - #40 (
INFO  20:56:42,046 - #51 4
INFO  20:56:42,046 - #41 )
INFO  20:56:42,046 - #38 ;
INFO  20:56:42,046 - #13 read
INFO  20:56:42,046 - #40 (
INFO  20:56:42,046 - #48 niz
INFO  20:56:42,046 - #42 [
INFO  20:56:42,046 - #51 0
INFO  20:56:42,046 - #43 ]
INFO  20:56:42,046 - #41 )
INFO  20:56:42,046 - #38 ;
INFO  20:56:42,046 - #13 read
INFO  20:56:42,046 - #40 (
INFO  20:56:42,046 - #48 niz
INFO  20:56:42,046 - #42 [
INFO  20:56:42,046 - #51 1
INFO  20:56:42,046 - #43 ]
INFO  20:56:42,046 - #41 )
INFO  20:56:42,046 - #38 ;
INFO  20:56:42,046 - #13 read
INFO  20:56:42,046 - #40 (
INFO  20:56:42,046 - #48 niz
INFO  20:56:42,046 - #42 [
INFO  20:56:42,046 - #51 2
INFO  20:56:42,046 - #43 ]
INFO  20:56:42,046 - #41 )
INFO  20:56:42,046 - #38 ;
INFO  20:56:42,046 - #12 print
INFO  20:56:42,046 - #40 (
INFO  20:56:42,046 - #48 eol
INFO  20:56:42,046 - #41 )
INFO  20:56:42,046 - #38 ;
INFO  20:56:42,046 - #12 print
INFO  20:56:42,046 - #40 (
INFO  20:56:42,046 - #48 sum
INFO  20:56:42,046 - #40 (
INFO  20:56:42,046 - #48 sum
INFO  20:56:42,046 - #40 (
INFO  20:56:42,046 - #48 niz
INFO  20:56:42,046 - #42 [
INFO  20:56:42,046 - #51 0
INFO  20:56:42,046 - #43 ]
INFO  20:56:42,046 - #39 ,
INFO  20:56:42,046 - #48 niz
INFO  20:56:42,046 - #42 [
INFO  20:56:42,046 - #51 1
INFO  20:56:42,046 - #43 ]
INFO  20:56:42,046 - #41 )
INFO  20:56:42,046 - #39 ,
INFO  20:56:42,046 - #48 niz
INFO  20:56:42,047 - #42 [
INFO  20:56:42,047 - #51 2
INFO  20:56:42,047 - #43 ]
INFO  20:56:42,047 - #41 )
INFO  20:56:42,047 - #41 )
INFO  20:56:42,047 - #38 ;
INFO  20:56:42,047 - #12 print
INFO  20:56:42,047 - #40 (
INFO  20:56:42,047 - #48 eol
INFO  20:56:42,047 - #41 )
INFO  20:56:42,047 - #38 ;
INFO  20:56:42,047 - #12 print
INFO  20:56:42,047 - #40 (
INFO  20:56:42,047 - #48 inkrement
INFO  20:56:42,047 - #40 (
INFO  20:56:42,047 - #48 niz
INFO  20:56:42,047 - #42 [
INFO  20:56:42,047 - #51 2
INFO  20:56:42,047 - #43 ]
INFO  20:56:42,047 - #39 ,
INFO  20:56:42,047 - #51 2
INFO  20:56:42,047 - #41 )
INFO  20:56:42,047 - #41 )
INFO  20:56:42,047 - #38 ;
INFO  20:56:42,047 - #48 a
INFO  20:56:42,047 - #27 =
INFO  20:56:42,047 - #51 3
INFO  20:56:42,047 - #38 ;
INFO  20:56:42,047 - #48 i
INFO  20:56:42,047 - #27 =
INFO  20:56:42,047 - #51 0
INFO  20:56:42,047 - #38 ;
INFO  20:56:42,047 - #9 do
INFO  20:56:42,047 - #44 {
INFO  20:56:42,047 - #48 niz
INFO  20:56:42,047 - #42 [
INFO  20:56:42,047 - #48 i
INFO  20:56:42,047 - #43 ]
INFO  20:56:42,047 - #27 =
INFO  20:56:42,047 - #48 niz
INFO  20:56:42,047 - #42 [
INFO  20:56:42,047 - #48 i
INFO  20:56:42,047 - #43 ]
INFO  20:56:42,047 - #24 *
INFO  20:56:42,047 - #51 2
INFO  20:56:42,047 - #24 *
INFO  20:56:42,047 - #48 a
INFO  20:56:42,047 - #38 ;
INFO  20:56:42,047 - #48 i
INFO  20:56:42,047 - #36 ++
INFO  20:56:42,047 - #38 ;
INFO  20:56:42,047 - #45 }
INFO  20:56:42,047 - #10 while
INFO  20:56:42,047 - #40 (
INFO  20:56:42,047 - #48 i
INFO  20:56:42,047 - #32 <
INFO  20:56:42,047 - #51 3
INFO  20:56:42,047 - #41 )
INFO  20:56:42,047 - #38 ;
INFO  20:56:42,047 - #12 print
INFO  20:56:42,047 - #40 (
INFO  20:56:42,047 - #48 niz
INFO  20:56:42,047 - #42 [
INFO  20:56:42,047 - #51 0
INFO  20:56:42,047 - #43 ]
INFO  20:56:42,047 - #41 )
INFO  20:56:42,047 - #38 ;
INFO  20:56:42,047 - #12 print
INFO  20:56:42,047 - #40 (
INFO  20:56:42,047 - #48 niz
INFO  20:56:42,047 - #42 [
INFO  20:56:42,047 - #51 1
INFO  20:56:42,047 - #43 ]
INFO  20:56:42,047 - #41 )
INFO  20:56:42,047 - #38 ;
INFO  20:56:42,047 - #12 print
INFO  20:56:42,047 - #40 (
INFO  20:56:42,047 - #48 niz
INFO  20:56:42,047 - #42 [
INFO  20:56:42,047 - #51 2
INFO  20:56:42,047 - #43 ]
INFO  20:56:42,047 - #41 )
INFO  20:56:42,047 - #38 ;
INFO  20:56:42,047 - #12 print
INFO  20:56:42,047 - #40 (
INFO  20:56:42,047 - #48 eol
INFO  20:56:42,047 - #41 )
INFO  20:56:42,047 - #38 ;
INFO  20:56:42,047 - #48 i
INFO  20:56:42,047 - #27 =
INFO  20:56:42,047 - #51 0
INFO  20:56:42,047 - #38 ;
INFO  20:56:42,047 - #48 niz2
INFO  20:56:42,047 - #27 =
INFO  20:56:42,047 - #51 0
INFO  20:56:42,047 - #38 ;
INFO  20:56:42,047 - #9 do
INFO  20:56:42,047 - #44 {
INFO  20:56:42,047 - #48 niz2
INFO  20:56:42,047 - #27 =
INFO  20:56:42,047 - #48 niz2
INFO  20:56:42,047 - #22 +
INFO  20:56:42,047 - #48 niz
INFO  20:56:42,047 - #42 [
INFO  20:56:42,047 - #48 i
INFO  20:56:42,047 - #43 ]
INFO  20:56:42,047 - #24 *
INFO  20:56:42,047 - #48 niz
INFO  20:56:42,047 - #42 [
INFO  20:56:42,047 - #48 i
INFO  20:56:42,047 - #43 ]
INFO  20:56:42,047 - #38 ;
INFO  20:56:42,047 - #48 i
INFO  20:56:42,047 - #36 ++
INFO  20:56:42,048 - #38 ;
INFO  20:56:42,048 - #45 }
INFO  20:56:42,048 - #10 while
INFO  20:56:42,048 - #40 (
INFO  20:56:42,048 - #48 i
INFO  20:56:42,048 - #32 <
INFO  20:56:42,048 - #51 3
INFO  20:56:42,048 - #41 )
INFO  20:56:42,048 - #38 ;
INFO  20:56:42,048 - #12 print
INFO  20:56:42,048 - #40 (
INFO  20:56:42,048 - #48 niz2
INFO  20:56:42,048 - #41 )
INFO  20:56:42,048 - #38 ;
INFO  20:56:42,048 - #12 print
INFO  20:56:42,048 - #40 (
INFO  20:56:42,048 - #48 eol
INFO  20:56:42,048 - #41 )
INFO  20:56:42,048 - #38 ;
INFO  20:56:42,048 - #45 }
INFO  20:56:42,048 - #45 }
INFO  20:56:42,052 - Program(
  ProgramName(
   test302
  ) [ProgramName]
  AllDeclListMultiple(
    AllDeclListMultiple(
      AllDeclListMultiple(
        AllDeclListMultiple(
          AllDeclListMultiple(
            AllDeclListMultiple(
              NoDecl(
              ) [NoDecl]
              ConstDeclaration(
                ConstDeclarationExpr(
                  Type(
                   int
                  ) [Type]
                  ConstAssignSingle(
                    ConstAssign(
                     jedan
                      NumberConst(
                       1
                      ) [NumberConst]
                    ) [ConstAssign]
                  ) [ConstAssignSingle]
                ) [ConstDeclarationExpr]
              ) [ConstDeclaration]
            ) [AllDeclListMultiple]
            GlobalVarDeclaration(
              GlobalVarDeclarationExpr(
                Type(
                 int
                ) [Type]
                GlobalVarDeclListSingle(
                  GlobalVarDeclarationSingle(
                   i
                    NoArray(
                    ) [NoArray]
                  ) [GlobalVarDeclarationSingle]
                ) [GlobalVarDeclListSingle]
              ) [GlobalVarDeclarationExpr]
            ) [GlobalVarDeclaration]
          ) [AllDeclListMultiple]
          GlobalVarDeclaration(
            GlobalVarDeclarationExpr(
              Type(
               bool
              ) [Type]
              GlobalVarDeclListSingle(
                GlobalVarDeclarationSingle(
                 ibool
                  NoArray(
                  ) [NoArray]
                ) [GlobalVarDeclarationSingle]
              ) [GlobalVarDeclListSingle]
            ) [GlobalVarDeclarationExpr]
          ) [GlobalVarDeclaration]
        ) [AllDeclListMultiple]
        GlobalVarDeclaration(
          GlobalVarDeclarationExpr(
            Type(
             int
            ) [Type]
            GlobalVarDeclListSingle(
              GlobalVarDeclarationSingle(
               niz2
                NoArray(
                ) [NoArray]
              ) [GlobalVarDeclarationSingle]
            ) [GlobalVarDeclListSingle]
          ) [GlobalVarDeclarationExpr]
        ) [GlobalVarDeclaration]
      ) [AllDeclListMultiple]
      GlobalVarDeclaration(
        GlobalVarDeclarationExpr(
          Type(
           int
          ) [Type]
          GlobalVarDeclListSingle(
            GlobalVarDeclarationSingle(
             niz
              ArrayBrackets(
              ) [ArrayBrackets]
            ) [GlobalVarDeclarationSingle]
          ) [GlobalVarDeclListSingle]
        ) [GlobalVarDeclarationExpr]
      ) [GlobalVarDeclaration]
    ) [AllDeclListMultiple]
    GlobalVarDeclaration(
      GlobalVarDeclarationExpr(
        Type(
         int
        ) [Type]
        GlobalVarDeclListSingle(
          GlobalVarDeclarationSingle(
           a
            NoArray(
            ) [NoArray]
          ) [GlobalVarDeclarationSingle]
        ) [GlobalVarDeclListSingle]
      ) [GlobalVarDeclarationExpr]
    ) [GlobalVarDeclaration]
  ) [AllDeclListMultiple]
  MethodDeclListMultiple(
    MethodDeclListMultiple(
      MethodDeclListMultiple(
        MethodDeclListMultiple(
          MethodDeclListNo(
          ) [MethodDeclListNo]
          MethodDeclaration(
            MethodSignatureParams(
              MethodTypeType(
                Type(
                 int
                ) [Type]
              ) [MethodTypeType]
              MethodName(
               sum
              ) [MethodName]
              FormParsMultiple(
                FormParsSingle(
                  FormParSingle(
                    Type(
                     int
                    ) [Type]
                   z
                    NoArray(
                    ) [NoArray]
                  ) [FormParSingle]
                ) [FormParsSingle]
                FormParSingle(
                  Type(
                   int
                  ) [Type]
                 d
                  NoArray(
                  ) [NoArray]
                ) [FormParSingle]
              ) [FormParsMultiple]
              FormParsEnd(
              ) [FormParsEnd]
            ) [MethodSignatureParams]
            NoVarDeclOption(
            ) [NoVarDeclOption]
            StatementListMultiple(
              StatementListNo(
              ) [StatementListNo]
              StatementSingle(
                SingleReturnExprStatement(
                  MultiTermExpr(
                    SingleTermExprPositive(
                      SingleFactorTerm(
                        DesignatorEmptyFactor(
                          IdentDesignator(
                           z
                          ) [IdentDesignator]
                        ) [DesignatorEmptyFactor]
                      ) [SingleFactorTerm]
                    ) [SingleTermExprPositive]
                    AddopPlus(
                    ) [AddopPlus]
                    SingleFactorTerm(
                      DesignatorEmptyFactor(
                        IdentDesignator(
                         d
                        ) [IdentDesignator]
                      ) [DesignatorEmptyFactor]
                    ) [SingleFactorTerm]
                  ) [MultiTermExpr]
                ) [SingleReturnExprStatement]
              ) [StatementSingle]
            ) [StatementListMultiple]
          ) [MethodDeclaration]
        ) [MethodDeclListMultiple]
        MethodDeclaration(
          MethodSignatureParams(
            MethodTypeType(
              Type(
               int
              ) [Type]
            ) [MethodTypeType]
            MethodName(
             inkrement
            ) [MethodName]
            FormParsMultiple(
              FormParsSingle(
                FormParSingle(
                  Type(
                   int
                  ) [Type]
                 a
                  NoArray(
                  ) [NoArray]
                ) [FormParSingle]
              ) [FormParsSingle]
              FormParSingle(
                Type(
                 int
                ) [Type]
               inc
                NoArray(
                ) [NoArray]
              ) [FormParSingle]
            ) [FormParsMultiple]
            FormParsEnd(
            ) [FormParsEnd]
          ) [MethodSignatureParams]
          VarDeclOptionTrue(
            NoVarDeclOption(
            ) [NoVarDeclOption]
            VarDeclarationExpr(
              Type(
               int
              ) [Type]
              VarDeclListSingle(
                VarDeclSingle(
                 pom
                  NoArray(
                  ) [NoArray]
                ) [VarDeclSingle]
              ) [VarDeclListSingle]
            ) [VarDeclarationExpr]
          ) [VarDeclOptionTrue]
          StatementListMultiple(
            StatementListMultiple(
              StatementListNo(
              ) [StatementListNo]
              StatementSingle(
                IfElseStatement(
                  IfConditionSingleTerm(
                    CondSingleFactTerm(
                      CondMultiExprFact(
                        CondSingleExprFact(
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              DesignatorEmptyFactor(
                                IdentDesignator(
                                 inc
                                ) [IdentDesignator]
                              ) [DesignatorEmptyFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [CondSingleExprFact]
                        RelopEQUAL(
                        ) [RelopEQUAL]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            DesignatorEmptyFactor(
                              IdentDesignator(
                               jedan
                              ) [IdentDesignator]
                            ) [DesignatorEmptyFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [CondMultiExprFact]
                    ) [CondSingleFactTerm]
                  ) [IfConditionSingleTerm]
                  StatementSingle(
                    SingleDesignatorStatement(
                      DesignatorStmtAssign(
                        DesignatorStmtAssignCorrect(
                          IdentDesignator(
                           pom
                          ) [IdentDesignator]
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              NumConstFactor(
                               1
                              ) [NumConstFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [DesignatorStmtAssignCorrect]
                      ) [DesignatorStmtAssign]
                    ) [SingleDesignatorStatement]
                  ) [StatementSingle]
                  StatementSingle(
                    IfStatement(
                      IfConditionSingleTerm(
                        CondSingleFactTerm(
                          CondMultiExprFact(
                            CondSingleExprFact(
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentDesignator(
                                     inc
                                    ) [IdentDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [CondSingleExprFact]
                            RelopEQUAL(
                            ) [RelopEQUAL]
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                NumConstFactor(
                                 2
                                ) [NumConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [CondMultiExprFact]
                        ) [CondSingleFactTerm]
                      ) [IfConditionSingleTerm]
                      StatementSingle(
                        SingleDesignatorStatement(
                          DesignatorStmtAssign(
                            DesignatorStmtAssignCorrect(
                              IdentDesignator(
                               pom
                              ) [IdentDesignator]
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentDesignator(
                                     a
                                    ) [IdentDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [DesignatorStmtAssignCorrect]
                          ) [DesignatorStmtAssign]
                        ) [SingleDesignatorStatement]
                      ) [StatementSingle]
                    ) [IfStatement]
                  ) [StatementSingle]
                ) [IfElseStatement]
              ) [StatementSingle]
            ) [StatementListMultiple]
            StatementSingle(
              SingleReturnExprStatement(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    MethodCallFactor(
                      MethodCall(
                        IdentDesignator(
                         sum
                        ) [IdentDesignator]
                        ActParsLeftParen(
                        ) [ActParsLeftParen]
                        ActParsYes(
                          ActParsMultiExpr(
                            ActParsSingleExpr(
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentDesignator(
                                     a
                                    ) [IdentDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [ActParsSingleExpr]
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                DesignatorEmptyFactor(
                                  IdentDesignator(
                                   pom
                                  ) [IdentDesignator]
                                ) [DesignatorEmptyFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [ActParsMultiExpr]
                        ) [ActParsYes]
                        ActParsRightParen(
                        ) [ActParsRightParen]
                      ) [MethodCall]
                    ) [MethodCallFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
              ) [SingleReturnExprStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
        ) [MethodDeclaration]
      ) [MethodDeclListMultiple]
      MethodDeclaration(
        MethodSignaturePlain(
          MethodTypeType(
            Type(
             bool
            ) [Type]
          ) [MethodTypeType]
          MethodName(
           verify
          ) [MethodName]
        ) [MethodSignaturePlain]
        NoVarDeclOption(
        ) [NoVarDeclOption]
        StatementListMultiple(
          StatementListMultiple(
            StatementListNo(
            ) [StatementListNo]
            StatementSingle(
              SinglePrintStatement(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    CharConstFactor(
                     v
                    ) [CharConstFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
                NumConstNo(
                ) [NumConstNo]
              ) [SinglePrintStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
          StatementSingle(
            SingleReturnExprStatement(
              SingleTermExprPositive(
                SingleFactorTerm(
                  BoolConstFactor(
                   false
                  ) [BoolConstFactor]
                ) [SingleFactorTerm]
              ) [SingleTermExprPositive]
            ) [SingleReturnExprStatement]
          ) [StatementSingle]
        ) [StatementListMultiple]
      ) [MethodDeclaration]
    ) [MethodDeclListMultiple]
    MethodDeclaration(
      MethodSignaturePlain(
        MethodTypeVoid(
        ) [MethodTypeVoid]
        MethodName(
         main
        ) [MethodName]
      ) [MethodSignaturePlain]
      NoVarDeclOption(
      ) [NoVarDeclOption]
      StatementListMultiple(
        StatementListMultiple(
          StatementListMultiple(
            StatementListMultiple(
              StatementListMultiple(
                StatementListMultiple(
                  StatementListMultiple(
                    StatementListMultiple(
                      StatementListMultiple(
                        StatementListMultiple(
                          StatementListMultiple(
                            StatementListMultiple(
                              StatementListMultiple(
                                StatementListMultiple(
                                  StatementListMultiple(
                                    StatementListMultiple(
                                      StatementListMultiple(
                                        StatementListMultiple(
                                          StatementListMultiple(
                                            StatementListMultiple(
                                              StatementListMultiple(
                                                StatementListMultiple(
                                                  StatementListMultiple(
                                                    StatementListMultiple(
                                                      StatementListMultiple(
                                                        StatementListMultiple(
                                                          StatementListMultiple(
                                                            StatementListMultiple(
                                                              StatementListMultiple(
                                                                StatementListMultiple(
                                                                  StatementListMultiple(
                                                                    StatementListMultiple(
                                                                      StatementListMultiple(
                                                                        StatementListMultiple(
                                                                          StatementListNo(
                                                                          ) [StatementListNo]
                                                                          StatementSingle(
                                                                            IfElseStatement(
                                                                              IfConditionSingleTerm(
                                                                                CondSingleFactTerm(
                                                                                  CondMultiExprFact(
                                                                                    CondSingleExprFact(
                                                                                      SingleTermExprPositive(
                                                                                        SingleFactorTerm(
                                                                                          NumConstFactor(
                                                                                           1
                                                                                          ) [NumConstFactor]
                                                                                        ) [SingleFactorTerm]
                                                                                      ) [SingleTermExprPositive]
                                                                                    ) [CondSingleExprFact]
                                                                                    RelopNOTEQUAL(
                                                                                    ) [RelopNOTEQUAL]
                                                                                    SingleTermExprPositive(
                                                                                      SingleFactorTerm(
                                                                                        NumConstFactor(
                                                                                         1
                                                                                        ) [NumConstFactor]
                                                                                      ) [SingleFactorTerm]
                                                                                    ) [SingleTermExprPositive]
                                                                                  ) [CondMultiExprFact]
                                                                                ) [CondSingleFactTerm]
                                                                              ) [IfConditionSingleTerm]
                                                                              StatementSingle(
                                                                                SinglePrintStatement(
                                                                                  SingleTermExprNegative(
                                                                                    SingleFactorTerm(
                                                                                      NumConstFactor(
                                                                                       6
                                                                                      ) [NumConstFactor]
                                                                                    ) [SingleFactorTerm]
                                                                                  ) [SingleTermExprNegative]
                                                                                  NumConstNo(
                                                                                  ) [NumConstNo]
                                                                                ) [SinglePrintStatement]
                                                                              ) [StatementSingle]
                                                                              StatementSingle(
                                                                                SinglePrintStatement(
                                                                                  SingleTermExprPositive(
                                                                                    SingleFactorTerm(
                                                                                      NumConstFactor(
                                                                                       0
                                                                                      ) [NumConstFactor]
                                                                                    ) [SingleFactorTerm]
                                                                                  ) [SingleTermExprPositive]
                                                                                  NumConstNo(
                                                                                  ) [NumConstNo]
                                                                                ) [SinglePrintStatement]
                                                                              ) [StatementSingle]
                                                                            ) [IfElseStatement]
                                                                          ) [StatementSingle]
                                                                        ) [StatementListMultiple]
                                                                        StatementSingle(
                                                                          SingleDesignatorStatement(
                                                                            DesignatorStmtAssign(
                                                                              DesignatorStmtAssignCorrect(
                                                                                IdentDesignator(
                                                                                 ibool
                                                                                ) [IdentDesignator]
                                                                                SingleTermExprPositive(
                                                                                  SingleFactorTerm(
                                                                                    BoolConstFactor(
                                                                                     false
                                                                                    ) [BoolConstFactor]
                                                                                  ) [SingleFactorTerm]
                                                                                ) [SingleTermExprPositive]
                                                                              ) [DesignatorStmtAssignCorrect]
                                                                            ) [DesignatorStmtAssign]
                                                                          ) [SingleDesignatorStatement]
                                                                        ) [StatementSingle]
                                                                      ) [StatementListMultiple]
                                                                      StatementSingle(
                                                                        SingleDesignatorStatement(
                                                                          DesignatorStmtAssign(
                                                                            DesignatorStmtAssignCorrect(
                                                                              IdentDesignator(
                                                                               i
                                                                              ) [IdentDesignator]
                                                                              SingleTermExprPositive(
                                                                                SingleFactorTerm(
                                                                                  NumConstFactor(
                                                                                   0
                                                                                  ) [NumConstFactor]
                                                                                ) [SingleFactorTerm]
                                                                              ) [SingleTermExprPositive]
                                                                            ) [DesignatorStmtAssignCorrect]
                                                                          ) [DesignatorStmtAssign]
                                                                        ) [SingleDesignatorStatement]
                                                                      ) [StatementSingle]
                                                                    ) [StatementListMultiple]
                                                                    StatementSingle(
                                                                      DoWhileStatement(
                                                                        DoEnter(
                                                                        ) [DoEnter]
                                                                        StatementListMultiple(
                                                                          StatementListNo(
                                                                          ) [StatementListNo]
                                                                          StatementMultiple(
                                                                            StatementsInBraces(
                                                                              StatementListMultiple(
                                                                                StatementListMultiple(
                                                                                  StatementListNo(
                                                                                  ) [StatementListNo]
                                                                                  StatementSingle(
                                                                                    IfStatement(
                                                                                      IfConditionSingleTerm(
                                                                                        CondSingleFactTerm(
                                                                                          CondMultiExprFact(
                                                                                            CondSingleExprFact(
                                                                                              SingleTermExprPositive(
                                                                                                SingleFactorTerm(
                                                                                                  DesignatorEmptyFactor(
                                                                                                    IdentDesignator(
                                                                                                     i
                                                                                                    ) [IdentDesignator]
                                                                                                  ) [DesignatorEmptyFactor]
                                                                                                ) [SingleFactorTerm]
                                                                                              ) [SingleTermExprPositive]
                                                                                            ) [CondSingleExprFact]
                                                                                            RelopEQUAL(
                                                                                            ) [RelopEQUAL]
                                                                                            SingleTermExprPositive(
                                                                                              SingleFactorTerm(
                                                                                                NumConstFactor(
                                                                                                 2
                                                                                                ) [NumConstFactor]
                                                                                              ) [SingleFactorTerm]
                                                                                            ) [SingleTermExprPositive]
                                                                                          ) [CondMultiExprFact]
                                                                                        ) [CondSingleFactTerm]
                                                                                      ) [IfConditionSingleTerm]
                                                                                      StatementSingle(
                                                                                        SingleDesignatorStatement(
                                                                                          DesignatorStmtAssign(
                                                                                            DesignatorStmtAssignCorrect(
                                                                                              IdentDesignator(
                                                                                               ibool
                                                                                              ) [IdentDesignator]
                                                                                              SingleTermExprPositive(
                                                                                                SingleFactorTerm(
                                                                                                  BoolConstFactor(
                                                                                                   true
                                                                                                  ) [BoolConstFactor]
                                                                                                ) [SingleFactorTerm]
                                                                                              ) [SingleTermExprPositive]
                                                                                            ) [DesignatorStmtAssignCorrect]
                                                                                          ) [DesignatorStmtAssign]
                                                                                        ) [SingleDesignatorStatement]
                                                                                      ) [StatementSingle]
                                                                                    ) [IfStatement]
                                                                                  ) [StatementSingle]
                                                                                ) [StatementListMultiple]
                                                                                StatementSingle(
                                                                                  SingleDesignatorStatement(
                                                                                    DesignatorStmtPlusPlus(
                                                                                      IdentDesignator(
                                                                                       i
                                                                                      ) [IdentDesignator]
                                                                                    ) [DesignatorStmtPlusPlus]
                                                                                  ) [SingleDesignatorStatement]
                                                                                ) [StatementSingle]
                                                                              ) [StatementListMultiple]
                                                                            ) [StatementsInBraces]
                                                                          ) [StatementMultiple]
                                                                        ) [StatementListMultiple]
                                                                        ConditionSingleTerm(
                                                                          CondSingleFactTerm(
                                                                            CondMultiExprFact(
                                                                              CondSingleExprFact(
                                                                                SingleTermExprPositive(
                                                                                  SingleFactorTerm(
                                                                                    DesignatorEmptyFactor(
                                                                                      IdentDesignator(
                                                                                       i
                                                                                      ) [IdentDesignator]
                                                                                    ) [DesignatorEmptyFactor]
                                                                                  ) [SingleFactorTerm]
                                                                                ) [SingleTermExprPositive]
                                                                              ) [CondSingleExprFact]
                                                                              RelopLS(
                                                                              ) [RelopLS]
                                                                              SingleTermExprPositive(
                                                                                SingleFactorTerm(
                                                                                  NumConstFactor(
                                                                                   5
                                                                                  ) [NumConstFactor]
                                                                                ) [SingleFactorTerm]
                                                                              ) [SingleTermExprPositive]
                                                                            ) [CondMultiExprFact]
                                                                          ) [CondSingleFactTerm]
                                                                        ) [ConditionSingleTerm]
                                                                      ) [DoWhileStatement]
                                                                    ) [StatementSingle]
                                                                  ) [StatementListMultiple]
                                                                  StatementSingle(
                                                                    IfStatement(
                                                                      IfConditionSingleTerm(
                                                                        CondSingleFactTerm(
                                                                          CondSingleExprFact(
                                                                            SingleTermExprPositive(
                                                                              SingleFactorTerm(
                                                                                DesignatorEmptyFactor(
                                                                                  IdentDesignator(
                                                                                   ibool
                                                                                  ) [IdentDesignator]
                                                                                ) [DesignatorEmptyFactor]
                                                                              ) [SingleFactorTerm]
                                                                            ) [SingleTermExprPositive]
                                                                          ) [CondSingleExprFact]
                                                                        ) [CondSingleFactTerm]
                                                                      ) [IfConditionSingleTerm]
                                                                      StatementSingle(
                                                                        IfElseStatement(
                                                                          IfConditionSingleTerm(
                                                                            CondSingleFactTerm(
                                                                              CondMultiExprFact(
                                                                                CondSingleExprFact(
                                                                                  SingleTermExprPositive(
                                                                                    SingleFactorTerm(
                                                                                      DesignatorEmptyFactor(
                                                                                        IdentDesignator(
                                                                                         i
                                                                                        ) [IdentDesignator]
                                                                                      ) [DesignatorEmptyFactor]
                                                                                    ) [SingleFactorTerm]
                                                                                  ) [SingleTermExprPositive]
                                                                                ) [CondSingleExprFact]
                                                                                RelopEQUAL(
                                                                                ) [RelopEQUAL]
                                                                                SingleTermExprPositive(
                                                                                  SingleFactorTerm(
                                                                                    NumConstFactor(
                                                                                     5
                                                                                    ) [NumConstFactor]
                                                                                  ) [SingleFactorTerm]
                                                                                ) [SingleTermExprPositive]
                                                                              ) [CondMultiExprFact]
                                                                            ) [CondSingleFactTerm]
                                                                          ) [IfConditionSingleTerm]
                                                                          StatementSingle(
                                                                            SinglePrintStatement(
                                                                              SingleTermExprPositive(
                                                                                SingleFactorTerm(
                                                                                  NumConstFactor(
                                                                                   1
                                                                                  ) [NumConstFactor]
                                                                                ) [SingleFactorTerm]
                                                                              ) [SingleTermExprPositive]
                                                                              NumConstNo(
                                                                              ) [NumConstNo]
                                                                            ) [SinglePrintStatement]
                                                                          ) [StatementSingle]
                                                                          StatementSingle(
                                                                            SinglePrintStatement(
                                                                              SingleTermExprNegative(
                                                                                SingleFactorTerm(
                                                                                  NumConstFactor(
                                                                                   1
                                                                                  ) [NumConstFactor]
                                                                                ) [SingleFactorTerm]
                                                                              ) [SingleTermExprNegative]
                                                                              NumConstNo(
                                                                              ) [NumConstNo]
                                                                            ) [SinglePrintStatement]
                                                                          ) [StatementSingle]
                                                                        ) [IfElseStatement]
                                                                      ) [StatementSingle]
                                                                    ) [IfStatement]
                                                                  ) [StatementSingle]
                                                                ) [StatementListMultiple]
                                                                StatementSingle(
                                                                  SingleDesignatorStatement(
                                                                    DesignatorStmtAssign(
                                                                      DesignatorStmtAssignCorrect(
                                                                        IdentDesignator(
                                                                         a
                                                                        ) [IdentDesignator]
                                                                        SingleTermExprPositive(
                                                                          SingleFactorTerm(
                                                                            NumConstFactor(
                                                                             2
                                                                            ) [NumConstFactor]
                                                                          ) [SingleFactorTerm]
                                                                        ) [SingleTermExprPositive]
                                                                      ) [DesignatorStmtAssignCorrect]
                                                                    ) [DesignatorStmtAssign]
                                                                  ) [SingleDesignatorStatement]
                                                                ) [StatementSingle]
                                                              ) [StatementListMultiple]
                                                              StatementSingle(
                                                                SingleDesignatorStatement(
                                                                  DesignatorStmtAssign(
                                                                    DesignatorStmtAssignCorrect(
                                                                      IdentDesignator(
                                                                       niz
                                                                      ) [IdentDesignator]
                                                                      SingleTermExprPositive(
                                                                        SingleFactorTerm(
                                                                          NewTypeArrayFactor(
                                                                            Type(
                                                                             int
                                                                            ) [Type]
                                                                            SingleTermExprPositive(
                                                                              SingleFactorTerm(
                                                                                NumConstFactor(
                                                                                 3
                                                                                ) [NumConstFactor]
                                                                              ) [SingleFactorTerm]
                                                                            ) [SingleTermExprPositive]
                                                                          ) [NewTypeArrayFactor]
                                                                        ) [SingleFactorTerm]
                                                                      ) [SingleTermExprPositive]
                                                                    ) [DesignatorStmtAssignCorrect]
                                                                  ) [DesignatorStmtAssign]
                                                                ) [SingleDesignatorStatement]
                                                              ) [StatementSingle]
                                                            ) [StatementListMultiple]
                                                            StatementSingle(
                                                              SingleDesignatorStatement(
                                                                DesignatorStmtAssign(
                                                                  DesignatorStmtAssignCorrect(
                                                                    IdentArrayDesignator(
                                                                     niz
                                                                      SingleTermExprPositive(
                                                                        SingleFactorTerm(
                                                                          NumConstFactor(
                                                                           0
                                                                          ) [NumConstFactor]
                                                                        ) [SingleFactorTerm]
                                                                      ) [SingleTermExprPositive]
                                                                    ) [IdentArrayDesignator]
                                                                    SingleTermExprPositive(
                                                                      MultiFactorTerm(
                                                                        SingleFactorTerm(
                                                                          NumConstFactor(
                                                                           1
                                                                          ) [NumConstFactor]
                                                                        ) [SingleFactorTerm]
                                                                        MulopMul(
                                                                        ) [MulopMul]
                                                                        DesignatorEmptyFactor(
                                                                          IdentDesignator(
                                                                           a
                                                                          ) [IdentDesignator]
                                                                        ) [DesignatorEmptyFactor]
                                                                      ) [MultiFactorTerm]
                                                                    ) [SingleTermExprPositive]
                                                                  ) [DesignatorStmtAssignCorrect]
                                                                ) [DesignatorStmtAssign]
                                                              ) [SingleDesignatorStatement]
                                                            ) [StatementSingle]
                                                          ) [StatementListMultiple]
                                                          StatementSingle(
                                                            SingleDesignatorStatement(
                                                              DesignatorStmtAssign(
                                                                DesignatorStmtAssignCorrect(
                                                                  IdentArrayDesignator(
                                                                   niz
                                                                    SingleTermExprPositive(
                                                                      SingleFactorTerm(
                                                                        NumConstFactor(
                                                                         1
                                                                        ) [NumConstFactor]
                                                                      ) [SingleFactorTerm]
                                                                    ) [SingleTermExprPositive]
                                                                  ) [IdentArrayDesignator]
                                                                  SingleTermExprPositive(
                                                                    MultiFactorTerm(
                                                                      SingleFactorTerm(
                                                                        NumConstFactor(
                                                                         2
                                                                        ) [NumConstFactor]
                                                                      ) [SingleFactorTerm]
                                                                      MulopMul(
                                                                      ) [MulopMul]
                                                                      DesignatorEmptyFactor(
                                                                        IdentDesignator(
                                                                         a
                                                                        ) [IdentDesignator]
                                                                      ) [DesignatorEmptyFactor]
                                                                    ) [MultiFactorTerm]
                                                                  ) [SingleTermExprPositive]
                                                                ) [DesignatorStmtAssignCorrect]
                                                              ) [DesignatorStmtAssign]
                                                            ) [SingleDesignatorStatement]
                                                          ) [StatementSingle]
                                                        ) [StatementListMultiple]
                                                        StatementSingle(
                                                          SingleDesignatorStatement(
                                                            DesignatorStmtAssign(
                                                              DesignatorStmtAssignCorrect(
                                                                IdentArrayDesignator(
                                                                 niz
                                                                  SingleTermExprPositive(
                                                                    SingleFactorTerm(
                                                                      NumConstFactor(
                                                                       2
                                                                      ) [NumConstFactor]
                                                                    ) [SingleFactorTerm]
                                                                  ) [SingleTermExprPositive]
                                                                ) [IdentArrayDesignator]
                                                                MultiTermExpr(
                                                                  SingleTermExprPositive(
                                                                    MultiFactorTerm(
                                                                      SingleFactorTerm(
                                                                        MethodCallFactor(
                                                                          MethodCall(
                                                                            IdentDesignator(
                                                                             sum
                                                                            ) [IdentDesignator]
                                                                            ActParsLeftParen(
                                                                            ) [ActParsLeftParen]
                                                                            ActParsYes(
                                                                              ActParsMultiExpr(
                                                                                ActParsSingleExpr(
                                                                                  SingleTermExprPositive(
                                                                                    SingleFactorTerm(
                                                                                      DesignatorEmptyFactor(
                                                                                        IdentArrayDesignator(
                                                                                         niz
                                                                                          SingleTermExprPositive(
                                                                                            SingleFactorTerm(
                                                                                              NumConstFactor(
                                                                                               1
                                                                                              ) [NumConstFactor]
                                                                                            ) [SingleFactorTerm]
                                                                                          ) [SingleTermExprPositive]
                                                                                        ) [IdentArrayDesignator]
                                                                                      ) [DesignatorEmptyFactor]
                                                                                    ) [SingleFactorTerm]
                                                                                  ) [SingleTermExprPositive]
                                                                                ) [ActParsSingleExpr]
                                                                                SingleTermExprPositive(
                                                                                  SingleFactorTerm(
                                                                                    DesignatorEmptyFactor(
                                                                                      IdentArrayDesignator(
                                                                                       niz
                                                                                        SingleTermExprPositive(
                                                                                          SingleFactorTerm(
                                                                                            NumConstFactor(
                                                                                             0
                                                                                            ) [NumConstFactor]
                                                                                          ) [SingleFactorTerm]
                                                                                        ) [SingleTermExprPositive]
                                                                                      ) [IdentArrayDesignator]
                                                                                    ) [DesignatorEmptyFactor]
                                                                                  ) [SingleFactorTerm]
                                                                                ) [SingleTermExprPositive]
                                                                              ) [ActParsMultiExpr]
                                                                            ) [ActParsYes]
                                                                            ActParsRightParen(
                                                                            ) [ActParsRightParen]
                                                                          ) [MethodCall]
                                                                        ) [MethodCallFactor]
                                                                      ) [SingleFactorTerm]
                                                                      MulopMul(
                                                                      ) [MulopMul]
                                                                      DesignatorEmptyFactor(
                                                                        IdentDesignator(
                                                                         a
                                                                        ) [IdentDesignator]
                                                                      ) [DesignatorEmptyFactor]
                                                                    ) [MultiFactorTerm]
                                                                  ) [SingleTermExprPositive]
                                                                  AddopPlus(
                                                                  ) [AddopPlus]
                                                                  SingleFactorTerm(
                                                                    NumConstFactor(
                                                                     1
                                                                    ) [NumConstFactor]
                                                                  ) [SingleFactorTerm]
                                                                ) [MultiTermExpr]
                                                              ) [DesignatorStmtAssignCorrect]
                                                            ) [DesignatorStmtAssign]
                                                          ) [SingleDesignatorStatement]
                                                        ) [StatementSingle]
                                                      ) [StatementListMultiple]
                                                      StatementSingle(
                                                        IfElseStatement(
                                                          IfConditionMultiTerm(
                                                            ConditionSingleTerm(
                                                              CondSingleFactTerm(
                                                                CondSingleExprFact(
                                                                  SingleTermExprPositive(
                                                                    SingleFactorTerm(
                                                                      MethodCallFactor(
                                                                        MethodCall(
                                                                          IdentDesignator(
                                                                           verify
                                                                          ) [IdentDesignator]
                                                                          ActParsLeftParen(
                                                                          ) [ActParsLeftParen]
                                                                          ActParsNo(
                                                                          ) [ActParsNo]
                                                                          ActParsRightParen(
                                                                          ) [ActParsRightParen]
                                                                        ) [MethodCall]
                                                                      ) [MethodCallFactor]
                                                                    ) [SingleFactorTerm]
                                                                  ) [SingleTermExprPositive]
                                                                ) [CondSingleExprFact]
                                                              ) [CondSingleFactTerm]
                                                            ) [ConditionSingleTerm]
                                                            CondSingleFactTerm(
                                                              CondMultiExprFact(
                                                                CondSingleExprFact(
                                                                  SingleTermExprPositive(
                                                                    SingleFactorTerm(
                                                                      DesignatorEmptyFactor(
                                                                        IdentArrayDesignator(
                                                                         niz
                                                                          SingleTermExprPositive(
                                                                            SingleFactorTerm(
                                                                              NumConstFactor(
                                                                               2
                                                                              ) [NumConstFactor]
                                                                            ) [SingleFactorTerm]
                                                                          ) [SingleTermExprPositive]
                                                                        ) [IdentArrayDesignator]
                                                                      ) [DesignatorEmptyFactor]
                                                                    ) [SingleFactorTerm]
                                                                  ) [SingleTermExprPositive]
                                                                ) [CondSingleExprFact]
                                                                RelopEQUAL(
                                                                ) [RelopEQUAL]
                                                                SingleTermExprPositive(
                                                                  SingleFactorTerm(
                                                                    NumConstFactor(
                                                                     4
                                                                    ) [NumConstFactor]
                                                                  ) [SingleFactorTerm]
                                                                ) [SingleTermExprPositive]
                                                              ) [CondMultiExprFact]
                                                            ) [CondSingleFactTerm]
                                                          ) [IfConditionMultiTerm]
                                                          StatementSingle(
                                                            SinglePrintStatement(
                                                              SingleTermExprPositive(
                                                                SingleFactorTerm(
                                                                  MethodCallFactor(
                                                                    MethodCall(
                                                                      IdentDesignator(
                                                                       ord
                                                                      ) [IdentDesignator]
                                                                      ActParsLeftParen(
                                                                      ) [ActParsLeftParen]
                                                                      ActParsYes(
                                                                        ActParsSingleExpr(
                                                                          SingleTermExprPositive(
                                                                            SingleFactorTerm(
                                                                              CharConstFactor(
                                                                               A
                                                                              ) [CharConstFactor]
                                                                            ) [SingleFactorTerm]
                                                                          ) [SingleTermExprPositive]
                                                                        ) [ActParsSingleExpr]
                                                                      ) [ActParsYes]
                                                                      ActParsRightParen(
                                                                      ) [ActParsRightParen]
                                                                    ) [MethodCall]
                                                                  ) [MethodCallFactor]
                                                                ) [SingleFactorTerm]
                                                              ) [SingleTermExprPositive]
                                                              NumConstNo(
                                                              ) [NumConstNo]
                                                            ) [SinglePrintStatement]
                                                          ) [StatementSingle]
                                                          StatementSingle(
                                                            SinglePrintStatement(
                                                              SingleTermExprPositive(
                                                                SingleFactorTerm(
                                                                  MethodCallFactor(
                                                                    MethodCall(
                                                                      IdentDesignator(
                                                                       ord
                                                                      ) [IdentDesignator]
                                                                      ActParsLeftParen(
                                                                      ) [ActParsLeftParen]
                                                                      ActParsYes(
                                                                        ActParsSingleExpr(
                                                                          SingleTermExprPositive(
                                                                            SingleFactorTerm(
                                                                              CharConstFactor(
                                                                               a
                                                                              ) [CharConstFactor]
                                                                            ) [SingleFactorTerm]
                                                                          ) [SingleTermExprPositive]
                                                                        ) [ActParsSingleExpr]
                                                                      ) [ActParsYes]
                                                                      ActParsRightParen(
                                                                      ) [ActParsRightParen]
                                                                    ) [MethodCall]
                                                                  ) [MethodCallFactor]
                                                                ) [SingleFactorTerm]
                                                              ) [SingleTermExprPositive]
                                                              NumConstNo(
                                                              ) [NumConstNo]
                                                            ) [SinglePrintStatement]
                                                          ) [StatementSingle]
                                                        ) [IfElseStatement]
                                                      ) [StatementSingle]
                                                    ) [StatementListMultiple]
                                                    StatementSingle(
                                                      SinglePrintStatement(
                                                        SingleTermExprPositive(
                                                          SingleFactorTerm(
                                                            DesignatorEmptyFactor(
                                                              IdentDesignator(
                                                               eol
                                                              ) [IdentDesignator]
                                                            ) [DesignatorEmptyFactor]
                                                          ) [SingleFactorTerm]
                                                        ) [SingleTermExprPositive]
                                                        NumConstNo(
                                                        ) [NumConstNo]
                                                      ) [SinglePrintStatement]
                                                    ) [StatementSingle]
                                                  ) [StatementListMultiple]
                                                  StatementSingle(
                                                    SingleDesignatorStatement(
                                                      DesignatorStmtAssign(
                                                        DesignatorStmtAssignCorrect(
                                                          IdentDesignator(
                                                           i
                                                          ) [IdentDesignator]
                                                          SingleTermExprPositive(
                                                            SingleFactorTerm(
                                                              NumConstFactor(
                                                               0
                                                              ) [NumConstFactor]
                                                            ) [SingleFactorTerm]
                                                          ) [SingleTermExprPositive]
                                                        ) [DesignatorStmtAssignCorrect]
                                                      ) [DesignatorStmtAssign]
                                                    ) [SingleDesignatorStatement]
                                                  ) [StatementSingle]
                                                ) [StatementListMultiple]
                                                StatementSingle(
                                                  DoWhileStatement(
                                                    DoEnter(
                                                    ) [DoEnter]
                                                    StatementListMultiple(
                                                      StatementListNo(
                                                      ) [StatementListNo]
                                                      StatementMultiple(
                                                        StatementsInBraces(
                                                          StatementListMultiple(
                                                            StatementListMultiple(
                                                              StatementListMultiple(
                                                                StatementListNo(
                                                                ) [StatementListNo]
                                                                StatementSingle(
                                                                  IfStatement(
                                                                    IfConditionSingleTerm(
                                                                      CondSingleFactTerm(
                                                                        CondMultiExprFact(
                                                                          CondSingleExprFact(
                                                                            SingleTermExprPositive(
                                                                              SingleFactorTerm(
                                                                                DesignatorEmptyFactor(
                                                                                  IdentDesignator(
                                                                                   i
                                                                                  ) [IdentDesignator]
                                                                                ) [DesignatorEmptyFactor]
                                                                              ) [SingleFactorTerm]
                                                                            ) [SingleTermExprPositive]
                                                                          ) [CondSingleExprFact]
                                                                          RelopEQUAL(
                                                                          ) [RelopEQUAL]
                                                                          SingleTermExprPositive(
                                                                            SingleFactorTerm(
                                                                              NumConstFactor(
                                                                               3
                                                                              ) [NumConstFactor]
                                                                            ) [SingleFactorTerm]
                                                                          ) [SingleTermExprPositive]
                                                                        ) [CondMultiExprFact]
                                                                      ) [CondSingleFactTerm]
                                                                    ) [IfConditionSingleTerm]
                                                                    StatementMultiple(
                                                                      StatementsInBraces(
                                                                        StatementListMultiple(
                                                                          StatementListMultiple(
                                                                            StatementListNo(
                                                                            ) [StatementListNo]
                                                                            StatementSingle(
                                                                              SingleDesignatorStatement(
                                                                                DesignatorStmtPlusPlus(
                                                                                  IdentDesignator(
                                                                                   i
                                                                                  ) [IdentDesignator]
                                                                                ) [DesignatorStmtPlusPlus]
                                                                              ) [SingleDesignatorStatement]
                                                                            ) [StatementSingle]
                                                                          ) [StatementListMultiple]
                                                                          StatementSingle(
                                                                            SingleContinueStatement(
                                                                            ) [SingleContinueStatement]
                                                                          ) [StatementSingle]
                                                                        ) [StatementListMultiple]
                                                                      ) [StatementsInBraces]
                                                                    ) [StatementMultiple]
                                                                  ) [IfStatement]
                                                                ) [StatementSingle]
                                                              ) [StatementListMultiple]
                                                              StatementSingle(
                                                                IfStatement(
                                                                  IfConditionSingleTerm(
                                                                    CondSingleFactTerm(
                                                                      CondMultiExprFact(
                                                                        CondSingleExprFact(
                                                                          SingleTermExprPositive(
                                                                            SingleFactorTerm(
                                                                              DesignatorEmptyFactor(
                                                                                IdentDesignator(
                                                                                 i
                                                                                ) [IdentDesignator]
                                                                              ) [DesignatorEmptyFactor]
                                                                            ) [SingleFactorTerm]
                                                                          ) [SingleTermExprPositive]
                                                                        ) [CondSingleExprFact]
                                                                        RelopEQUAL(
                                                                        ) [RelopEQUAL]
                                                                        SingleTermExprPositive(
                                                                          SingleFactorTerm(
                                                                            NumConstFactor(
                                                                             4
                                                                            ) [NumConstFactor]
                                                                          ) [SingleFactorTerm]
                                                                        ) [SingleTermExprPositive]
                                                                      ) [CondMultiExprFact]
                                                                    ) [CondSingleFactTerm]
                                                                  ) [IfConditionSingleTerm]
                                                                  StatementSingle(
                                                                    SingleBreakStatement(
                                                                    ) [SingleBreakStatement]
                                                                  ) [StatementSingle]
                                                                ) [IfStatement]
                                                              ) [StatementSingle]
                                                            ) [StatementListMultiple]
                                                            StatementSingle(
                                                              SingleDesignatorStatement(
                                                                DesignatorStmtAssign(
                                                                  DesignatorStmtAssignCorrect(
                                                                    IdentDesignator(
                                                                     i
                                                                    ) [IdentDesignator]
                                                                    SingleTermExprPositive(
                                                                      SingleFactorTerm(
                                                                        MethodCallFactor(
                                                                          MethodCall(
                                                                            IdentDesignator(
                                                                             inkrement
                                                                            ) [IdentDesignator]
                                                                            ActParsLeftParen(
                                                                            ) [ActParsLeftParen]
                                                                            ActParsYes(
                                                                              ActParsMultiExpr(
                                                                                ActParsSingleExpr(
                                                                                  SingleTermExprPositive(
                                                                                    SingleFactorTerm(
                                                                                      DesignatorEmptyFactor(
                                                                                        IdentDesignator(
                                                                                         i
                                                                                        ) [IdentDesignator]
                                                                                      ) [DesignatorEmptyFactor]
                                                                                    ) [SingleFactorTerm]
                                                                                  ) [SingleTermExprPositive]
                                                                                ) [ActParsSingleExpr]
                                                                                SingleTermExprPositive(
                                                                                  SingleFactorTerm(
                                                                                    NumConstFactor(
                                                                                     1
                                                                                    ) [NumConstFactor]
                                                                                  ) [SingleFactorTerm]
                                                                                ) [SingleTermExprPositive]
                                                                              ) [ActParsMultiExpr]
                                                                            ) [ActParsYes]
                                                                            ActParsRightParen(
                                                                            ) [ActParsRightParen]
                                                                          ) [MethodCall]
                                                                        ) [MethodCallFactor]
                                                                      ) [SingleFactorTerm]
                                                                    ) [SingleTermExprPositive]
                                                                  ) [DesignatorStmtAssignCorrect]
                                                                ) [DesignatorStmtAssign]
                                                              ) [SingleDesignatorStatement]
                                                            ) [StatementSingle]
                                                          ) [StatementListMultiple]
                                                        ) [StatementsInBraces]
                                                      ) [StatementMultiple]
                                                    ) [StatementListMultiple]
                                                    ConditionSingleTerm(
                                                      CondSingleFactTerm(
                                                        CondMultiExprFact(
                                                          CondSingleExprFact(
                                                            SingleTermExprPositive(
                                                              SingleFactorTerm(
                                                                DesignatorEmptyFactor(
                                                                  IdentDesignator(
                                                                   i
                                                                  ) [IdentDesignator]
                                                                ) [DesignatorEmptyFactor]
                                                              ) [SingleFactorTerm]
                                                            ) [SingleTermExprPositive]
                                                          ) [CondSingleExprFact]
                                                          RelopLS(
                                                          ) [RelopLS]
                                                          SingleTermExprPositive(
                                                            SingleFactorTerm(
                                                              NumConstFactor(
                                                               10
                                                              ) [NumConstFactor]
                                                            ) [SingleFactorTerm]
                                                          ) [SingleTermExprPositive]
                                                        ) [CondMultiExprFact]
                                                      ) [CondSingleFactTerm]
                                                    ) [ConditionSingleTerm]
                                                  ) [DoWhileStatement]
                                                ) [StatementSingle]
                                              ) [StatementListMultiple]
                                              StatementSingle(
                                                IfElseStatement(
                                                  IfConditionSingleTerm(
                                                    CondMultiFactTerm(
                                                      CondSingleFactTerm(
                                                        CondMultiExprFact(
                                                          CondSingleExprFact(
                                                            SingleTermExprPositive(
                                                              SingleFactorTerm(
                                                                DesignatorEmptyFactor(
                                                                  IdentDesignator(
                                                                   i
                                                                  ) [IdentDesignator]
                                                                ) [DesignatorEmptyFactor]
                                                              ) [SingleFactorTerm]
                                                            ) [SingleTermExprPositive]
                                                          ) [CondSingleExprFact]
                                                          RelopEQUAL(
                                                          ) [RelopEQUAL]
                                                          SingleTermExprPositive(
                                                            SingleFactorTerm(
                                                              NumConstFactor(
                                                               3
                                                              ) [NumConstFactor]
                                                            ) [SingleFactorTerm]
                                                          ) [SingleTermExprPositive]
                                                        ) [CondMultiExprFact]
                                                      ) [CondSingleFactTerm]
                                                      CondSingleExprFact(
                                                        SingleTermExprPositive(
                                                          SingleFactorTerm(
                                                            MethodCallFactor(
                                                              MethodCall(
                                                                IdentDesignator(
                                                                 verify
                                                                ) [IdentDesignator]
                                                                ActParsLeftParen(
                                                                ) [ActParsLeftParen]
                                                                ActParsNo(
                                                                ) [ActParsNo]
                                                                ActParsRightParen(
                                                                ) [ActParsRightParen]
                                                              ) [MethodCall]
                                                            ) [MethodCallFactor]
                                                          ) [SingleFactorTerm]
                                                        ) [SingleTermExprPositive]
                                                      ) [CondSingleExprFact]
                                                    ) [CondMultiFactTerm]
                                                  ) [IfConditionSingleTerm]
                                                  StatementSingle(
                                                    SinglePrintStatement(
                                                      SingleTermExprNegative(
                                                        SingleFactorTerm(
                                                          NumConstFactor(
                                                           4
                                                          ) [NumConstFactor]
                                                        ) [SingleFactorTerm]
                                                      ) [SingleTermExprNegative]
                                                      NumConstNo(
                                                      ) [NumConstNo]
                                                    ) [SinglePrintStatement]
                                                  ) [StatementSingle]
                                                  StatementSingle(
                                                    SinglePrintStatement(
                                                      SingleTermExprPositive(
                                                        SingleFactorTerm(
                                                          NumConstFactor(
                                                           4
                                                          ) [NumConstFactor]
                                                        ) [SingleFactorTerm]
                                                      ) [SingleTermExprPositive]
                                                      NumConstNo(
                                                      ) [NumConstNo]
                                                    ) [SinglePrintStatement]
                                                  ) [StatementSingle]
                                                ) [IfElseStatement]
                                              ) [StatementSingle]
                                            ) [StatementListMultiple]
                                            StatementSingle(
                                              SingleReadStatement(
                                                IdentArrayDesignator(
                                                 niz
                                                  SingleTermExprPositive(
                                                    SingleFactorTerm(
                                                      NumConstFactor(
                                                       0
                                                      ) [NumConstFactor]
                                                    ) [SingleFactorTerm]
                                                  ) [SingleTermExprPositive]
                                                ) [IdentArrayDesignator]
                                              ) [SingleReadStatement]
                                            ) [StatementSingle]
                                          ) [StatementListMultiple]
                                          StatementSingle(
                                            SingleReadStatement(
                                              IdentArrayDesignator(
                                               niz
                                                SingleTermExprPositive(
                                                  SingleFactorTerm(
                                                    NumConstFactor(
                                                     1
                                                    ) [NumConstFactor]
                                                  ) [SingleFactorTerm]
                                                ) [SingleTermExprPositive]
                                              ) [IdentArrayDesignator]
                                            ) [SingleReadStatement]
                                          ) [StatementSingle]
                                        ) [StatementListMultiple]
                                        StatementSingle(
                                          SingleReadStatement(
                                            IdentArrayDesignator(
                                             niz
                                              SingleTermExprPositive(
                                                SingleFactorTerm(
                                                  NumConstFactor(
                                                   2
                                                  ) [NumConstFactor]
                                                ) [SingleFactorTerm]
                                              ) [SingleTermExprPositive]
                                            ) [IdentArrayDesignator]
                                          ) [SingleReadStatement]
                                        ) [StatementSingle]
                                      ) [StatementListMultiple]
                                      StatementSingle(
                                        SinglePrintStatement(
                                          SingleTermExprPositive(
                                            SingleFactorTerm(
                                              DesignatorEmptyFactor(
                                                IdentDesignator(
                                                 eol
                                                ) [IdentDesignator]
                                              ) [DesignatorEmptyFactor]
                                            ) [SingleFactorTerm]
                                          ) [SingleTermExprPositive]
                                          NumConstNo(
                                          ) [NumConstNo]
                                        ) [SinglePrintStatement]
                                      ) [StatementSingle]
                                    ) [StatementListMultiple]
                                    StatementSingle(
                                      SinglePrintStatement(
                                        SingleTermExprPositive(
                                          SingleFactorTerm(
                                            MethodCallFactor(
                                              MethodCall(
                                                IdentDesignator(
                                                 sum
                                                ) [IdentDesignator]
                                                ActParsLeftParen(
                                                ) [ActParsLeftParen]
                                                ActParsYes(
                                                  ActParsMultiExpr(
                                                    ActParsSingleExpr(
                                                      SingleTermExprPositive(
                                                        SingleFactorTerm(
                                                          MethodCallFactor(
                                                            MethodCall(
                                                              IdentDesignator(
                                                               sum
                                                              ) [IdentDesignator]
                                                              ActParsLeftParen(
                                                              ) [ActParsLeftParen]
                                                              ActParsYes(
                                                                ActParsMultiExpr(
                                                                  ActParsSingleExpr(
                                                                    SingleTermExprPositive(
                                                                      SingleFactorTerm(
                                                                        DesignatorEmptyFactor(
                                                                          IdentArrayDesignator(
                                                                           niz
                                                                            SingleTermExprPositive(
                                                                              SingleFactorTerm(
                                                                                NumConstFactor(
                                                                                 0
                                                                                ) [NumConstFactor]
                                                                              ) [SingleFactorTerm]
                                                                            ) [SingleTermExprPositive]
                                                                          ) [IdentArrayDesignator]
                                                                        ) [DesignatorEmptyFactor]
                                                                      ) [SingleFactorTerm]
                                                                    ) [SingleTermExprPositive]
                                                                  ) [ActParsSingleExpr]
                                                                  SingleTermExprPositive(
                                                                    SingleFactorTerm(
                                                                      DesignatorEmptyFactor(
                                                                        IdentArrayDesignator(
                                                                         niz
                                                                          SingleTermExprPositive(
                                                                            SingleFactorTerm(
                                                                              NumConstFactor(
                                                                               1
                                                                              ) [NumConstFactor]
                                                                            ) [SingleFactorTerm]
                                                                          ) [SingleTermExprPositive]
                                                                        ) [IdentArrayDesignator]
                                                                      ) [DesignatorEmptyFactor]
                                                                    ) [SingleFactorTerm]
                                                                  ) [SingleTermExprPositive]
                                                                ) [ActParsMultiExpr]
                                                              ) [ActParsYes]
                                                              ActParsRightParen(
                                                              ) [ActParsRightParen]
                                                            ) [MethodCall]
                                                          ) [MethodCallFactor]
                                                        ) [SingleFactorTerm]
                                                      ) [SingleTermExprPositive]
                                                    ) [ActParsSingleExpr]
                                                    SingleTermExprPositive(
                                                      SingleFactorTerm(
                                                        DesignatorEmptyFactor(
                                                          IdentArrayDesignator(
                                                           niz
                                                            SingleTermExprPositive(
                                                              SingleFactorTerm(
                                                                NumConstFactor(
                                                                 2
                                                                ) [NumConstFactor]
                                                              ) [SingleFactorTerm]
                                                            ) [SingleTermExprPositive]
                                                          ) [IdentArrayDesignator]
                                                        ) [DesignatorEmptyFactor]
                                                      ) [SingleFactorTerm]
                                                    ) [SingleTermExprPositive]
                                                  ) [ActParsMultiExpr]
                                                ) [ActParsYes]
                                                ActParsRightParen(
                                                ) [ActParsRightParen]
                                              ) [MethodCall]
                                            ) [MethodCallFactor]
                                          ) [SingleFactorTerm]
                                        ) [SingleTermExprPositive]
                                        NumConstNo(
                                        ) [NumConstNo]
                                      ) [SinglePrintStatement]
                                    ) [StatementSingle]
                                  ) [StatementListMultiple]
                                  StatementSingle(
                                    SinglePrintStatement(
                                      SingleTermExprPositive(
                                        SingleFactorTerm(
                                          DesignatorEmptyFactor(
                                            IdentDesignator(
                                             eol
                                            ) [IdentDesignator]
                                          ) [DesignatorEmptyFactor]
                                        ) [SingleFactorTerm]
                                      ) [SingleTermExprPositive]
                                      NumConstNo(
                                      ) [NumConstNo]
                                    ) [SinglePrintStatement]
                                  ) [StatementSingle]
                                ) [StatementListMultiple]
                                StatementSingle(
                                  SinglePrintStatement(
                                    SingleTermExprPositive(
                                      SingleFactorTerm(
                                        MethodCallFactor(
                                          MethodCall(
                                            IdentDesignator(
                                             inkrement
                                            ) [IdentDesignator]
                                            ActParsLeftParen(
                                            ) [ActParsLeftParen]
                                            ActParsYes(
                                              ActParsMultiExpr(
                                                ActParsSingleExpr(
                                                  SingleTermExprPositive(
                                                    SingleFactorTerm(
                                                      DesignatorEmptyFactor(
                                                        IdentArrayDesignator(
                                                         niz
                                                          SingleTermExprPositive(
                                                            SingleFactorTerm(
                                                              NumConstFactor(
                                                               2
                                                              ) [NumConstFactor]
                                                            ) [SingleFactorTerm]
                                                          ) [SingleTermExprPositive]
                                                        ) [IdentArrayDesignator]
                                                      ) [DesignatorEmptyFactor]
                                                    ) [SingleFactorTerm]
                                                  ) [SingleTermExprPositive]
                                                ) [ActParsSingleExpr]
                                                SingleTermExprPositive(
                                                  SingleFactorTerm(
                                                    NumConstFactor(
                                                     2
                                                    ) [NumConstFactor]
                                                  ) [SingleFactorTerm]
                                                ) [SingleTermExprPositive]
                                              ) [ActParsMultiExpr]
                                            ) [ActParsYes]
                                            ActParsRightParen(
                                            ) [ActParsRightParen]
                                          ) [MethodCall]
                                        ) [MethodCallFactor]
                                      ) [SingleFactorTerm]
                                    ) [SingleTermExprPositive]
                                    NumConstNo(
                                    ) [NumConstNo]
                                  ) [SinglePrintStatement]
                                ) [StatementSingle]
                              ) [StatementListMultiple]
                              StatementSingle(
                                SingleDesignatorStatement(
                                  DesignatorStmtAssign(
                                    DesignatorStmtAssignCorrect(
                                      IdentDesignator(
                                       a
                                      ) [IdentDesignator]
                                      SingleTermExprPositive(
                                        SingleFactorTerm(
                                          NumConstFactor(
                                           3
                                          ) [NumConstFactor]
                                        ) [SingleFactorTerm]
                                      ) [SingleTermExprPositive]
                                    ) [DesignatorStmtAssignCorrect]
                                  ) [DesignatorStmtAssign]
                                ) [SingleDesignatorStatement]
                              ) [StatementSingle]
                            ) [StatementListMultiple]
                            StatementSingle(
                              SingleDesignatorStatement(
                                DesignatorStmtAssign(
                                  DesignatorStmtAssignCorrect(
                                    IdentDesignator(
                                     i
                                    ) [IdentDesignator]
                                    SingleTermExprPositive(
                                      SingleFactorTerm(
                                        NumConstFactor(
                                         0
                                        ) [NumConstFactor]
                                      ) [SingleFactorTerm]
                                    ) [SingleTermExprPositive]
                                  ) [DesignatorStmtAssignCorrect]
                                ) [DesignatorStmtAssign]
                              ) [SingleDesignatorStatement]
                            ) [StatementSingle]
                          ) [StatementListMultiple]
                          StatementSingle(
                            DoWhileStatement(
                              DoEnter(
                              ) [DoEnter]
                              StatementListMultiple(
                                StatementListNo(
                                ) [StatementListNo]
                                StatementMultiple(
                                  StatementsInBraces(
                                    StatementListMultiple(
                                      StatementListMultiple(
                                        StatementListNo(
                                        ) [StatementListNo]
                                        StatementSingle(
                                          SingleDesignatorStatement(
                                            DesignatorStmtAssign(
                                              DesignatorStmtAssignCorrect(
                                                IdentArrayDesignator(
                                                 niz
                                                  SingleTermExprPositive(
                                                    SingleFactorTerm(
                                                      DesignatorEmptyFactor(
                                                        IdentDesignator(
                                                         i
                                                        ) [IdentDesignator]
                                                      ) [DesignatorEmptyFactor]
                                                    ) [SingleFactorTerm]
                                                  ) [SingleTermExprPositive]
                                                ) [IdentArrayDesignator]
                                                SingleTermExprPositive(
                                                  MultiFactorTerm(
                                                    MultiFactorTerm(
                                                      SingleFactorTerm(
                                                        DesignatorEmptyFactor(
                                                          IdentArrayDesignator(
                                                           niz
                                                            SingleTermExprPositive(
                                                              SingleFactorTerm(
                                                                DesignatorEmptyFactor(
                                                                  IdentDesignator(
                                                                   i
                                                                  ) [IdentDesignator]
                                                                ) [DesignatorEmptyFactor]
                                                              ) [SingleFactorTerm]
                                                            ) [SingleTermExprPositive]
                                                          ) [IdentArrayDesignator]
                                                        ) [DesignatorEmptyFactor]
                                                      ) [SingleFactorTerm]
                                                      MulopMul(
                                                      ) [MulopMul]
                                                      NumConstFactor(
                                                       2
                                                      ) [NumConstFactor]
                                                    ) [MultiFactorTerm]
                                                    MulopMul(
                                                    ) [MulopMul]
                                                    DesignatorEmptyFactor(
                                                      IdentDesignator(
                                                       a
                                                      ) [IdentDesignator]
                                                    ) [DesignatorEmptyFactor]
                                                  ) [MultiFactorTerm]
                                                ) [SingleTermExprPositive]
                                              ) [DesignatorStmtAssignCorrect]
                                            ) [DesignatorStmtAssign]
                                          ) [SingleDesignatorStatement]
                                        ) [StatementSingle]
                                      ) [StatementListMultiple]
                                      StatementSingle(
                                        SingleDesignatorStatement(
                                          DesignatorStmtPlusPlus(
                                            IdentDesignator(
                                             i
                                            ) [IdentDesignator]
                                          ) [DesignatorStmtPlusPlus]
                                        ) [SingleDesignatorStatement]
                                      ) [StatementSingle]
                                    ) [StatementListMultiple]
                                  ) [StatementsInBraces]
                                ) [StatementMultiple]
                              ) [StatementListMultiple]
                              ConditionSingleTerm(
                                CondSingleFactTerm(
                                  CondMultiExprFact(
                                    CondSingleExprFact(
                                      SingleTermExprPositive(
                                        SingleFactorTerm(
                                          DesignatorEmptyFactor(
                                            IdentDesignator(
                                             i
                                            ) [IdentDesignator]
                                          ) [DesignatorEmptyFactor]
                                        ) [SingleFactorTerm]
                                      ) [SingleTermExprPositive]
                                    ) [CondSingleExprFact]
                                    RelopLS(
                                    ) [RelopLS]
                                    SingleTermExprPositive(
                                      SingleFactorTerm(
                                        NumConstFactor(
                                         3
                                        ) [NumConstFactor]
                                      ) [SingleFactorTerm]
                                    ) [SingleTermExprPositive]
                                  ) [CondMultiExprFact]
                                ) [CondSingleFactTerm]
                              ) [ConditionSingleTerm]
                            ) [DoWhileStatement]
                          ) [StatementSingle]
                        ) [StatementListMultiple]
                        StatementSingle(
                          SinglePrintStatement(
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                DesignatorEmptyFactor(
                                  IdentArrayDesignator(
                                   niz
                                    SingleTermExprPositive(
                                      SingleFactorTerm(
                                        NumConstFactor(
                                         0
                                        ) [NumConstFactor]
                                      ) [SingleFactorTerm]
                                    ) [SingleTermExprPositive]
                                  ) [IdentArrayDesignator]
                                ) [DesignatorEmptyFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                            NumConstNo(
                            ) [NumConstNo]
                          ) [SinglePrintStatement]
                        ) [StatementSingle]
                      ) [StatementListMultiple]
                      StatementSingle(
                        SinglePrintStatement(
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              DesignatorEmptyFactor(
                                IdentArrayDesignator(
                                 niz
                                  SingleTermExprPositive(
                                    SingleFactorTerm(
                                      NumConstFactor(
                                       1
                                      ) [NumConstFactor]
                                    ) [SingleFactorTerm]
                                  ) [SingleTermExprPositive]
                                ) [IdentArrayDesignator]
                              ) [DesignatorEmptyFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                          NumConstNo(
                          ) [NumConstNo]
                        ) [SinglePrintStatement]
                      ) [StatementSingle]
                    ) [StatementListMultiple]
                    StatementSingle(
                      SinglePrintStatement(
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            DesignatorEmptyFactor(
                              IdentArrayDesignator(
                               niz
                                SingleTermExprPositive(
                                  SingleFactorTerm(
                                    NumConstFactor(
                                     2
                                    ) [NumConstFactor]
                                  ) [SingleFactorTerm]
                                ) [SingleTermExprPositive]
                              ) [IdentArrayDesignator]
                            ) [DesignatorEmptyFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                        NumConstNo(
                        ) [NumConstNo]
                      ) [SinglePrintStatement]
                    ) [StatementSingle]
                  ) [StatementListMultiple]
                  StatementSingle(
                    SinglePrintStatement(
                      SingleTermExprPositive(
                        SingleFactorTerm(
                          DesignatorEmptyFactor(
                            IdentDesignator(
                             eol
                            ) [IdentDesignator]
                          ) [DesignatorEmptyFactor]
                        ) [SingleFactorTerm]
                      ) [SingleTermExprPositive]
                      NumConstNo(
                      ) [NumConstNo]
                    ) [SinglePrintStatement]
                  ) [StatementSingle]
                ) [StatementListMultiple]
                StatementSingle(
                  SingleDesignatorStatement(
                    DesignatorStmtAssign(
                      DesignatorStmtAssignCorrect(
                        IdentDesignator(
                         i
                        ) [IdentDesignator]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            NumConstFactor(
                             0
                            ) [NumConstFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [DesignatorStmtAssignCorrect]
                    ) [DesignatorStmtAssign]
                  ) [SingleDesignatorStatement]
                ) [StatementSingle]
              ) [StatementListMultiple]
              StatementSingle(
                SingleDesignatorStatement(
                  DesignatorStmtAssign(
                    DesignatorStmtAssignCorrect(
                      IdentDesignator(
                       niz2
                      ) [IdentDesignator]
                      SingleTermExprPositive(
                        SingleFactorTerm(
                          NumConstFactor(
                           0
                          ) [NumConstFactor]
                        ) [SingleFactorTerm]
                      ) [SingleTermExprPositive]
                    ) [DesignatorStmtAssignCorrect]
                  ) [DesignatorStmtAssign]
                ) [SingleDesignatorStatement]
              ) [StatementSingle]
            ) [StatementListMultiple]
            StatementSingle(
              DoWhileStatement(
                DoEnter(
                ) [DoEnter]
                StatementListMultiple(
                  StatementListNo(
                  ) [StatementListNo]
                  StatementMultiple(
                    StatementsInBraces(
                      StatementListMultiple(
                        StatementListMultiple(
                          StatementListNo(
                          ) [StatementListNo]
                          StatementSingle(
                            SingleDesignatorStatement(
                              DesignatorStmtAssign(
                                DesignatorStmtAssignCorrect(
                                  IdentDesignator(
                                   niz2
                                  ) [IdentDesignator]
                                  MultiTermExpr(
                                    SingleTermExprPositive(
                                      SingleFactorTerm(
                                        DesignatorEmptyFactor(
                                          IdentDesignator(
                                           niz2
                                          ) [IdentDesignator]
                                        ) [DesignatorEmptyFactor]
                                      ) [SingleFactorTerm]
                                    ) [SingleTermExprPositive]
                                    AddopPlus(
                                    ) [AddopPlus]
                                    MultiFactorTerm(
                                      SingleFactorTerm(
                                        DesignatorEmptyFactor(
                                          IdentArrayDesignator(
                                           niz
                                            SingleTermExprPositive(
                                              SingleFactorTerm(
                                                DesignatorEmptyFactor(
                                                  IdentDesignator(
                                                   i
                                                  ) [IdentDesignator]
                                                ) [DesignatorEmptyFactor]
                                              ) [SingleFactorTerm]
                                            ) [SingleTermExprPositive]
                                          ) [IdentArrayDesignator]
                                        ) [DesignatorEmptyFactor]
                                      ) [SingleFactorTerm]
                                      MulopMul(
                                      ) [MulopMul]
                                      DesignatorEmptyFactor(
                                        IdentArrayDesignator(
                                         niz
                                          SingleTermExprPositive(
                                            SingleFactorTerm(
                                              DesignatorEmptyFactor(
                                                IdentDesignator(
                                                 i
                                                ) [IdentDesignator]
                                              ) [DesignatorEmptyFactor]
                                            ) [SingleFactorTerm]
                                          ) [SingleTermExprPositive]
                                        ) [IdentArrayDesignator]
                                      ) [DesignatorEmptyFactor]
                                    ) [MultiFactorTerm]
                                  ) [MultiTermExpr]
                                ) [DesignatorStmtAssignCorrect]
                              ) [DesignatorStmtAssign]
                            ) [SingleDesignatorStatement]
                          ) [StatementSingle]
                        ) [StatementListMultiple]
                        StatementSingle(
                          SingleDesignatorStatement(
                            DesignatorStmtPlusPlus(
                              IdentDesignator(
                               i
                              ) [IdentDesignator]
                            ) [DesignatorStmtPlusPlus]
                          ) [SingleDesignatorStatement]
                        ) [StatementSingle]
                      ) [StatementListMultiple]
                    ) [StatementsInBraces]
                  ) [StatementMultiple]
                ) [StatementListMultiple]
                ConditionSingleTerm(
                  CondSingleFactTerm(
                    CondMultiExprFact(
                      CondSingleExprFact(
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            DesignatorEmptyFactor(
                              IdentDesignator(
                               i
                              ) [IdentDesignator]
                            ) [DesignatorEmptyFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [CondSingleExprFact]
                      RelopLS(
                      ) [RelopLS]
                      SingleTermExprPositive(
                        SingleFactorTerm(
                          NumConstFactor(
                           3
                          ) [NumConstFactor]
                        ) [SingleFactorTerm]
                      ) [SingleTermExprPositive]
                    ) [CondMultiExprFact]
                  ) [CondSingleFactTerm]
                ) [ConditionSingleTerm]
              ) [DoWhileStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
          StatementSingle(
            SinglePrintStatement(
              SingleTermExprPositive(
                SingleFactorTerm(
                  DesignatorEmptyFactor(
                    IdentDesignator(
                     niz2
                    ) [IdentDesignator]
                  ) [DesignatorEmptyFactor]
                ) [SingleFactorTerm]
              ) [SingleTermExprPositive]
              NumConstNo(
              ) [NumConstNo]
            ) [SinglePrintStatement]
          ) [StatementSingle]
        ) [StatementListMultiple]
        StatementSingle(
          SinglePrintStatement(
            SingleTermExprPositive(
              SingleFactorTerm(
                DesignatorEmptyFactor(
                  IdentDesignator(
                   eol
                  ) [IdentDesignator]
                ) [DesignatorEmptyFactor]
              ) [SingleFactorTerm]
            ) [SingleTermExprPositive]
            NumConstNo(
            ) [NumConstNo]
          ) [SinglePrintStatement]
        ) [StatementSingle]
      ) [StatementListMultiple]
    ) [MethodDeclaration]
  ) [MethodDeclListMultiple]
) [Program]
INFO  20:56:42,053 - ===================================
INFO  20:56:42,057 - Access to formal argument detected. Method name: sum, argument name: z
INFO  20:56:42,057 - Access to formal argument detected. Method name: sum, argument name: d
INFO  20:56:42,057 - Access to formal argument detected. Method name: inkrement, argument name: inc
INFO  21:00:33,980 - Compiling source file: D:\source\repos\PP_Projekat\MicroJavaCompiler\test\program.mj
INFO  21:00:33,998 - #2 program
INFO  21:00:33,998 - #48 test302
INFO  21:00:33,998 - #7 const
INFO  21:00:33,998 - #48 int
INFO  21:00:33,998 - #48 jedan
INFO  21:00:33,998 - #27 =
INFO  21:00:33,998 - #51 1
INFO  21:00:33,999 - #38 ;
INFO  21:00:33,999 - #48 int
INFO  21:00:33,999 - #48 i
INFO  21:00:33,999 - #38 ;
INFO  21:00:33,999 - #48 bool
INFO  21:00:34,000 - #48 ibool
INFO  21:00:34,000 - #38 ;
INFO  21:00:34,000 - #48 int
INFO  21:00:34,000 - #48 niz2
INFO  21:00:34,000 - #38 ;
INFO  21:00:34,000 - #48 int
INFO  21:00:34,000 - #48 niz
INFO  21:00:34,000 - #42 [
INFO  21:00:34,000 - #43 ]
INFO  21:00:34,000 - #38 ;
INFO  21:00:34,000 - #48 int
INFO  21:00:34,000 - #48 a
INFO  21:00:34,000 - #38 ;
INFO  21:00:34,000 - #44 {
INFO  21:00:34,000 - #48 int
INFO  21:00:34,000 - #48 sum
INFO  21:00:34,001 - #40 (
INFO  21:00:34,001 - #48 int
INFO  21:00:34,001 - #48 z
INFO  21:00:34,001 - #39 ,
INFO  21:00:34,001 - #48 int
INFO  21:00:34,001 - #48 d
INFO  21:00:34,001 - #41 )
INFO  21:00:34,001 - #44 {
INFO  21:00:34,002 - #15 return
INFO  21:00:34,002 - #48 z
INFO  21:00:34,002 - #22 +
INFO  21:00:34,002 - #48 d
INFO  21:00:34,002 - #38 ;
INFO  21:00:34,003 - #45 }
INFO  21:00:34,003 - #48 int
INFO  21:00:34,003 - #48 inkrement
INFO  21:00:34,003 - #40 (
INFO  21:00:34,003 - #48 int
INFO  21:00:34,003 - #48 a
INFO  21:00:34,003 - #39 ,
INFO  21:00:34,003 - #48 int
INFO  21:00:34,003 - #48 inc
INFO  21:00:34,003 - #41 )
INFO  21:00:34,003 - #48 int
INFO  21:00:34,003 - #48 pom
INFO  21:00:34,003 - #38 ;
INFO  21:00:34,004 - #44 {
INFO  21:00:34,004 - #5 if
INFO  21:00:34,004 - #40 (
INFO  21:00:34,004 - #48 inc
INFO  21:00:34,004 - #28 ==
INFO  21:00:34,004 - #48 jedan
INFO  21:00:34,004 - #41 )
INFO  21:00:34,004 - #48 pom
INFO  21:00:34,004 - #27 =
INFO  21:00:34,004 - #51 1
INFO  21:00:34,004 - #38 ;
INFO  21:00:34,005 - #6 else
INFO  21:00:34,005 - #5 if
INFO  21:00:34,005 - #40 (
INFO  21:00:34,005 - #48 inc
INFO  21:00:34,005 - #28 ==
INFO  21:00:34,005 - #51 2
INFO  21:00:34,005 - #41 )
INFO  21:00:34,005 - #48 pom
INFO  21:00:34,005 - #27 =
INFO  21:00:34,005 - #48 a
INFO  21:00:34,005 - #38 ;
INFO  21:00:34,005 - #15 return
INFO  21:00:34,005 - #48 sum
INFO  21:00:34,005 - #40 (
INFO  21:00:34,005 - #48 a
INFO  21:00:34,005 - #39 ,
INFO  21:00:34,005 - #48 pom
INFO  21:00:34,005 - #41 )
INFO  21:00:34,005 - #38 ;
INFO  21:00:34,006 - #45 }
INFO  21:00:34,006 - #48 bool
INFO  21:00:34,006 - #48 verify
INFO  21:00:34,006 - #40 (
INFO  21:00:34,006 - #41 )
INFO  21:00:34,006 - #44 {
INFO  21:00:34,006 - #12 print
INFO  21:00:34,006 - #40 (
INFO  21:00:34,006 - #50 v
INFO  21:00:34,006 - #41 )
INFO  21:00:34,006 - #38 ;
INFO  21:00:34,007 - #15 return
INFO  21:00:34,007 - #49 false
INFO  21:00:34,007 - #38 ;
INFO  21:00:34,007 - #45 }
INFO  21:00:34,007 - #14 void
INFO  21:00:34,007 - #48 main
INFO  21:00:34,007 - #40 (
INFO  21:00:34,007 - #41 )
INFO  21:00:34,007 - #44 {
INFO  21:00:34,007 - #5 if
INFO  21:00:34,007 - #40 (
INFO  21:00:34,007 - #51 1
INFO  21:00:34,007 - #29 !=
INFO  21:00:34,007 - #51 1
INFO  21:00:34,007 - #41 )
INFO  21:00:34,007 - #12 print
INFO  21:00:34,007 - #40 (
INFO  21:00:34,007 - #23 -
INFO  21:00:34,008 - #51 6
INFO  21:00:34,008 - #41 )
INFO  21:00:34,008 - #38 ;
INFO  21:00:34,008 - #6 else
INFO  21:00:34,008 - #12 print
INFO  21:00:34,008 - #40 (
INFO  21:00:34,008 - #51 0
INFO  21:00:34,008 - #41 )
INFO  21:00:34,008 - #38 ;
INFO  21:00:34,008 - #48 ibool
INFO  21:00:34,008 - #27 =
INFO  21:00:34,008 - #49 false
INFO  21:00:34,008 - #38 ;
INFO  21:00:34,008 - #48 i
INFO  21:00:34,008 - #27 =
INFO  21:00:34,008 - #51 0
INFO  21:00:34,008 - #38 ;
INFO  21:00:34,008 - #9 do
INFO  21:00:34,008 - #44 {
INFO  21:00:34,008 - #5 if
INFO  21:00:34,008 - #40 (
INFO  21:00:34,008 - #48 i
INFO  21:00:34,008 - #28 ==
INFO  21:00:34,008 - #51 2
INFO  21:00:34,009 - #41 )
INFO  21:00:34,009 - #48 ibool
INFO  21:00:34,009 - #27 =
INFO  21:00:34,009 - #49 true
INFO  21:00:34,009 - #38 ;
INFO  21:00:34,009 - #48 i
INFO  21:00:34,009 - #36 ++
INFO  21:00:34,009 - #38 ;
INFO  21:00:34,009 - #45 }
INFO  21:00:34,009 - #10 while
INFO  21:00:34,009 - #40 (
INFO  21:00:34,009 - #48 i
INFO  21:00:34,009 - #32 <
INFO  21:00:34,009 - #51 5
INFO  21:00:34,009 - #41 )
INFO  21:00:34,009 - #38 ;
INFO  21:00:34,009 - #5 if
INFO  21:00:34,009 - #40 (
INFO  21:00:34,009 - #48 ibool
INFO  21:00:34,009 - #41 )
INFO  21:00:34,009 - #5 if
INFO  21:00:34,009 - #40 (
INFO  21:00:34,009 - #48 i
INFO  21:00:34,009 - #28 ==
INFO  21:00:34,009 - #51 5
INFO  21:00:34,009 - #41 )
INFO  21:00:34,009 - #12 print
INFO  21:00:34,009 - #40 (
INFO  21:00:34,009 - #51 1
INFO  21:00:34,009 - #41 )
INFO  21:00:34,009 - #38 ;
INFO  21:00:34,009 - #6 else
INFO  21:00:34,010 - #12 print
INFO  21:00:34,010 - #40 (
INFO  21:00:34,010 - #23 -
INFO  21:00:34,010 - #51 1
INFO  21:00:34,010 - #41 )
INFO  21:00:34,010 - #38 ;
INFO  21:00:34,010 - #48 a
INFO  21:00:34,010 - #27 =
INFO  21:00:34,010 - #51 2
INFO  21:00:34,010 - #38 ;
INFO  21:00:34,010 - #48 niz
INFO  21:00:34,010 - #27 =
INFO  21:00:34,010 - #11 new
INFO  21:00:34,010 - #48 int
INFO  21:00:34,010 - #42 [
INFO  21:00:34,010 - #51 3
INFO  21:00:34,010 - #43 ]
INFO  21:00:34,010 - #38 ;
INFO  21:00:34,010 - #48 niz
INFO  21:00:34,010 - #42 [
INFO  21:00:34,010 - #51 0
INFO  21:00:34,010 - #43 ]
INFO  21:00:34,010 - #27 =
INFO  21:00:34,010 - #51 1
INFO  21:00:34,010 - #24 *
INFO  21:00:34,010 - #48 a
INFO  21:00:34,011 - #38 ;
INFO  21:00:34,011 - #48 niz
INFO  21:00:34,011 - #42 [
INFO  21:00:34,011 - #51 1
INFO  21:00:34,011 - #43 ]
INFO  21:00:34,011 - #27 =
INFO  21:00:34,011 - #51 2
INFO  21:00:34,011 - #24 *
INFO  21:00:34,011 - #48 a
INFO  21:00:34,011 - #38 ;
INFO  21:00:34,011 - #48 niz
INFO  21:00:34,011 - #42 [
INFO  21:00:34,011 - #51 2
INFO  21:00:34,011 - #43 ]
INFO  21:00:34,011 - #27 =
INFO  21:00:34,011 - #48 sum
INFO  21:00:34,011 - #40 (
INFO  21:00:34,011 - #48 niz
INFO  21:00:34,011 - #42 [
INFO  21:00:34,011 - #51 1
INFO  21:00:34,011 - #43 ]
INFO  21:00:34,011 - #39 ,
INFO  21:00:34,011 - #48 niz
INFO  21:00:34,011 - #42 [
INFO  21:00:34,011 - #51 0
INFO  21:00:34,011 - #43 ]
INFO  21:00:34,011 - #41 )
INFO  21:00:34,011 - #24 *
INFO  21:00:34,011 - #48 a
INFO  21:00:34,011 - #22 +
INFO  21:00:34,011 - #51 1
INFO  21:00:34,011 - #38 ;
INFO  21:00:34,011 - #5 if
INFO  21:00:34,011 - #40 (
INFO  21:00:34,011 - #48 verify
INFO  21:00:34,011 - #40 (
INFO  21:00:34,011 - #41 )
INFO  21:00:34,012 - #35 ||
INFO  21:00:34,012 - #48 niz
INFO  21:00:34,012 - #42 [
INFO  21:00:34,012 - #51 2
INFO  21:00:34,012 - #43 ]
INFO  21:00:34,012 - #28 ==
INFO  21:00:34,012 - #51 4
INFO  21:00:34,012 - #41 )
INFO  21:00:34,012 - #12 print
INFO  21:00:34,012 - #40 (
INFO  21:00:34,012 - #48 ord
INFO  21:00:34,012 - #40 (
INFO  21:00:34,012 - #50 A
INFO  21:00:34,012 - #41 )
INFO  21:00:34,012 - #41 )
INFO  21:00:34,012 - #38 ;
INFO  21:00:34,012 - #6 else
INFO  21:00:34,012 - #12 print
INFO  21:00:34,012 - #40 (
INFO  21:00:34,012 - #48 ord
INFO  21:00:34,012 - #40 (
INFO  21:00:34,012 - #50 a
INFO  21:00:34,012 - #41 )
INFO  21:00:34,012 - #41 )
INFO  21:00:34,012 - #38 ;
INFO  21:00:34,012 - #12 print
INFO  21:00:34,012 - #40 (
INFO  21:00:34,012 - #48 eol
INFO  21:00:34,012 - #41 )
INFO  21:00:34,012 - #38 ;
INFO  21:00:34,012 - #48 i
INFO  21:00:34,012 - #27 =
INFO  21:00:34,012 - #51 0
INFO  21:00:34,012 - #38 ;
INFO  21:00:34,012 - #9 do
INFO  21:00:34,012 - #44 {
INFO  21:00:34,012 - #5 if
INFO  21:00:34,012 - #40 (
INFO  21:00:34,012 - #48 i
INFO  21:00:34,012 - #28 ==
INFO  21:00:34,012 - #51 3
INFO  21:00:34,012 - #41 )
INFO  21:00:34,012 - #44 {
INFO  21:00:34,012 - #48 i
INFO  21:00:34,012 - #36 ++
INFO  21:00:34,012 - #38 ;
INFO  21:00:34,012 - #4 continue
INFO  21:00:34,012 - #38 ;
INFO  21:00:34,012 - #45 }
INFO  21:00:34,013 - #5 if
INFO  21:00:34,013 - #40 (
INFO  21:00:34,013 - #48 i
INFO  21:00:34,013 - #28 ==
INFO  21:00:34,013 - #51 4
INFO  21:00:34,013 - #41 )
INFO  21:00:34,013 - #3 break
INFO  21:00:34,013 - #38 ;
INFO  21:00:34,013 - #48 i
INFO  21:00:34,013 - #27 =
INFO  21:00:34,013 - #48 inkrement
INFO  21:00:34,013 - #40 (
INFO  21:00:34,013 - #48 i
INFO  21:00:34,013 - #39 ,
INFO  21:00:34,013 - #51 1
INFO  21:00:34,013 - #41 )
INFO  21:00:34,013 - #38 ;
INFO  21:00:34,013 - #45 }
INFO  21:00:34,013 - #10 while
INFO  21:00:34,013 - #40 (
INFO  21:00:34,013 - #48 i
INFO  21:00:34,013 - #32 <
INFO  21:00:34,013 - #51 10
INFO  21:00:34,013 - #41 )
INFO  21:00:34,013 - #38 ;
INFO  21:00:34,013 - #5 if
INFO  21:00:34,013 - #40 (
INFO  21:00:34,013 - #48 i
INFO  21:00:34,013 - #28 ==
INFO  21:00:34,013 - #51 3
INFO  21:00:34,013 - #34 &&
INFO  21:00:34,013 - #48 verify
INFO  21:00:34,013 - #40 (
INFO  21:00:34,013 - #41 )
INFO  21:00:34,013 - #41 )
INFO  21:00:34,013 - #12 print
INFO  21:00:34,013 - #40 (
INFO  21:00:34,013 - #23 -
INFO  21:00:34,013 - #51 4
INFO  21:00:34,013 - #41 )
INFO  21:00:34,013 - #38 ;
INFO  21:00:34,013 - #6 else
INFO  21:00:34,013 - #12 print
INFO  21:00:34,013 - #40 (
INFO  21:00:34,013 - #51 4
INFO  21:00:34,013 - #41 )
INFO  21:00:34,013 - #38 ;
INFO  21:00:34,013 - #13 read
INFO  21:00:34,013 - #40 (
INFO  21:00:34,013 - #48 niz
INFO  21:00:34,013 - #42 [
INFO  21:00:34,013 - #51 0
INFO  21:00:34,013 - #43 ]
INFO  21:00:34,013 - #41 )
INFO  21:00:34,013 - #38 ;
INFO  21:00:34,014 - #13 read
INFO  21:00:34,014 - #40 (
INFO  21:00:34,014 - #48 niz
INFO  21:00:34,014 - #42 [
INFO  21:00:34,014 - #51 1
INFO  21:00:34,014 - #43 ]
INFO  21:00:34,014 - #41 )
INFO  21:00:34,014 - #38 ;
INFO  21:00:34,014 - #13 read
INFO  21:00:34,014 - #40 (
INFO  21:00:34,014 - #48 niz
INFO  21:00:34,014 - #42 [
INFO  21:00:34,014 - #51 2
INFO  21:00:34,014 - #43 ]
INFO  21:00:34,014 - #41 )
INFO  21:00:34,014 - #38 ;
INFO  21:00:34,014 - #12 print
INFO  21:00:34,014 - #40 (
INFO  21:00:34,014 - #48 eol
INFO  21:00:34,014 - #41 )
INFO  21:00:34,014 - #38 ;
INFO  21:00:34,014 - #12 print
INFO  21:00:34,014 - #40 (
INFO  21:00:34,014 - #48 sum
INFO  21:00:34,014 - #40 (
INFO  21:00:34,014 - #48 sum
INFO  21:00:34,014 - #40 (
INFO  21:00:34,014 - #48 niz
INFO  21:00:34,014 - #42 [
INFO  21:00:34,014 - #51 0
INFO  21:00:34,014 - #43 ]
INFO  21:00:34,014 - #39 ,
INFO  21:00:34,014 - #48 niz
INFO  21:00:34,014 - #42 [
INFO  21:00:34,014 - #51 1
INFO  21:00:34,014 - #43 ]
INFO  21:00:34,014 - #41 )
INFO  21:00:34,014 - #39 ,
INFO  21:00:34,014 - #48 niz
INFO  21:00:34,014 - #42 [
INFO  21:00:34,014 - #51 2
INFO  21:00:34,014 - #43 ]
INFO  21:00:34,014 - #41 )
INFO  21:00:34,014 - #41 )
INFO  21:00:34,014 - #38 ;
INFO  21:00:34,014 - #12 print
INFO  21:00:34,014 - #40 (
INFO  21:00:34,014 - #48 eol
INFO  21:00:34,014 - #41 )
INFO  21:00:34,014 - #38 ;
INFO  21:00:34,014 - #12 print
INFO  21:00:34,014 - #40 (
INFO  21:00:34,014 - #48 inkrement
INFO  21:00:34,014 - #40 (
INFO  21:00:34,014 - #48 niz
INFO  21:00:34,014 - #42 [
INFO  21:00:34,014 - #51 2
INFO  21:00:34,014 - #43 ]
INFO  21:00:34,014 - #39 ,
INFO  21:00:34,014 - #51 2
INFO  21:00:34,014 - #41 )
INFO  21:00:34,014 - #41 )
INFO  21:00:34,014 - #38 ;
INFO  21:00:34,014 - #48 a
INFO  21:00:34,014 - #27 =
INFO  21:00:34,014 - #51 3
INFO  21:00:34,014 - #38 ;
INFO  21:00:34,014 - #48 i
INFO  21:00:34,014 - #27 =
INFO  21:00:34,014 - #51 0
INFO  21:00:34,014 - #38 ;
INFO  21:00:34,014 - #9 do
INFO  21:00:34,014 - #44 {
INFO  21:00:34,014 - #48 niz
INFO  21:00:34,014 - #42 [
INFO  21:00:34,014 - #48 i
INFO  21:00:34,014 - #43 ]
INFO  21:00:34,014 - #27 =
INFO  21:00:34,014 - #48 niz
INFO  21:00:34,014 - #42 [
INFO  21:00:34,014 - #48 i
INFO  21:00:34,014 - #43 ]
INFO  21:00:34,014 - #24 *
INFO  21:00:34,014 - #51 2
INFO  21:00:34,014 - #24 *
INFO  21:00:34,014 - #48 a
INFO  21:00:34,014 - #38 ;
INFO  21:00:34,014 - #48 i
INFO  21:00:34,014 - #36 ++
INFO  21:00:34,014 - #38 ;
INFO  21:00:34,014 - #45 }
INFO  21:00:34,014 - #10 while
INFO  21:00:34,014 - #40 (
INFO  21:00:34,014 - #48 i
INFO  21:00:34,014 - #32 <
INFO  21:00:34,014 - #51 3
INFO  21:00:34,014 - #41 )
INFO  21:00:34,014 - #38 ;
INFO  21:00:34,014 - #12 print
INFO  21:00:34,014 - #40 (
INFO  21:00:34,014 - #48 niz
INFO  21:00:34,014 - #42 [
INFO  21:00:34,014 - #51 0
INFO  21:00:34,014 - #43 ]
INFO  21:00:34,014 - #41 )
INFO  21:00:34,014 - #38 ;
INFO  21:00:34,014 - #12 print
INFO  21:00:34,014 - #40 (
INFO  21:00:34,014 - #48 niz
INFO  21:00:34,014 - #42 [
INFO  21:00:34,014 - #51 1
INFO  21:00:34,014 - #43 ]
INFO  21:00:34,015 - #41 )
INFO  21:00:34,015 - #38 ;
INFO  21:00:34,015 - #12 print
INFO  21:00:34,015 - #40 (
INFO  21:00:34,015 - #48 niz
INFO  21:00:34,015 - #42 [
INFO  21:00:34,015 - #51 2
INFO  21:00:34,015 - #43 ]
INFO  21:00:34,015 - #41 )
INFO  21:00:34,015 - #38 ;
INFO  21:00:34,015 - #12 print
INFO  21:00:34,015 - #40 (
INFO  21:00:34,015 - #48 eol
INFO  21:00:34,015 - #41 )
INFO  21:00:34,015 - #38 ;
INFO  21:00:34,015 - #48 i
INFO  21:00:34,015 - #27 =
INFO  21:00:34,015 - #51 0
INFO  21:00:34,015 - #38 ;
INFO  21:00:34,015 - #48 niz2
INFO  21:00:34,015 - #27 =
INFO  21:00:34,015 - #51 0
INFO  21:00:34,015 - #38 ;
INFO  21:00:34,015 - #9 do
INFO  21:00:34,015 - #44 {
INFO  21:00:34,015 - #48 niz2
INFO  21:00:34,015 - #27 =
INFO  21:00:34,015 - #48 niz2
INFO  21:00:34,015 - #22 +
INFO  21:00:34,015 - #48 niz
INFO  21:00:34,015 - #42 [
INFO  21:00:34,015 - #48 i
INFO  21:00:34,015 - #43 ]
INFO  21:00:34,015 - #24 *
INFO  21:00:34,015 - #48 niz
INFO  21:00:34,015 - #42 [
INFO  21:00:34,015 - #48 i
INFO  21:00:34,015 - #43 ]
INFO  21:00:34,015 - #38 ;
INFO  21:00:34,015 - #48 i
INFO  21:00:34,015 - #36 ++
INFO  21:00:34,015 - #38 ;
INFO  21:00:34,015 - #45 }
INFO  21:00:34,015 - #10 while
INFO  21:00:34,015 - #40 (
INFO  21:00:34,015 - #48 i
INFO  21:00:34,015 - #32 <
INFO  21:00:34,015 - #51 3
INFO  21:00:34,015 - #41 )
INFO  21:00:34,015 - #38 ;
INFO  21:00:34,015 - #12 print
INFO  21:00:34,015 - #40 (
INFO  21:00:34,015 - #48 niz2
INFO  21:00:34,015 - #41 )
INFO  21:00:34,015 - #38 ;
INFO  21:00:34,015 - #12 print
INFO  21:00:34,015 - #40 (
INFO  21:00:34,015 - #48 eol
INFO  21:00:34,015 - #41 )
INFO  21:00:34,015 - #38 ;
INFO  21:00:34,015 - #45 }
INFO  21:00:34,015 - #45 }
INFO  21:00:34,020 - Program(
  ProgramName(
   test302
  ) [ProgramName]
  AllDeclListMultiple(
    AllDeclListMultiple(
      AllDeclListMultiple(
        AllDeclListMultiple(
          AllDeclListMultiple(
            AllDeclListMultiple(
              NoDecl(
              ) [NoDecl]
              ConstDeclaration(
                ConstDeclarationExpr(
                  Type(
                   int
                  ) [Type]
                  ConstAssignSingle(
                    ConstAssign(
                     jedan
                      NumberConst(
                       1
                      ) [NumberConst]
                    ) [ConstAssign]
                  ) [ConstAssignSingle]
                ) [ConstDeclarationExpr]
              ) [ConstDeclaration]
            ) [AllDeclListMultiple]
            GlobalVarDeclaration(
              GlobalVarDeclarationExpr(
                Type(
                 int
                ) [Type]
                GlobalVarDeclListSingle(
                  GlobalVarDeclarationSingle(
                   i
                    NoArray(
                    ) [NoArray]
                  ) [GlobalVarDeclarationSingle]
                ) [GlobalVarDeclListSingle]
              ) [GlobalVarDeclarationExpr]
            ) [GlobalVarDeclaration]
          ) [AllDeclListMultiple]
          GlobalVarDeclaration(
            GlobalVarDeclarationExpr(
              Type(
               bool
              ) [Type]
              GlobalVarDeclListSingle(
                GlobalVarDeclarationSingle(
                 ibool
                  NoArray(
                  ) [NoArray]
                ) [GlobalVarDeclarationSingle]
              ) [GlobalVarDeclListSingle]
            ) [GlobalVarDeclarationExpr]
          ) [GlobalVarDeclaration]
        ) [AllDeclListMultiple]
        GlobalVarDeclaration(
          GlobalVarDeclarationExpr(
            Type(
             int
            ) [Type]
            GlobalVarDeclListSingle(
              GlobalVarDeclarationSingle(
               niz2
                NoArray(
                ) [NoArray]
              ) [GlobalVarDeclarationSingle]
            ) [GlobalVarDeclListSingle]
          ) [GlobalVarDeclarationExpr]
        ) [GlobalVarDeclaration]
      ) [AllDeclListMultiple]
      GlobalVarDeclaration(
        GlobalVarDeclarationExpr(
          Type(
           int
          ) [Type]
          GlobalVarDeclListSingle(
            GlobalVarDeclarationSingle(
             niz
              ArrayBrackets(
              ) [ArrayBrackets]
            ) [GlobalVarDeclarationSingle]
          ) [GlobalVarDeclListSingle]
        ) [GlobalVarDeclarationExpr]
      ) [GlobalVarDeclaration]
    ) [AllDeclListMultiple]
    GlobalVarDeclaration(
      GlobalVarDeclarationExpr(
        Type(
         int
        ) [Type]
        GlobalVarDeclListSingle(
          GlobalVarDeclarationSingle(
           a
            NoArray(
            ) [NoArray]
          ) [GlobalVarDeclarationSingle]
        ) [GlobalVarDeclListSingle]
      ) [GlobalVarDeclarationExpr]
    ) [GlobalVarDeclaration]
  ) [AllDeclListMultiple]
  MethodDeclListMultiple(
    MethodDeclListMultiple(
      MethodDeclListMultiple(
        MethodDeclListMultiple(
          MethodDeclListNo(
          ) [MethodDeclListNo]
          MethodDeclaration(
            MethodSignatureParams(
              MethodTypeType(
                Type(
                 int
                ) [Type]
              ) [MethodTypeType]
              MethodName(
               sum
              ) [MethodName]
              FormParsMultiple(
                FormParsSingle(
                  FormParSingle(
                    Type(
                     int
                    ) [Type]
                   z
                    NoArray(
                    ) [NoArray]
                  ) [FormParSingle]
                ) [FormParsSingle]
                FormParSingle(
                  Type(
                   int
                  ) [Type]
                 d
                  NoArray(
                  ) [NoArray]
                ) [FormParSingle]
              ) [FormParsMultiple]
              FormParsEnd(
              ) [FormParsEnd]
            ) [MethodSignatureParams]
            NoVarDeclOption(
            ) [NoVarDeclOption]
            StatementListMultiple(
              StatementListNo(
              ) [StatementListNo]
              StatementSingle(
                SingleReturnExprStatement(
                  MultiTermExpr(
                    SingleTermExprPositive(
                      SingleFactorTerm(
                        DesignatorEmptyFactor(
                          IdentDesignator(
                           z
                          ) [IdentDesignator]
                        ) [DesignatorEmptyFactor]
                      ) [SingleFactorTerm]
                    ) [SingleTermExprPositive]
                    AddopPlus(
                    ) [AddopPlus]
                    SingleFactorTerm(
                      DesignatorEmptyFactor(
                        IdentDesignator(
                         d
                        ) [IdentDesignator]
                      ) [DesignatorEmptyFactor]
                    ) [SingleFactorTerm]
                  ) [MultiTermExpr]
                ) [SingleReturnExprStatement]
              ) [StatementSingle]
            ) [StatementListMultiple]
          ) [MethodDeclaration]
        ) [MethodDeclListMultiple]
        MethodDeclaration(
          MethodSignatureParams(
            MethodTypeType(
              Type(
               int
              ) [Type]
            ) [MethodTypeType]
            MethodName(
             inkrement
            ) [MethodName]
            FormParsMultiple(
              FormParsSingle(
                FormParSingle(
                  Type(
                   int
                  ) [Type]
                 a
                  NoArray(
                  ) [NoArray]
                ) [FormParSingle]
              ) [FormParsSingle]
              FormParSingle(
                Type(
                 int
                ) [Type]
               inc
                NoArray(
                ) [NoArray]
              ) [FormParSingle]
            ) [FormParsMultiple]
            FormParsEnd(
            ) [FormParsEnd]
          ) [MethodSignatureParams]
          VarDeclOptionTrue(
            NoVarDeclOption(
            ) [NoVarDeclOption]
            VarDeclarationExpr(
              Type(
               int
              ) [Type]
              VarDeclListSingle(
                VarDeclSingle(
                 pom
                  NoArray(
                  ) [NoArray]
                ) [VarDeclSingle]
              ) [VarDeclListSingle]
            ) [VarDeclarationExpr]
          ) [VarDeclOptionTrue]
          StatementListMultiple(
            StatementListMultiple(
              StatementListNo(
              ) [StatementListNo]
              StatementSingle(
                IfElseStatement(
                  IfConditionSingleTerm(
                    CondSingleFactTerm(
                      CondMultiExprFact(
                        CondSingleExprFact(
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              DesignatorEmptyFactor(
                                IdentDesignator(
                                 inc
                                ) [IdentDesignator]
                              ) [DesignatorEmptyFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [CondSingleExprFact]
                        RelopEQUAL(
                        ) [RelopEQUAL]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            DesignatorEmptyFactor(
                              IdentDesignator(
                               jedan
                              ) [IdentDesignator]
                            ) [DesignatorEmptyFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [CondMultiExprFact]
                    ) [CondSingleFactTerm]
                  ) [IfConditionSingleTerm]
                  StatementSingle(
                    SingleDesignatorStatement(
                      DesignatorStmtAssign(
                        DesignatorStmtAssignCorrect(
                          IdentDesignator(
                           pom
                          ) [IdentDesignator]
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              NumConstFactor(
                               1
                              ) [NumConstFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [DesignatorStmtAssignCorrect]
                      ) [DesignatorStmtAssign]
                    ) [SingleDesignatorStatement]
                  ) [StatementSingle]
                  StatementSingle(
                    IfStatement(
                      IfConditionSingleTerm(
                        CondSingleFactTerm(
                          CondMultiExprFact(
                            CondSingleExprFact(
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentDesignator(
                                     inc
                                    ) [IdentDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [CondSingleExprFact]
                            RelopEQUAL(
                            ) [RelopEQUAL]
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                NumConstFactor(
                                 2
                                ) [NumConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [CondMultiExprFact]
                        ) [CondSingleFactTerm]
                      ) [IfConditionSingleTerm]
                      StatementSingle(
                        SingleDesignatorStatement(
                          DesignatorStmtAssign(
                            DesignatorStmtAssignCorrect(
                              IdentDesignator(
                               pom
                              ) [IdentDesignator]
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentDesignator(
                                     a
                                    ) [IdentDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [DesignatorStmtAssignCorrect]
                          ) [DesignatorStmtAssign]
                        ) [SingleDesignatorStatement]
                      ) [StatementSingle]
                    ) [IfStatement]
                  ) [StatementSingle]
                ) [IfElseStatement]
              ) [StatementSingle]
            ) [StatementListMultiple]
            StatementSingle(
              SingleReturnExprStatement(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    MethodCallFactor(
                      MethodCall(
                        IdentDesignator(
                         sum
                        ) [IdentDesignator]
                        ActParsLeftParen(
                        ) [ActParsLeftParen]
                        ActParsYes(
                          ActParsMultiExpr(
                            ActParsSingleExpr(
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentDesignator(
                                     a
                                    ) [IdentDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [ActParsSingleExpr]
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                DesignatorEmptyFactor(
                                  IdentDesignator(
                                   pom
                                  ) [IdentDesignator]
                                ) [DesignatorEmptyFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [ActParsMultiExpr]
                        ) [ActParsYes]
                        ActParsRightParen(
                        ) [ActParsRightParen]
                      ) [MethodCall]
                    ) [MethodCallFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
              ) [SingleReturnExprStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
        ) [MethodDeclaration]
      ) [MethodDeclListMultiple]
      MethodDeclaration(
        MethodSignaturePlain(
          MethodTypeType(
            Type(
             bool
            ) [Type]
          ) [MethodTypeType]
          MethodName(
           verify
          ) [MethodName]
        ) [MethodSignaturePlain]
        NoVarDeclOption(
        ) [NoVarDeclOption]
        StatementListMultiple(
          StatementListMultiple(
            StatementListNo(
            ) [StatementListNo]
            StatementSingle(
              SinglePrintStatement(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    CharConstFactor(
                     v
                    ) [CharConstFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
                NumConstNo(
                ) [NumConstNo]
              ) [SinglePrintStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
          StatementSingle(
            SingleReturnExprStatement(
              SingleTermExprPositive(
                SingleFactorTerm(
                  BoolConstFactor(
                   false
                  ) [BoolConstFactor]
                ) [SingleFactorTerm]
              ) [SingleTermExprPositive]
            ) [SingleReturnExprStatement]
          ) [StatementSingle]
        ) [StatementListMultiple]
      ) [MethodDeclaration]
    ) [MethodDeclListMultiple]
    MethodDeclaration(
      MethodSignaturePlain(
        MethodTypeVoid(
        ) [MethodTypeVoid]
        MethodName(
         main
        ) [MethodName]
      ) [MethodSignaturePlain]
      NoVarDeclOption(
      ) [NoVarDeclOption]
      StatementListMultiple(
        StatementListMultiple(
          StatementListMultiple(
            StatementListMultiple(
              StatementListMultiple(
                StatementListMultiple(
                  StatementListMultiple(
                    StatementListMultiple(
                      StatementListMultiple(
                        StatementListMultiple(
                          StatementListMultiple(
                            StatementListMultiple(
                              StatementListMultiple(
                                StatementListMultiple(
                                  StatementListMultiple(
                                    StatementListMultiple(
                                      StatementListMultiple(
                                        StatementListMultiple(
                                          StatementListMultiple(
                                            StatementListMultiple(
                                              StatementListMultiple(
                                                StatementListMultiple(
                                                  StatementListMultiple(
                                                    StatementListMultiple(
                                                      StatementListMultiple(
                                                        StatementListMultiple(
                                                          StatementListMultiple(
                                                            StatementListMultiple(
                                                              StatementListMultiple(
                                                                StatementListMultiple(
                                                                  StatementListMultiple(
                                                                    StatementListMultiple(
                                                                      StatementListMultiple(
                                                                        StatementListMultiple(
                                                                          StatementListNo(
                                                                          ) [StatementListNo]
                                                                          StatementSingle(
                                                                            IfElseStatement(
                                                                              IfConditionSingleTerm(
                                                                                CondSingleFactTerm(
                                                                                  CondMultiExprFact(
                                                                                    CondSingleExprFact(
                                                                                      SingleTermExprPositive(
                                                                                        SingleFactorTerm(
                                                                                          NumConstFactor(
                                                                                           1
                                                                                          ) [NumConstFactor]
                                                                                        ) [SingleFactorTerm]
                                                                                      ) [SingleTermExprPositive]
                                                                                    ) [CondSingleExprFact]
                                                                                    RelopNOTEQUAL(
                                                                                    ) [RelopNOTEQUAL]
                                                                                    SingleTermExprPositive(
                                                                                      SingleFactorTerm(
                                                                                        NumConstFactor(
                                                                                         1
                                                                                        ) [NumConstFactor]
                                                                                      ) [SingleFactorTerm]
                                                                                    ) [SingleTermExprPositive]
                                                                                  ) [CondMultiExprFact]
                                                                                ) [CondSingleFactTerm]
                                                                              ) [IfConditionSingleTerm]
                                                                              StatementSingle(
                                                                                SinglePrintStatement(
                                                                                  SingleTermExprNegative(
                                                                                    SingleFactorTerm(
                                                                                      NumConstFactor(
                                                                                       6
                                                                                      ) [NumConstFactor]
                                                                                    ) [SingleFactorTerm]
                                                                                  ) [SingleTermExprNegative]
                                                                                  NumConstNo(
                                                                                  ) [NumConstNo]
                                                                                ) [SinglePrintStatement]
                                                                              ) [StatementSingle]
                                                                              StatementSingle(
                                                                                SinglePrintStatement(
                                                                                  SingleTermExprPositive(
                                                                                    SingleFactorTerm(
                                                                                      NumConstFactor(
                                                                                       0
                                                                                      ) [NumConstFactor]
                                                                                    ) [SingleFactorTerm]
                                                                                  ) [SingleTermExprPositive]
                                                                                  NumConstNo(
                                                                                  ) [NumConstNo]
                                                                                ) [SinglePrintStatement]
                                                                              ) [StatementSingle]
                                                                            ) [IfElseStatement]
                                                                          ) [StatementSingle]
                                                                        ) [StatementListMultiple]
                                                                        StatementSingle(
                                                                          SingleDesignatorStatement(
                                                                            DesignatorStmtAssign(
                                                                              DesignatorStmtAssignCorrect(
                                                                                IdentDesignator(
                                                                                 ibool
                                                                                ) [IdentDesignator]
                                                                                SingleTermExprPositive(
                                                                                  SingleFactorTerm(
                                                                                    BoolConstFactor(
                                                                                     false
                                                                                    ) [BoolConstFactor]
                                                                                  ) [SingleFactorTerm]
                                                                                ) [SingleTermExprPositive]
                                                                              ) [DesignatorStmtAssignCorrect]
                                                                            ) [DesignatorStmtAssign]
                                                                          ) [SingleDesignatorStatement]
                                                                        ) [StatementSingle]
                                                                      ) [StatementListMultiple]
                                                                      StatementSingle(
                                                                        SingleDesignatorStatement(
                                                                          DesignatorStmtAssign(
                                                                            DesignatorStmtAssignCorrect(
                                                                              IdentDesignator(
                                                                               i
                                                                              ) [IdentDesignator]
                                                                              SingleTermExprPositive(
                                                                                SingleFactorTerm(
                                                                                  NumConstFactor(
                                                                                   0
                                                                                  ) [NumConstFactor]
                                                                                ) [SingleFactorTerm]
                                                                              ) [SingleTermExprPositive]
                                                                            ) [DesignatorStmtAssignCorrect]
                                                                          ) [DesignatorStmtAssign]
                                                                        ) [SingleDesignatorStatement]
                                                                      ) [StatementSingle]
                                                                    ) [StatementListMultiple]
                                                                    StatementSingle(
                                                                      DoWhileStatement(
                                                                        DoEnter(
                                                                        ) [DoEnter]
                                                                        StatementListMultiple(
                                                                          StatementListNo(
                                                                          ) [StatementListNo]
                                                                          StatementMultiple(
                                                                            StatementsInBraces(
                                                                              StatementListMultiple(
                                                                                StatementListMultiple(
                                                                                  StatementListNo(
                                                                                  ) [StatementListNo]
                                                                                  StatementSingle(
                                                                                    IfStatement(
                                                                                      IfConditionSingleTerm(
                                                                                        CondSingleFactTerm(
                                                                                          CondMultiExprFact(
                                                                                            CondSingleExprFact(
                                                                                              SingleTermExprPositive(
                                                                                                SingleFactorTerm(
                                                                                                  DesignatorEmptyFactor(
                                                                                                    IdentDesignator(
                                                                                                     i
                                                                                                    ) [IdentDesignator]
                                                                                                  ) [DesignatorEmptyFactor]
                                                                                                ) [SingleFactorTerm]
                                                                                              ) [SingleTermExprPositive]
                                                                                            ) [CondSingleExprFact]
                                                                                            RelopEQUAL(
                                                                                            ) [RelopEQUAL]
                                                                                            SingleTermExprPositive(
                                                                                              SingleFactorTerm(
                                                                                                NumConstFactor(
                                                                                                 2
                                                                                                ) [NumConstFactor]
                                                                                              ) [SingleFactorTerm]
                                                                                            ) [SingleTermExprPositive]
                                                                                          ) [CondMultiExprFact]
                                                                                        ) [CondSingleFactTerm]
                                                                                      ) [IfConditionSingleTerm]
                                                                                      StatementSingle(
                                                                                        SingleDesignatorStatement(
                                                                                          DesignatorStmtAssign(
                                                                                            DesignatorStmtAssignCorrect(
                                                                                              IdentDesignator(
                                                                                               ibool
                                                                                              ) [IdentDesignator]
                                                                                              SingleTermExprPositive(
                                                                                                SingleFactorTerm(
                                                                                                  BoolConstFactor(
                                                                                                   true
                                                                                                  ) [BoolConstFactor]
                                                                                                ) [SingleFactorTerm]
                                                                                              ) [SingleTermExprPositive]
                                                                                            ) [DesignatorStmtAssignCorrect]
                                                                                          ) [DesignatorStmtAssign]
                                                                                        ) [SingleDesignatorStatement]
                                                                                      ) [StatementSingle]
                                                                                    ) [IfStatement]
                                                                                  ) [StatementSingle]
                                                                                ) [StatementListMultiple]
                                                                                StatementSingle(
                                                                                  SingleDesignatorStatement(
                                                                                    DesignatorStmtPlusPlus(
                                                                                      IdentDesignator(
                                                                                       i
                                                                                      ) [IdentDesignator]
                                                                                    ) [DesignatorStmtPlusPlus]
                                                                                  ) [SingleDesignatorStatement]
                                                                                ) [StatementSingle]
                                                                              ) [StatementListMultiple]
                                                                            ) [StatementsInBraces]
                                                                          ) [StatementMultiple]
                                                                        ) [StatementListMultiple]
                                                                        ConditionSingleTerm(
                                                                          CondSingleFactTerm(
                                                                            CondMultiExprFact(
                                                                              CondSingleExprFact(
                                                                                SingleTermExprPositive(
                                                                                  SingleFactorTerm(
                                                                                    DesignatorEmptyFactor(
                                                                                      IdentDesignator(
                                                                                       i
                                                                                      ) [IdentDesignator]
                                                                                    ) [DesignatorEmptyFactor]
                                                                                  ) [SingleFactorTerm]
                                                                                ) [SingleTermExprPositive]
                                                                              ) [CondSingleExprFact]
                                                                              RelopLS(
                                                                              ) [RelopLS]
                                                                              SingleTermExprPositive(
                                                                                SingleFactorTerm(
                                                                                  NumConstFactor(
                                                                                   5
                                                                                  ) [NumConstFactor]
                                                                                ) [SingleFactorTerm]
                                                                              ) [SingleTermExprPositive]
                                                                            ) [CondMultiExprFact]
                                                                          ) [CondSingleFactTerm]
                                                                        ) [ConditionSingleTerm]
                                                                      ) [DoWhileStatement]
                                                                    ) [StatementSingle]
                                                                  ) [StatementListMultiple]
                                                                  StatementSingle(
                                                                    IfStatement(
                                                                      IfConditionSingleTerm(
                                                                        CondSingleFactTerm(
                                                                          CondSingleExprFact(
                                                                            SingleTermExprPositive(
                                                                              SingleFactorTerm(
                                                                                DesignatorEmptyFactor(
                                                                                  IdentDesignator(
                                                                                   ibool
                                                                                  ) [IdentDesignator]
                                                                                ) [DesignatorEmptyFactor]
                                                                              ) [SingleFactorTerm]
                                                                            ) [SingleTermExprPositive]
                                                                          ) [CondSingleExprFact]
                                                                        ) [CondSingleFactTerm]
                                                                      ) [IfConditionSingleTerm]
                                                                      StatementSingle(
                                                                        IfElseStatement(
                                                                          IfConditionSingleTerm(
                                                                            CondSingleFactTerm(
                                                                              CondMultiExprFact(
                                                                                CondSingleExprFact(
                                                                                  SingleTermExprPositive(
                                                                                    SingleFactorTerm(
                                                                                      DesignatorEmptyFactor(
                                                                                        IdentDesignator(
                                                                                         i
                                                                                        ) [IdentDesignator]
                                                                                      ) [DesignatorEmptyFactor]
                                                                                    ) [SingleFactorTerm]
                                                                                  ) [SingleTermExprPositive]
                                                                                ) [CondSingleExprFact]
                                                                                RelopEQUAL(
                                                                                ) [RelopEQUAL]
                                                                                SingleTermExprPositive(
                                                                                  SingleFactorTerm(
                                                                                    NumConstFactor(
                                                                                     5
                                                                                    ) [NumConstFactor]
                                                                                  ) [SingleFactorTerm]
                                                                                ) [SingleTermExprPositive]
                                                                              ) [CondMultiExprFact]
                                                                            ) [CondSingleFactTerm]
                                                                          ) [IfConditionSingleTerm]
                                                                          StatementSingle(
                                                                            SinglePrintStatement(
                                                                              SingleTermExprPositive(
                                                                                SingleFactorTerm(
                                                                                  NumConstFactor(
                                                                                   1
                                                                                  ) [NumConstFactor]
                                                                                ) [SingleFactorTerm]
                                                                              ) [SingleTermExprPositive]
                                                                              NumConstNo(
                                                                              ) [NumConstNo]
                                                                            ) [SinglePrintStatement]
                                                                          ) [StatementSingle]
                                                                          StatementSingle(
                                                                            SinglePrintStatement(
                                                                              SingleTermExprNegative(
                                                                                SingleFactorTerm(
                                                                                  NumConstFactor(
                                                                                   1
                                                                                  ) [NumConstFactor]
                                                                                ) [SingleFactorTerm]
                                                                              ) [SingleTermExprNegative]
                                                                              NumConstNo(
                                                                              ) [NumConstNo]
                                                                            ) [SinglePrintStatement]
                                                                          ) [StatementSingle]
                                                                        ) [IfElseStatement]
                                                                      ) [StatementSingle]
                                                                    ) [IfStatement]
                                                                  ) [StatementSingle]
                                                                ) [StatementListMultiple]
                                                                StatementSingle(
                                                                  SingleDesignatorStatement(
                                                                    DesignatorStmtAssign(
                                                                      DesignatorStmtAssignCorrect(
                                                                        IdentDesignator(
                                                                         a
                                                                        ) [IdentDesignator]
                                                                        SingleTermExprPositive(
                                                                          SingleFactorTerm(
                                                                            NumConstFactor(
                                                                             2
                                                                            ) [NumConstFactor]
                                                                          ) [SingleFactorTerm]
                                                                        ) [SingleTermExprPositive]
                                                                      ) [DesignatorStmtAssignCorrect]
                                                                    ) [DesignatorStmtAssign]
                                                                  ) [SingleDesignatorStatement]
                                                                ) [StatementSingle]
                                                              ) [StatementListMultiple]
                                                              StatementSingle(
                                                                SingleDesignatorStatement(
                                                                  DesignatorStmtAssign(
                                                                    DesignatorStmtAssignCorrect(
                                                                      IdentDesignator(
                                                                       niz
                                                                      ) [IdentDesignator]
                                                                      SingleTermExprPositive(
                                                                        SingleFactorTerm(
                                                                          NewTypeArrayFactor(
                                                                            Type(
                                                                             int
                                                                            ) [Type]
                                                                            SingleTermExprPositive(
                                                                              SingleFactorTerm(
                                                                                NumConstFactor(
                                                                                 3
                                                                                ) [NumConstFactor]
                                                                              ) [SingleFactorTerm]
                                                                            ) [SingleTermExprPositive]
                                                                          ) [NewTypeArrayFactor]
                                                                        ) [SingleFactorTerm]
                                                                      ) [SingleTermExprPositive]
                                                                    ) [DesignatorStmtAssignCorrect]
                                                                  ) [DesignatorStmtAssign]
                                                                ) [SingleDesignatorStatement]
                                                              ) [StatementSingle]
                                                            ) [StatementListMultiple]
                                                            StatementSingle(
                                                              SingleDesignatorStatement(
                                                                DesignatorStmtAssign(
                                                                  DesignatorStmtAssignCorrect(
                                                                    IdentArrayDesignator(
                                                                     niz
                                                                      SingleTermExprPositive(
                                                                        SingleFactorTerm(
                                                                          NumConstFactor(
                                                                           0
                                                                          ) [NumConstFactor]
                                                                        ) [SingleFactorTerm]
                                                                      ) [SingleTermExprPositive]
                                                                    ) [IdentArrayDesignator]
                                                                    SingleTermExprPositive(
                                                                      MultiFactorTerm(
                                                                        SingleFactorTerm(
                                                                          NumConstFactor(
                                                                           1
                                                                          ) [NumConstFactor]
                                                                        ) [SingleFactorTerm]
                                                                        MulopMul(
                                                                        ) [MulopMul]
                                                                        DesignatorEmptyFactor(
                                                                          IdentDesignator(
                                                                           a
                                                                          ) [IdentDesignator]
                                                                        ) [DesignatorEmptyFactor]
                                                                      ) [MultiFactorTerm]
                                                                    ) [SingleTermExprPositive]
                                                                  ) [DesignatorStmtAssignCorrect]
                                                                ) [DesignatorStmtAssign]
                                                              ) [SingleDesignatorStatement]
                                                            ) [StatementSingle]
                                                          ) [StatementListMultiple]
                                                          StatementSingle(
                                                            SingleDesignatorStatement(
                                                              DesignatorStmtAssign(
                                                                DesignatorStmtAssignCorrect(
                                                                  IdentArrayDesignator(
                                                                   niz
                                                                    SingleTermExprPositive(
                                                                      SingleFactorTerm(
                                                                        NumConstFactor(
                                                                         1
                                                                        ) [NumConstFactor]
                                                                      ) [SingleFactorTerm]
                                                                    ) [SingleTermExprPositive]
                                                                  ) [IdentArrayDesignator]
                                                                  SingleTermExprPositive(
                                                                    MultiFactorTerm(
                                                                      SingleFactorTerm(
                                                                        NumConstFactor(
                                                                         2
                                                                        ) [NumConstFactor]
                                                                      ) [SingleFactorTerm]
                                                                      MulopMul(
                                                                      ) [MulopMul]
                                                                      DesignatorEmptyFactor(
                                                                        IdentDesignator(
                                                                         a
                                                                        ) [IdentDesignator]
                                                                      ) [DesignatorEmptyFactor]
                                                                    ) [MultiFactorTerm]
                                                                  ) [SingleTermExprPositive]
                                                                ) [DesignatorStmtAssignCorrect]
                                                              ) [DesignatorStmtAssign]
                                                            ) [SingleDesignatorStatement]
                                                          ) [StatementSingle]
                                                        ) [StatementListMultiple]
                                                        StatementSingle(
                                                          SingleDesignatorStatement(
                                                            DesignatorStmtAssign(
                                                              DesignatorStmtAssignCorrect(
                                                                IdentArrayDesignator(
                                                                 niz
                                                                  SingleTermExprPositive(
                                                                    SingleFactorTerm(
                                                                      NumConstFactor(
                                                                       2
                                                                      ) [NumConstFactor]
                                                                    ) [SingleFactorTerm]
                                                                  ) [SingleTermExprPositive]
                                                                ) [IdentArrayDesignator]
                                                                MultiTermExpr(
                                                                  SingleTermExprPositive(
                                                                    MultiFactorTerm(
                                                                      SingleFactorTerm(
                                                                        MethodCallFactor(
                                                                          MethodCall(
                                                                            IdentDesignator(
                                                                             sum
                                                                            ) [IdentDesignator]
                                                                            ActParsLeftParen(
                                                                            ) [ActParsLeftParen]
                                                                            ActParsYes(
                                                                              ActParsMultiExpr(
                                                                                ActParsSingleExpr(
                                                                                  SingleTermExprPositive(
                                                                                    SingleFactorTerm(
                                                                                      DesignatorEmptyFactor(
                                                                                        IdentArrayDesignator(
                                                                                         niz
                                                                                          SingleTermExprPositive(
                                                                                            SingleFactorTerm(
                                                                                              NumConstFactor(
                                                                                               1
                                                                                              ) [NumConstFactor]
                                                                                            ) [SingleFactorTerm]
                                                                                          ) [SingleTermExprPositive]
                                                                                        ) [IdentArrayDesignator]
                                                                                      ) [DesignatorEmptyFactor]
                                                                                    ) [SingleFactorTerm]
                                                                                  ) [SingleTermExprPositive]
                                                                                ) [ActParsSingleExpr]
                                                                                SingleTermExprPositive(
                                                                                  SingleFactorTerm(
                                                                                    DesignatorEmptyFactor(
                                                                                      IdentArrayDesignator(
                                                                                       niz
                                                                                        SingleTermExprPositive(
                                                                                          SingleFactorTerm(
                                                                                            NumConstFactor(
                                                                                             0
                                                                                            ) [NumConstFactor]
                                                                                          ) [SingleFactorTerm]
                                                                                        ) [SingleTermExprPositive]
                                                                                      ) [IdentArrayDesignator]
                                                                                    ) [DesignatorEmptyFactor]
                                                                                  ) [SingleFactorTerm]
                                                                                ) [SingleTermExprPositive]
                                                                              ) [ActParsMultiExpr]
                                                                            ) [ActParsYes]
                                                                            ActParsRightParen(
                                                                            ) [ActParsRightParen]
                                                                          ) [MethodCall]
                                                                        ) [MethodCallFactor]
                                                                      ) [SingleFactorTerm]
                                                                      MulopMul(
                                                                      ) [MulopMul]
                                                                      DesignatorEmptyFactor(
                                                                        IdentDesignator(
                                                                         a
                                                                        ) [IdentDesignator]
                                                                      ) [DesignatorEmptyFactor]
                                                                    ) [MultiFactorTerm]
                                                                  ) [SingleTermExprPositive]
                                                                  AddopPlus(
                                                                  ) [AddopPlus]
                                                                  SingleFactorTerm(
                                                                    NumConstFactor(
                                                                     1
                                                                    ) [NumConstFactor]
                                                                  ) [SingleFactorTerm]
                                                                ) [MultiTermExpr]
                                                              ) [DesignatorStmtAssignCorrect]
                                                            ) [DesignatorStmtAssign]
                                                          ) [SingleDesignatorStatement]
                                                        ) [StatementSingle]
                                                      ) [StatementListMultiple]
                                                      StatementSingle(
                                                        IfElseStatement(
                                                          IfConditionMultiTerm(
                                                            ConditionSingleTerm(
                                                              CondSingleFactTerm(
                                                                CondSingleExprFact(
                                                                  SingleTermExprPositive(
                                                                    SingleFactorTerm(
                                                                      MethodCallFactor(
                                                                        MethodCall(
                                                                          IdentDesignator(
                                                                           verify
                                                                          ) [IdentDesignator]
                                                                          ActParsLeftParen(
                                                                          ) [ActParsLeftParen]
                                                                          ActParsNo(
                                                                          ) [ActParsNo]
                                                                          ActParsRightParen(
                                                                          ) [ActParsRightParen]
                                                                        ) [MethodCall]
                                                                      ) [MethodCallFactor]
                                                                    ) [SingleFactorTerm]
                                                                  ) [SingleTermExprPositive]
                                                                ) [CondSingleExprFact]
                                                              ) [CondSingleFactTerm]
                                                            ) [ConditionSingleTerm]
                                                            CondSingleFactTerm(
                                                              CondMultiExprFact(
                                                                CondSingleExprFact(
                                                                  SingleTermExprPositive(
                                                                    SingleFactorTerm(
                                                                      DesignatorEmptyFactor(
                                                                        IdentArrayDesignator(
                                                                         niz
                                                                          SingleTermExprPositive(
                                                                            SingleFactorTerm(
                                                                              NumConstFactor(
                                                                               2
                                                                              ) [NumConstFactor]
                                                                            ) [SingleFactorTerm]
                                                                          ) [SingleTermExprPositive]
                                                                        ) [IdentArrayDesignator]
                                                                      ) [DesignatorEmptyFactor]
                                                                    ) [SingleFactorTerm]
                                                                  ) [SingleTermExprPositive]
                                                                ) [CondSingleExprFact]
                                                                RelopEQUAL(
                                                                ) [RelopEQUAL]
                                                                SingleTermExprPositive(
                                                                  SingleFactorTerm(
                                                                    NumConstFactor(
                                                                     4
                                                                    ) [NumConstFactor]
                                                                  ) [SingleFactorTerm]
                                                                ) [SingleTermExprPositive]
                                                              ) [CondMultiExprFact]
                                                            ) [CondSingleFactTerm]
                                                          ) [IfConditionMultiTerm]
                                                          StatementSingle(
                                                            SinglePrintStatement(
                                                              SingleTermExprPositive(
                                                                SingleFactorTerm(
                                                                  MethodCallFactor(
                                                                    MethodCall(
                                                                      IdentDesignator(
                                                                       ord
                                                                      ) [IdentDesignator]
                                                                      ActParsLeftParen(
                                                                      ) [ActParsLeftParen]
                                                                      ActParsYes(
                                                                        ActParsSingleExpr(
                                                                          SingleTermExprPositive(
                                                                            SingleFactorTerm(
                                                                              CharConstFactor(
                                                                               A
                                                                              ) [CharConstFactor]
                                                                            ) [SingleFactorTerm]
                                                                          ) [SingleTermExprPositive]
                                                                        ) [ActParsSingleExpr]
                                                                      ) [ActParsYes]
                                                                      ActParsRightParen(
                                                                      ) [ActParsRightParen]
                                                                    ) [MethodCall]
                                                                  ) [MethodCallFactor]
                                                                ) [SingleFactorTerm]
                                                              ) [SingleTermExprPositive]
                                                              NumConstNo(
                                                              ) [NumConstNo]
                                                            ) [SinglePrintStatement]
                                                          ) [StatementSingle]
                                                          StatementSingle(
                                                            SinglePrintStatement(
                                                              SingleTermExprPositive(
                                                                SingleFactorTerm(
                                                                  MethodCallFactor(
                                                                    MethodCall(
                                                                      IdentDesignator(
                                                                       ord
                                                                      ) [IdentDesignator]
                                                                      ActParsLeftParen(
                                                                      ) [ActParsLeftParen]
                                                                      ActParsYes(
                                                                        ActParsSingleExpr(
                                                                          SingleTermExprPositive(
                                                                            SingleFactorTerm(
                                                                              CharConstFactor(
                                                                               a
                                                                              ) [CharConstFactor]
                                                                            ) [SingleFactorTerm]
                                                                          ) [SingleTermExprPositive]
                                                                        ) [ActParsSingleExpr]
                                                                      ) [ActParsYes]
                                                                      ActParsRightParen(
                                                                      ) [ActParsRightParen]
                                                                    ) [MethodCall]
                                                                  ) [MethodCallFactor]
                                                                ) [SingleFactorTerm]
                                                              ) [SingleTermExprPositive]
                                                              NumConstNo(
                                                              ) [NumConstNo]
                                                            ) [SinglePrintStatement]
                                                          ) [StatementSingle]
                                                        ) [IfElseStatement]
                                                      ) [StatementSingle]
                                                    ) [StatementListMultiple]
                                                    StatementSingle(
                                                      SinglePrintStatement(
                                                        SingleTermExprPositive(
                                                          SingleFactorTerm(
                                                            DesignatorEmptyFactor(
                                                              IdentDesignator(
                                                               eol
                                                              ) [IdentDesignator]
                                                            ) [DesignatorEmptyFactor]
                                                          ) [SingleFactorTerm]
                                                        ) [SingleTermExprPositive]
                                                        NumConstNo(
                                                        ) [NumConstNo]
                                                      ) [SinglePrintStatement]
                                                    ) [StatementSingle]
                                                  ) [StatementListMultiple]
                                                  StatementSingle(
                                                    SingleDesignatorStatement(
                                                      DesignatorStmtAssign(
                                                        DesignatorStmtAssignCorrect(
                                                          IdentDesignator(
                                                           i
                                                          ) [IdentDesignator]
                                                          SingleTermExprPositive(
                                                            SingleFactorTerm(
                                                              NumConstFactor(
                                                               0
                                                              ) [NumConstFactor]
                                                            ) [SingleFactorTerm]
                                                          ) [SingleTermExprPositive]
                                                        ) [DesignatorStmtAssignCorrect]
                                                      ) [DesignatorStmtAssign]
                                                    ) [SingleDesignatorStatement]
                                                  ) [StatementSingle]
                                                ) [StatementListMultiple]
                                                StatementSingle(
                                                  DoWhileStatement(
                                                    DoEnter(
                                                    ) [DoEnter]
                                                    StatementListMultiple(
                                                      StatementListNo(
                                                      ) [StatementListNo]
                                                      StatementMultiple(
                                                        StatementsInBraces(
                                                          StatementListMultiple(
                                                            StatementListMultiple(
                                                              StatementListMultiple(
                                                                StatementListNo(
                                                                ) [StatementListNo]
                                                                StatementSingle(
                                                                  IfStatement(
                                                                    IfConditionSingleTerm(
                                                                      CondSingleFactTerm(
                                                                        CondMultiExprFact(
                                                                          CondSingleExprFact(
                                                                            SingleTermExprPositive(
                                                                              SingleFactorTerm(
                                                                                DesignatorEmptyFactor(
                                                                                  IdentDesignator(
                                                                                   i
                                                                                  ) [IdentDesignator]
                                                                                ) [DesignatorEmptyFactor]
                                                                              ) [SingleFactorTerm]
                                                                            ) [SingleTermExprPositive]
                                                                          ) [CondSingleExprFact]
                                                                          RelopEQUAL(
                                                                          ) [RelopEQUAL]
                                                                          SingleTermExprPositive(
                                                                            SingleFactorTerm(
                                                                              NumConstFactor(
                                                                               3
                                                                              ) [NumConstFactor]
                                                                            ) [SingleFactorTerm]
                                                                          ) [SingleTermExprPositive]
                                                                        ) [CondMultiExprFact]
                                                                      ) [CondSingleFactTerm]
                                                                    ) [IfConditionSingleTerm]
                                                                    StatementMultiple(
                                                                      StatementsInBraces(
                                                                        StatementListMultiple(
                                                                          StatementListMultiple(
                                                                            StatementListNo(
                                                                            ) [StatementListNo]
                                                                            StatementSingle(
                                                                              SingleDesignatorStatement(
                                                                                DesignatorStmtPlusPlus(
                                                                                  IdentDesignator(
                                                                                   i
                                                                                  ) [IdentDesignator]
                                                                                ) [DesignatorStmtPlusPlus]
                                                                              ) [SingleDesignatorStatement]
                                                                            ) [StatementSingle]
                                                                          ) [StatementListMultiple]
                                                                          StatementSingle(
                                                                            SingleContinueStatement(
                                                                            ) [SingleContinueStatement]
                                                                          ) [StatementSingle]
                                                                        ) [StatementListMultiple]
                                                                      ) [StatementsInBraces]
                                                                    ) [StatementMultiple]
                                                                  ) [IfStatement]
                                                                ) [StatementSingle]
                                                              ) [StatementListMultiple]
                                                              StatementSingle(
                                                                IfStatement(
                                                                  IfConditionSingleTerm(
                                                                    CondSingleFactTerm(
                                                                      CondMultiExprFact(
                                                                        CondSingleExprFact(
                                                                          SingleTermExprPositive(
                                                                            SingleFactorTerm(
                                                                              DesignatorEmptyFactor(
                                                                                IdentDesignator(
                                                                                 i
                                                                                ) [IdentDesignator]
                                                                              ) [DesignatorEmptyFactor]
                                                                            ) [SingleFactorTerm]
                                                                          ) [SingleTermExprPositive]
                                                                        ) [CondSingleExprFact]
                                                                        RelopEQUAL(
                                                                        ) [RelopEQUAL]
                                                                        SingleTermExprPositive(
                                                                          SingleFactorTerm(
                                                                            NumConstFactor(
                                                                             4
                                                                            ) [NumConstFactor]
                                                                          ) [SingleFactorTerm]
                                                                        ) [SingleTermExprPositive]
                                                                      ) [CondMultiExprFact]
                                                                    ) [CondSingleFactTerm]
                                                                  ) [IfConditionSingleTerm]
                                                                  StatementSingle(
                                                                    SingleBreakStatement(
                                                                    ) [SingleBreakStatement]
                                                                  ) [StatementSingle]
                                                                ) [IfStatement]
                                                              ) [StatementSingle]
                                                            ) [StatementListMultiple]
                                                            StatementSingle(
                                                              SingleDesignatorStatement(
                                                                DesignatorStmtAssign(
                                                                  DesignatorStmtAssignCorrect(
                                                                    IdentDesignator(
                                                                     i
                                                                    ) [IdentDesignator]
                                                                    SingleTermExprPositive(
                                                                      SingleFactorTerm(
                                                                        MethodCallFactor(
                                                                          MethodCall(
                                                                            IdentDesignator(
                                                                             inkrement
                                                                            ) [IdentDesignator]
                                                                            ActParsLeftParen(
                                                                            ) [ActParsLeftParen]
                                                                            ActParsYes(
                                                                              ActParsMultiExpr(
                                                                                ActParsSingleExpr(
                                                                                  SingleTermExprPositive(
                                                                                    SingleFactorTerm(
                                                                                      DesignatorEmptyFactor(
                                                                                        IdentDesignator(
                                                                                         i
                                                                                        ) [IdentDesignator]
                                                                                      ) [DesignatorEmptyFactor]
                                                                                    ) [SingleFactorTerm]
                                                                                  ) [SingleTermExprPositive]
                                                                                ) [ActParsSingleExpr]
                                                                                SingleTermExprPositive(
                                                                                  SingleFactorTerm(
                                                                                    NumConstFactor(
                                                                                     1
                                                                                    ) [NumConstFactor]
                                                                                  ) [SingleFactorTerm]
                                                                                ) [SingleTermExprPositive]
                                                                              ) [ActParsMultiExpr]
                                                                            ) [ActParsYes]
                                                                            ActParsRightParen(
                                                                            ) [ActParsRightParen]
                                                                          ) [MethodCall]
                                                                        ) [MethodCallFactor]
                                                                      ) [SingleFactorTerm]
                                                                    ) [SingleTermExprPositive]
                                                                  ) [DesignatorStmtAssignCorrect]
                                                                ) [DesignatorStmtAssign]
                                                              ) [SingleDesignatorStatement]
                                                            ) [StatementSingle]
                                                          ) [StatementListMultiple]
                                                        ) [StatementsInBraces]
                                                      ) [StatementMultiple]
                                                    ) [StatementListMultiple]
                                                    ConditionSingleTerm(
                                                      CondSingleFactTerm(
                                                        CondMultiExprFact(
                                                          CondSingleExprFact(
                                                            SingleTermExprPositive(
                                                              SingleFactorTerm(
                                                                DesignatorEmptyFactor(
                                                                  IdentDesignator(
                                                                   i
                                                                  ) [IdentDesignator]
                                                                ) [DesignatorEmptyFactor]
                                                              ) [SingleFactorTerm]
                                                            ) [SingleTermExprPositive]
                                                          ) [CondSingleExprFact]
                                                          RelopLS(
                                                          ) [RelopLS]
                                                          SingleTermExprPositive(
                                                            SingleFactorTerm(
                                                              NumConstFactor(
                                                               10
                                                              ) [NumConstFactor]
                                                            ) [SingleFactorTerm]
                                                          ) [SingleTermExprPositive]
                                                        ) [CondMultiExprFact]
                                                      ) [CondSingleFactTerm]
                                                    ) [ConditionSingleTerm]
                                                  ) [DoWhileStatement]
                                                ) [StatementSingle]
                                              ) [StatementListMultiple]
                                              StatementSingle(
                                                IfElseStatement(
                                                  IfConditionSingleTerm(
                                                    CondMultiFactTerm(
                                                      CondSingleFactTerm(
                                                        CondMultiExprFact(
                                                          CondSingleExprFact(
                                                            SingleTermExprPositive(
                                                              SingleFactorTerm(
                                                                DesignatorEmptyFactor(
                                                                  IdentDesignator(
                                                                   i
                                                                  ) [IdentDesignator]
                                                                ) [DesignatorEmptyFactor]
                                                              ) [SingleFactorTerm]
                                                            ) [SingleTermExprPositive]
                                                          ) [CondSingleExprFact]
                                                          RelopEQUAL(
                                                          ) [RelopEQUAL]
                                                          SingleTermExprPositive(
                                                            SingleFactorTerm(
                                                              NumConstFactor(
                                                               3
                                                              ) [NumConstFactor]
                                                            ) [SingleFactorTerm]
                                                          ) [SingleTermExprPositive]
                                                        ) [CondMultiExprFact]
                                                      ) [CondSingleFactTerm]
                                                      CondSingleExprFact(
                                                        SingleTermExprPositive(
                                                          SingleFactorTerm(
                                                            MethodCallFactor(
                                                              MethodCall(
                                                                IdentDesignator(
                                                                 verify
                                                                ) [IdentDesignator]
                                                                ActParsLeftParen(
                                                                ) [ActParsLeftParen]
                                                                ActParsNo(
                                                                ) [ActParsNo]
                                                                ActParsRightParen(
                                                                ) [ActParsRightParen]
                                                              ) [MethodCall]
                                                            ) [MethodCallFactor]
                                                          ) [SingleFactorTerm]
                                                        ) [SingleTermExprPositive]
                                                      ) [CondSingleExprFact]
                                                    ) [CondMultiFactTerm]
                                                  ) [IfConditionSingleTerm]
                                                  StatementSingle(
                                                    SinglePrintStatement(
                                                      SingleTermExprNegative(
                                                        SingleFactorTerm(
                                                          NumConstFactor(
                                                           4
                                                          ) [NumConstFactor]
                                                        ) [SingleFactorTerm]
                                                      ) [SingleTermExprNegative]
                                                      NumConstNo(
                                                      ) [NumConstNo]
                                                    ) [SinglePrintStatement]
                                                  ) [StatementSingle]
                                                  StatementSingle(
                                                    SinglePrintStatement(
                                                      SingleTermExprPositive(
                                                        SingleFactorTerm(
                                                          NumConstFactor(
                                                           4
                                                          ) [NumConstFactor]
                                                        ) [SingleFactorTerm]
                                                      ) [SingleTermExprPositive]
                                                      NumConstNo(
                                                      ) [NumConstNo]
                                                    ) [SinglePrintStatement]
                                                  ) [StatementSingle]
                                                ) [IfElseStatement]
                                              ) [StatementSingle]
                                            ) [StatementListMultiple]
                                            StatementSingle(
                                              SingleReadStatement(
                                                IdentArrayDesignator(
                                                 niz
                                                  SingleTermExprPositive(
                                                    SingleFactorTerm(
                                                      NumConstFactor(
                                                       0
                                                      ) [NumConstFactor]
                                                    ) [SingleFactorTerm]
                                                  ) [SingleTermExprPositive]
                                                ) [IdentArrayDesignator]
                                              ) [SingleReadStatement]
                                            ) [StatementSingle]
                                          ) [StatementListMultiple]
                                          StatementSingle(
                                            SingleReadStatement(
                                              IdentArrayDesignator(
                                               niz
                                                SingleTermExprPositive(
                                                  SingleFactorTerm(
                                                    NumConstFactor(
                                                     1
                                                    ) [NumConstFactor]
                                                  ) [SingleFactorTerm]
                                                ) [SingleTermExprPositive]
                                              ) [IdentArrayDesignator]
                                            ) [SingleReadStatement]
                                          ) [StatementSingle]
                                        ) [StatementListMultiple]
                                        StatementSingle(
                                          SingleReadStatement(
                                            IdentArrayDesignator(
                                             niz
                                              SingleTermExprPositive(
                                                SingleFactorTerm(
                                                  NumConstFactor(
                                                   2
                                                  ) [NumConstFactor]
                                                ) [SingleFactorTerm]
                                              ) [SingleTermExprPositive]
                                            ) [IdentArrayDesignator]
                                          ) [SingleReadStatement]
                                        ) [StatementSingle]
                                      ) [StatementListMultiple]
                                      StatementSingle(
                                        SinglePrintStatement(
                                          SingleTermExprPositive(
                                            SingleFactorTerm(
                                              DesignatorEmptyFactor(
                                                IdentDesignator(
                                                 eol
                                                ) [IdentDesignator]
                                              ) [DesignatorEmptyFactor]
                                            ) [SingleFactorTerm]
                                          ) [SingleTermExprPositive]
                                          NumConstNo(
                                          ) [NumConstNo]
                                        ) [SinglePrintStatement]
                                      ) [StatementSingle]
                                    ) [StatementListMultiple]
                                    StatementSingle(
                                      SinglePrintStatement(
                                        SingleTermExprPositive(
                                          SingleFactorTerm(
                                            MethodCallFactor(
                                              MethodCall(
                                                IdentDesignator(
                                                 sum
                                                ) [IdentDesignator]
                                                ActParsLeftParen(
                                                ) [ActParsLeftParen]
                                                ActParsYes(
                                                  ActParsMultiExpr(
                                                    ActParsSingleExpr(
                                                      SingleTermExprPositive(
                                                        SingleFactorTerm(
                                                          MethodCallFactor(
                                                            MethodCall(
                                                              IdentDesignator(
                                                               sum
                                                              ) [IdentDesignator]
                                                              ActParsLeftParen(
                                                              ) [ActParsLeftParen]
                                                              ActParsYes(
                                                                ActParsMultiExpr(
                                                                  ActParsSingleExpr(
                                                                    SingleTermExprPositive(
                                                                      SingleFactorTerm(
                                                                        DesignatorEmptyFactor(
                                                                          IdentArrayDesignator(
                                                                           niz
                                                                            SingleTermExprPositive(
                                                                              SingleFactorTerm(
                                                                                NumConstFactor(
                                                                                 0
                                                                                ) [NumConstFactor]
                                                                              ) [SingleFactorTerm]
                                                                            ) [SingleTermExprPositive]
                                                                          ) [IdentArrayDesignator]
                                                                        ) [DesignatorEmptyFactor]
                                                                      ) [SingleFactorTerm]
                                                                    ) [SingleTermExprPositive]
                                                                  ) [ActParsSingleExpr]
                                                                  SingleTermExprPositive(
                                                                    SingleFactorTerm(
                                                                      DesignatorEmptyFactor(
                                                                        IdentArrayDesignator(
                                                                         niz
                                                                          SingleTermExprPositive(
                                                                            SingleFactorTerm(
                                                                              NumConstFactor(
                                                                               1
                                                                              ) [NumConstFactor]
                                                                            ) [SingleFactorTerm]
                                                                          ) [SingleTermExprPositive]
                                                                        ) [IdentArrayDesignator]
                                                                      ) [DesignatorEmptyFactor]
                                                                    ) [SingleFactorTerm]
                                                                  ) [SingleTermExprPositive]
                                                                ) [ActParsMultiExpr]
                                                              ) [ActParsYes]
                                                              ActParsRightParen(
                                                              ) [ActParsRightParen]
                                                            ) [MethodCall]
                                                          ) [MethodCallFactor]
                                                        ) [SingleFactorTerm]
                                                      ) [SingleTermExprPositive]
                                                    ) [ActParsSingleExpr]
                                                    SingleTermExprPositive(
                                                      SingleFactorTerm(
                                                        DesignatorEmptyFactor(
                                                          IdentArrayDesignator(
                                                           niz
                                                            SingleTermExprPositive(
                                                              SingleFactorTerm(
                                                                NumConstFactor(
                                                                 2
                                                                ) [NumConstFactor]
                                                              ) [SingleFactorTerm]
                                                            ) [SingleTermExprPositive]
                                                          ) [IdentArrayDesignator]
                                                        ) [DesignatorEmptyFactor]
                                                      ) [SingleFactorTerm]
                                                    ) [SingleTermExprPositive]
                                                  ) [ActParsMultiExpr]
                                                ) [ActParsYes]
                                                ActParsRightParen(
                                                ) [ActParsRightParen]
                                              ) [MethodCall]
                                            ) [MethodCallFactor]
                                          ) [SingleFactorTerm]
                                        ) [SingleTermExprPositive]
                                        NumConstNo(
                                        ) [NumConstNo]
                                      ) [SinglePrintStatement]
                                    ) [StatementSingle]
                                  ) [StatementListMultiple]
                                  StatementSingle(
                                    SinglePrintStatement(
                                      SingleTermExprPositive(
                                        SingleFactorTerm(
                                          DesignatorEmptyFactor(
                                            IdentDesignator(
                                             eol
                                            ) [IdentDesignator]
                                          ) [DesignatorEmptyFactor]
                                        ) [SingleFactorTerm]
                                      ) [SingleTermExprPositive]
                                      NumConstNo(
                                      ) [NumConstNo]
                                    ) [SinglePrintStatement]
                                  ) [StatementSingle]
                                ) [StatementListMultiple]
                                StatementSingle(
                                  SinglePrintStatement(
                                    SingleTermExprPositive(
                                      SingleFactorTerm(
                                        MethodCallFactor(
                                          MethodCall(
                                            IdentDesignator(
                                             inkrement
                                            ) [IdentDesignator]
                                            ActParsLeftParen(
                                            ) [ActParsLeftParen]
                                            ActParsYes(
                                              ActParsMultiExpr(
                                                ActParsSingleExpr(
                                                  SingleTermExprPositive(
                                                    SingleFactorTerm(
                                                      DesignatorEmptyFactor(
                                                        IdentArrayDesignator(
                                                         niz
                                                          SingleTermExprPositive(
                                                            SingleFactorTerm(
                                                              NumConstFactor(
                                                               2
                                                              ) [NumConstFactor]
                                                            ) [SingleFactorTerm]
                                                          ) [SingleTermExprPositive]
                                                        ) [IdentArrayDesignator]
                                                      ) [DesignatorEmptyFactor]
                                                    ) [SingleFactorTerm]
                                                  ) [SingleTermExprPositive]
                                                ) [ActParsSingleExpr]
                                                SingleTermExprPositive(
                                                  SingleFactorTerm(
                                                    NumConstFactor(
                                                     2
                                                    ) [NumConstFactor]
                                                  ) [SingleFactorTerm]
                                                ) [SingleTermExprPositive]
                                              ) [ActParsMultiExpr]
                                            ) [ActParsYes]
                                            ActParsRightParen(
                                            ) [ActParsRightParen]
                                          ) [MethodCall]
                                        ) [MethodCallFactor]
                                      ) [SingleFactorTerm]
                                    ) [SingleTermExprPositive]
                                    NumConstNo(
                                    ) [NumConstNo]
                                  ) [SinglePrintStatement]
                                ) [StatementSingle]
                              ) [StatementListMultiple]
                              StatementSingle(
                                SingleDesignatorStatement(
                                  DesignatorStmtAssign(
                                    DesignatorStmtAssignCorrect(
                                      IdentDesignator(
                                       a
                                      ) [IdentDesignator]
                                      SingleTermExprPositive(
                                        SingleFactorTerm(
                                          NumConstFactor(
                                           3
                                          ) [NumConstFactor]
                                        ) [SingleFactorTerm]
                                      ) [SingleTermExprPositive]
                                    ) [DesignatorStmtAssignCorrect]
                                  ) [DesignatorStmtAssign]
                                ) [SingleDesignatorStatement]
                              ) [StatementSingle]
                            ) [StatementListMultiple]
                            StatementSingle(
                              SingleDesignatorStatement(
                                DesignatorStmtAssign(
                                  DesignatorStmtAssignCorrect(
                                    IdentDesignator(
                                     i
                                    ) [IdentDesignator]
                                    SingleTermExprPositive(
                                      SingleFactorTerm(
                                        NumConstFactor(
                                         0
                                        ) [NumConstFactor]
                                      ) [SingleFactorTerm]
                                    ) [SingleTermExprPositive]
                                  ) [DesignatorStmtAssignCorrect]
                                ) [DesignatorStmtAssign]
                              ) [SingleDesignatorStatement]
                            ) [StatementSingle]
                          ) [StatementListMultiple]
                          StatementSingle(
                            DoWhileStatement(
                              DoEnter(
                              ) [DoEnter]
                              StatementListMultiple(
                                StatementListNo(
                                ) [StatementListNo]
                                StatementMultiple(
                                  StatementsInBraces(
                                    StatementListMultiple(
                                      StatementListMultiple(
                                        StatementListNo(
                                        ) [StatementListNo]
                                        StatementSingle(
                                          SingleDesignatorStatement(
                                            DesignatorStmtAssign(
                                              DesignatorStmtAssignCorrect(
                                                IdentArrayDesignator(
                                                 niz
                                                  SingleTermExprPositive(
                                                    SingleFactorTerm(
                                                      DesignatorEmptyFactor(
                                                        IdentDesignator(
                                                         i
                                                        ) [IdentDesignator]
                                                      ) [DesignatorEmptyFactor]
                                                    ) [SingleFactorTerm]
                                                  ) [SingleTermExprPositive]
                                                ) [IdentArrayDesignator]
                                                SingleTermExprPositive(
                                                  MultiFactorTerm(
                                                    MultiFactorTerm(
                                                      SingleFactorTerm(
                                                        DesignatorEmptyFactor(
                                                          IdentArrayDesignator(
                                                           niz
                                                            SingleTermExprPositive(
                                                              SingleFactorTerm(
                                                                DesignatorEmptyFactor(
                                                                  IdentDesignator(
                                                                   i
                                                                  ) [IdentDesignator]
                                                                ) [DesignatorEmptyFactor]
                                                              ) [SingleFactorTerm]
                                                            ) [SingleTermExprPositive]
                                                          ) [IdentArrayDesignator]
                                                        ) [DesignatorEmptyFactor]
                                                      ) [SingleFactorTerm]
                                                      MulopMul(
                                                      ) [MulopMul]
                                                      NumConstFactor(
                                                       2
                                                      ) [NumConstFactor]
                                                    ) [MultiFactorTerm]
                                                    MulopMul(
                                                    ) [MulopMul]
                                                    DesignatorEmptyFactor(
                                                      IdentDesignator(
                                                       a
                                                      ) [IdentDesignator]
                                                    ) [DesignatorEmptyFactor]
                                                  ) [MultiFactorTerm]
                                                ) [SingleTermExprPositive]
                                              ) [DesignatorStmtAssignCorrect]
                                            ) [DesignatorStmtAssign]
                                          ) [SingleDesignatorStatement]
                                        ) [StatementSingle]
                                      ) [StatementListMultiple]
                                      StatementSingle(
                                        SingleDesignatorStatement(
                                          DesignatorStmtPlusPlus(
                                            IdentDesignator(
                                             i
                                            ) [IdentDesignator]
                                          ) [DesignatorStmtPlusPlus]
                                        ) [SingleDesignatorStatement]
                                      ) [StatementSingle]
                                    ) [StatementListMultiple]
                                  ) [StatementsInBraces]
                                ) [StatementMultiple]
                              ) [StatementListMultiple]
                              ConditionSingleTerm(
                                CondSingleFactTerm(
                                  CondMultiExprFact(
                                    CondSingleExprFact(
                                      SingleTermExprPositive(
                                        SingleFactorTerm(
                                          DesignatorEmptyFactor(
                                            IdentDesignator(
                                             i
                                            ) [IdentDesignator]
                                          ) [DesignatorEmptyFactor]
                                        ) [SingleFactorTerm]
                                      ) [SingleTermExprPositive]
                                    ) [CondSingleExprFact]
                                    RelopLS(
                                    ) [RelopLS]
                                    SingleTermExprPositive(
                                      SingleFactorTerm(
                                        NumConstFactor(
                                         3
                                        ) [NumConstFactor]
                                      ) [SingleFactorTerm]
                                    ) [SingleTermExprPositive]
                                  ) [CondMultiExprFact]
                                ) [CondSingleFactTerm]
                              ) [ConditionSingleTerm]
                            ) [DoWhileStatement]
                          ) [StatementSingle]
                        ) [StatementListMultiple]
                        StatementSingle(
                          SinglePrintStatement(
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                DesignatorEmptyFactor(
                                  IdentArrayDesignator(
                                   niz
                                    SingleTermExprPositive(
                                      SingleFactorTerm(
                                        NumConstFactor(
                                         0
                                        ) [NumConstFactor]
                                      ) [SingleFactorTerm]
                                    ) [SingleTermExprPositive]
                                  ) [IdentArrayDesignator]
                                ) [DesignatorEmptyFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                            NumConstNo(
                            ) [NumConstNo]
                          ) [SinglePrintStatement]
                        ) [StatementSingle]
                      ) [StatementListMultiple]
                      StatementSingle(
                        SinglePrintStatement(
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              DesignatorEmptyFactor(
                                IdentArrayDesignator(
                                 niz
                                  SingleTermExprPositive(
                                    SingleFactorTerm(
                                      NumConstFactor(
                                       1
                                      ) [NumConstFactor]
                                    ) [SingleFactorTerm]
                                  ) [SingleTermExprPositive]
                                ) [IdentArrayDesignator]
                              ) [DesignatorEmptyFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                          NumConstNo(
                          ) [NumConstNo]
                        ) [SinglePrintStatement]
                      ) [StatementSingle]
                    ) [StatementListMultiple]
                    StatementSingle(
                      SinglePrintStatement(
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            DesignatorEmptyFactor(
                              IdentArrayDesignator(
                               niz
                                SingleTermExprPositive(
                                  SingleFactorTerm(
                                    NumConstFactor(
                                     2
                                    ) [NumConstFactor]
                                  ) [SingleFactorTerm]
                                ) [SingleTermExprPositive]
                              ) [IdentArrayDesignator]
                            ) [DesignatorEmptyFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                        NumConstNo(
                        ) [NumConstNo]
                      ) [SinglePrintStatement]
                    ) [StatementSingle]
                  ) [StatementListMultiple]
                  StatementSingle(
                    SinglePrintStatement(
                      SingleTermExprPositive(
                        SingleFactorTerm(
                          DesignatorEmptyFactor(
                            IdentDesignator(
                             eol
                            ) [IdentDesignator]
                          ) [DesignatorEmptyFactor]
                        ) [SingleFactorTerm]
                      ) [SingleTermExprPositive]
                      NumConstNo(
                      ) [NumConstNo]
                    ) [SinglePrintStatement]
                  ) [StatementSingle]
                ) [StatementListMultiple]
                StatementSingle(
                  SingleDesignatorStatement(
                    DesignatorStmtAssign(
                      DesignatorStmtAssignCorrect(
                        IdentDesignator(
                         i
                        ) [IdentDesignator]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            NumConstFactor(
                             0
                            ) [NumConstFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [DesignatorStmtAssignCorrect]
                    ) [DesignatorStmtAssign]
                  ) [SingleDesignatorStatement]
                ) [StatementSingle]
              ) [StatementListMultiple]
              StatementSingle(
                SingleDesignatorStatement(
                  DesignatorStmtAssign(
                    DesignatorStmtAssignCorrect(
                      IdentDesignator(
                       niz2
                      ) [IdentDesignator]
                      SingleTermExprPositive(
                        SingleFactorTerm(
                          NumConstFactor(
                           0
                          ) [NumConstFactor]
                        ) [SingleFactorTerm]
                      ) [SingleTermExprPositive]
                    ) [DesignatorStmtAssignCorrect]
                  ) [DesignatorStmtAssign]
                ) [SingleDesignatorStatement]
              ) [StatementSingle]
            ) [StatementListMultiple]
            StatementSingle(
              DoWhileStatement(
                DoEnter(
                ) [DoEnter]
                StatementListMultiple(
                  StatementListNo(
                  ) [StatementListNo]
                  StatementMultiple(
                    StatementsInBraces(
                      StatementListMultiple(
                        StatementListMultiple(
                          StatementListNo(
                          ) [StatementListNo]
                          StatementSingle(
                            SingleDesignatorStatement(
                              DesignatorStmtAssign(
                                DesignatorStmtAssignCorrect(
                                  IdentDesignator(
                                   niz2
                                  ) [IdentDesignator]
                                  MultiTermExpr(
                                    SingleTermExprPositive(
                                      SingleFactorTerm(
                                        DesignatorEmptyFactor(
                                          IdentDesignator(
                                           niz2
                                          ) [IdentDesignator]
                                        ) [DesignatorEmptyFactor]
                                      ) [SingleFactorTerm]
                                    ) [SingleTermExprPositive]
                                    AddopPlus(
                                    ) [AddopPlus]
                                    MultiFactorTerm(
                                      SingleFactorTerm(
                                        DesignatorEmptyFactor(
                                          IdentArrayDesignator(
                                           niz
                                            SingleTermExprPositive(
                                              SingleFactorTerm(
                                                DesignatorEmptyFactor(
                                                  IdentDesignator(
                                                   i
                                                  ) [IdentDesignator]
                                                ) [DesignatorEmptyFactor]
                                              ) [SingleFactorTerm]
                                            ) [SingleTermExprPositive]
                                          ) [IdentArrayDesignator]
                                        ) [DesignatorEmptyFactor]
                                      ) [SingleFactorTerm]
                                      MulopMul(
                                      ) [MulopMul]
                                      DesignatorEmptyFactor(
                                        IdentArrayDesignator(
                                         niz
                                          SingleTermExprPositive(
                                            SingleFactorTerm(
                                              DesignatorEmptyFactor(
                                                IdentDesignator(
                                                 i
                                                ) [IdentDesignator]
                                              ) [DesignatorEmptyFactor]
                                            ) [SingleFactorTerm]
                                          ) [SingleTermExprPositive]
                                        ) [IdentArrayDesignator]
                                      ) [DesignatorEmptyFactor]
                                    ) [MultiFactorTerm]
                                  ) [MultiTermExpr]
                                ) [DesignatorStmtAssignCorrect]
                              ) [DesignatorStmtAssign]
                            ) [SingleDesignatorStatement]
                          ) [StatementSingle]
                        ) [StatementListMultiple]
                        StatementSingle(
                          SingleDesignatorStatement(
                            DesignatorStmtPlusPlus(
                              IdentDesignator(
                               i
                              ) [IdentDesignator]
                            ) [DesignatorStmtPlusPlus]
                          ) [SingleDesignatorStatement]
                        ) [StatementSingle]
                      ) [StatementListMultiple]
                    ) [StatementsInBraces]
                  ) [StatementMultiple]
                ) [StatementListMultiple]
                ConditionSingleTerm(
                  CondSingleFactTerm(
                    CondMultiExprFact(
                      CondSingleExprFact(
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            DesignatorEmptyFactor(
                              IdentDesignator(
                               i
                              ) [IdentDesignator]
                            ) [DesignatorEmptyFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [CondSingleExprFact]
                      RelopLS(
                      ) [RelopLS]
                      SingleTermExprPositive(
                        SingleFactorTerm(
                          NumConstFactor(
                           3
                          ) [NumConstFactor]
                        ) [SingleFactorTerm]
                      ) [SingleTermExprPositive]
                    ) [CondMultiExprFact]
                  ) [CondSingleFactTerm]
                ) [ConditionSingleTerm]
              ) [DoWhileStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
          StatementSingle(
            SinglePrintStatement(
              SingleTermExprPositive(
                SingleFactorTerm(
                  DesignatorEmptyFactor(
                    IdentDesignator(
                     niz2
                    ) [IdentDesignator]
                  ) [DesignatorEmptyFactor]
                ) [SingleFactorTerm]
              ) [SingleTermExprPositive]
              NumConstNo(
              ) [NumConstNo]
            ) [SinglePrintStatement]
          ) [StatementSingle]
        ) [StatementListMultiple]
        StatementSingle(
          SinglePrintStatement(
            SingleTermExprPositive(
              SingleFactorTerm(
                DesignatorEmptyFactor(
                  IdentDesignator(
                   eol
                  ) [IdentDesignator]
                ) [DesignatorEmptyFactor]
              ) [SingleFactorTerm]
            ) [SingleTermExprPositive]
            NumConstNo(
            ) [NumConstNo]
          ) [SinglePrintStatement]
        ) [StatementSingle]
      ) [StatementListMultiple]
    ) [MethodDeclaration]
  ) [MethodDeclListMultiple]
) [Program]
INFO  21:00:34,021 - ===================================
INFO  21:00:34,024 - Method Call detected. Method name: sum
INFO  21:00:34,025 - Access to array element detected. Array name: niz
INFO  21:00:34,025 - Access to array element detected. Array name: niz
INFO  21:00:34,025 - Access to array element detected. Array name: niz
INFO  21:00:34,025 - Access to array element detected. Array name: niz
INFO  21:00:34,025 - Access to array element detected. Array name: niz
INFO  21:00:34,025 - Method Call detected. Method name: sum
INFO  21:00:34,025 - Method Call detected. Method name: verify
INFO  21:03:47,456 - Compiling source file: D:\source\repos\PP_Projekat\MicroJavaCompiler\test\program.mj
INFO  21:03:47,474 - #2 program
INFO  21:03:47,474 - #48 test302
INFO  21:03:47,474 - #7 const
INFO  21:03:47,475 - #48 int
INFO  21:03:47,475 - #48 jedan
INFO  21:03:47,475 - #27 =
INFO  21:03:47,475 - #51 1
INFO  21:03:47,475 - #38 ;
INFO  21:03:47,475 - #48 int
INFO  21:03:47,475 - #48 i
INFO  21:03:47,475 - #38 ;
INFO  21:03:47,476 - #48 bool
INFO  21:03:47,476 - #48 ibool
INFO  21:03:47,476 - #38 ;
INFO  21:03:47,476 - #48 int
INFO  21:03:47,476 - #48 niz2
INFO  21:03:47,476 - #38 ;
INFO  21:03:47,476 - #48 int
INFO  21:03:47,477 - #48 niz
INFO  21:03:47,477 - #42 [
INFO  21:03:47,477 - #43 ]
INFO  21:03:47,477 - #38 ;
INFO  21:03:47,477 - #48 int
INFO  21:03:47,477 - #48 a
INFO  21:03:47,477 - #38 ;
INFO  21:03:47,477 - #44 {
INFO  21:03:47,477 - #48 int
INFO  21:03:47,477 - #48 sum
INFO  21:03:47,477 - #40 (
INFO  21:03:47,478 - #48 int
INFO  21:03:47,478 - #48 z
INFO  21:03:47,478 - #39 ,
INFO  21:03:47,478 - #48 int
INFO  21:03:47,478 - #48 d
INFO  21:03:47,478 - #41 )
INFO  21:03:47,478 - #44 {
INFO  21:03:47,478 - #15 return
INFO  21:03:47,478 - #48 z
INFO  21:03:47,479 - #22 +
INFO  21:03:47,479 - #48 d
INFO  21:03:47,479 - #38 ;
INFO  21:03:47,479 - #45 }
INFO  21:03:47,479 - #48 int
INFO  21:03:47,479 - #48 inkrement
INFO  21:03:47,479 - #40 (
INFO  21:03:47,479 - #48 int
INFO  21:03:47,479 - #48 a
INFO  21:03:47,480 - #39 ,
INFO  21:03:47,480 - #48 int
INFO  21:03:47,480 - #48 inc
INFO  21:03:47,480 - #41 )
INFO  21:03:47,480 - #48 int
INFO  21:03:47,480 - #48 pom
INFO  21:03:47,480 - #38 ;
INFO  21:03:47,480 - #44 {
INFO  21:03:47,480 - #5 if
INFO  21:03:47,480 - #40 (
INFO  21:03:47,480 - #48 inc
INFO  21:03:47,480 - #28 ==
INFO  21:03:47,480 - #48 jedan
INFO  21:03:47,480 - #41 )
INFO  21:03:47,481 - #48 pom
INFO  21:03:47,481 - #27 =
INFO  21:03:47,481 - #51 1
INFO  21:03:47,481 - #38 ;
INFO  21:03:47,481 - #6 else
INFO  21:03:47,481 - #5 if
INFO  21:03:47,481 - #40 (
INFO  21:03:47,481 - #48 inc
INFO  21:03:47,481 - #28 ==
INFO  21:03:47,481 - #51 2
INFO  21:03:47,481 - #41 )
INFO  21:03:47,481 - #48 pom
INFO  21:03:47,481 - #27 =
INFO  21:03:47,482 - #48 a
INFO  21:03:47,482 - #38 ;
INFO  21:03:47,482 - #15 return
INFO  21:03:47,482 - #48 sum
INFO  21:03:47,482 - #40 (
INFO  21:03:47,482 - #48 a
INFO  21:03:47,482 - #39 ,
INFO  21:03:47,482 - #48 pom
INFO  21:03:47,482 - #41 )
INFO  21:03:47,482 - #38 ;
INFO  21:03:47,483 - #45 }
INFO  21:03:47,483 - #48 bool
INFO  21:03:47,483 - #48 verify
INFO  21:03:47,483 - #40 (
INFO  21:03:47,483 - #41 )
INFO  21:03:47,483 - #44 {
INFO  21:03:47,483 - #12 print
INFO  21:03:47,483 - #40 (
INFO  21:03:47,483 - #50 v
INFO  21:03:47,483 - #41 )
INFO  21:03:47,483 - #38 ;
INFO  21:03:47,483 - #15 return
INFO  21:03:47,483 - #49 false
INFO  21:03:47,483 - #38 ;
INFO  21:03:47,483 - #45 }
INFO  21:03:47,484 - #14 void
INFO  21:03:47,484 - #48 main
INFO  21:03:47,484 - #40 (
INFO  21:03:47,484 - #41 )
INFO  21:03:47,484 - #44 {
INFO  21:03:47,484 - #5 if
INFO  21:03:47,484 - #40 (
INFO  21:03:47,484 - #51 1
INFO  21:03:47,484 - #29 !=
INFO  21:03:47,484 - #51 1
INFO  21:03:47,484 - #41 )
INFO  21:03:47,484 - #12 print
INFO  21:03:47,484 - #40 (
INFO  21:03:47,484 - #23 -
INFO  21:03:47,484 - #51 6
INFO  21:03:47,484 - #41 )
INFO  21:03:47,484 - #38 ;
INFO  21:03:47,484 - #6 else
INFO  21:03:47,484 - #12 print
INFO  21:03:47,484 - #40 (
INFO  21:03:47,484 - #51 0
INFO  21:03:47,484 - #41 )
INFO  21:03:47,485 - #38 ;
INFO  21:03:47,485 - #48 ibool
INFO  21:03:47,485 - #27 =
INFO  21:03:47,485 - #49 false
INFO  21:03:47,485 - #38 ;
INFO  21:03:47,485 - #48 i
INFO  21:03:47,485 - #27 =
INFO  21:03:47,485 - #51 0
INFO  21:03:47,485 - #38 ;
INFO  21:03:47,485 - #9 do
INFO  21:03:47,485 - #44 {
INFO  21:03:47,485 - #5 if
INFO  21:03:47,485 - #40 (
INFO  21:03:47,485 - #48 i
INFO  21:03:47,485 - #28 ==
INFO  21:03:47,485 - #51 2
INFO  21:03:47,485 - #41 )
INFO  21:03:47,485 - #48 ibool
INFO  21:03:47,485 - #27 =
INFO  21:03:47,485 - #49 true
INFO  21:03:47,485 - #38 ;
INFO  21:03:47,485 - #48 i
INFO  21:03:47,485 - #36 ++
INFO  21:03:47,485 - #38 ;
INFO  21:03:47,485 - #45 }
INFO  21:03:47,485 - #10 while
INFO  21:03:47,485 - #40 (
INFO  21:03:47,485 - #48 i
INFO  21:03:47,485 - #32 <
INFO  21:03:47,485 - #51 5
INFO  21:03:47,486 - #41 )
INFO  21:03:47,486 - #38 ;
INFO  21:03:47,486 - #5 if
INFO  21:03:47,486 - #40 (
INFO  21:03:47,486 - #48 ibool
INFO  21:03:47,486 - #41 )
INFO  21:03:47,486 - #5 if
INFO  21:03:47,486 - #40 (
INFO  21:03:47,486 - #48 i
INFO  21:03:47,486 - #28 ==
INFO  21:03:47,486 - #51 5
INFO  21:03:47,486 - #41 )
INFO  21:03:47,486 - #12 print
INFO  21:03:47,486 - #40 (
INFO  21:03:47,486 - #51 1
INFO  21:03:47,486 - #41 )
INFO  21:03:47,486 - #38 ;
INFO  21:03:47,486 - #6 else
INFO  21:03:47,486 - #12 print
INFO  21:03:47,486 - #40 (
INFO  21:03:47,486 - #23 -
INFO  21:03:47,486 - #51 1
INFO  21:03:47,486 - #41 )
INFO  21:03:47,486 - #38 ;
INFO  21:03:47,486 - #48 a
INFO  21:03:47,486 - #27 =
INFO  21:03:47,486 - #51 2
INFO  21:03:47,486 - #38 ;
INFO  21:03:47,486 - #48 niz
INFO  21:03:47,486 - #27 =
INFO  21:03:47,486 - #11 new
INFO  21:03:47,486 - #48 int
INFO  21:03:47,486 - #42 [
INFO  21:03:47,486 - #51 3
INFO  21:03:47,486 - #43 ]
INFO  21:03:47,486 - #38 ;
INFO  21:03:47,486 - #48 niz
INFO  21:03:47,487 - #42 [
INFO  21:03:47,487 - #51 0
INFO  21:03:47,487 - #43 ]
INFO  21:03:47,487 - #27 =
INFO  21:03:47,487 - #51 1
INFO  21:03:47,487 - #24 *
INFO  21:03:47,487 - #48 a
INFO  21:03:47,487 - #38 ;
INFO  21:03:47,487 - #48 niz
INFO  21:03:47,487 - #42 [
INFO  21:03:47,487 - #51 1
INFO  21:03:47,487 - #43 ]
INFO  21:03:47,487 - #27 =
INFO  21:03:47,487 - #51 2
INFO  21:03:47,487 - #24 *
INFO  21:03:47,487 - #48 a
INFO  21:03:47,487 - #38 ;
INFO  21:03:47,487 - #48 niz
INFO  21:03:47,487 - #42 [
INFO  21:03:47,487 - #51 2
INFO  21:03:47,487 - #43 ]
INFO  21:03:47,487 - #27 =
INFO  21:03:47,487 - #48 sum
INFO  21:03:47,487 - #40 (
INFO  21:03:47,487 - #48 niz
INFO  21:03:47,487 - #42 [
INFO  21:03:47,488 - #51 1
INFO  21:03:47,488 - #43 ]
INFO  21:03:47,488 - #39 ,
INFO  21:03:47,488 - #48 niz
INFO  21:03:47,488 - #42 [
INFO  21:03:47,488 - #51 0
INFO  21:03:47,488 - #43 ]
INFO  21:03:47,488 - #41 )
INFO  21:03:47,488 - #24 *
INFO  21:03:47,488 - #48 a
INFO  21:03:47,488 - #22 +
INFO  21:03:47,488 - #51 1
INFO  21:03:47,488 - #38 ;
INFO  21:03:47,488 - #5 if
INFO  21:03:47,488 - #40 (
INFO  21:03:47,488 - #48 verify
INFO  21:03:47,488 - #40 (
INFO  21:03:47,488 - #41 )
INFO  21:03:47,488 - #35 ||
INFO  21:03:47,488 - #48 niz
INFO  21:03:47,488 - #42 [
INFO  21:03:47,488 - #51 2
INFO  21:03:47,488 - #43 ]
INFO  21:03:47,488 - #28 ==
INFO  21:03:47,488 - #51 4
INFO  21:03:47,488 - #41 )
INFO  21:03:47,488 - #12 print
INFO  21:03:47,488 - #40 (
INFO  21:03:47,488 - #48 ord
INFO  21:03:47,488 - #40 (
INFO  21:03:47,488 - #50 A
INFO  21:03:47,488 - #41 )
INFO  21:03:47,488 - #41 )
INFO  21:03:47,488 - #38 ;
INFO  21:03:47,488 - #6 else
INFO  21:03:47,488 - #12 print
INFO  21:03:47,488 - #40 (
INFO  21:03:47,488 - #48 ord
INFO  21:03:47,488 - #40 (
INFO  21:03:47,488 - #50 a
INFO  21:03:47,488 - #41 )
INFO  21:03:47,488 - #41 )
INFO  21:03:47,488 - #38 ;
INFO  21:03:47,489 - #45 }
INFO  21:03:47,489 - #45 }
INFO  21:03:47,490 - Program(
  ProgramName(
   test302
  ) [ProgramName]
  AllDeclListMultiple(
    AllDeclListMultiple(
      AllDeclListMultiple(
        AllDeclListMultiple(
          AllDeclListMultiple(
            AllDeclListMultiple(
              NoDecl(
              ) [NoDecl]
              ConstDeclaration(
                ConstDeclarationExpr(
                  Type(
                   int
                  ) [Type]
                  ConstAssignSingle(
                    ConstAssign(
                     jedan
                      NumberConst(
                       1
                      ) [NumberConst]
                    ) [ConstAssign]
                  ) [ConstAssignSingle]
                ) [ConstDeclarationExpr]
              ) [ConstDeclaration]
            ) [AllDeclListMultiple]
            GlobalVarDeclaration(
              GlobalVarDeclarationExpr(
                Type(
                 int
                ) [Type]
                GlobalVarDeclListSingle(
                  GlobalVarDeclarationSingle(
                   i
                    NoArray(
                    ) [NoArray]
                  ) [GlobalVarDeclarationSingle]
                ) [GlobalVarDeclListSingle]
              ) [GlobalVarDeclarationExpr]
            ) [GlobalVarDeclaration]
          ) [AllDeclListMultiple]
          GlobalVarDeclaration(
            GlobalVarDeclarationExpr(
              Type(
               bool
              ) [Type]
              GlobalVarDeclListSingle(
                GlobalVarDeclarationSingle(
                 ibool
                  NoArray(
                  ) [NoArray]
                ) [GlobalVarDeclarationSingle]
              ) [GlobalVarDeclListSingle]
            ) [GlobalVarDeclarationExpr]
          ) [GlobalVarDeclaration]
        ) [AllDeclListMultiple]
        GlobalVarDeclaration(
          GlobalVarDeclarationExpr(
            Type(
             int
            ) [Type]
            GlobalVarDeclListSingle(
              GlobalVarDeclarationSingle(
               niz2
                NoArray(
                ) [NoArray]
              ) [GlobalVarDeclarationSingle]
            ) [GlobalVarDeclListSingle]
          ) [GlobalVarDeclarationExpr]
        ) [GlobalVarDeclaration]
      ) [AllDeclListMultiple]
      GlobalVarDeclaration(
        GlobalVarDeclarationExpr(
          Type(
           int
          ) [Type]
          GlobalVarDeclListSingle(
            GlobalVarDeclarationSingle(
             niz
              ArrayBrackets(
              ) [ArrayBrackets]
            ) [GlobalVarDeclarationSingle]
          ) [GlobalVarDeclListSingle]
        ) [GlobalVarDeclarationExpr]
      ) [GlobalVarDeclaration]
    ) [AllDeclListMultiple]
    GlobalVarDeclaration(
      GlobalVarDeclarationExpr(
        Type(
         int
        ) [Type]
        GlobalVarDeclListSingle(
          GlobalVarDeclarationSingle(
           a
            NoArray(
            ) [NoArray]
          ) [GlobalVarDeclarationSingle]
        ) [GlobalVarDeclListSingle]
      ) [GlobalVarDeclarationExpr]
    ) [GlobalVarDeclaration]
  ) [AllDeclListMultiple]
  MethodDeclListMultiple(
    MethodDeclListMultiple(
      MethodDeclListMultiple(
        MethodDeclListMultiple(
          MethodDeclListNo(
          ) [MethodDeclListNo]
          MethodDeclaration(
            MethodSignatureParams(
              MethodTypeType(
                Type(
                 int
                ) [Type]
              ) [MethodTypeType]
              MethodName(
               sum
              ) [MethodName]
              FormParsMultiple(
                FormParsSingle(
                  FormParSingle(
                    Type(
                     int
                    ) [Type]
                   z
                    NoArray(
                    ) [NoArray]
                  ) [FormParSingle]
                ) [FormParsSingle]
                FormParSingle(
                  Type(
                   int
                  ) [Type]
                 d
                  NoArray(
                  ) [NoArray]
                ) [FormParSingle]
              ) [FormParsMultiple]
              FormParsEnd(
              ) [FormParsEnd]
            ) [MethodSignatureParams]
            NoVarDeclOption(
            ) [NoVarDeclOption]
            StatementListMultiple(
              StatementListNo(
              ) [StatementListNo]
              StatementSingle(
                SingleReturnExprStatement(
                  MultiTermExpr(
                    SingleTermExprPositive(
                      SingleFactorTerm(
                        DesignatorEmptyFactor(
                          IdentDesignator(
                           z
                          ) [IdentDesignator]
                        ) [DesignatorEmptyFactor]
                      ) [SingleFactorTerm]
                    ) [SingleTermExprPositive]
                    AddopPlus(
                    ) [AddopPlus]
                    SingleFactorTerm(
                      DesignatorEmptyFactor(
                        IdentDesignator(
                         d
                        ) [IdentDesignator]
                      ) [DesignatorEmptyFactor]
                    ) [SingleFactorTerm]
                  ) [MultiTermExpr]
                ) [SingleReturnExprStatement]
              ) [StatementSingle]
            ) [StatementListMultiple]
          ) [MethodDeclaration]
        ) [MethodDeclListMultiple]
        MethodDeclaration(
          MethodSignatureParams(
            MethodTypeType(
              Type(
               int
              ) [Type]
            ) [MethodTypeType]
            MethodName(
             inkrement
            ) [MethodName]
            FormParsMultiple(
              FormParsSingle(
                FormParSingle(
                  Type(
                   int
                  ) [Type]
                 a
                  NoArray(
                  ) [NoArray]
                ) [FormParSingle]
              ) [FormParsSingle]
              FormParSingle(
                Type(
                 int
                ) [Type]
               inc
                NoArray(
                ) [NoArray]
              ) [FormParSingle]
            ) [FormParsMultiple]
            FormParsEnd(
            ) [FormParsEnd]
          ) [MethodSignatureParams]
          VarDeclOptionTrue(
            NoVarDeclOption(
            ) [NoVarDeclOption]
            VarDeclarationExpr(
              Type(
               int
              ) [Type]
              VarDeclListSingle(
                VarDeclSingle(
                 pom
                  NoArray(
                  ) [NoArray]
                ) [VarDeclSingle]
              ) [VarDeclListSingle]
            ) [VarDeclarationExpr]
          ) [VarDeclOptionTrue]
          StatementListMultiple(
            StatementListMultiple(
              StatementListNo(
              ) [StatementListNo]
              StatementSingle(
                IfElseStatement(
                  IfConditionSingleTerm(
                    CondSingleFactTerm(
                      CondMultiExprFact(
                        CondSingleExprFact(
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              DesignatorEmptyFactor(
                                IdentDesignator(
                                 inc
                                ) [IdentDesignator]
                              ) [DesignatorEmptyFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [CondSingleExprFact]
                        RelopEQUAL(
                        ) [RelopEQUAL]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            DesignatorEmptyFactor(
                              IdentDesignator(
                               jedan
                              ) [IdentDesignator]
                            ) [DesignatorEmptyFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [CondMultiExprFact]
                    ) [CondSingleFactTerm]
                  ) [IfConditionSingleTerm]
                  StatementSingle(
                    SingleDesignatorStatement(
                      DesignatorStmtAssign(
                        DesignatorStmtAssignCorrect(
                          IdentDesignator(
                           pom
                          ) [IdentDesignator]
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              NumConstFactor(
                               1
                              ) [NumConstFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [DesignatorStmtAssignCorrect]
                      ) [DesignatorStmtAssign]
                    ) [SingleDesignatorStatement]
                  ) [StatementSingle]
                  StatementSingle(
                    IfStatement(
                      IfConditionSingleTerm(
                        CondSingleFactTerm(
                          CondMultiExprFact(
                            CondSingleExprFact(
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentDesignator(
                                     inc
                                    ) [IdentDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [CondSingleExprFact]
                            RelopEQUAL(
                            ) [RelopEQUAL]
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                NumConstFactor(
                                 2
                                ) [NumConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [CondMultiExprFact]
                        ) [CondSingleFactTerm]
                      ) [IfConditionSingleTerm]
                      StatementSingle(
                        SingleDesignatorStatement(
                          DesignatorStmtAssign(
                            DesignatorStmtAssignCorrect(
                              IdentDesignator(
                               pom
                              ) [IdentDesignator]
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentDesignator(
                                     a
                                    ) [IdentDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [DesignatorStmtAssignCorrect]
                          ) [DesignatorStmtAssign]
                        ) [SingleDesignatorStatement]
                      ) [StatementSingle]
                    ) [IfStatement]
                  ) [StatementSingle]
                ) [IfElseStatement]
              ) [StatementSingle]
            ) [StatementListMultiple]
            StatementSingle(
              SingleReturnExprStatement(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    MethodCallFactor(
                      MethodCall(
                        IdentDesignator(
                         sum
                        ) [IdentDesignator]
                        ActParsLeftParen(
                        ) [ActParsLeftParen]
                        ActParsYes(
                          ActParsMultiExpr(
                            ActParsSingleExpr(
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentDesignator(
                                     a
                                    ) [IdentDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [ActParsSingleExpr]
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                DesignatorEmptyFactor(
                                  IdentDesignator(
                                   pom
                                  ) [IdentDesignator]
                                ) [DesignatorEmptyFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [ActParsMultiExpr]
                        ) [ActParsYes]
                        ActParsRightParen(
                        ) [ActParsRightParen]
                      ) [MethodCall]
                    ) [MethodCallFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
              ) [SingleReturnExprStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
        ) [MethodDeclaration]
      ) [MethodDeclListMultiple]
      MethodDeclaration(
        MethodSignaturePlain(
          MethodTypeType(
            Type(
             bool
            ) [Type]
          ) [MethodTypeType]
          MethodName(
           verify
          ) [MethodName]
        ) [MethodSignaturePlain]
        NoVarDeclOption(
        ) [NoVarDeclOption]
        StatementListMultiple(
          StatementListMultiple(
            StatementListNo(
            ) [StatementListNo]
            StatementSingle(
              SinglePrintStatement(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    CharConstFactor(
                     v
                    ) [CharConstFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
                NumConstNo(
                ) [NumConstNo]
              ) [SinglePrintStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
          StatementSingle(
            SingleReturnExprStatement(
              SingleTermExprPositive(
                SingleFactorTerm(
                  BoolConstFactor(
                   false
                  ) [BoolConstFactor]
                ) [SingleFactorTerm]
              ) [SingleTermExprPositive]
            ) [SingleReturnExprStatement]
          ) [StatementSingle]
        ) [StatementListMultiple]
      ) [MethodDeclaration]
    ) [MethodDeclListMultiple]
    MethodDeclaration(
      MethodSignaturePlain(
        MethodTypeVoid(
        ) [MethodTypeVoid]
        MethodName(
         main
        ) [MethodName]
      ) [MethodSignaturePlain]
      NoVarDeclOption(
      ) [NoVarDeclOption]
      StatementListMultiple(
        StatementListMultiple(
          StatementListMultiple(
            StatementListMultiple(
              StatementListMultiple(
                StatementListMultiple(
                  StatementListMultiple(
                    StatementListMultiple(
                      StatementListMultiple(
                        StatementListMultiple(
                          StatementListMultiple(
                            StatementListNo(
                            ) [StatementListNo]
                            StatementSingle(
                              IfElseStatement(
                                IfConditionSingleTerm(
                                  CondSingleFactTerm(
                                    CondMultiExprFact(
                                      CondSingleExprFact(
                                        SingleTermExprPositive(
                                          SingleFactorTerm(
                                            NumConstFactor(
                                             1
                                            ) [NumConstFactor]
                                          ) [SingleFactorTerm]
                                        ) [SingleTermExprPositive]
                                      ) [CondSingleExprFact]
                                      RelopNOTEQUAL(
                                      ) [RelopNOTEQUAL]
                                      SingleTermExprPositive(
                                        SingleFactorTerm(
                                          NumConstFactor(
                                           1
                                          ) [NumConstFactor]
                                        ) [SingleFactorTerm]
                                      ) [SingleTermExprPositive]
                                    ) [CondMultiExprFact]
                                  ) [CondSingleFactTerm]
                                ) [IfConditionSingleTerm]
                                StatementSingle(
                                  SinglePrintStatement(
                                    SingleTermExprNegative(
                                      SingleFactorTerm(
                                        NumConstFactor(
                                         6
                                        ) [NumConstFactor]
                                      ) [SingleFactorTerm]
                                    ) [SingleTermExprNegative]
                                    NumConstNo(
                                    ) [NumConstNo]
                                  ) [SinglePrintStatement]
                                ) [StatementSingle]
                                StatementSingle(
                                  SinglePrintStatement(
                                    SingleTermExprPositive(
                                      SingleFactorTerm(
                                        NumConstFactor(
                                         0
                                        ) [NumConstFactor]
                                      ) [SingleFactorTerm]
                                    ) [SingleTermExprPositive]
                                    NumConstNo(
                                    ) [NumConstNo]
                                  ) [SinglePrintStatement]
                                ) [StatementSingle]
                              ) [IfElseStatement]
                            ) [StatementSingle]
                          ) [StatementListMultiple]
                          StatementSingle(
                            SingleDesignatorStatement(
                              DesignatorStmtAssign(
                                DesignatorStmtAssignCorrect(
                                  IdentDesignator(
                                   ibool
                                  ) [IdentDesignator]
                                  SingleTermExprPositive(
                                    SingleFactorTerm(
                                      BoolConstFactor(
                                       false
                                      ) [BoolConstFactor]
                                    ) [SingleFactorTerm]
                                  ) [SingleTermExprPositive]
                                ) [DesignatorStmtAssignCorrect]
                              ) [DesignatorStmtAssign]
                            ) [SingleDesignatorStatement]
                          ) [StatementSingle]
                        ) [StatementListMultiple]
                        StatementSingle(
                          SingleDesignatorStatement(
                            DesignatorStmtAssign(
                              DesignatorStmtAssignCorrect(
                                IdentDesignator(
                                 i
                                ) [IdentDesignator]
                                SingleTermExprPositive(
                                  SingleFactorTerm(
                                    NumConstFactor(
                                     0
                                    ) [NumConstFactor]
                                  ) [SingleFactorTerm]
                                ) [SingleTermExprPositive]
                              ) [DesignatorStmtAssignCorrect]
                            ) [DesignatorStmtAssign]
                          ) [SingleDesignatorStatement]
                        ) [StatementSingle]
                      ) [StatementListMultiple]
                      StatementSingle(
                        DoWhileStatement(
                          DoEnter(
                          ) [DoEnter]
                          StatementListMultiple(
                            StatementListNo(
                            ) [StatementListNo]
                            StatementMultiple(
                              StatementsInBraces(
                                StatementListMultiple(
                                  StatementListMultiple(
                                    StatementListNo(
                                    ) [StatementListNo]
                                    StatementSingle(
                                      IfStatement(
                                        IfConditionSingleTerm(
                                          CondSingleFactTerm(
                                            CondMultiExprFact(
                                              CondSingleExprFact(
                                                SingleTermExprPositive(
                                                  SingleFactorTerm(
                                                    DesignatorEmptyFactor(
                                                      IdentDesignator(
                                                       i
                                                      ) [IdentDesignator]
                                                    ) [DesignatorEmptyFactor]
                                                  ) [SingleFactorTerm]
                                                ) [SingleTermExprPositive]
                                              ) [CondSingleExprFact]
                                              RelopEQUAL(
                                              ) [RelopEQUAL]
                                              SingleTermExprPositive(
                                                SingleFactorTerm(
                                                  NumConstFactor(
                                                   2
                                                  ) [NumConstFactor]
                                                ) [SingleFactorTerm]
                                              ) [SingleTermExprPositive]
                                            ) [CondMultiExprFact]
                                          ) [CondSingleFactTerm]
                                        ) [IfConditionSingleTerm]
                                        StatementSingle(
                                          SingleDesignatorStatement(
                                            DesignatorStmtAssign(
                                              DesignatorStmtAssignCorrect(
                                                IdentDesignator(
                                                 ibool
                                                ) [IdentDesignator]
                                                SingleTermExprPositive(
                                                  SingleFactorTerm(
                                                    BoolConstFactor(
                                                     true
                                                    ) [BoolConstFactor]
                                                  ) [SingleFactorTerm]
                                                ) [SingleTermExprPositive]
                                              ) [DesignatorStmtAssignCorrect]
                                            ) [DesignatorStmtAssign]
                                          ) [SingleDesignatorStatement]
                                        ) [StatementSingle]
                                      ) [IfStatement]
                                    ) [StatementSingle]
                                  ) [StatementListMultiple]
                                  StatementSingle(
                                    SingleDesignatorStatement(
                                      DesignatorStmtPlusPlus(
                                        IdentDesignator(
                                         i
                                        ) [IdentDesignator]
                                      ) [DesignatorStmtPlusPlus]
                                    ) [SingleDesignatorStatement]
                                  ) [StatementSingle]
                                ) [StatementListMultiple]
                              ) [StatementsInBraces]
                            ) [StatementMultiple]
                          ) [StatementListMultiple]
                          ConditionSingleTerm(
                            CondSingleFactTerm(
                              CondMultiExprFact(
                                CondSingleExprFact(
                                  SingleTermExprPositive(
                                    SingleFactorTerm(
                                      DesignatorEmptyFactor(
                                        IdentDesignator(
                                         i
                                        ) [IdentDesignator]
                                      ) [DesignatorEmptyFactor]
                                    ) [SingleFactorTerm]
                                  ) [SingleTermExprPositive]
                                ) [CondSingleExprFact]
                                RelopLS(
                                ) [RelopLS]
                                SingleTermExprPositive(
                                  SingleFactorTerm(
                                    NumConstFactor(
                                     5
                                    ) [NumConstFactor]
                                  ) [SingleFactorTerm]
                                ) [SingleTermExprPositive]
                              ) [CondMultiExprFact]
                            ) [CondSingleFactTerm]
                          ) [ConditionSingleTerm]
                        ) [DoWhileStatement]
                      ) [StatementSingle]
                    ) [StatementListMultiple]
                    StatementSingle(
                      IfStatement(
                        IfConditionSingleTerm(
                          CondSingleFactTerm(
                            CondSingleExprFact(
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentDesignator(
                                     ibool
                                    ) [IdentDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [CondSingleExprFact]
                          ) [CondSingleFactTerm]
                        ) [IfConditionSingleTerm]
                        StatementSingle(
                          IfElseStatement(
                            IfConditionSingleTerm(
                              CondSingleFactTerm(
                                CondMultiExprFact(
                                  CondSingleExprFact(
                                    SingleTermExprPositive(
                                      SingleFactorTerm(
                                        DesignatorEmptyFactor(
                                          IdentDesignator(
                                           i
                                          ) [IdentDesignator]
                                        ) [DesignatorEmptyFactor]
                                      ) [SingleFactorTerm]
                                    ) [SingleTermExprPositive]
                                  ) [CondSingleExprFact]
                                  RelopEQUAL(
                                  ) [RelopEQUAL]
                                  SingleTermExprPositive(
                                    SingleFactorTerm(
                                      NumConstFactor(
                                       5
                                      ) [NumConstFactor]
                                    ) [SingleFactorTerm]
                                  ) [SingleTermExprPositive]
                                ) [CondMultiExprFact]
                              ) [CondSingleFactTerm]
                            ) [IfConditionSingleTerm]
                            StatementSingle(
                              SinglePrintStatement(
                                SingleTermExprPositive(
                                  SingleFactorTerm(
                                    NumConstFactor(
                                     1
                                    ) [NumConstFactor]
                                  ) [SingleFactorTerm]
                                ) [SingleTermExprPositive]
                                NumConstNo(
                                ) [NumConstNo]
                              ) [SinglePrintStatement]
                            ) [StatementSingle]
                            StatementSingle(
                              SinglePrintStatement(
                                SingleTermExprNegative(
                                  SingleFactorTerm(
                                    NumConstFactor(
                                     1
                                    ) [NumConstFactor]
                                  ) [SingleFactorTerm]
                                ) [SingleTermExprNegative]
                                NumConstNo(
                                ) [NumConstNo]
                              ) [SinglePrintStatement]
                            ) [StatementSingle]
                          ) [IfElseStatement]
                        ) [StatementSingle]
                      ) [IfStatement]
                    ) [StatementSingle]
                  ) [StatementListMultiple]
                  StatementSingle(
                    SingleDesignatorStatement(
                      DesignatorStmtAssign(
                        DesignatorStmtAssignCorrect(
                          IdentDesignator(
                           a
                          ) [IdentDesignator]
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              NumConstFactor(
                               2
                              ) [NumConstFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [DesignatorStmtAssignCorrect]
                      ) [DesignatorStmtAssign]
                    ) [SingleDesignatorStatement]
                  ) [StatementSingle]
                ) [StatementListMultiple]
                StatementSingle(
                  SingleDesignatorStatement(
                    DesignatorStmtAssign(
                      DesignatorStmtAssignCorrect(
                        IdentDesignator(
                         niz
                        ) [IdentDesignator]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            NewTypeArrayFactor(
                              Type(
                               int
                              ) [Type]
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  NumConstFactor(
                                   3
                                  ) [NumConstFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [NewTypeArrayFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [DesignatorStmtAssignCorrect]
                    ) [DesignatorStmtAssign]
                  ) [SingleDesignatorStatement]
                ) [StatementSingle]
              ) [StatementListMultiple]
              StatementSingle(
                SingleDesignatorStatement(
                  DesignatorStmtAssign(
                    DesignatorStmtAssignCorrect(
                      IdentArrayDesignator(
                       niz
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            NumConstFactor(
                             0
                            ) [NumConstFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [IdentArrayDesignator]
                      SingleTermExprPositive(
                        MultiFactorTerm(
                          SingleFactorTerm(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactorTerm]
                          MulopMul(
                          ) [MulopMul]
                          DesignatorEmptyFactor(
                            IdentDesignator(
                             a
                            ) [IdentDesignator]
                          ) [DesignatorEmptyFactor]
                        ) [MultiFactorTerm]
                      ) [SingleTermExprPositive]
                    ) [DesignatorStmtAssignCorrect]
                  ) [DesignatorStmtAssign]
                ) [SingleDesignatorStatement]
              ) [StatementSingle]
            ) [StatementListMultiple]
            StatementSingle(
              SingleDesignatorStatement(
                DesignatorStmtAssign(
                  DesignatorStmtAssignCorrect(
                    IdentArrayDesignator(
                     niz
                      SingleTermExprPositive(
                        SingleFactorTerm(
                          NumConstFactor(
                           1
                          ) [NumConstFactor]
                        ) [SingleFactorTerm]
                      ) [SingleTermExprPositive]
                    ) [IdentArrayDesignator]
                    SingleTermExprPositive(
                      MultiFactorTerm(
                        SingleFactorTerm(
                          NumConstFactor(
                           2
                          ) [NumConstFactor]
                        ) [SingleFactorTerm]
                        MulopMul(
                        ) [MulopMul]
                        DesignatorEmptyFactor(
                          IdentDesignator(
                           a
                          ) [IdentDesignator]
                        ) [DesignatorEmptyFactor]
                      ) [MultiFactorTerm]
                    ) [SingleTermExprPositive]
                  ) [DesignatorStmtAssignCorrect]
                ) [DesignatorStmtAssign]
              ) [SingleDesignatorStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
          StatementSingle(
            SingleDesignatorStatement(
              DesignatorStmtAssign(
                DesignatorStmtAssignCorrect(
                  IdentArrayDesignator(
                   niz
                    SingleTermExprPositive(
                      SingleFactorTerm(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactorTerm]
                    ) [SingleTermExprPositive]
                  ) [IdentArrayDesignator]
                  MultiTermExpr(
                    SingleTermExprPositive(
                      MultiFactorTerm(
                        SingleFactorTerm(
                          MethodCallFactor(
                            MethodCall(
                              IdentDesignator(
                               sum
                              ) [IdentDesignator]
                              ActParsLeftParen(
                              ) [ActParsLeftParen]
                              ActParsYes(
                                ActParsMultiExpr(
                                  ActParsSingleExpr(
                                    SingleTermExprPositive(
                                      SingleFactorTerm(
                                        DesignatorEmptyFactor(
                                          IdentArrayDesignator(
                                           niz
                                            SingleTermExprPositive(
                                              SingleFactorTerm(
                                                NumConstFactor(
                                                 1
                                                ) [NumConstFactor]
                                              ) [SingleFactorTerm]
                                            ) [SingleTermExprPositive]
                                          ) [IdentArrayDesignator]
                                        ) [DesignatorEmptyFactor]
                                      ) [SingleFactorTerm]
                                    ) [SingleTermExprPositive]
                                  ) [ActParsSingleExpr]
                                  SingleTermExprPositive(
                                    SingleFactorTerm(
                                      DesignatorEmptyFactor(
                                        IdentArrayDesignator(
                                         niz
                                          SingleTermExprPositive(
                                            SingleFactorTerm(
                                              NumConstFactor(
                                               0
                                              ) [NumConstFactor]
                                            ) [SingleFactorTerm]
                                          ) [SingleTermExprPositive]
                                        ) [IdentArrayDesignator]
                                      ) [DesignatorEmptyFactor]
                                    ) [SingleFactorTerm]
                                  ) [SingleTermExprPositive]
                                ) [ActParsMultiExpr]
                              ) [ActParsYes]
                              ActParsRightParen(
                              ) [ActParsRightParen]
                            ) [MethodCall]
                          ) [MethodCallFactor]
                        ) [SingleFactorTerm]
                        MulopMul(
                        ) [MulopMul]
                        DesignatorEmptyFactor(
                          IdentDesignator(
                           a
                          ) [IdentDesignator]
                        ) [DesignatorEmptyFactor]
                      ) [MultiFactorTerm]
                    ) [SingleTermExprPositive]
                    AddopPlus(
                    ) [AddopPlus]
                    SingleFactorTerm(
                      NumConstFactor(
                       1
                      ) [NumConstFactor]
                    ) [SingleFactorTerm]
                  ) [MultiTermExpr]
                ) [DesignatorStmtAssignCorrect]
              ) [DesignatorStmtAssign]
            ) [SingleDesignatorStatement]
          ) [StatementSingle]
        ) [StatementListMultiple]
        StatementSingle(
          IfElseStatement(
            IfConditionMultiTerm(
              ConditionSingleTerm(
                CondSingleFactTerm(
                  CondSingleExprFact(
                    SingleTermExprPositive(
                      SingleFactorTerm(
                        MethodCallFactor(
                          MethodCall(
                            IdentDesignator(
                             verify
                            ) [IdentDesignator]
                            ActParsLeftParen(
                            ) [ActParsLeftParen]
                            ActParsNo(
                            ) [ActParsNo]
                            ActParsRightParen(
                            ) [ActParsRightParen]
                          ) [MethodCall]
                        ) [MethodCallFactor]
                      ) [SingleFactorTerm]
                    ) [SingleTermExprPositive]
                  ) [CondSingleExprFact]
                ) [CondSingleFactTerm]
              ) [ConditionSingleTerm]
              CondSingleFactTerm(
                CondMultiExprFact(
                  CondSingleExprFact(
                    SingleTermExprPositive(
                      SingleFactorTerm(
                        DesignatorEmptyFactor(
                          IdentArrayDesignator(
                           niz
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                NumConstFactor(
                                 2
                                ) [NumConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [IdentArrayDesignator]
                        ) [DesignatorEmptyFactor]
                      ) [SingleFactorTerm]
                    ) [SingleTermExprPositive]
                  ) [CondSingleExprFact]
                  RelopEQUAL(
                  ) [RelopEQUAL]
                  SingleTermExprPositive(
                    SingleFactorTerm(
                      NumConstFactor(
                       4
                      ) [NumConstFactor]
                    ) [SingleFactorTerm]
                  ) [SingleTermExprPositive]
                ) [CondMultiExprFact]
              ) [CondSingleFactTerm]
            ) [IfConditionMultiTerm]
            StatementSingle(
              SinglePrintStatement(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    MethodCallFactor(
                      MethodCall(
                        IdentDesignator(
                         ord
                        ) [IdentDesignator]
                        ActParsLeftParen(
                        ) [ActParsLeftParen]
                        ActParsYes(
                          ActParsSingleExpr(
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                CharConstFactor(
                                 A
                                ) [CharConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [ActParsSingleExpr]
                        ) [ActParsYes]
                        ActParsRightParen(
                        ) [ActParsRightParen]
                      ) [MethodCall]
                    ) [MethodCallFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
                NumConstNo(
                ) [NumConstNo]
              ) [SinglePrintStatement]
            ) [StatementSingle]
            StatementSingle(
              SinglePrintStatement(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    MethodCallFactor(
                      MethodCall(
                        IdentDesignator(
                         ord
                        ) [IdentDesignator]
                        ActParsLeftParen(
                        ) [ActParsLeftParen]
                        ActParsYes(
                          ActParsSingleExpr(
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                CharConstFactor(
                                 a
                                ) [CharConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [ActParsSingleExpr]
                        ) [ActParsYes]
                        ActParsRightParen(
                        ) [ActParsRightParen]
                      ) [MethodCall]
                    ) [MethodCallFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
                NumConstNo(
                ) [NumConstNo]
              ) [SinglePrintStatement]
            ) [StatementSingle]
          ) [IfElseStatement]
        ) [StatementSingle]
      ) [StatementListMultiple]
    ) [MethodDeclaration]
  ) [MethodDeclListMultiple]
) [Program]
INFO  21:03:47,491 - ===================================
INFO  21:03:47,494 - Method Call detected. Method name: sum
INFO  21:03:47,494 - Access to array element detected. Array name: niz
INFO  21:03:47,494 - Access to array element detected. Array name: niz
INFO  21:03:47,494 - Access to array element detected. Array name: niz
INFO  21:03:47,494 - Access to array element detected. Array name: niz
INFO  21:03:47,494 - Access to array element detected. Array name: niz
INFO  21:03:47,494 - Method Call detected. Method name: sum
INFO  21:03:47,494 - Method Call detected. Method name: verify
INFO  21:03:55,191 - Compiling source file: D:\source\repos\PP_Projekat\MicroJavaCompiler\test\program.mj
INFO  21:03:55,208 - #2 program
INFO  21:03:55,208 - #48 test302
INFO  21:03:55,208 - #7 const
INFO  21:03:55,209 - #48 int
INFO  21:03:55,209 - #48 jedan
INFO  21:03:55,209 - #27 =
INFO  21:03:55,209 - #51 1
INFO  21:03:55,209 - #38 ;
INFO  21:03:55,209 - #48 int
INFO  21:03:55,209 - #48 i
INFO  21:03:55,210 - #38 ;
INFO  21:03:55,210 - #48 bool
INFO  21:03:55,210 - #48 ibool
INFO  21:03:55,210 - #38 ;
INFO  21:03:55,210 - #48 int
INFO  21:03:55,210 - #48 niz2
INFO  21:03:55,210 - #38 ;
INFO  21:03:55,210 - #48 int
INFO  21:03:55,210 - #48 niz
INFO  21:03:55,210 - #42 [
INFO  21:03:55,211 - #43 ]
INFO  21:03:55,211 - #38 ;
INFO  21:03:55,211 - #48 int
INFO  21:03:55,211 - #48 a
INFO  21:03:55,211 - #38 ;
INFO  21:03:55,211 - #44 {
INFO  21:03:55,211 - #48 int
INFO  21:03:55,211 - #48 sum
INFO  21:03:55,211 - #40 (
INFO  21:03:55,212 - #48 int
INFO  21:03:55,212 - #48 z
INFO  21:03:55,212 - #39 ,
INFO  21:03:55,212 - #48 int
INFO  21:03:55,212 - #48 d
INFO  21:03:55,212 - #41 )
INFO  21:03:55,212 - #44 {
INFO  21:03:55,212 - #15 return
INFO  21:03:55,212 - #48 z
INFO  21:03:55,212 - #22 +
INFO  21:03:55,213 - #48 d
INFO  21:03:55,213 - #38 ;
INFO  21:03:55,213 - #45 }
INFO  21:03:55,213 - #48 int
INFO  21:03:55,213 - #48 inkrement
INFO  21:03:55,214 - #40 (
INFO  21:03:55,214 - #48 int
INFO  21:03:55,214 - #48 a
INFO  21:03:55,214 - #39 ,
INFO  21:03:55,214 - #48 int
INFO  21:03:55,214 - #48 inc
INFO  21:03:55,214 - #41 )
INFO  21:03:55,214 - #48 int
INFO  21:03:55,214 - #48 pom
INFO  21:03:55,214 - #38 ;
INFO  21:03:55,214 - #44 {
INFO  21:03:55,214 - #5 if
INFO  21:03:55,214 - #40 (
INFO  21:03:55,214 - #48 inc
INFO  21:03:55,214 - #28 ==
INFO  21:03:55,214 - #48 jedan
INFO  21:03:55,215 - #41 )
INFO  21:03:55,215 - #48 pom
INFO  21:03:55,215 - #27 =
INFO  21:03:55,215 - #51 1
INFO  21:03:55,215 - #38 ;
INFO  21:03:55,215 - #6 else
INFO  21:03:55,215 - #5 if
INFO  21:03:55,215 - #40 (
INFO  21:03:55,215 - #48 inc
INFO  21:03:55,215 - #28 ==
INFO  21:03:55,215 - #51 2
INFO  21:03:55,215 - #41 )
INFO  21:03:55,215 - #48 pom
INFO  21:03:55,216 - #27 =
INFO  21:03:55,216 - #48 a
INFO  21:03:55,216 - #38 ;
INFO  21:03:55,216 - #15 return
INFO  21:03:55,216 - #48 sum
INFO  21:03:55,216 - #40 (
INFO  21:03:55,216 - #48 a
INFO  21:03:55,216 - #39 ,
INFO  21:03:55,216 - #48 pom
INFO  21:03:55,216 - #41 )
INFO  21:03:55,216 - #38 ;
INFO  21:03:55,217 - #45 }
INFO  21:03:55,217 - #48 bool
INFO  21:03:55,217 - #48 verify
INFO  21:03:55,217 - #40 (
INFO  21:03:55,217 - #41 )
INFO  21:03:55,217 - #44 {
INFO  21:03:55,217 - #12 print
INFO  21:03:55,217 - #40 (
INFO  21:03:55,217 - #50 v
INFO  21:03:55,217 - #41 )
INFO  21:03:55,217 - #38 ;
INFO  21:03:55,217 - #15 return
INFO  21:03:55,217 - #49 false
INFO  21:03:55,217 - #38 ;
INFO  21:03:55,217 - #45 }
INFO  21:03:55,217 - #14 void
INFO  21:03:55,217 - #48 main
INFO  21:03:55,218 - #40 (
INFO  21:03:55,218 - #41 )
INFO  21:03:55,218 - #44 {
INFO  21:03:55,218 - #5 if
INFO  21:03:55,218 - #40 (
INFO  21:03:55,218 - #51 1
INFO  21:03:55,218 - #29 !=
INFO  21:03:55,218 - #51 1
INFO  21:03:55,218 - #41 )
INFO  21:03:55,218 - #12 print
INFO  21:03:55,218 - #40 (
INFO  21:03:55,218 - #23 -
INFO  21:03:55,218 - #51 6
INFO  21:03:55,218 - #41 )
INFO  21:03:55,218 - #38 ;
INFO  21:03:55,218 - #6 else
INFO  21:03:55,218 - #12 print
INFO  21:03:55,218 - #40 (
INFO  21:03:55,218 - #51 0
INFO  21:03:55,218 - #41 )
INFO  21:03:55,218 - #38 ;
INFO  21:03:55,218 - #45 }
INFO  21:03:55,218 - #45 }
INFO  21:03:55,219 - Program(
  ProgramName(
   test302
  ) [ProgramName]
  AllDeclListMultiple(
    AllDeclListMultiple(
      AllDeclListMultiple(
        AllDeclListMultiple(
          AllDeclListMultiple(
            AllDeclListMultiple(
              NoDecl(
              ) [NoDecl]
              ConstDeclaration(
                ConstDeclarationExpr(
                  Type(
                   int
                  ) [Type]
                  ConstAssignSingle(
                    ConstAssign(
                     jedan
                      NumberConst(
                       1
                      ) [NumberConst]
                    ) [ConstAssign]
                  ) [ConstAssignSingle]
                ) [ConstDeclarationExpr]
              ) [ConstDeclaration]
            ) [AllDeclListMultiple]
            GlobalVarDeclaration(
              GlobalVarDeclarationExpr(
                Type(
                 int
                ) [Type]
                GlobalVarDeclListSingle(
                  GlobalVarDeclarationSingle(
                   i
                    NoArray(
                    ) [NoArray]
                  ) [GlobalVarDeclarationSingle]
                ) [GlobalVarDeclListSingle]
              ) [GlobalVarDeclarationExpr]
            ) [GlobalVarDeclaration]
          ) [AllDeclListMultiple]
          GlobalVarDeclaration(
            GlobalVarDeclarationExpr(
              Type(
               bool
              ) [Type]
              GlobalVarDeclListSingle(
                GlobalVarDeclarationSingle(
                 ibool
                  NoArray(
                  ) [NoArray]
                ) [GlobalVarDeclarationSingle]
              ) [GlobalVarDeclListSingle]
            ) [GlobalVarDeclarationExpr]
          ) [GlobalVarDeclaration]
        ) [AllDeclListMultiple]
        GlobalVarDeclaration(
          GlobalVarDeclarationExpr(
            Type(
             int
            ) [Type]
            GlobalVarDeclListSingle(
              GlobalVarDeclarationSingle(
               niz2
                NoArray(
                ) [NoArray]
              ) [GlobalVarDeclarationSingle]
            ) [GlobalVarDeclListSingle]
          ) [GlobalVarDeclarationExpr]
        ) [GlobalVarDeclaration]
      ) [AllDeclListMultiple]
      GlobalVarDeclaration(
        GlobalVarDeclarationExpr(
          Type(
           int
          ) [Type]
          GlobalVarDeclListSingle(
            GlobalVarDeclarationSingle(
             niz
              ArrayBrackets(
              ) [ArrayBrackets]
            ) [GlobalVarDeclarationSingle]
          ) [GlobalVarDeclListSingle]
        ) [GlobalVarDeclarationExpr]
      ) [GlobalVarDeclaration]
    ) [AllDeclListMultiple]
    GlobalVarDeclaration(
      GlobalVarDeclarationExpr(
        Type(
         int
        ) [Type]
        GlobalVarDeclListSingle(
          GlobalVarDeclarationSingle(
           a
            NoArray(
            ) [NoArray]
          ) [GlobalVarDeclarationSingle]
        ) [GlobalVarDeclListSingle]
      ) [GlobalVarDeclarationExpr]
    ) [GlobalVarDeclaration]
  ) [AllDeclListMultiple]
  MethodDeclListMultiple(
    MethodDeclListMultiple(
      MethodDeclListMultiple(
        MethodDeclListMultiple(
          MethodDeclListNo(
          ) [MethodDeclListNo]
          MethodDeclaration(
            MethodSignatureParams(
              MethodTypeType(
                Type(
                 int
                ) [Type]
              ) [MethodTypeType]
              MethodName(
               sum
              ) [MethodName]
              FormParsMultiple(
                FormParsSingle(
                  FormParSingle(
                    Type(
                     int
                    ) [Type]
                   z
                    NoArray(
                    ) [NoArray]
                  ) [FormParSingle]
                ) [FormParsSingle]
                FormParSingle(
                  Type(
                   int
                  ) [Type]
                 d
                  NoArray(
                  ) [NoArray]
                ) [FormParSingle]
              ) [FormParsMultiple]
              FormParsEnd(
              ) [FormParsEnd]
            ) [MethodSignatureParams]
            NoVarDeclOption(
            ) [NoVarDeclOption]
            StatementListMultiple(
              StatementListNo(
              ) [StatementListNo]
              StatementSingle(
                SingleReturnExprStatement(
                  MultiTermExpr(
                    SingleTermExprPositive(
                      SingleFactorTerm(
                        DesignatorEmptyFactor(
                          IdentDesignator(
                           z
                          ) [IdentDesignator]
                        ) [DesignatorEmptyFactor]
                      ) [SingleFactorTerm]
                    ) [SingleTermExprPositive]
                    AddopPlus(
                    ) [AddopPlus]
                    SingleFactorTerm(
                      DesignatorEmptyFactor(
                        IdentDesignator(
                         d
                        ) [IdentDesignator]
                      ) [DesignatorEmptyFactor]
                    ) [SingleFactorTerm]
                  ) [MultiTermExpr]
                ) [SingleReturnExprStatement]
              ) [StatementSingle]
            ) [StatementListMultiple]
          ) [MethodDeclaration]
        ) [MethodDeclListMultiple]
        MethodDeclaration(
          MethodSignatureParams(
            MethodTypeType(
              Type(
               int
              ) [Type]
            ) [MethodTypeType]
            MethodName(
             inkrement
            ) [MethodName]
            FormParsMultiple(
              FormParsSingle(
                FormParSingle(
                  Type(
                   int
                  ) [Type]
                 a
                  NoArray(
                  ) [NoArray]
                ) [FormParSingle]
              ) [FormParsSingle]
              FormParSingle(
                Type(
                 int
                ) [Type]
               inc
                NoArray(
                ) [NoArray]
              ) [FormParSingle]
            ) [FormParsMultiple]
            FormParsEnd(
            ) [FormParsEnd]
          ) [MethodSignatureParams]
          VarDeclOptionTrue(
            NoVarDeclOption(
            ) [NoVarDeclOption]
            VarDeclarationExpr(
              Type(
               int
              ) [Type]
              VarDeclListSingle(
                VarDeclSingle(
                 pom
                  NoArray(
                  ) [NoArray]
                ) [VarDeclSingle]
              ) [VarDeclListSingle]
            ) [VarDeclarationExpr]
          ) [VarDeclOptionTrue]
          StatementListMultiple(
            StatementListMultiple(
              StatementListNo(
              ) [StatementListNo]
              StatementSingle(
                IfElseStatement(
                  IfConditionSingleTerm(
                    CondSingleFactTerm(
                      CondMultiExprFact(
                        CondSingleExprFact(
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              DesignatorEmptyFactor(
                                IdentDesignator(
                                 inc
                                ) [IdentDesignator]
                              ) [DesignatorEmptyFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [CondSingleExprFact]
                        RelopEQUAL(
                        ) [RelopEQUAL]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            DesignatorEmptyFactor(
                              IdentDesignator(
                               jedan
                              ) [IdentDesignator]
                            ) [DesignatorEmptyFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [CondMultiExprFact]
                    ) [CondSingleFactTerm]
                  ) [IfConditionSingleTerm]
                  StatementSingle(
                    SingleDesignatorStatement(
                      DesignatorStmtAssign(
                        DesignatorStmtAssignCorrect(
                          IdentDesignator(
                           pom
                          ) [IdentDesignator]
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              NumConstFactor(
                               1
                              ) [NumConstFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [DesignatorStmtAssignCorrect]
                      ) [DesignatorStmtAssign]
                    ) [SingleDesignatorStatement]
                  ) [StatementSingle]
                  StatementSingle(
                    IfStatement(
                      IfConditionSingleTerm(
                        CondSingleFactTerm(
                          CondMultiExprFact(
                            CondSingleExprFact(
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentDesignator(
                                     inc
                                    ) [IdentDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [CondSingleExprFact]
                            RelopEQUAL(
                            ) [RelopEQUAL]
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                NumConstFactor(
                                 2
                                ) [NumConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [CondMultiExprFact]
                        ) [CondSingleFactTerm]
                      ) [IfConditionSingleTerm]
                      StatementSingle(
                        SingleDesignatorStatement(
                          DesignatorStmtAssign(
                            DesignatorStmtAssignCorrect(
                              IdentDesignator(
                               pom
                              ) [IdentDesignator]
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentDesignator(
                                     a
                                    ) [IdentDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [DesignatorStmtAssignCorrect]
                          ) [DesignatorStmtAssign]
                        ) [SingleDesignatorStatement]
                      ) [StatementSingle]
                    ) [IfStatement]
                  ) [StatementSingle]
                ) [IfElseStatement]
              ) [StatementSingle]
            ) [StatementListMultiple]
            StatementSingle(
              SingleReturnExprStatement(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    MethodCallFactor(
                      MethodCall(
                        IdentDesignator(
                         sum
                        ) [IdentDesignator]
                        ActParsLeftParen(
                        ) [ActParsLeftParen]
                        ActParsYes(
                          ActParsMultiExpr(
                            ActParsSingleExpr(
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentDesignator(
                                     a
                                    ) [IdentDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [ActParsSingleExpr]
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                DesignatorEmptyFactor(
                                  IdentDesignator(
                                   pom
                                  ) [IdentDesignator]
                                ) [DesignatorEmptyFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [ActParsMultiExpr]
                        ) [ActParsYes]
                        ActParsRightParen(
                        ) [ActParsRightParen]
                      ) [MethodCall]
                    ) [MethodCallFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
              ) [SingleReturnExprStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
        ) [MethodDeclaration]
      ) [MethodDeclListMultiple]
      MethodDeclaration(
        MethodSignaturePlain(
          MethodTypeType(
            Type(
             bool
            ) [Type]
          ) [MethodTypeType]
          MethodName(
           verify
          ) [MethodName]
        ) [MethodSignaturePlain]
        NoVarDeclOption(
        ) [NoVarDeclOption]
        StatementListMultiple(
          StatementListMultiple(
            StatementListNo(
            ) [StatementListNo]
            StatementSingle(
              SinglePrintStatement(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    CharConstFactor(
                     v
                    ) [CharConstFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
                NumConstNo(
                ) [NumConstNo]
              ) [SinglePrintStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
          StatementSingle(
            SingleReturnExprStatement(
              SingleTermExprPositive(
                SingleFactorTerm(
                  BoolConstFactor(
                   false
                  ) [BoolConstFactor]
                ) [SingleFactorTerm]
              ) [SingleTermExprPositive]
            ) [SingleReturnExprStatement]
          ) [StatementSingle]
        ) [StatementListMultiple]
      ) [MethodDeclaration]
    ) [MethodDeclListMultiple]
    MethodDeclaration(
      MethodSignaturePlain(
        MethodTypeVoid(
        ) [MethodTypeVoid]
        MethodName(
         main
        ) [MethodName]
      ) [MethodSignaturePlain]
      NoVarDeclOption(
      ) [NoVarDeclOption]
      StatementListMultiple(
        StatementListNo(
        ) [StatementListNo]
        StatementSingle(
          IfElseStatement(
            IfConditionSingleTerm(
              CondSingleFactTerm(
                CondMultiExprFact(
                  CondSingleExprFact(
                    SingleTermExprPositive(
                      SingleFactorTerm(
                        NumConstFactor(
                         1
                        ) [NumConstFactor]
                      ) [SingleFactorTerm]
                    ) [SingleTermExprPositive]
                  ) [CondSingleExprFact]
                  RelopNOTEQUAL(
                  ) [RelopNOTEQUAL]
                  SingleTermExprPositive(
                    SingleFactorTerm(
                      NumConstFactor(
                       1
                      ) [NumConstFactor]
                    ) [SingleFactorTerm]
                  ) [SingleTermExprPositive]
                ) [CondMultiExprFact]
              ) [CondSingleFactTerm]
            ) [IfConditionSingleTerm]
            StatementSingle(
              SinglePrintStatement(
                SingleTermExprNegative(
                  SingleFactorTerm(
                    NumConstFactor(
                     6
                    ) [NumConstFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprNegative]
                NumConstNo(
                ) [NumConstNo]
              ) [SinglePrintStatement]
            ) [StatementSingle]
            StatementSingle(
              SinglePrintStatement(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    NumConstFactor(
                     0
                    ) [NumConstFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
                NumConstNo(
                ) [NumConstNo]
              ) [SinglePrintStatement]
            ) [StatementSingle]
          ) [IfElseStatement]
        ) [StatementSingle]
      ) [StatementListMultiple]
    ) [MethodDeclaration]
  ) [MethodDeclListMultiple]
) [Program]
INFO  21:03:55,219 - ===================================
INFO  21:03:55,223 - Method Call detected. Method name: sum
INFO  21:03:55,223 - Compile successful!
INFO  21:04:04,591 - Compiling source file: D:\source\repos\PP_Projekat\MicroJavaCompiler\test\program.mj
INFO  21:04:04,609 - #2 program
INFO  21:04:04,609 - #48 test302
INFO  21:04:04,609 - #7 const
INFO  21:04:04,609 - #48 int
INFO  21:04:04,610 - #48 jedan
INFO  21:04:04,610 - #27 =
INFO  21:04:04,610 - #51 1
INFO  21:04:04,610 - #38 ;
INFO  21:04:04,610 - #48 int
INFO  21:04:04,610 - #48 i
INFO  21:04:04,610 - #38 ;
INFO  21:04:04,611 - #48 bool
INFO  21:04:04,611 - #48 ibool
INFO  21:04:04,611 - #38 ;
INFO  21:04:04,611 - #48 int
INFO  21:04:04,611 - #48 niz2
INFO  21:04:04,611 - #38 ;
INFO  21:04:04,611 - #48 int
INFO  21:04:04,611 - #48 niz
INFO  21:04:04,611 - #42 [
INFO  21:04:04,611 - #43 ]
INFO  21:04:04,611 - #38 ;
INFO  21:04:04,611 - #48 int
INFO  21:04:04,611 - #48 a
INFO  21:04:04,611 - #38 ;
INFO  21:04:04,612 - #44 {
INFO  21:04:04,612 - #48 int
INFO  21:04:04,612 - #48 sum
INFO  21:04:04,612 - #40 (
INFO  21:04:04,612 - #48 int
INFO  21:04:04,612 - #48 z
INFO  21:04:04,612 - #39 ,
INFO  21:04:04,612 - #48 int
INFO  21:04:04,612 - #48 d
INFO  21:04:04,612 - #41 )
INFO  21:04:04,612 - #44 {
INFO  21:04:04,613 - #15 return
INFO  21:04:04,613 - #48 z
INFO  21:04:04,613 - #22 +
INFO  21:04:04,613 - #48 d
INFO  21:04:04,614 - #38 ;
INFO  21:04:04,614 - #45 }
INFO  21:04:04,614 - #48 int
INFO  21:04:04,614 - #48 inkrement
INFO  21:04:04,614 - #40 (
INFO  21:04:04,614 - #48 int
INFO  21:04:04,614 - #48 a
INFO  21:04:04,614 - #39 ,
INFO  21:04:04,614 - #48 int
INFO  21:04:04,614 - #48 inc
INFO  21:04:04,614 - #41 )
INFO  21:04:04,614 - #48 int
INFO  21:04:04,614 - #48 pom
INFO  21:04:04,614 - #38 ;
INFO  21:04:04,615 - #44 {
INFO  21:04:04,615 - #5 if
INFO  21:04:04,615 - #40 (
INFO  21:04:04,615 - #48 inc
INFO  21:04:04,615 - #28 ==
INFO  21:04:04,615 - #48 jedan
INFO  21:04:04,615 - #41 )
INFO  21:04:04,615 - #48 pom
INFO  21:04:04,615 - #27 =
INFO  21:04:04,616 - #51 1
INFO  21:04:04,616 - #38 ;
INFO  21:04:04,616 - #6 else
INFO  21:04:04,616 - #5 if
INFO  21:04:04,616 - #40 (
INFO  21:04:04,616 - #48 inc
INFO  21:04:04,616 - #28 ==
INFO  21:04:04,616 - #51 2
INFO  21:04:04,616 - #41 )
INFO  21:04:04,616 - #48 pom
INFO  21:04:04,616 - #27 =
INFO  21:04:04,616 - #48 a
INFO  21:04:04,616 - #38 ;
INFO  21:04:04,616 - #15 return
INFO  21:04:04,616 - #48 sum
INFO  21:04:04,616 - #40 (
INFO  21:04:04,616 - #48 a
INFO  21:04:04,617 - #39 ,
INFO  21:04:04,617 - #48 pom
INFO  21:04:04,617 - #41 )
INFO  21:04:04,617 - #38 ;
INFO  21:04:04,617 - #45 }
INFO  21:04:04,617 - #48 bool
INFO  21:04:04,617 - #48 verify
INFO  21:04:04,617 - #40 (
INFO  21:04:04,617 - #41 )
INFO  21:04:04,617 - #44 {
INFO  21:04:04,618 - #12 print
INFO  21:04:04,618 - #40 (
INFO  21:04:04,618 - #50 v
INFO  21:04:04,618 - #41 )
INFO  21:04:04,618 - #38 ;
INFO  21:04:04,618 - #15 return
INFO  21:04:04,618 - #49 false
INFO  21:04:04,618 - #38 ;
INFO  21:04:04,618 - #45 }
INFO  21:04:04,618 - #14 void
INFO  21:04:04,618 - #48 main
INFO  21:04:04,618 - #40 (
INFO  21:04:04,618 - #41 )
INFO  21:04:04,618 - #44 {
INFO  21:04:04,619 - #5 if
INFO  21:04:04,619 - #40 (
INFO  21:04:04,619 - #51 1
INFO  21:04:04,619 - #29 !=
INFO  21:04:04,619 - #51 1
INFO  21:04:04,619 - #41 )
INFO  21:04:04,619 - #12 print
INFO  21:04:04,619 - #40 (
INFO  21:04:04,619 - #23 -
INFO  21:04:04,619 - #51 6
INFO  21:04:04,619 - #41 )
INFO  21:04:04,619 - #38 ;
INFO  21:04:04,619 - #6 else
INFO  21:04:04,619 - #12 print
INFO  21:04:04,619 - #40 (
INFO  21:04:04,619 - #51 0
INFO  21:04:04,619 - #41 )
INFO  21:04:04,619 - #38 ;
INFO  21:04:04,619 - #48 ibool
INFO  21:04:04,619 - #27 =
INFO  21:04:04,619 - #49 false
INFO  21:04:04,619 - #38 ;
INFO  21:04:04,619 - #48 i
INFO  21:04:04,620 - #27 =
INFO  21:04:04,620 - #51 0
INFO  21:04:04,620 - #38 ;
INFO  21:04:04,620 - #9 do
INFO  21:04:04,620 - #44 {
INFO  21:04:04,620 - #5 if
INFO  21:04:04,620 - #40 (
INFO  21:04:04,620 - #48 i
INFO  21:04:04,620 - #28 ==
INFO  21:04:04,620 - #51 2
INFO  21:04:04,620 - #41 )
INFO  21:04:04,620 - #48 ibool
INFO  21:04:04,620 - #27 =
INFO  21:04:04,620 - #49 true
INFO  21:04:04,620 - #38 ;
INFO  21:04:04,620 - #48 i
INFO  21:04:04,620 - #36 ++
INFO  21:04:04,620 - #38 ;
INFO  21:04:04,620 - #45 }
INFO  21:04:04,620 - #10 while
INFO  21:04:04,621 - #40 (
INFO  21:04:04,621 - #48 i
INFO  21:04:04,621 - #32 <
INFO  21:04:04,621 - #51 5
INFO  21:04:04,621 - #41 )
INFO  21:04:04,621 - #38 ;
INFO  21:04:04,621 - #5 if
INFO  21:04:04,621 - #40 (
INFO  21:04:04,621 - #48 ibool
INFO  21:04:04,621 - #41 )
INFO  21:04:04,621 - #5 if
INFO  21:04:04,621 - #40 (
INFO  21:04:04,621 - #48 i
INFO  21:04:04,621 - #28 ==
INFO  21:04:04,621 - #51 5
INFO  21:04:04,621 - #41 )
INFO  21:04:04,621 - #12 print
INFO  21:04:04,621 - #40 (
INFO  21:04:04,621 - #51 1
INFO  21:04:04,621 - #41 )
INFO  21:04:04,621 - #38 ;
INFO  21:04:04,621 - #6 else
INFO  21:04:04,621 - #12 print
INFO  21:04:04,621 - #40 (
INFO  21:04:04,621 - #23 -
INFO  21:04:04,621 - #51 1
INFO  21:04:04,621 - #41 )
INFO  21:04:04,621 - #38 ;
INFO  21:04:04,621 - #45 }
INFO  21:04:04,621 - #45 }
INFO  21:04:04,623 - Program(
  ProgramName(
   test302
  ) [ProgramName]
  AllDeclListMultiple(
    AllDeclListMultiple(
      AllDeclListMultiple(
        AllDeclListMultiple(
          AllDeclListMultiple(
            AllDeclListMultiple(
              NoDecl(
              ) [NoDecl]
              ConstDeclaration(
                ConstDeclarationExpr(
                  Type(
                   int
                  ) [Type]
                  ConstAssignSingle(
                    ConstAssign(
                     jedan
                      NumberConst(
                       1
                      ) [NumberConst]
                    ) [ConstAssign]
                  ) [ConstAssignSingle]
                ) [ConstDeclarationExpr]
              ) [ConstDeclaration]
            ) [AllDeclListMultiple]
            GlobalVarDeclaration(
              GlobalVarDeclarationExpr(
                Type(
                 int
                ) [Type]
                GlobalVarDeclListSingle(
                  GlobalVarDeclarationSingle(
                   i
                    NoArray(
                    ) [NoArray]
                  ) [GlobalVarDeclarationSingle]
                ) [GlobalVarDeclListSingle]
              ) [GlobalVarDeclarationExpr]
            ) [GlobalVarDeclaration]
          ) [AllDeclListMultiple]
          GlobalVarDeclaration(
            GlobalVarDeclarationExpr(
              Type(
               bool
              ) [Type]
              GlobalVarDeclListSingle(
                GlobalVarDeclarationSingle(
                 ibool
                  NoArray(
                  ) [NoArray]
                ) [GlobalVarDeclarationSingle]
              ) [GlobalVarDeclListSingle]
            ) [GlobalVarDeclarationExpr]
          ) [GlobalVarDeclaration]
        ) [AllDeclListMultiple]
        GlobalVarDeclaration(
          GlobalVarDeclarationExpr(
            Type(
             int
            ) [Type]
            GlobalVarDeclListSingle(
              GlobalVarDeclarationSingle(
               niz2
                NoArray(
                ) [NoArray]
              ) [GlobalVarDeclarationSingle]
            ) [GlobalVarDeclListSingle]
          ) [GlobalVarDeclarationExpr]
        ) [GlobalVarDeclaration]
      ) [AllDeclListMultiple]
      GlobalVarDeclaration(
        GlobalVarDeclarationExpr(
          Type(
           int
          ) [Type]
          GlobalVarDeclListSingle(
            GlobalVarDeclarationSingle(
             niz
              ArrayBrackets(
              ) [ArrayBrackets]
            ) [GlobalVarDeclarationSingle]
          ) [GlobalVarDeclListSingle]
        ) [GlobalVarDeclarationExpr]
      ) [GlobalVarDeclaration]
    ) [AllDeclListMultiple]
    GlobalVarDeclaration(
      GlobalVarDeclarationExpr(
        Type(
         int
        ) [Type]
        GlobalVarDeclListSingle(
          GlobalVarDeclarationSingle(
           a
            NoArray(
            ) [NoArray]
          ) [GlobalVarDeclarationSingle]
        ) [GlobalVarDeclListSingle]
      ) [GlobalVarDeclarationExpr]
    ) [GlobalVarDeclaration]
  ) [AllDeclListMultiple]
  MethodDeclListMultiple(
    MethodDeclListMultiple(
      MethodDeclListMultiple(
        MethodDeclListMultiple(
          MethodDeclListNo(
          ) [MethodDeclListNo]
          MethodDeclaration(
            MethodSignatureParams(
              MethodTypeType(
                Type(
                 int
                ) [Type]
              ) [MethodTypeType]
              MethodName(
               sum
              ) [MethodName]
              FormParsMultiple(
                FormParsSingle(
                  FormParSingle(
                    Type(
                     int
                    ) [Type]
                   z
                    NoArray(
                    ) [NoArray]
                  ) [FormParSingle]
                ) [FormParsSingle]
                FormParSingle(
                  Type(
                   int
                  ) [Type]
                 d
                  NoArray(
                  ) [NoArray]
                ) [FormParSingle]
              ) [FormParsMultiple]
              FormParsEnd(
              ) [FormParsEnd]
            ) [MethodSignatureParams]
            NoVarDeclOption(
            ) [NoVarDeclOption]
            StatementListMultiple(
              StatementListNo(
              ) [StatementListNo]
              StatementSingle(
                SingleReturnExprStatement(
                  MultiTermExpr(
                    SingleTermExprPositive(
                      SingleFactorTerm(
                        DesignatorEmptyFactor(
                          IdentDesignator(
                           z
                          ) [IdentDesignator]
                        ) [DesignatorEmptyFactor]
                      ) [SingleFactorTerm]
                    ) [SingleTermExprPositive]
                    AddopPlus(
                    ) [AddopPlus]
                    SingleFactorTerm(
                      DesignatorEmptyFactor(
                        IdentDesignator(
                         d
                        ) [IdentDesignator]
                      ) [DesignatorEmptyFactor]
                    ) [SingleFactorTerm]
                  ) [MultiTermExpr]
                ) [SingleReturnExprStatement]
              ) [StatementSingle]
            ) [StatementListMultiple]
          ) [MethodDeclaration]
        ) [MethodDeclListMultiple]
        MethodDeclaration(
          MethodSignatureParams(
            MethodTypeType(
              Type(
               int
              ) [Type]
            ) [MethodTypeType]
            MethodName(
             inkrement
            ) [MethodName]
            FormParsMultiple(
              FormParsSingle(
                FormParSingle(
                  Type(
                   int
                  ) [Type]
                 a
                  NoArray(
                  ) [NoArray]
                ) [FormParSingle]
              ) [FormParsSingle]
              FormParSingle(
                Type(
                 int
                ) [Type]
               inc
                NoArray(
                ) [NoArray]
              ) [FormParSingle]
            ) [FormParsMultiple]
            FormParsEnd(
            ) [FormParsEnd]
          ) [MethodSignatureParams]
          VarDeclOptionTrue(
            NoVarDeclOption(
            ) [NoVarDeclOption]
            VarDeclarationExpr(
              Type(
               int
              ) [Type]
              VarDeclListSingle(
                VarDeclSingle(
                 pom
                  NoArray(
                  ) [NoArray]
                ) [VarDeclSingle]
              ) [VarDeclListSingle]
            ) [VarDeclarationExpr]
          ) [VarDeclOptionTrue]
          StatementListMultiple(
            StatementListMultiple(
              StatementListNo(
              ) [StatementListNo]
              StatementSingle(
                IfElseStatement(
                  IfConditionSingleTerm(
                    CondSingleFactTerm(
                      CondMultiExprFact(
                        CondSingleExprFact(
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              DesignatorEmptyFactor(
                                IdentDesignator(
                                 inc
                                ) [IdentDesignator]
                              ) [DesignatorEmptyFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [CondSingleExprFact]
                        RelopEQUAL(
                        ) [RelopEQUAL]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            DesignatorEmptyFactor(
                              IdentDesignator(
                               jedan
                              ) [IdentDesignator]
                            ) [DesignatorEmptyFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [CondMultiExprFact]
                    ) [CondSingleFactTerm]
                  ) [IfConditionSingleTerm]
                  StatementSingle(
                    SingleDesignatorStatement(
                      DesignatorStmtAssign(
                        DesignatorStmtAssignCorrect(
                          IdentDesignator(
                           pom
                          ) [IdentDesignator]
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              NumConstFactor(
                               1
                              ) [NumConstFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [DesignatorStmtAssignCorrect]
                      ) [DesignatorStmtAssign]
                    ) [SingleDesignatorStatement]
                  ) [StatementSingle]
                  StatementSingle(
                    IfStatement(
                      IfConditionSingleTerm(
                        CondSingleFactTerm(
                          CondMultiExprFact(
                            CondSingleExprFact(
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentDesignator(
                                     inc
                                    ) [IdentDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [CondSingleExprFact]
                            RelopEQUAL(
                            ) [RelopEQUAL]
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                NumConstFactor(
                                 2
                                ) [NumConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [CondMultiExprFact]
                        ) [CondSingleFactTerm]
                      ) [IfConditionSingleTerm]
                      StatementSingle(
                        SingleDesignatorStatement(
                          DesignatorStmtAssign(
                            DesignatorStmtAssignCorrect(
                              IdentDesignator(
                               pom
                              ) [IdentDesignator]
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentDesignator(
                                     a
                                    ) [IdentDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [DesignatorStmtAssignCorrect]
                          ) [DesignatorStmtAssign]
                        ) [SingleDesignatorStatement]
                      ) [StatementSingle]
                    ) [IfStatement]
                  ) [StatementSingle]
                ) [IfElseStatement]
              ) [StatementSingle]
            ) [StatementListMultiple]
            StatementSingle(
              SingleReturnExprStatement(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    MethodCallFactor(
                      MethodCall(
                        IdentDesignator(
                         sum
                        ) [IdentDesignator]
                        ActParsLeftParen(
                        ) [ActParsLeftParen]
                        ActParsYes(
                          ActParsMultiExpr(
                            ActParsSingleExpr(
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentDesignator(
                                     a
                                    ) [IdentDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [ActParsSingleExpr]
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                DesignatorEmptyFactor(
                                  IdentDesignator(
                                   pom
                                  ) [IdentDesignator]
                                ) [DesignatorEmptyFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [ActParsMultiExpr]
                        ) [ActParsYes]
                        ActParsRightParen(
                        ) [ActParsRightParen]
                      ) [MethodCall]
                    ) [MethodCallFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
              ) [SingleReturnExprStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
        ) [MethodDeclaration]
      ) [MethodDeclListMultiple]
      MethodDeclaration(
        MethodSignaturePlain(
          MethodTypeType(
            Type(
             bool
            ) [Type]
          ) [MethodTypeType]
          MethodName(
           verify
          ) [MethodName]
        ) [MethodSignaturePlain]
        NoVarDeclOption(
        ) [NoVarDeclOption]
        StatementListMultiple(
          StatementListMultiple(
            StatementListNo(
            ) [StatementListNo]
            StatementSingle(
              SinglePrintStatement(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    CharConstFactor(
                     v
                    ) [CharConstFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
                NumConstNo(
                ) [NumConstNo]
              ) [SinglePrintStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
          StatementSingle(
            SingleReturnExprStatement(
              SingleTermExprPositive(
                SingleFactorTerm(
                  BoolConstFactor(
                   false
                  ) [BoolConstFactor]
                ) [SingleFactorTerm]
              ) [SingleTermExprPositive]
            ) [SingleReturnExprStatement]
          ) [StatementSingle]
        ) [StatementListMultiple]
      ) [MethodDeclaration]
    ) [MethodDeclListMultiple]
    MethodDeclaration(
      MethodSignaturePlain(
        MethodTypeVoid(
        ) [MethodTypeVoid]
        MethodName(
         main
        ) [MethodName]
      ) [MethodSignaturePlain]
      NoVarDeclOption(
      ) [NoVarDeclOption]
      StatementListMultiple(
        StatementListMultiple(
          StatementListMultiple(
            StatementListMultiple(
              StatementListMultiple(
                StatementListNo(
                ) [StatementListNo]
                StatementSingle(
                  IfElseStatement(
                    IfConditionSingleTerm(
                      CondSingleFactTerm(
                        CondMultiExprFact(
                          CondSingleExprFact(
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                NumConstFactor(
                                 1
                                ) [NumConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [CondSingleExprFact]
                          RelopNOTEQUAL(
                          ) [RelopNOTEQUAL]
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              NumConstFactor(
                               1
                              ) [NumConstFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [CondMultiExprFact]
                      ) [CondSingleFactTerm]
                    ) [IfConditionSingleTerm]
                    StatementSingle(
                      SinglePrintStatement(
                        SingleTermExprNegative(
                          SingleFactorTerm(
                            NumConstFactor(
                             6
                            ) [NumConstFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprNegative]
                        NumConstNo(
                        ) [NumConstNo]
                      ) [SinglePrintStatement]
                    ) [StatementSingle]
                    StatementSingle(
                      SinglePrintStatement(
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            NumConstFactor(
                             0
                            ) [NumConstFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                        NumConstNo(
                        ) [NumConstNo]
                      ) [SinglePrintStatement]
                    ) [StatementSingle]
                  ) [IfElseStatement]
                ) [StatementSingle]
              ) [StatementListMultiple]
              StatementSingle(
                SingleDesignatorStatement(
                  DesignatorStmtAssign(
                    DesignatorStmtAssignCorrect(
                      IdentDesignator(
                       ibool
                      ) [IdentDesignator]
                      SingleTermExprPositive(
                        SingleFactorTerm(
                          BoolConstFactor(
                           false
                          ) [BoolConstFactor]
                        ) [SingleFactorTerm]
                      ) [SingleTermExprPositive]
                    ) [DesignatorStmtAssignCorrect]
                  ) [DesignatorStmtAssign]
                ) [SingleDesignatorStatement]
              ) [StatementSingle]
            ) [StatementListMultiple]
            StatementSingle(
              SingleDesignatorStatement(
                DesignatorStmtAssign(
                  DesignatorStmtAssignCorrect(
                    IdentDesignator(
                     i
                    ) [IdentDesignator]
                    SingleTermExprPositive(
                      SingleFactorTerm(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactorTerm]
                    ) [SingleTermExprPositive]
                  ) [DesignatorStmtAssignCorrect]
                ) [DesignatorStmtAssign]
              ) [SingleDesignatorStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
          StatementSingle(
            DoWhileStatement(
              DoEnter(
              ) [DoEnter]
              StatementListMultiple(
                StatementListNo(
                ) [StatementListNo]
                StatementMultiple(
                  StatementsInBraces(
                    StatementListMultiple(
                      StatementListMultiple(
                        StatementListNo(
                        ) [StatementListNo]
                        StatementSingle(
                          IfStatement(
                            IfConditionSingleTerm(
                              CondSingleFactTerm(
                                CondMultiExprFact(
                                  CondSingleExprFact(
                                    SingleTermExprPositive(
                                      SingleFactorTerm(
                                        DesignatorEmptyFactor(
                                          IdentDesignator(
                                           i
                                          ) [IdentDesignator]
                                        ) [DesignatorEmptyFactor]
                                      ) [SingleFactorTerm]
                                    ) [SingleTermExprPositive]
                                  ) [CondSingleExprFact]
                                  RelopEQUAL(
                                  ) [RelopEQUAL]
                                  SingleTermExprPositive(
                                    SingleFactorTerm(
                                      NumConstFactor(
                                       2
                                      ) [NumConstFactor]
                                    ) [SingleFactorTerm]
                                  ) [SingleTermExprPositive]
                                ) [CondMultiExprFact]
                              ) [CondSingleFactTerm]
                            ) [IfConditionSingleTerm]
                            StatementSingle(
                              SingleDesignatorStatement(
                                DesignatorStmtAssign(
                                  DesignatorStmtAssignCorrect(
                                    IdentDesignator(
                                     ibool
                                    ) [IdentDesignator]
                                    SingleTermExprPositive(
                                      SingleFactorTerm(
                                        BoolConstFactor(
                                         true
                                        ) [BoolConstFactor]
                                      ) [SingleFactorTerm]
                                    ) [SingleTermExprPositive]
                                  ) [DesignatorStmtAssignCorrect]
                                ) [DesignatorStmtAssign]
                              ) [SingleDesignatorStatement]
                            ) [StatementSingle]
                          ) [IfStatement]
                        ) [StatementSingle]
                      ) [StatementListMultiple]
                      StatementSingle(
                        SingleDesignatorStatement(
                          DesignatorStmtPlusPlus(
                            IdentDesignator(
                             i
                            ) [IdentDesignator]
                          ) [DesignatorStmtPlusPlus]
                        ) [SingleDesignatorStatement]
                      ) [StatementSingle]
                    ) [StatementListMultiple]
                  ) [StatementsInBraces]
                ) [StatementMultiple]
              ) [StatementListMultiple]
              ConditionSingleTerm(
                CondSingleFactTerm(
                  CondMultiExprFact(
                    CondSingleExprFact(
                      SingleTermExprPositive(
                        SingleFactorTerm(
                          DesignatorEmptyFactor(
                            IdentDesignator(
                             i
                            ) [IdentDesignator]
                          ) [DesignatorEmptyFactor]
                        ) [SingleFactorTerm]
                      ) [SingleTermExprPositive]
                    ) [CondSingleExprFact]
                    RelopLS(
                    ) [RelopLS]
                    SingleTermExprPositive(
                      SingleFactorTerm(
                        NumConstFactor(
                         5
                        ) [NumConstFactor]
                      ) [SingleFactorTerm]
                    ) [SingleTermExprPositive]
                  ) [CondMultiExprFact]
                ) [CondSingleFactTerm]
              ) [ConditionSingleTerm]
            ) [DoWhileStatement]
          ) [StatementSingle]
        ) [StatementListMultiple]
        StatementSingle(
          IfStatement(
            IfConditionSingleTerm(
              CondSingleFactTerm(
                CondSingleExprFact(
                  SingleTermExprPositive(
                    SingleFactorTerm(
                      DesignatorEmptyFactor(
                        IdentDesignator(
                         ibool
                        ) [IdentDesignator]
                      ) [DesignatorEmptyFactor]
                    ) [SingleFactorTerm]
                  ) [SingleTermExprPositive]
                ) [CondSingleExprFact]
              ) [CondSingleFactTerm]
            ) [IfConditionSingleTerm]
            StatementSingle(
              IfElseStatement(
                IfConditionSingleTerm(
                  CondSingleFactTerm(
                    CondMultiExprFact(
                      CondSingleExprFact(
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            DesignatorEmptyFactor(
                              IdentDesignator(
                               i
                              ) [IdentDesignator]
                            ) [DesignatorEmptyFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [CondSingleExprFact]
                      RelopEQUAL(
                      ) [RelopEQUAL]
                      SingleTermExprPositive(
                        SingleFactorTerm(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactorTerm]
                      ) [SingleTermExprPositive]
                    ) [CondMultiExprFact]
                  ) [CondSingleFactTerm]
                ) [IfConditionSingleTerm]
                StatementSingle(
                  SinglePrintStatement(
                    SingleTermExprPositive(
                      SingleFactorTerm(
                        NumConstFactor(
                         1
                        ) [NumConstFactor]
                      ) [SingleFactorTerm]
                    ) [SingleTermExprPositive]
                    NumConstNo(
                    ) [NumConstNo]
                  ) [SinglePrintStatement]
                ) [StatementSingle]
                StatementSingle(
                  SinglePrintStatement(
                    SingleTermExprNegative(
                      SingleFactorTerm(
                        NumConstFactor(
                         1
                        ) [NumConstFactor]
                      ) [SingleFactorTerm]
                    ) [SingleTermExprNegative]
                    NumConstNo(
                    ) [NumConstNo]
                  ) [SinglePrintStatement]
                ) [StatementSingle]
              ) [IfElseStatement]
            ) [StatementSingle]
          ) [IfStatement]
        ) [StatementSingle]
      ) [StatementListMultiple]
    ) [MethodDeclaration]
  ) [MethodDeclListMultiple]
) [Program]
INFO  21:04:04,623 - ===================================
INFO  21:04:04,626 - Method Call detected. Method name: sum
INFO  21:04:04,627 - Compile successful!
INFO  21:04:11,799 - Compiling source file: D:\source\repos\PP_Projekat\MicroJavaCompiler\test\program.mj
INFO  21:04:11,817 - #2 program
INFO  21:04:11,817 - #48 test302
INFO  21:04:11,817 - #7 const
INFO  21:04:11,817 - #48 int
INFO  21:04:11,817 - #48 jedan
INFO  21:04:11,818 - #27 =
INFO  21:04:11,818 - #51 1
INFO  21:04:11,818 - #38 ;
INFO  21:04:11,818 - #48 int
INFO  21:04:11,818 - #48 i
INFO  21:04:11,818 - #38 ;
INFO  21:04:11,819 - #48 bool
INFO  21:04:11,819 - #48 ibool
INFO  21:04:11,819 - #38 ;
INFO  21:04:11,819 - #48 int
INFO  21:04:11,819 - #48 niz2
INFO  21:04:11,819 - #38 ;
INFO  21:04:11,819 - #48 int
INFO  21:04:11,819 - #48 niz
INFO  21:04:11,819 - #42 [
INFO  21:04:11,819 - #43 ]
INFO  21:04:11,819 - #38 ;
INFO  21:04:11,819 - #48 int
INFO  21:04:11,819 - #48 a
INFO  21:04:11,819 - #38 ;
INFO  21:04:11,819 - #44 {
INFO  21:04:11,819 - #48 int
INFO  21:04:11,820 - #48 sum
INFO  21:04:11,820 - #40 (
INFO  21:04:11,820 - #48 int
INFO  21:04:11,820 - #48 z
INFO  21:04:11,820 - #39 ,
INFO  21:04:11,820 - #48 int
INFO  21:04:11,820 - #48 d
INFO  21:04:11,820 - #41 )
INFO  21:04:11,820 - #44 {
INFO  21:04:11,821 - #15 return
INFO  21:04:11,821 - #48 z
INFO  21:04:11,821 - #22 +
INFO  21:04:11,821 - #48 d
INFO  21:04:11,822 - #38 ;
INFO  21:04:11,822 - #45 }
INFO  21:04:11,822 - #48 int
INFO  21:04:11,822 - #48 inkrement
INFO  21:04:11,822 - #40 (
INFO  21:04:11,822 - #48 int
INFO  21:04:11,822 - #48 a
INFO  21:04:11,822 - #39 ,
INFO  21:04:11,822 - #48 int
INFO  21:04:11,822 - #48 inc
INFO  21:04:11,822 - #41 )
INFO  21:04:11,822 - #48 int
INFO  21:04:11,822 - #48 pom
INFO  21:04:11,822 - #38 ;
INFO  21:04:11,823 - #44 {
INFO  21:04:11,823 - #5 if
INFO  21:04:11,823 - #40 (
INFO  21:04:11,823 - #48 inc
INFO  21:04:11,823 - #28 ==
INFO  21:04:11,823 - #48 jedan
INFO  21:04:11,823 - #41 )
INFO  21:04:11,824 - #48 pom
INFO  21:04:11,824 - #27 =
INFO  21:04:11,824 - #51 1
INFO  21:04:11,824 - #38 ;
INFO  21:04:11,824 - #6 else
INFO  21:04:11,824 - #5 if
INFO  21:04:11,824 - #40 (
INFO  21:04:11,824 - #48 inc
INFO  21:04:11,824 - #28 ==
INFO  21:04:11,824 - #51 2
INFO  21:04:11,824 - #41 )
INFO  21:04:11,824 - #48 pom
INFO  21:04:11,824 - #27 =
INFO  21:04:11,824 - #48 a
INFO  21:04:11,824 - #38 ;
INFO  21:04:11,824 - #15 return
INFO  21:04:11,825 - #48 sum
INFO  21:04:11,825 - #40 (
INFO  21:04:11,825 - #48 a
INFO  21:04:11,825 - #39 ,
INFO  21:04:11,825 - #48 pom
INFO  21:04:11,825 - #41 )
INFO  21:04:11,825 - #38 ;
INFO  21:04:11,826 - #45 }
INFO  21:04:11,826 - #48 bool
INFO  21:04:11,826 - #48 verify
INFO  21:04:11,826 - #40 (
INFO  21:04:11,826 - #41 )
INFO  21:04:11,826 - #44 {
INFO  21:04:11,826 - #12 print
INFO  21:04:11,826 - #40 (
INFO  21:04:11,826 - #50 v
INFO  21:04:11,826 - #41 )
INFO  21:04:11,826 - #38 ;
INFO  21:04:11,827 - #15 return
INFO  21:04:11,827 - #49 false
INFO  21:04:11,827 - #38 ;
INFO  21:04:11,827 - #45 }
INFO  21:04:11,827 - #14 void
INFO  21:04:11,827 - #48 main
INFO  21:04:11,827 - #40 (
INFO  21:04:11,827 - #41 )
INFO  21:04:11,827 - #44 {
INFO  21:04:11,827 - #5 if
INFO  21:04:11,827 - #40 (
INFO  21:04:11,827 - #51 1
INFO  21:04:11,827 - #29 !=
INFO  21:04:11,827 - #51 1
INFO  21:04:11,827 - #41 )
INFO  21:04:11,827 - #12 print
INFO  21:04:11,827 - #40 (
INFO  21:04:11,827 - #23 -
INFO  21:04:11,828 - #51 6
INFO  21:04:11,828 - #41 )
INFO  21:04:11,828 - #38 ;
INFO  21:04:11,828 - #6 else
INFO  21:04:11,828 - #12 print
INFO  21:04:11,828 - #40 (
INFO  21:04:11,828 - #51 0
INFO  21:04:11,828 - #41 )
INFO  21:04:11,828 - #38 ;
INFO  21:04:11,828 - #48 ibool
INFO  21:04:11,828 - #27 =
INFO  21:04:11,828 - #49 false
INFO  21:04:11,828 - #38 ;
INFO  21:04:11,828 - #48 i
INFO  21:04:11,828 - #27 =
INFO  21:04:11,828 - #51 0
INFO  21:04:11,828 - #38 ;
INFO  21:04:11,828 - #9 do
INFO  21:04:11,828 - #44 {
INFO  21:04:11,828 - #5 if
INFO  21:04:11,828 - #40 (
INFO  21:04:11,828 - #48 i
INFO  21:04:11,828 - #28 ==
INFO  21:04:11,828 - #51 2
INFO  21:04:11,828 - #41 )
INFO  21:04:11,828 - #48 ibool
INFO  21:04:11,828 - #27 =
INFO  21:04:11,828 - #49 true
INFO  21:04:11,829 - #38 ;
INFO  21:04:11,829 - #48 i
INFO  21:04:11,829 - #36 ++
INFO  21:04:11,829 - #38 ;
INFO  21:04:11,829 - #45 }
INFO  21:04:11,829 - #10 while
INFO  21:04:11,829 - #40 (
INFO  21:04:11,829 - #48 i
INFO  21:04:11,829 - #32 <
INFO  21:04:11,829 - #51 5
INFO  21:04:11,829 - #41 )
INFO  21:04:11,829 - #38 ;
INFO  21:04:11,829 - #5 if
INFO  21:04:11,829 - #40 (
INFO  21:04:11,829 - #48 ibool
INFO  21:04:11,829 - #41 )
INFO  21:04:11,829 - #5 if
INFO  21:04:11,829 - #40 (
INFO  21:04:11,829 - #48 i
INFO  21:04:11,829 - #28 ==
INFO  21:04:11,829 - #51 5
INFO  21:04:11,829 - #41 )
INFO  21:04:11,829 - #12 print
INFO  21:04:11,829 - #40 (
INFO  21:04:11,829 - #51 1
INFO  21:04:11,829 - #41 )
INFO  21:04:11,829 - #38 ;
INFO  21:04:11,829 - #6 else
INFO  21:04:11,829 - #12 print
INFO  21:04:11,829 - #40 (
INFO  21:04:11,829 - #23 -
INFO  21:04:11,829 - #51 1
INFO  21:04:11,829 - #41 )
INFO  21:04:11,829 - #38 ;
INFO  21:04:11,830 - #5 if
INFO  21:04:11,830 - #40 (
INFO  21:04:11,830 - #48 verify
INFO  21:04:11,830 - #40 (
INFO  21:04:11,830 - #41 )
INFO  21:04:11,830 - #35 ||
INFO  21:04:11,830 - #48 niz
INFO  21:04:11,830 - #42 [
INFO  21:04:11,830 - #51 2
INFO  21:04:11,830 - #43 ]
INFO  21:04:11,830 - #28 ==
INFO  21:04:11,830 - #51 4
INFO  21:04:11,830 - #41 )
INFO  21:04:11,830 - #12 print
INFO  21:04:11,830 - #40 (
INFO  21:04:11,830 - #48 ord
INFO  21:04:11,830 - #40 (
INFO  21:04:11,830 - #50 A
INFO  21:04:11,830 - #41 )
INFO  21:04:11,830 - #41 )
INFO  21:04:11,830 - #38 ;
INFO  21:04:11,830 - #6 else
INFO  21:04:11,830 - #12 print
INFO  21:04:11,830 - #40 (
INFO  21:04:11,830 - #48 ord
INFO  21:04:11,830 - #40 (
INFO  21:04:11,830 - #50 a
INFO  21:04:11,830 - #41 )
INFO  21:04:11,830 - #41 )
INFO  21:04:11,830 - #38 ;
INFO  21:04:11,830 - #45 }
INFO  21:04:11,830 - #45 }
INFO  21:04:11,832 - Program(
  ProgramName(
   test302
  ) [ProgramName]
  AllDeclListMultiple(
    AllDeclListMultiple(
      AllDeclListMultiple(
        AllDeclListMultiple(
          AllDeclListMultiple(
            AllDeclListMultiple(
              NoDecl(
              ) [NoDecl]
              ConstDeclaration(
                ConstDeclarationExpr(
                  Type(
                   int
                  ) [Type]
                  ConstAssignSingle(
                    ConstAssign(
                     jedan
                      NumberConst(
                       1
                      ) [NumberConst]
                    ) [ConstAssign]
                  ) [ConstAssignSingle]
                ) [ConstDeclarationExpr]
              ) [ConstDeclaration]
            ) [AllDeclListMultiple]
            GlobalVarDeclaration(
              GlobalVarDeclarationExpr(
                Type(
                 int
                ) [Type]
                GlobalVarDeclListSingle(
                  GlobalVarDeclarationSingle(
                   i
                    NoArray(
                    ) [NoArray]
                  ) [GlobalVarDeclarationSingle]
                ) [GlobalVarDeclListSingle]
              ) [GlobalVarDeclarationExpr]
            ) [GlobalVarDeclaration]
          ) [AllDeclListMultiple]
          GlobalVarDeclaration(
            GlobalVarDeclarationExpr(
              Type(
               bool
              ) [Type]
              GlobalVarDeclListSingle(
                GlobalVarDeclarationSingle(
                 ibool
                  NoArray(
                  ) [NoArray]
                ) [GlobalVarDeclarationSingle]
              ) [GlobalVarDeclListSingle]
            ) [GlobalVarDeclarationExpr]
          ) [GlobalVarDeclaration]
        ) [AllDeclListMultiple]
        GlobalVarDeclaration(
          GlobalVarDeclarationExpr(
            Type(
             int
            ) [Type]
            GlobalVarDeclListSingle(
              GlobalVarDeclarationSingle(
               niz2
                NoArray(
                ) [NoArray]
              ) [GlobalVarDeclarationSingle]
            ) [GlobalVarDeclListSingle]
          ) [GlobalVarDeclarationExpr]
        ) [GlobalVarDeclaration]
      ) [AllDeclListMultiple]
      GlobalVarDeclaration(
        GlobalVarDeclarationExpr(
          Type(
           int
          ) [Type]
          GlobalVarDeclListSingle(
            GlobalVarDeclarationSingle(
             niz
              ArrayBrackets(
              ) [ArrayBrackets]
            ) [GlobalVarDeclarationSingle]
          ) [GlobalVarDeclListSingle]
        ) [GlobalVarDeclarationExpr]
      ) [GlobalVarDeclaration]
    ) [AllDeclListMultiple]
    GlobalVarDeclaration(
      GlobalVarDeclarationExpr(
        Type(
         int
        ) [Type]
        GlobalVarDeclListSingle(
          GlobalVarDeclarationSingle(
           a
            NoArray(
            ) [NoArray]
          ) [GlobalVarDeclarationSingle]
        ) [GlobalVarDeclListSingle]
      ) [GlobalVarDeclarationExpr]
    ) [GlobalVarDeclaration]
  ) [AllDeclListMultiple]
  MethodDeclListMultiple(
    MethodDeclListMultiple(
      MethodDeclListMultiple(
        MethodDeclListMultiple(
          MethodDeclListNo(
          ) [MethodDeclListNo]
          MethodDeclaration(
            MethodSignatureParams(
              MethodTypeType(
                Type(
                 int
                ) [Type]
              ) [MethodTypeType]
              MethodName(
               sum
              ) [MethodName]
              FormParsMultiple(
                FormParsSingle(
                  FormParSingle(
                    Type(
                     int
                    ) [Type]
                   z
                    NoArray(
                    ) [NoArray]
                  ) [FormParSingle]
                ) [FormParsSingle]
                FormParSingle(
                  Type(
                   int
                  ) [Type]
                 d
                  NoArray(
                  ) [NoArray]
                ) [FormParSingle]
              ) [FormParsMultiple]
              FormParsEnd(
              ) [FormParsEnd]
            ) [MethodSignatureParams]
            NoVarDeclOption(
            ) [NoVarDeclOption]
            StatementListMultiple(
              StatementListNo(
              ) [StatementListNo]
              StatementSingle(
                SingleReturnExprStatement(
                  MultiTermExpr(
                    SingleTermExprPositive(
                      SingleFactorTerm(
                        DesignatorEmptyFactor(
                          IdentDesignator(
                           z
                          ) [IdentDesignator]
                        ) [DesignatorEmptyFactor]
                      ) [SingleFactorTerm]
                    ) [SingleTermExprPositive]
                    AddopPlus(
                    ) [AddopPlus]
                    SingleFactorTerm(
                      DesignatorEmptyFactor(
                        IdentDesignator(
                         d
                        ) [IdentDesignator]
                      ) [DesignatorEmptyFactor]
                    ) [SingleFactorTerm]
                  ) [MultiTermExpr]
                ) [SingleReturnExprStatement]
              ) [StatementSingle]
            ) [StatementListMultiple]
          ) [MethodDeclaration]
        ) [MethodDeclListMultiple]
        MethodDeclaration(
          MethodSignatureParams(
            MethodTypeType(
              Type(
               int
              ) [Type]
            ) [MethodTypeType]
            MethodName(
             inkrement
            ) [MethodName]
            FormParsMultiple(
              FormParsSingle(
                FormParSingle(
                  Type(
                   int
                  ) [Type]
                 a
                  NoArray(
                  ) [NoArray]
                ) [FormParSingle]
              ) [FormParsSingle]
              FormParSingle(
                Type(
                 int
                ) [Type]
               inc
                NoArray(
                ) [NoArray]
              ) [FormParSingle]
            ) [FormParsMultiple]
            FormParsEnd(
            ) [FormParsEnd]
          ) [MethodSignatureParams]
          VarDeclOptionTrue(
            NoVarDeclOption(
            ) [NoVarDeclOption]
            VarDeclarationExpr(
              Type(
               int
              ) [Type]
              VarDeclListSingle(
                VarDeclSingle(
                 pom
                  NoArray(
                  ) [NoArray]
                ) [VarDeclSingle]
              ) [VarDeclListSingle]
            ) [VarDeclarationExpr]
          ) [VarDeclOptionTrue]
          StatementListMultiple(
            StatementListMultiple(
              StatementListNo(
              ) [StatementListNo]
              StatementSingle(
                IfElseStatement(
                  IfConditionSingleTerm(
                    CondSingleFactTerm(
                      CondMultiExprFact(
                        CondSingleExprFact(
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              DesignatorEmptyFactor(
                                IdentDesignator(
                                 inc
                                ) [IdentDesignator]
                              ) [DesignatorEmptyFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [CondSingleExprFact]
                        RelopEQUAL(
                        ) [RelopEQUAL]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            DesignatorEmptyFactor(
                              IdentDesignator(
                               jedan
                              ) [IdentDesignator]
                            ) [DesignatorEmptyFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [CondMultiExprFact]
                    ) [CondSingleFactTerm]
                  ) [IfConditionSingleTerm]
                  StatementSingle(
                    SingleDesignatorStatement(
                      DesignatorStmtAssign(
                        DesignatorStmtAssignCorrect(
                          IdentDesignator(
                           pom
                          ) [IdentDesignator]
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              NumConstFactor(
                               1
                              ) [NumConstFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [DesignatorStmtAssignCorrect]
                      ) [DesignatorStmtAssign]
                    ) [SingleDesignatorStatement]
                  ) [StatementSingle]
                  StatementSingle(
                    IfStatement(
                      IfConditionSingleTerm(
                        CondSingleFactTerm(
                          CondMultiExprFact(
                            CondSingleExprFact(
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentDesignator(
                                     inc
                                    ) [IdentDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [CondSingleExprFact]
                            RelopEQUAL(
                            ) [RelopEQUAL]
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                NumConstFactor(
                                 2
                                ) [NumConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [CondMultiExprFact]
                        ) [CondSingleFactTerm]
                      ) [IfConditionSingleTerm]
                      StatementSingle(
                        SingleDesignatorStatement(
                          DesignatorStmtAssign(
                            DesignatorStmtAssignCorrect(
                              IdentDesignator(
                               pom
                              ) [IdentDesignator]
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentDesignator(
                                     a
                                    ) [IdentDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [DesignatorStmtAssignCorrect]
                          ) [DesignatorStmtAssign]
                        ) [SingleDesignatorStatement]
                      ) [StatementSingle]
                    ) [IfStatement]
                  ) [StatementSingle]
                ) [IfElseStatement]
              ) [StatementSingle]
            ) [StatementListMultiple]
            StatementSingle(
              SingleReturnExprStatement(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    MethodCallFactor(
                      MethodCall(
                        IdentDesignator(
                         sum
                        ) [IdentDesignator]
                        ActParsLeftParen(
                        ) [ActParsLeftParen]
                        ActParsYes(
                          ActParsMultiExpr(
                            ActParsSingleExpr(
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentDesignator(
                                     a
                                    ) [IdentDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [ActParsSingleExpr]
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                DesignatorEmptyFactor(
                                  IdentDesignator(
                                   pom
                                  ) [IdentDesignator]
                                ) [DesignatorEmptyFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [ActParsMultiExpr]
                        ) [ActParsYes]
                        ActParsRightParen(
                        ) [ActParsRightParen]
                      ) [MethodCall]
                    ) [MethodCallFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
              ) [SingleReturnExprStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
        ) [MethodDeclaration]
      ) [MethodDeclListMultiple]
      MethodDeclaration(
        MethodSignaturePlain(
          MethodTypeType(
            Type(
             bool
            ) [Type]
          ) [MethodTypeType]
          MethodName(
           verify
          ) [MethodName]
        ) [MethodSignaturePlain]
        NoVarDeclOption(
        ) [NoVarDeclOption]
        StatementListMultiple(
          StatementListMultiple(
            StatementListNo(
            ) [StatementListNo]
            StatementSingle(
              SinglePrintStatement(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    CharConstFactor(
                     v
                    ) [CharConstFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
                NumConstNo(
                ) [NumConstNo]
              ) [SinglePrintStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
          StatementSingle(
            SingleReturnExprStatement(
              SingleTermExprPositive(
                SingleFactorTerm(
                  BoolConstFactor(
                   false
                  ) [BoolConstFactor]
                ) [SingleFactorTerm]
              ) [SingleTermExprPositive]
            ) [SingleReturnExprStatement]
          ) [StatementSingle]
        ) [StatementListMultiple]
      ) [MethodDeclaration]
    ) [MethodDeclListMultiple]
    MethodDeclaration(
      MethodSignaturePlain(
        MethodTypeVoid(
        ) [MethodTypeVoid]
        MethodName(
         main
        ) [MethodName]
      ) [MethodSignaturePlain]
      NoVarDeclOption(
      ) [NoVarDeclOption]
      StatementListMultiple(
        StatementListMultiple(
          StatementListMultiple(
            StatementListMultiple(
              StatementListMultiple(
                StatementListMultiple(
                  StatementListNo(
                  ) [StatementListNo]
                  StatementSingle(
                    IfElseStatement(
                      IfConditionSingleTerm(
                        CondSingleFactTerm(
                          CondMultiExprFact(
                            CondSingleExprFact(
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  NumConstFactor(
                                   1
                                  ) [NumConstFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [CondSingleExprFact]
                            RelopNOTEQUAL(
                            ) [RelopNOTEQUAL]
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                NumConstFactor(
                                 1
                                ) [NumConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [CondMultiExprFact]
                        ) [CondSingleFactTerm]
                      ) [IfConditionSingleTerm]
                      StatementSingle(
                        SinglePrintStatement(
                          SingleTermExprNegative(
                            SingleFactorTerm(
                              NumConstFactor(
                               6
                              ) [NumConstFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprNegative]
                          NumConstNo(
                          ) [NumConstNo]
                        ) [SinglePrintStatement]
                      ) [StatementSingle]
                      StatementSingle(
                        SinglePrintStatement(
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              NumConstFactor(
                               0
                              ) [NumConstFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                          NumConstNo(
                          ) [NumConstNo]
                        ) [SinglePrintStatement]
                      ) [StatementSingle]
                    ) [IfElseStatement]
                  ) [StatementSingle]
                ) [StatementListMultiple]
                StatementSingle(
                  SingleDesignatorStatement(
                    DesignatorStmtAssign(
                      DesignatorStmtAssignCorrect(
                        IdentDesignator(
                         ibool
                        ) [IdentDesignator]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            BoolConstFactor(
                             false
                            ) [BoolConstFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [DesignatorStmtAssignCorrect]
                    ) [DesignatorStmtAssign]
                  ) [SingleDesignatorStatement]
                ) [StatementSingle]
              ) [StatementListMultiple]
              StatementSingle(
                SingleDesignatorStatement(
                  DesignatorStmtAssign(
                    DesignatorStmtAssignCorrect(
                      IdentDesignator(
                       i
                      ) [IdentDesignator]
                      SingleTermExprPositive(
                        SingleFactorTerm(
                          NumConstFactor(
                           0
                          ) [NumConstFactor]
                        ) [SingleFactorTerm]
                      ) [SingleTermExprPositive]
                    ) [DesignatorStmtAssignCorrect]
                  ) [DesignatorStmtAssign]
                ) [SingleDesignatorStatement]
              ) [StatementSingle]
            ) [StatementListMultiple]
            StatementSingle(
              DoWhileStatement(
                DoEnter(
                ) [DoEnter]
                StatementListMultiple(
                  StatementListNo(
                  ) [StatementListNo]
                  StatementMultiple(
                    StatementsInBraces(
                      StatementListMultiple(
                        StatementListMultiple(
                          StatementListNo(
                          ) [StatementListNo]
                          StatementSingle(
                            IfStatement(
                              IfConditionSingleTerm(
                                CondSingleFactTerm(
                                  CondMultiExprFact(
                                    CondSingleExprFact(
                                      SingleTermExprPositive(
                                        SingleFactorTerm(
                                          DesignatorEmptyFactor(
                                            IdentDesignator(
                                             i
                                            ) [IdentDesignator]
                                          ) [DesignatorEmptyFactor]
                                        ) [SingleFactorTerm]
                                      ) [SingleTermExprPositive]
                                    ) [CondSingleExprFact]
                                    RelopEQUAL(
                                    ) [RelopEQUAL]
                                    SingleTermExprPositive(
                                      SingleFactorTerm(
                                        NumConstFactor(
                                         2
                                        ) [NumConstFactor]
                                      ) [SingleFactorTerm]
                                    ) [SingleTermExprPositive]
                                  ) [CondMultiExprFact]
                                ) [CondSingleFactTerm]
                              ) [IfConditionSingleTerm]
                              StatementSingle(
                                SingleDesignatorStatement(
                                  DesignatorStmtAssign(
                                    DesignatorStmtAssignCorrect(
                                      IdentDesignator(
                                       ibool
                                      ) [IdentDesignator]
                                      SingleTermExprPositive(
                                        SingleFactorTerm(
                                          BoolConstFactor(
                                           true
                                          ) [BoolConstFactor]
                                        ) [SingleFactorTerm]
                                      ) [SingleTermExprPositive]
                                    ) [DesignatorStmtAssignCorrect]
                                  ) [DesignatorStmtAssign]
                                ) [SingleDesignatorStatement]
                              ) [StatementSingle]
                            ) [IfStatement]
                          ) [StatementSingle]
                        ) [StatementListMultiple]
                        StatementSingle(
                          SingleDesignatorStatement(
                            DesignatorStmtPlusPlus(
                              IdentDesignator(
                               i
                              ) [IdentDesignator]
                            ) [DesignatorStmtPlusPlus]
                          ) [SingleDesignatorStatement]
                        ) [StatementSingle]
                      ) [StatementListMultiple]
                    ) [StatementsInBraces]
                  ) [StatementMultiple]
                ) [StatementListMultiple]
                ConditionSingleTerm(
                  CondSingleFactTerm(
                    CondMultiExprFact(
                      CondSingleExprFact(
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            DesignatorEmptyFactor(
                              IdentDesignator(
                               i
                              ) [IdentDesignator]
                            ) [DesignatorEmptyFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [CondSingleExprFact]
                      RelopLS(
                      ) [RelopLS]
                      SingleTermExprPositive(
                        SingleFactorTerm(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactorTerm]
                      ) [SingleTermExprPositive]
                    ) [CondMultiExprFact]
                  ) [CondSingleFactTerm]
                ) [ConditionSingleTerm]
              ) [DoWhileStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
          StatementSingle(
            IfStatement(
              IfConditionSingleTerm(
                CondSingleFactTerm(
                  CondSingleExprFact(
                    SingleTermExprPositive(
                      SingleFactorTerm(
                        DesignatorEmptyFactor(
                          IdentDesignator(
                           ibool
                          ) [IdentDesignator]
                        ) [DesignatorEmptyFactor]
                      ) [SingleFactorTerm]
                    ) [SingleTermExprPositive]
                  ) [CondSingleExprFact]
                ) [CondSingleFactTerm]
              ) [IfConditionSingleTerm]
              StatementSingle(
                IfElseStatement(
                  IfConditionSingleTerm(
                    CondSingleFactTerm(
                      CondMultiExprFact(
                        CondSingleExprFact(
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              DesignatorEmptyFactor(
                                IdentDesignator(
                                 i
                                ) [IdentDesignator]
                              ) [DesignatorEmptyFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [CondSingleExprFact]
                        RelopEQUAL(
                        ) [RelopEQUAL]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            NumConstFactor(
                             5
                            ) [NumConstFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [CondMultiExprFact]
                    ) [CondSingleFactTerm]
                  ) [IfConditionSingleTerm]
                  StatementSingle(
                    SinglePrintStatement(
                      SingleTermExprPositive(
                        SingleFactorTerm(
                          NumConstFactor(
                           1
                          ) [NumConstFactor]
                        ) [SingleFactorTerm]
                      ) [SingleTermExprPositive]
                      NumConstNo(
                      ) [NumConstNo]
                    ) [SinglePrintStatement]
                  ) [StatementSingle]
                  StatementSingle(
                    SinglePrintStatement(
                      SingleTermExprNegative(
                        SingleFactorTerm(
                          NumConstFactor(
                           1
                          ) [NumConstFactor]
                        ) [SingleFactorTerm]
                      ) [SingleTermExprNegative]
                      NumConstNo(
                      ) [NumConstNo]
                    ) [SinglePrintStatement]
                  ) [StatementSingle]
                ) [IfElseStatement]
              ) [StatementSingle]
            ) [IfStatement]
          ) [StatementSingle]
        ) [StatementListMultiple]
        StatementSingle(
          IfElseStatement(
            IfConditionMultiTerm(
              ConditionSingleTerm(
                CondSingleFactTerm(
                  CondSingleExprFact(
                    SingleTermExprPositive(
                      SingleFactorTerm(
                        MethodCallFactor(
                          MethodCall(
                            IdentDesignator(
                             verify
                            ) [IdentDesignator]
                            ActParsLeftParen(
                            ) [ActParsLeftParen]
                            ActParsNo(
                            ) [ActParsNo]
                            ActParsRightParen(
                            ) [ActParsRightParen]
                          ) [MethodCall]
                        ) [MethodCallFactor]
                      ) [SingleFactorTerm]
                    ) [SingleTermExprPositive]
                  ) [CondSingleExprFact]
                ) [CondSingleFactTerm]
              ) [ConditionSingleTerm]
              CondSingleFactTerm(
                CondMultiExprFact(
                  CondSingleExprFact(
                    SingleTermExprPositive(
                      SingleFactorTerm(
                        DesignatorEmptyFactor(
                          IdentArrayDesignator(
                           niz
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                NumConstFactor(
                                 2
                                ) [NumConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [IdentArrayDesignator]
                        ) [DesignatorEmptyFactor]
                      ) [SingleFactorTerm]
                    ) [SingleTermExprPositive]
                  ) [CondSingleExprFact]
                  RelopEQUAL(
                  ) [RelopEQUAL]
                  SingleTermExprPositive(
                    SingleFactorTerm(
                      NumConstFactor(
                       4
                      ) [NumConstFactor]
                    ) [SingleFactorTerm]
                  ) [SingleTermExprPositive]
                ) [CondMultiExprFact]
              ) [CondSingleFactTerm]
            ) [IfConditionMultiTerm]
            StatementSingle(
              SinglePrintStatement(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    MethodCallFactor(
                      MethodCall(
                        IdentDesignator(
                         ord
                        ) [IdentDesignator]
                        ActParsLeftParen(
                        ) [ActParsLeftParen]
                        ActParsYes(
                          ActParsSingleExpr(
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                CharConstFactor(
                                 A
                                ) [CharConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [ActParsSingleExpr]
                        ) [ActParsYes]
                        ActParsRightParen(
                        ) [ActParsRightParen]
                      ) [MethodCall]
                    ) [MethodCallFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
                NumConstNo(
                ) [NumConstNo]
              ) [SinglePrintStatement]
            ) [StatementSingle]
            StatementSingle(
              SinglePrintStatement(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    MethodCallFactor(
                      MethodCall(
                        IdentDesignator(
                         ord
                        ) [IdentDesignator]
                        ActParsLeftParen(
                        ) [ActParsLeftParen]
                        ActParsYes(
                          ActParsSingleExpr(
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                CharConstFactor(
                                 a
                                ) [CharConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [ActParsSingleExpr]
                        ) [ActParsYes]
                        ActParsRightParen(
                        ) [ActParsRightParen]
                      ) [MethodCall]
                    ) [MethodCallFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
                NumConstNo(
                ) [NumConstNo]
              ) [SinglePrintStatement]
            ) [StatementSingle]
          ) [IfElseStatement]
        ) [StatementSingle]
      ) [StatementListMultiple]
    ) [MethodDeclaration]
  ) [MethodDeclListMultiple]
) [Program]
INFO  21:04:11,832 - ===================================
INFO  21:04:11,836 - Method Call detected. Method name: sum
INFO  21:04:11,836 - Method Call detected. Method name: verify
INFO  21:04:24,133 - Compiling source file: D:\source\repos\PP_Projekat\MicroJavaCompiler\test\program.mj
INFO  21:04:24,150 - #2 program
INFO  21:04:24,150 - #48 test302
INFO  21:04:24,150 - #7 const
INFO  21:04:24,150 - #48 int
INFO  21:04:24,150 - #48 jedan
INFO  21:04:24,151 - #27 =
INFO  21:04:24,151 - #51 1
INFO  21:04:24,151 - #38 ;
INFO  21:04:24,151 - #48 int
INFO  21:04:24,151 - #48 i
INFO  21:04:24,151 - #38 ;
INFO  21:04:24,152 - #48 bool
INFO  21:04:24,152 - #48 ibool
INFO  21:04:24,152 - #38 ;
INFO  21:04:24,152 - #48 int
INFO  21:04:24,152 - #48 niz2
INFO  21:04:24,152 - #38 ;
INFO  21:04:24,152 - #48 int
INFO  21:04:24,152 - #48 niz
INFO  21:04:24,152 - #42 [
INFO  21:04:24,152 - #43 ]
INFO  21:04:24,152 - #38 ;
INFO  21:04:24,153 - #48 int
INFO  21:04:24,153 - #48 a
INFO  21:04:24,153 - #38 ;
INFO  21:04:24,153 - #44 {
INFO  21:04:24,153 - #48 int
INFO  21:04:24,153 - #48 sum
INFO  21:04:24,153 - #40 (
INFO  21:04:24,153 - #48 int
INFO  21:04:24,153 - #48 z
INFO  21:04:24,153 - #39 ,
INFO  21:04:24,153 - #48 int
INFO  21:04:24,153 - #48 d
INFO  21:04:24,153 - #41 )
INFO  21:04:24,153 - #44 {
INFO  21:04:24,154 - #15 return
INFO  21:04:24,154 - #48 z
INFO  21:04:24,154 - #22 +
INFO  21:04:24,154 - #48 d
INFO  21:04:24,155 - #38 ;
INFO  21:04:24,155 - #45 }
INFO  21:04:24,155 - #48 int
INFO  21:04:24,155 - #48 inkrement
INFO  21:04:24,155 - #40 (
INFO  21:04:24,155 - #48 int
INFO  21:04:24,155 - #48 a
INFO  21:04:24,155 - #39 ,
INFO  21:04:24,155 - #48 int
INFO  21:04:24,155 - #48 inc
INFO  21:04:24,155 - #41 )
INFO  21:04:24,155 - #48 int
INFO  21:04:24,155 - #48 pom
INFO  21:04:24,156 - #38 ;
INFO  21:04:24,156 - #44 {
INFO  21:04:24,156 - #5 if
INFO  21:04:24,156 - #40 (
INFO  21:04:24,156 - #48 inc
INFO  21:04:24,156 - #28 ==
INFO  21:04:24,156 - #48 jedan
INFO  21:04:24,156 - #41 )
INFO  21:04:24,156 - #48 pom
INFO  21:04:24,157 - #27 =
INFO  21:04:24,157 - #51 1
INFO  21:04:24,157 - #38 ;
INFO  21:04:24,157 - #6 else
INFO  21:04:24,157 - #5 if
INFO  21:04:24,157 - #40 (
INFO  21:04:24,157 - #48 inc
INFO  21:04:24,157 - #28 ==
INFO  21:04:24,157 - #51 2
INFO  21:04:24,157 - #41 )
INFO  21:04:24,157 - #48 pom
INFO  21:04:24,157 - #27 =
INFO  21:04:24,157 - #48 a
INFO  21:04:24,157 - #38 ;
INFO  21:04:24,157 - #15 return
INFO  21:04:24,157 - #48 sum
INFO  21:04:24,157 - #40 (
INFO  21:04:24,157 - #48 a
INFO  21:04:24,157 - #39 ,
INFO  21:04:24,158 - #48 pom
INFO  21:04:24,158 - #41 )
INFO  21:04:24,158 - #38 ;
INFO  21:04:24,158 - #45 }
INFO  21:04:24,158 - #48 bool
INFO  21:04:24,158 - #48 verify
INFO  21:04:24,158 - #40 (
INFO  21:04:24,158 - #41 )
INFO  21:04:24,158 - #44 {
INFO  21:04:24,158 - #12 print
INFO  21:04:24,158 - #40 (
INFO  21:04:24,158 - #50 v
INFO  21:04:24,158 - #41 )
INFO  21:04:24,159 - #38 ;
INFO  21:04:24,159 - #15 return
INFO  21:04:24,159 - #49 false
INFO  21:04:24,159 - #38 ;
INFO  21:04:24,159 - #45 }
INFO  21:04:24,159 - #14 void
INFO  21:04:24,159 - #48 main
INFO  21:04:24,159 - #40 (
INFO  21:04:24,159 - #41 )
INFO  21:04:24,159 - #44 {
INFO  21:04:24,159 - #5 if
INFO  21:04:24,159 - #40 (
INFO  21:04:24,159 - #48 verify
INFO  21:04:24,159 - #40 (
INFO  21:04:24,159 - #41 )
INFO  21:04:24,160 - #35 ||
INFO  21:04:24,160 - #48 niz
INFO  21:04:24,160 - #42 [
INFO  21:04:24,160 - #51 2
INFO  21:04:24,160 - #43 ]
INFO  21:04:24,160 - #28 ==
INFO  21:04:24,160 - #51 4
INFO  21:04:24,160 - #41 )
INFO  21:04:24,160 - #12 print
INFO  21:04:24,160 - #40 (
INFO  21:04:24,160 - #48 ord
INFO  21:04:24,160 - #40 (
INFO  21:04:24,160 - #50 A
INFO  21:04:24,160 - #41 )
INFO  21:04:24,160 - #41 )
INFO  21:04:24,160 - #38 ;
INFO  21:04:24,160 - #6 else
INFO  21:04:24,160 - #12 print
INFO  21:04:24,160 - #40 (
INFO  21:04:24,160 - #48 ord
INFO  21:04:24,160 - #40 (
INFO  21:04:24,160 - #50 a
INFO  21:04:24,160 - #41 )
INFO  21:04:24,160 - #41 )
INFO  21:04:24,160 - #38 ;
INFO  21:04:24,160 - #45 }
INFO  21:04:24,161 - #45 }
INFO  21:04:24,162 - Program(
  ProgramName(
   test302
  ) [ProgramName]
  AllDeclListMultiple(
    AllDeclListMultiple(
      AllDeclListMultiple(
        AllDeclListMultiple(
          AllDeclListMultiple(
            AllDeclListMultiple(
              NoDecl(
              ) [NoDecl]
              ConstDeclaration(
                ConstDeclarationExpr(
                  Type(
                   int
                  ) [Type]
                  ConstAssignSingle(
                    ConstAssign(
                     jedan
                      NumberConst(
                       1
                      ) [NumberConst]
                    ) [ConstAssign]
                  ) [ConstAssignSingle]
                ) [ConstDeclarationExpr]
              ) [ConstDeclaration]
            ) [AllDeclListMultiple]
            GlobalVarDeclaration(
              GlobalVarDeclarationExpr(
                Type(
                 int
                ) [Type]
                GlobalVarDeclListSingle(
                  GlobalVarDeclarationSingle(
                   i
                    NoArray(
                    ) [NoArray]
                  ) [GlobalVarDeclarationSingle]
                ) [GlobalVarDeclListSingle]
              ) [GlobalVarDeclarationExpr]
            ) [GlobalVarDeclaration]
          ) [AllDeclListMultiple]
          GlobalVarDeclaration(
            GlobalVarDeclarationExpr(
              Type(
               bool
              ) [Type]
              GlobalVarDeclListSingle(
                GlobalVarDeclarationSingle(
                 ibool
                  NoArray(
                  ) [NoArray]
                ) [GlobalVarDeclarationSingle]
              ) [GlobalVarDeclListSingle]
            ) [GlobalVarDeclarationExpr]
          ) [GlobalVarDeclaration]
        ) [AllDeclListMultiple]
        GlobalVarDeclaration(
          GlobalVarDeclarationExpr(
            Type(
             int
            ) [Type]
            GlobalVarDeclListSingle(
              GlobalVarDeclarationSingle(
               niz2
                NoArray(
                ) [NoArray]
              ) [GlobalVarDeclarationSingle]
            ) [GlobalVarDeclListSingle]
          ) [GlobalVarDeclarationExpr]
        ) [GlobalVarDeclaration]
      ) [AllDeclListMultiple]
      GlobalVarDeclaration(
        GlobalVarDeclarationExpr(
          Type(
           int
          ) [Type]
          GlobalVarDeclListSingle(
            GlobalVarDeclarationSingle(
             niz
              ArrayBrackets(
              ) [ArrayBrackets]
            ) [GlobalVarDeclarationSingle]
          ) [GlobalVarDeclListSingle]
        ) [GlobalVarDeclarationExpr]
      ) [GlobalVarDeclaration]
    ) [AllDeclListMultiple]
    GlobalVarDeclaration(
      GlobalVarDeclarationExpr(
        Type(
         int
        ) [Type]
        GlobalVarDeclListSingle(
          GlobalVarDeclarationSingle(
           a
            NoArray(
            ) [NoArray]
          ) [GlobalVarDeclarationSingle]
        ) [GlobalVarDeclListSingle]
      ) [GlobalVarDeclarationExpr]
    ) [GlobalVarDeclaration]
  ) [AllDeclListMultiple]
  MethodDeclListMultiple(
    MethodDeclListMultiple(
      MethodDeclListMultiple(
        MethodDeclListMultiple(
          MethodDeclListNo(
          ) [MethodDeclListNo]
          MethodDeclaration(
            MethodSignatureParams(
              MethodTypeType(
                Type(
                 int
                ) [Type]
              ) [MethodTypeType]
              MethodName(
               sum
              ) [MethodName]
              FormParsMultiple(
                FormParsSingle(
                  FormParSingle(
                    Type(
                     int
                    ) [Type]
                   z
                    NoArray(
                    ) [NoArray]
                  ) [FormParSingle]
                ) [FormParsSingle]
                FormParSingle(
                  Type(
                   int
                  ) [Type]
                 d
                  NoArray(
                  ) [NoArray]
                ) [FormParSingle]
              ) [FormParsMultiple]
              FormParsEnd(
              ) [FormParsEnd]
            ) [MethodSignatureParams]
            NoVarDeclOption(
            ) [NoVarDeclOption]
            StatementListMultiple(
              StatementListNo(
              ) [StatementListNo]
              StatementSingle(
                SingleReturnExprStatement(
                  MultiTermExpr(
                    SingleTermExprPositive(
                      SingleFactorTerm(
                        DesignatorEmptyFactor(
                          IdentDesignator(
                           z
                          ) [IdentDesignator]
                        ) [DesignatorEmptyFactor]
                      ) [SingleFactorTerm]
                    ) [SingleTermExprPositive]
                    AddopPlus(
                    ) [AddopPlus]
                    SingleFactorTerm(
                      DesignatorEmptyFactor(
                        IdentDesignator(
                         d
                        ) [IdentDesignator]
                      ) [DesignatorEmptyFactor]
                    ) [SingleFactorTerm]
                  ) [MultiTermExpr]
                ) [SingleReturnExprStatement]
              ) [StatementSingle]
            ) [StatementListMultiple]
          ) [MethodDeclaration]
        ) [MethodDeclListMultiple]
        MethodDeclaration(
          MethodSignatureParams(
            MethodTypeType(
              Type(
               int
              ) [Type]
            ) [MethodTypeType]
            MethodName(
             inkrement
            ) [MethodName]
            FormParsMultiple(
              FormParsSingle(
                FormParSingle(
                  Type(
                   int
                  ) [Type]
                 a
                  NoArray(
                  ) [NoArray]
                ) [FormParSingle]
              ) [FormParsSingle]
              FormParSingle(
                Type(
                 int
                ) [Type]
               inc
                NoArray(
                ) [NoArray]
              ) [FormParSingle]
            ) [FormParsMultiple]
            FormParsEnd(
            ) [FormParsEnd]
          ) [MethodSignatureParams]
          VarDeclOptionTrue(
            NoVarDeclOption(
            ) [NoVarDeclOption]
            VarDeclarationExpr(
              Type(
               int
              ) [Type]
              VarDeclListSingle(
                VarDeclSingle(
                 pom
                  NoArray(
                  ) [NoArray]
                ) [VarDeclSingle]
              ) [VarDeclListSingle]
            ) [VarDeclarationExpr]
          ) [VarDeclOptionTrue]
          StatementListMultiple(
            StatementListMultiple(
              StatementListNo(
              ) [StatementListNo]
              StatementSingle(
                IfElseStatement(
                  IfConditionSingleTerm(
                    CondSingleFactTerm(
                      CondMultiExprFact(
                        CondSingleExprFact(
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              DesignatorEmptyFactor(
                                IdentDesignator(
                                 inc
                                ) [IdentDesignator]
                              ) [DesignatorEmptyFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [CondSingleExprFact]
                        RelopEQUAL(
                        ) [RelopEQUAL]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            DesignatorEmptyFactor(
                              IdentDesignator(
                               jedan
                              ) [IdentDesignator]
                            ) [DesignatorEmptyFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [CondMultiExprFact]
                    ) [CondSingleFactTerm]
                  ) [IfConditionSingleTerm]
                  StatementSingle(
                    SingleDesignatorStatement(
                      DesignatorStmtAssign(
                        DesignatorStmtAssignCorrect(
                          IdentDesignator(
                           pom
                          ) [IdentDesignator]
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              NumConstFactor(
                               1
                              ) [NumConstFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [DesignatorStmtAssignCorrect]
                      ) [DesignatorStmtAssign]
                    ) [SingleDesignatorStatement]
                  ) [StatementSingle]
                  StatementSingle(
                    IfStatement(
                      IfConditionSingleTerm(
                        CondSingleFactTerm(
                          CondMultiExprFact(
                            CondSingleExprFact(
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentDesignator(
                                     inc
                                    ) [IdentDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [CondSingleExprFact]
                            RelopEQUAL(
                            ) [RelopEQUAL]
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                NumConstFactor(
                                 2
                                ) [NumConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [CondMultiExprFact]
                        ) [CondSingleFactTerm]
                      ) [IfConditionSingleTerm]
                      StatementSingle(
                        SingleDesignatorStatement(
                          DesignatorStmtAssign(
                            DesignatorStmtAssignCorrect(
                              IdentDesignator(
                               pom
                              ) [IdentDesignator]
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentDesignator(
                                     a
                                    ) [IdentDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [DesignatorStmtAssignCorrect]
                          ) [DesignatorStmtAssign]
                        ) [SingleDesignatorStatement]
                      ) [StatementSingle]
                    ) [IfStatement]
                  ) [StatementSingle]
                ) [IfElseStatement]
              ) [StatementSingle]
            ) [StatementListMultiple]
            StatementSingle(
              SingleReturnExprStatement(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    MethodCallFactor(
                      MethodCall(
                        IdentDesignator(
                         sum
                        ) [IdentDesignator]
                        ActParsLeftParen(
                        ) [ActParsLeftParen]
                        ActParsYes(
                          ActParsMultiExpr(
                            ActParsSingleExpr(
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentDesignator(
                                     a
                                    ) [IdentDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [ActParsSingleExpr]
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                DesignatorEmptyFactor(
                                  IdentDesignator(
                                   pom
                                  ) [IdentDesignator]
                                ) [DesignatorEmptyFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [ActParsMultiExpr]
                        ) [ActParsYes]
                        ActParsRightParen(
                        ) [ActParsRightParen]
                      ) [MethodCall]
                    ) [MethodCallFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
              ) [SingleReturnExprStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
        ) [MethodDeclaration]
      ) [MethodDeclListMultiple]
      MethodDeclaration(
        MethodSignaturePlain(
          MethodTypeType(
            Type(
             bool
            ) [Type]
          ) [MethodTypeType]
          MethodName(
           verify
          ) [MethodName]
        ) [MethodSignaturePlain]
        NoVarDeclOption(
        ) [NoVarDeclOption]
        StatementListMultiple(
          StatementListMultiple(
            StatementListNo(
            ) [StatementListNo]
            StatementSingle(
              SinglePrintStatement(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    CharConstFactor(
                     v
                    ) [CharConstFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
                NumConstNo(
                ) [NumConstNo]
              ) [SinglePrintStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
          StatementSingle(
            SingleReturnExprStatement(
              SingleTermExprPositive(
                SingleFactorTerm(
                  BoolConstFactor(
                   false
                  ) [BoolConstFactor]
                ) [SingleFactorTerm]
              ) [SingleTermExprPositive]
            ) [SingleReturnExprStatement]
          ) [StatementSingle]
        ) [StatementListMultiple]
      ) [MethodDeclaration]
    ) [MethodDeclListMultiple]
    MethodDeclaration(
      MethodSignaturePlain(
        MethodTypeVoid(
        ) [MethodTypeVoid]
        MethodName(
         main
        ) [MethodName]
      ) [MethodSignaturePlain]
      NoVarDeclOption(
      ) [NoVarDeclOption]
      StatementListMultiple(
        StatementListNo(
        ) [StatementListNo]
        StatementSingle(
          IfElseStatement(
            IfConditionMultiTerm(
              ConditionSingleTerm(
                CondSingleFactTerm(
                  CondSingleExprFact(
                    SingleTermExprPositive(
                      SingleFactorTerm(
                        MethodCallFactor(
                          MethodCall(
                            IdentDesignator(
                             verify
                            ) [IdentDesignator]
                            ActParsLeftParen(
                            ) [ActParsLeftParen]
                            ActParsNo(
                            ) [ActParsNo]
                            ActParsRightParen(
                            ) [ActParsRightParen]
                          ) [MethodCall]
                        ) [MethodCallFactor]
                      ) [SingleFactorTerm]
                    ) [SingleTermExprPositive]
                  ) [CondSingleExprFact]
                ) [CondSingleFactTerm]
              ) [ConditionSingleTerm]
              CondSingleFactTerm(
                CondMultiExprFact(
                  CondSingleExprFact(
                    SingleTermExprPositive(
                      SingleFactorTerm(
                        DesignatorEmptyFactor(
                          IdentArrayDesignator(
                           niz
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                NumConstFactor(
                                 2
                                ) [NumConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [IdentArrayDesignator]
                        ) [DesignatorEmptyFactor]
                      ) [SingleFactorTerm]
                    ) [SingleTermExprPositive]
                  ) [CondSingleExprFact]
                  RelopEQUAL(
                  ) [RelopEQUAL]
                  SingleTermExprPositive(
                    SingleFactorTerm(
                      NumConstFactor(
                       4
                      ) [NumConstFactor]
                    ) [SingleFactorTerm]
                  ) [SingleTermExprPositive]
                ) [CondMultiExprFact]
              ) [CondSingleFactTerm]
            ) [IfConditionMultiTerm]
            StatementSingle(
              SinglePrintStatement(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    MethodCallFactor(
                      MethodCall(
                        IdentDesignator(
                         ord
                        ) [IdentDesignator]
                        ActParsLeftParen(
                        ) [ActParsLeftParen]
                        ActParsYes(
                          ActParsSingleExpr(
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                CharConstFactor(
                                 A
                                ) [CharConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [ActParsSingleExpr]
                        ) [ActParsYes]
                        ActParsRightParen(
                        ) [ActParsRightParen]
                      ) [MethodCall]
                    ) [MethodCallFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
                NumConstNo(
                ) [NumConstNo]
              ) [SinglePrintStatement]
            ) [StatementSingle]
            StatementSingle(
              SinglePrintStatement(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    MethodCallFactor(
                      MethodCall(
                        IdentDesignator(
                         ord
                        ) [IdentDesignator]
                        ActParsLeftParen(
                        ) [ActParsLeftParen]
                        ActParsYes(
                          ActParsSingleExpr(
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                CharConstFactor(
                                 a
                                ) [CharConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [ActParsSingleExpr]
                        ) [ActParsYes]
                        ActParsRightParen(
                        ) [ActParsRightParen]
                      ) [MethodCall]
                    ) [MethodCallFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
                NumConstNo(
                ) [NumConstNo]
              ) [SinglePrintStatement]
            ) [StatementSingle]
          ) [IfElseStatement]
        ) [StatementSingle]
      ) [StatementListMultiple]
    ) [MethodDeclaration]
  ) [MethodDeclListMultiple]
) [Program]
INFO  21:04:24,162 - ===================================
INFO  21:04:24,166 - Method Call detected. Method name: sum
INFO  21:04:24,166 - Method Call detected. Method name: verify
INFO  21:04:56,219 - Compiling source file: D:\source\repos\PP_Projekat\MicroJavaCompiler\test\program.mj
INFO  21:04:56,237 - #2 program
INFO  21:04:56,237 - #48 test302
INFO  21:04:56,237 - #7 const
INFO  21:04:56,237 - #48 int
INFO  21:04:56,237 - #48 jedan
INFO  21:04:56,238 - #27 =
INFO  21:04:56,238 - #51 1
INFO  21:04:56,238 - #38 ;
INFO  21:04:56,238 - #48 int
INFO  21:04:56,238 - #48 i
INFO  21:04:56,238 - #38 ;
INFO  21:04:56,239 - #48 bool
INFO  21:04:56,239 - #48 ibool
INFO  21:04:56,239 - #38 ;
INFO  21:04:56,239 - #48 int
INFO  21:04:56,239 - #48 niz2
INFO  21:04:56,239 - #38 ;
INFO  21:04:56,239 - #48 int
INFO  21:04:56,239 - #48 niz
INFO  21:04:56,239 - #42 [
INFO  21:04:56,239 - #43 ]
INFO  21:04:56,239 - #38 ;
INFO  21:04:56,239 - #48 int
INFO  21:04:56,239 - #48 a
INFO  21:04:56,239 - #38 ;
INFO  21:04:56,239 - #44 {
INFO  21:04:56,239 - #48 int
INFO  21:04:56,240 - #48 sum
INFO  21:04:56,240 - #40 (
INFO  21:04:56,240 - #48 int
INFO  21:04:56,240 - #48 z
INFO  21:04:56,240 - #39 ,
INFO  21:04:56,240 - #48 int
INFO  21:04:56,240 - #48 d
INFO  21:04:56,240 - #41 )
INFO  21:04:56,240 - #44 {
INFO  21:04:56,241 - #15 return
INFO  21:04:56,241 - #48 z
INFO  21:04:56,241 - #22 +
INFO  21:04:56,241 - #48 d
INFO  21:04:56,241 - #38 ;
INFO  21:04:56,241 - #45 }
INFO  21:04:56,242 - #48 int
INFO  21:04:56,242 - #48 inkrement
INFO  21:04:56,242 - #40 (
INFO  21:04:56,242 - #48 int
INFO  21:04:56,242 - #48 a
INFO  21:04:56,242 - #39 ,
INFO  21:04:56,242 - #48 int
INFO  21:04:56,242 - #48 inc
INFO  21:04:56,242 - #41 )
INFO  21:04:56,242 - #48 int
INFO  21:04:56,242 - #48 pom
INFO  21:04:56,242 - #38 ;
INFO  21:04:56,242 - #44 {
INFO  21:04:56,243 - #5 if
INFO  21:04:56,243 - #40 (
INFO  21:04:56,243 - #48 inc
INFO  21:04:56,243 - #28 ==
INFO  21:04:56,243 - #48 jedan
INFO  21:04:56,243 - #41 )
INFO  21:04:56,243 - #48 pom
INFO  21:04:56,243 - #27 =
INFO  21:04:56,243 - #51 1
INFO  21:04:56,243 - #38 ;
INFO  21:04:56,244 - #6 else
INFO  21:04:56,244 - #5 if
INFO  21:04:56,244 - #40 (
INFO  21:04:56,244 - #48 inc
INFO  21:04:56,244 - #28 ==
INFO  21:04:56,244 - #51 2
INFO  21:04:56,244 - #41 )
INFO  21:04:56,244 - #48 pom
INFO  21:04:56,244 - #27 =
INFO  21:04:56,244 - #48 a
INFO  21:04:56,244 - #38 ;
INFO  21:04:56,244 - #15 return
INFO  21:04:56,244 - #48 sum
INFO  21:04:56,244 - #40 (
INFO  21:04:56,244 - #48 a
INFO  21:04:56,244 - #39 ,
INFO  21:04:56,244 - #48 pom
INFO  21:04:56,244 - #41 )
INFO  21:04:56,245 - #38 ;
INFO  21:04:56,245 - #45 }
INFO  21:04:56,245 - #48 bool
INFO  21:04:56,245 - #48 verify
INFO  21:04:56,245 - #40 (
INFO  21:04:56,245 - #41 )
INFO  21:04:56,245 - #44 {
INFO  21:04:56,245 - #12 print
INFO  21:04:56,245 - #40 (
INFO  21:04:56,245 - #50 v
INFO  21:04:56,245 - #41 )
INFO  21:04:56,246 - #38 ;
INFO  21:04:56,246 - #15 return
INFO  21:04:56,246 - #49 false
INFO  21:04:56,246 - #38 ;
INFO  21:04:56,246 - #45 }
INFO  21:04:56,246 - #14 void
INFO  21:04:56,246 - #48 main
INFO  21:04:56,246 - #40 (
INFO  21:04:56,246 - #41 )
INFO  21:04:56,246 - #44 {
INFO  21:04:56,246 - #5 if
INFO  21:04:56,246 - #40 (
INFO  21:04:56,246 - #48 verify
INFO  21:04:56,246 - #40 (
INFO  21:04:56,246 - #41 )
INFO  21:04:56,246 - #35 ||
INFO  21:04:56,247 - #48 niz
INFO  21:04:56,247 - #42 [
INFO  21:04:56,247 - #51 2
INFO  21:04:56,247 - #43 ]
INFO  21:04:56,247 - #28 ==
INFO  21:04:56,247 - #51 4
INFO  21:04:56,247 - #41 )
INFO  21:04:56,247 - #12 print
INFO  21:04:56,247 - #40 (
INFO  21:04:56,247 - #48 ord
INFO  21:04:56,247 - #40 (
INFO  21:04:56,247 - #50 A
INFO  21:04:56,247 - #41 )
INFO  21:04:56,247 - #41 )
INFO  21:04:56,247 - #38 ;
INFO  21:04:56,247 - #6 else
INFO  21:04:56,247 - #12 print
INFO  21:04:56,247 - #40 (
INFO  21:04:56,247 - #48 ord
INFO  21:04:56,247 - #40 (
INFO  21:04:56,247 - #50 a
INFO  21:04:56,247 - #41 )
INFO  21:04:56,247 - #41 )
INFO  21:04:56,247 - #38 ;
INFO  21:04:56,247 - #45 }
INFO  21:04:56,247 - #45 }
INFO  21:04:56,248 - Program(
  ProgramName(
   test302
  ) [ProgramName]
  AllDeclListMultiple(
    AllDeclListMultiple(
      AllDeclListMultiple(
        AllDeclListMultiple(
          AllDeclListMultiple(
            AllDeclListMultiple(
              NoDecl(
              ) [NoDecl]
              ConstDeclaration(
                ConstDeclarationExpr(
                  Type(
                   int
                  ) [Type]
                  ConstAssignSingle(
                    ConstAssign(
                     jedan
                      NumberConst(
                       1
                      ) [NumberConst]
                    ) [ConstAssign]
                  ) [ConstAssignSingle]
                ) [ConstDeclarationExpr]
              ) [ConstDeclaration]
            ) [AllDeclListMultiple]
            GlobalVarDeclaration(
              GlobalVarDeclarationExpr(
                Type(
                 int
                ) [Type]
                GlobalVarDeclListSingle(
                  GlobalVarDeclarationSingle(
                   i
                    NoArray(
                    ) [NoArray]
                  ) [GlobalVarDeclarationSingle]
                ) [GlobalVarDeclListSingle]
              ) [GlobalVarDeclarationExpr]
            ) [GlobalVarDeclaration]
          ) [AllDeclListMultiple]
          GlobalVarDeclaration(
            GlobalVarDeclarationExpr(
              Type(
               bool
              ) [Type]
              GlobalVarDeclListSingle(
                GlobalVarDeclarationSingle(
                 ibool
                  NoArray(
                  ) [NoArray]
                ) [GlobalVarDeclarationSingle]
              ) [GlobalVarDeclListSingle]
            ) [GlobalVarDeclarationExpr]
          ) [GlobalVarDeclaration]
        ) [AllDeclListMultiple]
        GlobalVarDeclaration(
          GlobalVarDeclarationExpr(
            Type(
             int
            ) [Type]
            GlobalVarDeclListSingle(
              GlobalVarDeclarationSingle(
               niz2
                NoArray(
                ) [NoArray]
              ) [GlobalVarDeclarationSingle]
            ) [GlobalVarDeclListSingle]
          ) [GlobalVarDeclarationExpr]
        ) [GlobalVarDeclaration]
      ) [AllDeclListMultiple]
      GlobalVarDeclaration(
        GlobalVarDeclarationExpr(
          Type(
           int
          ) [Type]
          GlobalVarDeclListSingle(
            GlobalVarDeclarationSingle(
             niz
              ArrayBrackets(
              ) [ArrayBrackets]
            ) [GlobalVarDeclarationSingle]
          ) [GlobalVarDeclListSingle]
        ) [GlobalVarDeclarationExpr]
      ) [GlobalVarDeclaration]
    ) [AllDeclListMultiple]
    GlobalVarDeclaration(
      GlobalVarDeclarationExpr(
        Type(
         int
        ) [Type]
        GlobalVarDeclListSingle(
          GlobalVarDeclarationSingle(
           a
            NoArray(
            ) [NoArray]
          ) [GlobalVarDeclarationSingle]
        ) [GlobalVarDeclListSingle]
      ) [GlobalVarDeclarationExpr]
    ) [GlobalVarDeclaration]
  ) [AllDeclListMultiple]
  MethodDeclListMultiple(
    MethodDeclListMultiple(
      MethodDeclListMultiple(
        MethodDeclListMultiple(
          MethodDeclListNo(
          ) [MethodDeclListNo]
          MethodDeclaration(
            MethodSignatureParams(
              MethodTypeType(
                Type(
                 int
                ) [Type]
              ) [MethodTypeType]
              MethodName(
               sum
              ) [MethodName]
              FormParsMultiple(
                FormParsSingle(
                  FormParSingle(
                    Type(
                     int
                    ) [Type]
                   z
                    NoArray(
                    ) [NoArray]
                  ) [FormParSingle]
                ) [FormParsSingle]
                FormParSingle(
                  Type(
                   int
                  ) [Type]
                 d
                  NoArray(
                  ) [NoArray]
                ) [FormParSingle]
              ) [FormParsMultiple]
              FormParsEnd(
              ) [FormParsEnd]
            ) [MethodSignatureParams]
            NoVarDeclOption(
            ) [NoVarDeclOption]
            StatementListMultiple(
              StatementListNo(
              ) [StatementListNo]
              StatementSingle(
                SingleReturnExprStatement(
                  MultiTermExpr(
                    SingleTermExprPositive(
                      SingleFactorTerm(
                        DesignatorEmptyFactor(
                          IdentDesignator(
                           z
                          ) [IdentDesignator]
                        ) [DesignatorEmptyFactor]
                      ) [SingleFactorTerm]
                    ) [SingleTermExprPositive]
                    AddopPlus(
                    ) [AddopPlus]
                    SingleFactorTerm(
                      DesignatorEmptyFactor(
                        IdentDesignator(
                         d
                        ) [IdentDesignator]
                      ) [DesignatorEmptyFactor]
                    ) [SingleFactorTerm]
                  ) [MultiTermExpr]
                ) [SingleReturnExprStatement]
              ) [StatementSingle]
            ) [StatementListMultiple]
          ) [MethodDeclaration]
        ) [MethodDeclListMultiple]
        MethodDeclaration(
          MethodSignatureParams(
            MethodTypeType(
              Type(
               int
              ) [Type]
            ) [MethodTypeType]
            MethodName(
             inkrement
            ) [MethodName]
            FormParsMultiple(
              FormParsSingle(
                FormParSingle(
                  Type(
                   int
                  ) [Type]
                 a
                  NoArray(
                  ) [NoArray]
                ) [FormParSingle]
              ) [FormParsSingle]
              FormParSingle(
                Type(
                 int
                ) [Type]
               inc
                NoArray(
                ) [NoArray]
              ) [FormParSingle]
            ) [FormParsMultiple]
            FormParsEnd(
            ) [FormParsEnd]
          ) [MethodSignatureParams]
          VarDeclOptionTrue(
            NoVarDeclOption(
            ) [NoVarDeclOption]
            VarDeclarationExpr(
              Type(
               int
              ) [Type]
              VarDeclListSingle(
                VarDeclSingle(
                 pom
                  NoArray(
                  ) [NoArray]
                ) [VarDeclSingle]
              ) [VarDeclListSingle]
            ) [VarDeclarationExpr]
          ) [VarDeclOptionTrue]
          StatementListMultiple(
            StatementListMultiple(
              StatementListNo(
              ) [StatementListNo]
              StatementSingle(
                IfElseStatement(
                  IfConditionSingleTerm(
                    CondSingleFactTerm(
                      CondMultiExprFact(
                        CondSingleExprFact(
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              DesignatorEmptyFactor(
                                IdentDesignator(
                                 inc
                                ) [IdentDesignator]
                              ) [DesignatorEmptyFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [CondSingleExprFact]
                        RelopEQUAL(
                        ) [RelopEQUAL]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            DesignatorEmptyFactor(
                              IdentDesignator(
                               jedan
                              ) [IdentDesignator]
                            ) [DesignatorEmptyFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [CondMultiExprFact]
                    ) [CondSingleFactTerm]
                  ) [IfConditionSingleTerm]
                  StatementSingle(
                    SingleDesignatorStatement(
                      DesignatorStmtAssign(
                        DesignatorStmtAssignCorrect(
                          IdentDesignator(
                           pom
                          ) [IdentDesignator]
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              NumConstFactor(
                               1
                              ) [NumConstFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [DesignatorStmtAssignCorrect]
                      ) [DesignatorStmtAssign]
                    ) [SingleDesignatorStatement]
                  ) [StatementSingle]
                  StatementSingle(
                    IfStatement(
                      IfConditionSingleTerm(
                        CondSingleFactTerm(
                          CondMultiExprFact(
                            CondSingleExprFact(
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentDesignator(
                                     inc
                                    ) [IdentDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [CondSingleExprFact]
                            RelopEQUAL(
                            ) [RelopEQUAL]
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                NumConstFactor(
                                 2
                                ) [NumConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [CondMultiExprFact]
                        ) [CondSingleFactTerm]
                      ) [IfConditionSingleTerm]
                      StatementSingle(
                        SingleDesignatorStatement(
                          DesignatorStmtAssign(
                            DesignatorStmtAssignCorrect(
                              IdentDesignator(
                               pom
                              ) [IdentDesignator]
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentDesignator(
                                     a
                                    ) [IdentDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [DesignatorStmtAssignCorrect]
                          ) [DesignatorStmtAssign]
                        ) [SingleDesignatorStatement]
                      ) [StatementSingle]
                    ) [IfStatement]
                  ) [StatementSingle]
                ) [IfElseStatement]
              ) [StatementSingle]
            ) [StatementListMultiple]
            StatementSingle(
              SingleReturnExprStatement(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    MethodCallFactor(
                      MethodCall(
                        IdentDesignator(
                         sum
                        ) [IdentDesignator]
                        ActParsLeftParen(
                        ) [ActParsLeftParen]
                        ActParsYes(
                          ActParsMultiExpr(
                            ActParsSingleExpr(
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentDesignator(
                                     a
                                    ) [IdentDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [ActParsSingleExpr]
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                DesignatorEmptyFactor(
                                  IdentDesignator(
                                   pom
                                  ) [IdentDesignator]
                                ) [DesignatorEmptyFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [ActParsMultiExpr]
                        ) [ActParsYes]
                        ActParsRightParen(
                        ) [ActParsRightParen]
                      ) [MethodCall]
                    ) [MethodCallFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
              ) [SingleReturnExprStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
        ) [MethodDeclaration]
      ) [MethodDeclListMultiple]
      MethodDeclaration(
        MethodSignaturePlain(
          MethodTypeType(
            Type(
             bool
            ) [Type]
          ) [MethodTypeType]
          MethodName(
           verify
          ) [MethodName]
        ) [MethodSignaturePlain]
        NoVarDeclOption(
        ) [NoVarDeclOption]
        StatementListMultiple(
          StatementListMultiple(
            StatementListNo(
            ) [StatementListNo]
            StatementSingle(
              SinglePrintStatement(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    CharConstFactor(
                     v
                    ) [CharConstFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
                NumConstNo(
                ) [NumConstNo]
              ) [SinglePrintStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
          StatementSingle(
            SingleReturnExprStatement(
              SingleTermExprPositive(
                SingleFactorTerm(
                  BoolConstFactor(
                   false
                  ) [BoolConstFactor]
                ) [SingleFactorTerm]
              ) [SingleTermExprPositive]
            ) [SingleReturnExprStatement]
          ) [StatementSingle]
        ) [StatementListMultiple]
      ) [MethodDeclaration]
    ) [MethodDeclListMultiple]
    MethodDeclaration(
      MethodSignaturePlain(
        MethodTypeVoid(
        ) [MethodTypeVoid]
        MethodName(
         main
        ) [MethodName]
      ) [MethodSignaturePlain]
      NoVarDeclOption(
      ) [NoVarDeclOption]
      StatementListMultiple(
        StatementListNo(
        ) [StatementListNo]
        StatementSingle(
          IfElseStatement(
            IfConditionMultiTerm(
              ConditionSingleTerm(
                CondSingleFactTerm(
                  CondSingleExprFact(
                    SingleTermExprPositive(
                      SingleFactorTerm(
                        MethodCallFactor(
                          MethodCall(
                            IdentDesignator(
                             verify
                            ) [IdentDesignator]
                            ActParsLeftParen(
                            ) [ActParsLeftParen]
                            ActParsNo(
                            ) [ActParsNo]
                            ActParsRightParen(
                            ) [ActParsRightParen]
                          ) [MethodCall]
                        ) [MethodCallFactor]
                      ) [SingleFactorTerm]
                    ) [SingleTermExprPositive]
                  ) [CondSingleExprFact]
                ) [CondSingleFactTerm]
              ) [ConditionSingleTerm]
              CondSingleFactTerm(
                CondMultiExprFact(
                  CondSingleExprFact(
                    SingleTermExprPositive(
                      SingleFactorTerm(
                        DesignatorEmptyFactor(
                          IdentArrayDesignator(
                           niz
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                NumConstFactor(
                                 2
                                ) [NumConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [IdentArrayDesignator]
                        ) [DesignatorEmptyFactor]
                      ) [SingleFactorTerm]
                    ) [SingleTermExprPositive]
                  ) [CondSingleExprFact]
                  RelopEQUAL(
                  ) [RelopEQUAL]
                  SingleTermExprPositive(
                    SingleFactorTerm(
                      NumConstFactor(
                       4
                      ) [NumConstFactor]
                    ) [SingleFactorTerm]
                  ) [SingleTermExprPositive]
                ) [CondMultiExprFact]
              ) [CondSingleFactTerm]
            ) [IfConditionMultiTerm]
            StatementSingle(
              SinglePrintStatement(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    MethodCallFactor(
                      MethodCall(
                        IdentDesignator(
                         ord
                        ) [IdentDesignator]
                        ActParsLeftParen(
                        ) [ActParsLeftParen]
                        ActParsYes(
                          ActParsSingleExpr(
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                CharConstFactor(
                                 A
                                ) [CharConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [ActParsSingleExpr]
                        ) [ActParsYes]
                        ActParsRightParen(
                        ) [ActParsRightParen]
                      ) [MethodCall]
                    ) [MethodCallFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
                NumConstNo(
                ) [NumConstNo]
              ) [SinglePrintStatement]
            ) [StatementSingle]
            StatementSingle(
              SinglePrintStatement(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    MethodCallFactor(
                      MethodCall(
                        IdentDesignator(
                         ord
                        ) [IdentDesignator]
                        ActParsLeftParen(
                        ) [ActParsLeftParen]
                        ActParsYes(
                          ActParsSingleExpr(
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                CharConstFactor(
                                 a
                                ) [CharConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [ActParsSingleExpr]
                        ) [ActParsYes]
                        ActParsRightParen(
                        ) [ActParsRightParen]
                      ) [MethodCall]
                    ) [MethodCallFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
                NumConstNo(
                ) [NumConstNo]
              ) [SinglePrintStatement]
            ) [StatementSingle]
          ) [IfElseStatement]
        ) [StatementSingle]
      ) [StatementListMultiple]
    ) [MethodDeclaration]
  ) [MethodDeclListMultiple]
) [Program]
INFO  21:04:56,249 - ===================================
INFO  21:04:56,252 - Method Call detected. Method name: sum
INFO  21:04:56,252 - Method Call detected. Method name: verify
INFO  21:05:12,014 - Compiling source file: D:\source\repos\PP_Projekat\MicroJavaCompiler\test\program.mj
INFO  21:05:12,030 - #2 program
INFO  21:05:12,030 - #48 test302
INFO  21:05:12,030 - #7 const
INFO  21:05:12,030 - #48 int
INFO  21:05:12,030 - #48 jedan
INFO  21:05:12,031 - #27 =
INFO  21:05:12,031 - #51 1
INFO  21:05:12,031 - #38 ;
INFO  21:05:12,031 - #48 int
INFO  21:05:12,031 - #48 i
INFO  21:05:12,031 - #38 ;
INFO  21:05:12,032 - #48 bool
INFO  21:05:12,032 - #48 ibool
INFO  21:05:12,032 - #38 ;
INFO  21:05:12,032 - #48 int
INFO  21:05:12,032 - #48 niz2
INFO  21:05:12,032 - #38 ;
INFO  21:05:12,032 - #48 int
INFO  21:05:12,032 - #48 niz
INFO  21:05:12,032 - #42 [
INFO  21:05:12,032 - #43 ]
INFO  21:05:12,032 - #38 ;
INFO  21:05:12,032 - #48 int
INFO  21:05:12,032 - #48 a
INFO  21:05:12,032 - #38 ;
INFO  21:05:12,032 - #44 {
INFO  21:05:12,033 - #48 int
INFO  21:05:12,033 - #48 sum
INFO  21:05:12,033 - #40 (
INFO  21:05:12,033 - #48 int
INFO  21:05:12,033 - #48 z
INFO  21:05:12,033 - #39 ,
INFO  21:05:12,033 - #48 int
INFO  21:05:12,033 - #48 d
INFO  21:05:12,033 - #41 )
INFO  21:05:12,033 - #44 {
INFO  21:05:12,034 - #15 return
INFO  21:05:12,034 - #48 z
INFO  21:05:12,034 - #22 +
INFO  21:05:12,034 - #48 d
INFO  21:05:12,035 - #38 ;
INFO  21:05:12,035 - #45 }
INFO  21:05:12,035 - #48 int
INFO  21:05:12,035 - #48 inkrement
INFO  21:05:12,035 - #40 (
INFO  21:05:12,035 - #48 int
INFO  21:05:12,035 - #48 a
INFO  21:05:12,035 - #39 ,
INFO  21:05:12,035 - #48 int
INFO  21:05:12,035 - #48 inc
INFO  21:05:12,035 - #41 )
INFO  21:05:12,035 - #48 int
INFO  21:05:12,035 - #48 pom
INFO  21:05:12,035 - #38 ;
INFO  21:05:12,036 - #44 {
INFO  21:05:12,036 - #15 return
INFO  21:05:12,036 - #48 sum
INFO  21:05:12,036 - #40 (
INFO  21:05:12,036 - #48 a
INFO  21:05:12,036 - #39 ,
INFO  21:05:12,036 - #48 pom
INFO  21:05:12,036 - #41 )
INFO  21:05:12,036 - #38 ;
INFO  21:05:12,037 - #45 }
INFO  21:05:12,037 - #48 bool
INFO  21:05:12,037 - #48 verify
INFO  21:05:12,037 - #40 (
INFO  21:05:12,037 - #41 )
INFO  21:05:12,037 - #44 {
INFO  21:05:12,037 - #12 print
INFO  21:05:12,037 - #40 (
INFO  21:05:12,037 - #50 v
INFO  21:05:12,037 - #41 )
INFO  21:05:12,037 - #38 ;
INFO  21:05:12,038 - #15 return
INFO  21:05:12,038 - #49 false
INFO  21:05:12,038 - #38 ;
INFO  21:05:12,038 - #45 }
INFO  21:05:12,038 - #14 void
INFO  21:05:12,038 - #48 main
INFO  21:05:12,038 - #40 (
INFO  21:05:12,038 - #41 )
INFO  21:05:12,038 - #44 {
INFO  21:05:12,038 - #5 if
INFO  21:05:12,038 - #40 (
INFO  21:05:12,038 - #48 verify
INFO  21:05:12,038 - #40 (
INFO  21:05:12,038 - #41 )
INFO  21:05:12,038 - #35 ||
INFO  21:05:12,038 - #48 niz
INFO  21:05:12,038 - #42 [
INFO  21:05:12,038 - #51 2
INFO  21:05:12,039 - #43 ]
INFO  21:05:12,039 - #28 ==
INFO  21:05:12,039 - #51 4
INFO  21:05:12,039 - #41 )
INFO  21:05:12,039 - #12 print
INFO  21:05:12,039 - #40 (
INFO  21:05:12,039 - #48 ord
INFO  21:05:12,039 - #40 (
INFO  21:05:12,039 - #50 A
INFO  21:05:12,039 - #41 )
INFO  21:05:12,039 - #41 )
INFO  21:05:12,039 - #38 ;
INFO  21:05:12,039 - #6 else
INFO  21:05:12,040 - #12 print
INFO  21:05:12,040 - #40 (
INFO  21:05:12,040 - #48 ord
INFO  21:05:12,040 - #40 (
INFO  21:05:12,040 - #50 a
INFO  21:05:12,040 - #41 )
INFO  21:05:12,040 - #41 )
INFO  21:05:12,040 - #38 ;
INFO  21:05:12,040 - #45 }
INFO  21:05:12,040 - #45 }
INFO  21:05:12,041 - Program(
  ProgramName(
   test302
  ) [ProgramName]
  AllDeclListMultiple(
    AllDeclListMultiple(
      AllDeclListMultiple(
        AllDeclListMultiple(
          AllDeclListMultiple(
            AllDeclListMultiple(
              NoDecl(
              ) [NoDecl]
              ConstDeclaration(
                ConstDeclarationExpr(
                  Type(
                   int
                  ) [Type]
                  ConstAssignSingle(
                    ConstAssign(
                     jedan
                      NumberConst(
                       1
                      ) [NumberConst]
                    ) [ConstAssign]
                  ) [ConstAssignSingle]
                ) [ConstDeclarationExpr]
              ) [ConstDeclaration]
            ) [AllDeclListMultiple]
            GlobalVarDeclaration(
              GlobalVarDeclarationExpr(
                Type(
                 int
                ) [Type]
                GlobalVarDeclListSingle(
                  GlobalVarDeclarationSingle(
                   i
                    NoArray(
                    ) [NoArray]
                  ) [GlobalVarDeclarationSingle]
                ) [GlobalVarDeclListSingle]
              ) [GlobalVarDeclarationExpr]
            ) [GlobalVarDeclaration]
          ) [AllDeclListMultiple]
          GlobalVarDeclaration(
            GlobalVarDeclarationExpr(
              Type(
               bool
              ) [Type]
              GlobalVarDeclListSingle(
                GlobalVarDeclarationSingle(
                 ibool
                  NoArray(
                  ) [NoArray]
                ) [GlobalVarDeclarationSingle]
              ) [GlobalVarDeclListSingle]
            ) [GlobalVarDeclarationExpr]
          ) [GlobalVarDeclaration]
        ) [AllDeclListMultiple]
        GlobalVarDeclaration(
          GlobalVarDeclarationExpr(
            Type(
             int
            ) [Type]
            GlobalVarDeclListSingle(
              GlobalVarDeclarationSingle(
               niz2
                NoArray(
                ) [NoArray]
              ) [GlobalVarDeclarationSingle]
            ) [GlobalVarDeclListSingle]
          ) [GlobalVarDeclarationExpr]
        ) [GlobalVarDeclaration]
      ) [AllDeclListMultiple]
      GlobalVarDeclaration(
        GlobalVarDeclarationExpr(
          Type(
           int
          ) [Type]
          GlobalVarDeclListSingle(
            GlobalVarDeclarationSingle(
             niz
              ArrayBrackets(
              ) [ArrayBrackets]
            ) [GlobalVarDeclarationSingle]
          ) [GlobalVarDeclListSingle]
        ) [GlobalVarDeclarationExpr]
      ) [GlobalVarDeclaration]
    ) [AllDeclListMultiple]
    GlobalVarDeclaration(
      GlobalVarDeclarationExpr(
        Type(
         int
        ) [Type]
        GlobalVarDeclListSingle(
          GlobalVarDeclarationSingle(
           a
            NoArray(
            ) [NoArray]
          ) [GlobalVarDeclarationSingle]
        ) [GlobalVarDeclListSingle]
      ) [GlobalVarDeclarationExpr]
    ) [GlobalVarDeclaration]
  ) [AllDeclListMultiple]
  MethodDeclListMultiple(
    MethodDeclListMultiple(
      MethodDeclListMultiple(
        MethodDeclListMultiple(
          MethodDeclListNo(
          ) [MethodDeclListNo]
          MethodDeclaration(
            MethodSignatureParams(
              MethodTypeType(
                Type(
                 int
                ) [Type]
              ) [MethodTypeType]
              MethodName(
               sum
              ) [MethodName]
              FormParsMultiple(
                FormParsSingle(
                  FormParSingle(
                    Type(
                     int
                    ) [Type]
                   z
                    NoArray(
                    ) [NoArray]
                  ) [FormParSingle]
                ) [FormParsSingle]
                FormParSingle(
                  Type(
                   int
                  ) [Type]
                 d
                  NoArray(
                  ) [NoArray]
                ) [FormParSingle]
              ) [FormParsMultiple]
              FormParsEnd(
              ) [FormParsEnd]
            ) [MethodSignatureParams]
            NoVarDeclOption(
            ) [NoVarDeclOption]
            StatementListMultiple(
              StatementListNo(
              ) [StatementListNo]
              StatementSingle(
                SingleReturnExprStatement(
                  MultiTermExpr(
                    SingleTermExprPositive(
                      SingleFactorTerm(
                        DesignatorEmptyFactor(
                          IdentDesignator(
                           z
                          ) [IdentDesignator]
                        ) [DesignatorEmptyFactor]
                      ) [SingleFactorTerm]
                    ) [SingleTermExprPositive]
                    AddopPlus(
                    ) [AddopPlus]
                    SingleFactorTerm(
                      DesignatorEmptyFactor(
                        IdentDesignator(
                         d
                        ) [IdentDesignator]
                      ) [DesignatorEmptyFactor]
                    ) [SingleFactorTerm]
                  ) [MultiTermExpr]
                ) [SingleReturnExprStatement]
              ) [StatementSingle]
            ) [StatementListMultiple]
          ) [MethodDeclaration]
        ) [MethodDeclListMultiple]
        MethodDeclaration(
          MethodSignatureParams(
            MethodTypeType(
              Type(
               int
              ) [Type]
            ) [MethodTypeType]
            MethodName(
             inkrement
            ) [MethodName]
            FormParsMultiple(
              FormParsSingle(
                FormParSingle(
                  Type(
                   int
                  ) [Type]
                 a
                  NoArray(
                  ) [NoArray]
                ) [FormParSingle]
              ) [FormParsSingle]
              FormParSingle(
                Type(
                 int
                ) [Type]
               inc
                NoArray(
                ) [NoArray]
              ) [FormParSingle]
            ) [FormParsMultiple]
            FormParsEnd(
            ) [FormParsEnd]
          ) [MethodSignatureParams]
          VarDeclOptionTrue(
            NoVarDeclOption(
            ) [NoVarDeclOption]
            VarDeclarationExpr(
              Type(
               int
              ) [Type]
              VarDeclListSingle(
                VarDeclSingle(
                 pom
                  NoArray(
                  ) [NoArray]
                ) [VarDeclSingle]
              ) [VarDeclListSingle]
            ) [VarDeclarationExpr]
          ) [VarDeclOptionTrue]
          StatementListMultiple(
            StatementListNo(
            ) [StatementListNo]
            StatementSingle(
              SingleReturnExprStatement(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    MethodCallFactor(
                      MethodCall(
                        IdentDesignator(
                         sum
                        ) [IdentDesignator]
                        ActParsLeftParen(
                        ) [ActParsLeftParen]
                        ActParsYes(
                          ActParsMultiExpr(
                            ActParsSingleExpr(
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentDesignator(
                                     a
                                    ) [IdentDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [ActParsSingleExpr]
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                DesignatorEmptyFactor(
                                  IdentDesignator(
                                   pom
                                  ) [IdentDesignator]
                                ) [DesignatorEmptyFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [ActParsMultiExpr]
                        ) [ActParsYes]
                        ActParsRightParen(
                        ) [ActParsRightParen]
                      ) [MethodCall]
                    ) [MethodCallFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
              ) [SingleReturnExprStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
        ) [MethodDeclaration]
      ) [MethodDeclListMultiple]
      MethodDeclaration(
        MethodSignaturePlain(
          MethodTypeType(
            Type(
             bool
            ) [Type]
          ) [MethodTypeType]
          MethodName(
           verify
          ) [MethodName]
        ) [MethodSignaturePlain]
        NoVarDeclOption(
        ) [NoVarDeclOption]
        StatementListMultiple(
          StatementListMultiple(
            StatementListNo(
            ) [StatementListNo]
            StatementSingle(
              SinglePrintStatement(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    CharConstFactor(
                     v
                    ) [CharConstFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
                NumConstNo(
                ) [NumConstNo]
              ) [SinglePrintStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
          StatementSingle(
            SingleReturnExprStatement(
              SingleTermExprPositive(
                SingleFactorTerm(
                  BoolConstFactor(
                   false
                  ) [BoolConstFactor]
                ) [SingleFactorTerm]
              ) [SingleTermExprPositive]
            ) [SingleReturnExprStatement]
          ) [StatementSingle]
        ) [StatementListMultiple]
      ) [MethodDeclaration]
    ) [MethodDeclListMultiple]
    MethodDeclaration(
      MethodSignaturePlain(
        MethodTypeVoid(
        ) [MethodTypeVoid]
        MethodName(
         main
        ) [MethodName]
      ) [MethodSignaturePlain]
      NoVarDeclOption(
      ) [NoVarDeclOption]
      StatementListMultiple(
        StatementListNo(
        ) [StatementListNo]
        StatementSingle(
          IfElseStatement(
            IfConditionMultiTerm(
              ConditionSingleTerm(
                CondSingleFactTerm(
                  CondSingleExprFact(
                    SingleTermExprPositive(
                      SingleFactorTerm(
                        MethodCallFactor(
                          MethodCall(
                            IdentDesignator(
                             verify
                            ) [IdentDesignator]
                            ActParsLeftParen(
                            ) [ActParsLeftParen]
                            ActParsNo(
                            ) [ActParsNo]
                            ActParsRightParen(
                            ) [ActParsRightParen]
                          ) [MethodCall]
                        ) [MethodCallFactor]
                      ) [SingleFactorTerm]
                    ) [SingleTermExprPositive]
                  ) [CondSingleExprFact]
                ) [CondSingleFactTerm]
              ) [ConditionSingleTerm]
              CondSingleFactTerm(
                CondMultiExprFact(
                  CondSingleExprFact(
                    SingleTermExprPositive(
                      SingleFactorTerm(
                        DesignatorEmptyFactor(
                          IdentArrayDesignator(
                           niz
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                NumConstFactor(
                                 2
                                ) [NumConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [IdentArrayDesignator]
                        ) [DesignatorEmptyFactor]
                      ) [SingleFactorTerm]
                    ) [SingleTermExprPositive]
                  ) [CondSingleExprFact]
                  RelopEQUAL(
                  ) [RelopEQUAL]
                  SingleTermExprPositive(
                    SingleFactorTerm(
                      NumConstFactor(
                       4
                      ) [NumConstFactor]
                    ) [SingleFactorTerm]
                  ) [SingleTermExprPositive]
                ) [CondMultiExprFact]
              ) [CondSingleFactTerm]
            ) [IfConditionMultiTerm]
            StatementSingle(
              SinglePrintStatement(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    MethodCallFactor(
                      MethodCall(
                        IdentDesignator(
                         ord
                        ) [IdentDesignator]
                        ActParsLeftParen(
                        ) [ActParsLeftParen]
                        ActParsYes(
                          ActParsSingleExpr(
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                CharConstFactor(
                                 A
                                ) [CharConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [ActParsSingleExpr]
                        ) [ActParsYes]
                        ActParsRightParen(
                        ) [ActParsRightParen]
                      ) [MethodCall]
                    ) [MethodCallFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
                NumConstNo(
                ) [NumConstNo]
              ) [SinglePrintStatement]
            ) [StatementSingle]
            StatementSingle(
              SinglePrintStatement(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    MethodCallFactor(
                      MethodCall(
                        IdentDesignator(
                         ord
                        ) [IdentDesignator]
                        ActParsLeftParen(
                        ) [ActParsLeftParen]
                        ActParsYes(
                          ActParsSingleExpr(
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                CharConstFactor(
                                 a
                                ) [CharConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [ActParsSingleExpr]
                        ) [ActParsYes]
                        ActParsRightParen(
                        ) [ActParsRightParen]
                      ) [MethodCall]
                    ) [MethodCallFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
                NumConstNo(
                ) [NumConstNo]
              ) [SinglePrintStatement]
            ) [StatementSingle]
          ) [IfElseStatement]
        ) [StatementSingle]
      ) [StatementListMultiple]
    ) [MethodDeclaration]
  ) [MethodDeclListMultiple]
) [Program]
INFO  21:05:12,042 - ===================================
INFO  21:05:12,045 - Method Call detected. Method name: sum
INFO  21:05:12,045 - Method Call detected. Method name: verify
INFO  21:05:46,034 - Compiling source file: D:\source\repos\PP_Projekat\MicroJavaCompiler\test\program.mj
INFO  21:05:46,058 - #2 program
INFO  21:05:46,058 - #48 test302
INFO  21:05:46,058 - #7 const
INFO  21:05:46,058 - #48 int
INFO  21:05:46,059 - #48 jedan
INFO  21:05:46,059 - #27 =
INFO  21:05:46,059 - #51 1
INFO  21:05:46,059 - #38 ;
INFO  21:05:46,059 - #48 int
INFO  21:05:46,060 - #48 i
INFO  21:05:46,060 - #38 ;
INFO  21:05:46,060 - #48 bool
INFO  21:05:46,060 - #48 ibool
INFO  21:05:46,060 - #38 ;
INFO  21:05:46,060 - #48 int
INFO  21:05:46,060 - #48 niz2
INFO  21:05:46,060 - #38 ;
INFO  21:05:46,060 - #48 int
INFO  21:05:46,060 - #48 niz
INFO  21:05:46,061 - #42 [
INFO  21:05:46,061 - #43 ]
INFO  21:05:46,061 - #38 ;
INFO  21:05:46,061 - #48 int
INFO  21:05:46,061 - #48 a
INFO  21:05:46,061 - #38 ;
INFO  21:05:46,061 - #44 {
INFO  21:05:46,061 - #48 int
INFO  21:05:46,061 - #48 sum
INFO  21:05:46,061 - #40 (
INFO  21:05:46,062 - #48 int
INFO  21:05:46,062 - #48 z
INFO  21:05:46,062 - #39 ,
INFO  21:05:46,062 - #48 int
INFO  21:05:46,062 - #48 d
INFO  21:05:46,062 - #41 )
INFO  21:05:46,062 - #44 {
INFO  21:05:46,063 - #15 return
INFO  21:05:46,063 - #48 z
INFO  21:05:46,063 - #22 +
INFO  21:05:46,063 - #48 d
INFO  21:05:46,063 - #38 ;
INFO  21:05:46,063 - #45 }
INFO  21:05:46,064 - #48 int
INFO  21:05:46,064 - #48 inkrement
INFO  21:05:46,064 - #40 (
INFO  21:05:46,064 - #48 int
INFO  21:05:46,064 - #48 a
INFO  21:05:46,064 - #39 ,
INFO  21:05:46,064 - #48 int
INFO  21:05:46,064 - #48 inc
INFO  21:05:46,064 - #41 )
INFO  21:05:46,064 - #48 int
INFO  21:05:46,064 - #48 pom
INFO  21:05:46,064 - #38 ;
INFO  21:05:46,065 - #44 {
INFO  21:05:46,065 - #15 return
INFO  21:05:46,065 - #48 sum
INFO  21:05:46,065 - #40 (
INFO  21:05:46,065 - #48 a
INFO  21:05:46,065 - #39 ,
INFO  21:05:46,065 - #48 pom
INFO  21:05:46,065 - #41 )
INFO  21:05:46,065 - #38 ;
INFO  21:05:46,066 - #45 }
INFO  21:05:46,066 - #48 bool
INFO  21:05:46,066 - #48 verify
INFO  21:05:46,066 - #40 (
INFO  21:05:46,066 - #41 )
INFO  21:05:46,066 - #44 {
INFO  21:05:46,066 - #12 print
INFO  21:05:46,066 - #40 (
INFO  21:05:46,066 - #50 v
INFO  21:05:46,066 - #41 )
INFO  21:05:46,066 - #38 ;
INFO  21:05:46,067 - #15 return
INFO  21:05:46,067 - #49 false
INFO  21:05:46,067 - #38 ;
INFO  21:05:46,067 - #45 }
INFO  21:05:46,067 - #14 void
INFO  21:05:46,067 - #48 main
INFO  21:05:46,067 - #40 (
INFO  21:05:46,067 - #41 )
INFO  21:05:46,067 - #44 {
INFO  21:05:46,067 - #5 if
INFO  21:05:46,067 - #40 (
INFO  21:05:46,067 - #48 verify
INFO  21:05:46,067 - #40 (
INFO  21:05:46,067 - #41 )
INFO  21:05:46,067 - #35 ||
INFO  21:05:46,067 - #48 niz
INFO  21:05:46,067 - #42 [
INFO  21:05:46,067 - #51 2
INFO  21:05:46,067 - #43 ]
INFO  21:05:46,067 - #28 ==
INFO  21:05:46,068 - #51 4
INFO  21:05:46,068 - #41 )
INFO  21:05:46,068 - #12 print
INFO  21:05:46,068 - #40 (
INFO  21:05:46,068 - #48 ord
INFO  21:05:46,068 - #40 (
INFO  21:05:46,068 - #50 A
INFO  21:05:46,068 - #41 )
INFO  21:05:46,068 - #41 )
INFO  21:05:46,068 - #38 ;
INFO  21:05:46,068 - #6 else
INFO  21:05:46,068 - #12 print
INFO  21:05:46,068 - #40 (
INFO  21:05:46,068 - #48 ord
INFO  21:05:46,068 - #40 (
INFO  21:05:46,068 - #50 a
INFO  21:05:46,069 - #41 )
INFO  21:05:46,069 - #41 )
INFO  21:05:46,069 - #38 ;
INFO  21:05:46,069 - #45 }
INFO  21:05:46,069 - #45 }
INFO  21:05:46,070 - Program(
  ProgramName(
   test302
  ) [ProgramName]
  AllDeclListMultiple(
    AllDeclListMultiple(
      AllDeclListMultiple(
        AllDeclListMultiple(
          AllDeclListMultiple(
            AllDeclListMultiple(
              NoDecl(
              ) [NoDecl]
              ConstDeclaration(
                ConstDeclarationExpr(
                  Type(
                   int
                  ) [Type]
                  ConstAssignSingle(
                    ConstAssign(
                     jedan
                      NumberConst(
                       1
                      ) [NumberConst]
                    ) [ConstAssign]
                  ) [ConstAssignSingle]
                ) [ConstDeclarationExpr]
              ) [ConstDeclaration]
            ) [AllDeclListMultiple]
            GlobalVarDeclaration(
              GlobalVarDeclarationExpr(
                Type(
                 int
                ) [Type]
                GlobalVarDeclListSingle(
                  GlobalVarDeclarationSingle(
                   i
                    NoArray(
                    ) [NoArray]
                  ) [GlobalVarDeclarationSingle]
                ) [GlobalVarDeclListSingle]
              ) [GlobalVarDeclarationExpr]
            ) [GlobalVarDeclaration]
          ) [AllDeclListMultiple]
          GlobalVarDeclaration(
            GlobalVarDeclarationExpr(
              Type(
               bool
              ) [Type]
              GlobalVarDeclListSingle(
                GlobalVarDeclarationSingle(
                 ibool
                  NoArray(
                  ) [NoArray]
                ) [GlobalVarDeclarationSingle]
              ) [GlobalVarDeclListSingle]
            ) [GlobalVarDeclarationExpr]
          ) [GlobalVarDeclaration]
        ) [AllDeclListMultiple]
        GlobalVarDeclaration(
          GlobalVarDeclarationExpr(
            Type(
             int
            ) [Type]
            GlobalVarDeclListSingle(
              GlobalVarDeclarationSingle(
               niz2
                NoArray(
                ) [NoArray]
              ) [GlobalVarDeclarationSingle]
            ) [GlobalVarDeclListSingle]
          ) [GlobalVarDeclarationExpr]
        ) [GlobalVarDeclaration]
      ) [AllDeclListMultiple]
      GlobalVarDeclaration(
        GlobalVarDeclarationExpr(
          Type(
           int
          ) [Type]
          GlobalVarDeclListSingle(
            GlobalVarDeclarationSingle(
             niz
              ArrayBrackets(
              ) [ArrayBrackets]
            ) [GlobalVarDeclarationSingle]
          ) [GlobalVarDeclListSingle]
        ) [GlobalVarDeclarationExpr]
      ) [GlobalVarDeclaration]
    ) [AllDeclListMultiple]
    GlobalVarDeclaration(
      GlobalVarDeclarationExpr(
        Type(
         int
        ) [Type]
        GlobalVarDeclListSingle(
          GlobalVarDeclarationSingle(
           a
            NoArray(
            ) [NoArray]
          ) [GlobalVarDeclarationSingle]
        ) [GlobalVarDeclListSingle]
      ) [GlobalVarDeclarationExpr]
    ) [GlobalVarDeclaration]
  ) [AllDeclListMultiple]
  MethodDeclListMultiple(
    MethodDeclListMultiple(
      MethodDeclListMultiple(
        MethodDeclListMultiple(
          MethodDeclListNo(
          ) [MethodDeclListNo]
          MethodDeclaration(
            MethodSignatureParams(
              MethodTypeType(
                Type(
                 int
                ) [Type]
              ) [MethodTypeType]
              MethodName(
               sum
              ) [MethodName]
              FormParsMultiple(
                FormParsSingle(
                  FormParSingle(
                    Type(
                     int
                    ) [Type]
                   z
                    NoArray(
                    ) [NoArray]
                  ) [FormParSingle]
                ) [FormParsSingle]
                FormParSingle(
                  Type(
                   int
                  ) [Type]
                 d
                  NoArray(
                  ) [NoArray]
                ) [FormParSingle]
              ) [FormParsMultiple]
              FormParsEnd(
              ) [FormParsEnd]
            ) [MethodSignatureParams]
            NoVarDeclOption(
            ) [NoVarDeclOption]
            StatementListMultiple(
              StatementListNo(
              ) [StatementListNo]
              StatementSingle(
                SingleReturnExprStatement(
                  MultiTermExpr(
                    SingleTermExprPositive(
                      SingleFactorTerm(
                        DesignatorEmptyFactor(
                          IdentDesignator(
                           z
                          ) [IdentDesignator]
                        ) [DesignatorEmptyFactor]
                      ) [SingleFactorTerm]
                    ) [SingleTermExprPositive]
                    AddopPlus(
                    ) [AddopPlus]
                    SingleFactorTerm(
                      DesignatorEmptyFactor(
                        IdentDesignator(
                         d
                        ) [IdentDesignator]
                      ) [DesignatorEmptyFactor]
                    ) [SingleFactorTerm]
                  ) [MultiTermExpr]
                ) [SingleReturnExprStatement]
              ) [StatementSingle]
            ) [StatementListMultiple]
          ) [MethodDeclaration]
        ) [MethodDeclListMultiple]
        MethodDeclaration(
          MethodSignatureParams(
            MethodTypeType(
              Type(
               int
              ) [Type]
            ) [MethodTypeType]
            MethodName(
             inkrement
            ) [MethodName]
            FormParsMultiple(
              FormParsSingle(
                FormParSingle(
                  Type(
                   int
                  ) [Type]
                 a
                  NoArray(
                  ) [NoArray]
                ) [FormParSingle]
              ) [FormParsSingle]
              FormParSingle(
                Type(
                 int
                ) [Type]
               inc
                NoArray(
                ) [NoArray]
              ) [FormParSingle]
            ) [FormParsMultiple]
            FormParsEnd(
            ) [FormParsEnd]
          ) [MethodSignatureParams]
          VarDeclOptionTrue(
            NoVarDeclOption(
            ) [NoVarDeclOption]
            VarDeclarationExpr(
              Type(
               int
              ) [Type]
              VarDeclListSingle(
                VarDeclSingle(
                 pom
                  NoArray(
                  ) [NoArray]
                ) [VarDeclSingle]
              ) [VarDeclListSingle]
            ) [VarDeclarationExpr]
          ) [VarDeclOptionTrue]
          StatementListMultiple(
            StatementListNo(
            ) [StatementListNo]
            StatementSingle(
              SingleReturnExprStatement(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    MethodCallFactor(
                      MethodCall(
                        IdentDesignator(
                         sum
                        ) [IdentDesignator]
                        ActParsLeftParen(
                        ) [ActParsLeftParen]
                        ActParsYes(
                          ActParsMultiExpr(
                            ActParsSingleExpr(
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentDesignator(
                                     a
                                    ) [IdentDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [ActParsSingleExpr]
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                DesignatorEmptyFactor(
                                  IdentDesignator(
                                   pom
                                  ) [IdentDesignator]
                                ) [DesignatorEmptyFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [ActParsMultiExpr]
                        ) [ActParsYes]
                        ActParsRightParen(
                        ) [ActParsRightParen]
                      ) [MethodCall]
                    ) [MethodCallFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
              ) [SingleReturnExprStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
        ) [MethodDeclaration]
      ) [MethodDeclListMultiple]
      MethodDeclaration(
        MethodSignaturePlain(
          MethodTypeType(
            Type(
             bool
            ) [Type]
          ) [MethodTypeType]
          MethodName(
           verify
          ) [MethodName]
        ) [MethodSignaturePlain]
        NoVarDeclOption(
        ) [NoVarDeclOption]
        StatementListMultiple(
          StatementListMultiple(
            StatementListNo(
            ) [StatementListNo]
            StatementSingle(
              SinglePrintStatement(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    CharConstFactor(
                     v
                    ) [CharConstFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
                NumConstNo(
                ) [NumConstNo]
              ) [SinglePrintStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
          StatementSingle(
            SingleReturnExprStatement(
              SingleTermExprPositive(
                SingleFactorTerm(
                  BoolConstFactor(
                   false
                  ) [BoolConstFactor]
                ) [SingleFactorTerm]
              ) [SingleTermExprPositive]
            ) [SingleReturnExprStatement]
          ) [StatementSingle]
        ) [StatementListMultiple]
      ) [MethodDeclaration]
    ) [MethodDeclListMultiple]
    MethodDeclaration(
      MethodSignaturePlain(
        MethodTypeVoid(
        ) [MethodTypeVoid]
        MethodName(
         main
        ) [MethodName]
      ) [MethodSignaturePlain]
      NoVarDeclOption(
      ) [NoVarDeclOption]
      StatementListMultiple(
        StatementListNo(
        ) [StatementListNo]
        StatementSingle(
          IfElseStatement(
            IfConditionMultiTerm(
              ConditionSingleTerm(
                CondSingleFactTerm(
                  CondSingleExprFact(
                    SingleTermExprPositive(
                      SingleFactorTerm(
                        MethodCallFactor(
                          MethodCall(
                            IdentDesignator(
                             verify
                            ) [IdentDesignator]
                            ActParsLeftParen(
                            ) [ActParsLeftParen]
                            ActParsNo(
                            ) [ActParsNo]
                            ActParsRightParen(
                            ) [ActParsRightParen]
                          ) [MethodCall]
                        ) [MethodCallFactor]
                      ) [SingleFactorTerm]
                    ) [SingleTermExprPositive]
                  ) [CondSingleExprFact]
                ) [CondSingleFactTerm]
              ) [ConditionSingleTerm]
              CondSingleFactTerm(
                CondMultiExprFact(
                  CondSingleExprFact(
                    SingleTermExprPositive(
                      SingleFactorTerm(
                        DesignatorEmptyFactor(
                          IdentArrayDesignator(
                           niz
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                NumConstFactor(
                                 2
                                ) [NumConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [IdentArrayDesignator]
                        ) [DesignatorEmptyFactor]
                      ) [SingleFactorTerm]
                    ) [SingleTermExprPositive]
                  ) [CondSingleExprFact]
                  RelopEQUAL(
                  ) [RelopEQUAL]
                  SingleTermExprPositive(
                    SingleFactorTerm(
                      NumConstFactor(
                       4
                      ) [NumConstFactor]
                    ) [SingleFactorTerm]
                  ) [SingleTermExprPositive]
                ) [CondMultiExprFact]
              ) [CondSingleFactTerm]
            ) [IfConditionMultiTerm]
            StatementSingle(
              SinglePrintStatement(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    MethodCallFactor(
                      MethodCall(
                        IdentDesignator(
                         ord
                        ) [IdentDesignator]
                        ActParsLeftParen(
                        ) [ActParsLeftParen]
                        ActParsYes(
                          ActParsSingleExpr(
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                CharConstFactor(
                                 A
                                ) [CharConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [ActParsSingleExpr]
                        ) [ActParsYes]
                        ActParsRightParen(
                        ) [ActParsRightParen]
                      ) [MethodCall]
                    ) [MethodCallFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
                NumConstNo(
                ) [NumConstNo]
              ) [SinglePrintStatement]
            ) [StatementSingle]
            StatementSingle(
              SinglePrintStatement(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    MethodCallFactor(
                      MethodCall(
                        IdentDesignator(
                         ord
                        ) [IdentDesignator]
                        ActParsLeftParen(
                        ) [ActParsLeftParen]
                        ActParsYes(
                          ActParsSingleExpr(
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                CharConstFactor(
                                 a
                                ) [CharConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [ActParsSingleExpr]
                        ) [ActParsYes]
                        ActParsRightParen(
                        ) [ActParsRightParen]
                      ) [MethodCall]
                    ) [MethodCallFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
                NumConstNo(
                ) [NumConstNo]
              ) [SinglePrintStatement]
            ) [StatementSingle]
          ) [IfElseStatement]
        ) [StatementSingle]
      ) [StatementListMultiple]
    ) [MethodDeclaration]
  ) [MethodDeclListMultiple]
) [Program]
INFO  21:05:46,070 - ===================================
INFO  21:05:46,080 - Method Call detected. Method name: sum
INFO  21:05:46,080 - Method Call detected. Method name: verify
INFO  21:08:18,858 - Compiling source file: D:\source\repos\PP_Projekat\MicroJavaCompiler\test\program.mj
INFO  21:08:18,875 - #2 program
INFO  21:08:18,876 - #48 test302
INFO  21:08:18,876 - #7 const
INFO  21:08:18,876 - #48 int
INFO  21:08:18,876 - #48 jedan
INFO  21:08:18,876 - #27 =
INFO  21:08:18,876 - #51 1
INFO  21:08:18,876 - #38 ;
INFO  21:08:18,877 - #48 int
INFO  21:08:18,877 - #48 i
INFO  21:08:18,877 - #38 ;
INFO  21:08:18,877 - #48 bool
INFO  21:08:18,877 - #48 ibool
INFO  21:08:18,877 - #38 ;
INFO  21:08:18,877 - #48 int
INFO  21:08:18,877 - #48 niz2
INFO  21:08:18,877 - #38 ;
INFO  21:08:18,878 - #48 int
INFO  21:08:18,878 - #48 niz
INFO  21:08:18,878 - #42 [
INFO  21:08:18,878 - #43 ]
INFO  21:08:18,878 - #38 ;
INFO  21:08:18,878 - #48 int
INFO  21:08:18,878 - #48 a
INFO  21:08:18,878 - #38 ;
INFO  21:08:18,878 - #44 {
INFO  21:08:18,878 - #48 int
INFO  21:08:18,878 - #48 sum
INFO  21:08:18,878 - #40 (
INFO  21:08:18,879 - #48 int
INFO  21:08:18,879 - #48 z
INFO  21:08:18,879 - #39 ,
INFO  21:08:18,879 - #48 int
INFO  21:08:18,879 - #48 d
INFO  21:08:18,879 - #41 )
INFO  21:08:18,879 - #44 {
INFO  21:08:18,879 - #15 return
INFO  21:08:18,879 - #48 z
INFO  21:08:18,879 - #22 +
INFO  21:08:18,880 - #48 d
INFO  21:08:18,880 - #38 ;
INFO  21:08:18,880 - #45 }
INFO  21:08:18,880 - #48 int
INFO  21:08:18,880 - #48 inkrement
INFO  21:08:18,881 - #40 (
INFO  21:08:18,881 - #48 int
INFO  21:08:18,881 - #48 a
INFO  21:08:18,881 - #39 ,
INFO  21:08:18,881 - #48 int
INFO  21:08:18,881 - #48 inc
INFO  21:08:18,881 - #41 )
INFO  21:08:18,881 - #48 int
INFO  21:08:18,881 - #48 pom
INFO  21:08:18,881 - #38 ;
INFO  21:08:18,881 - #44 {
INFO  21:08:18,881 - #15 return
INFO  21:08:18,881 - #48 sum
INFO  21:08:18,881 - #40 (
INFO  21:08:18,881 - #48 a
INFO  21:08:18,881 - #39 ,
INFO  21:08:18,882 - #48 pom
INFO  21:08:18,882 - #41 )
INFO  21:08:18,882 - #38 ;
INFO  21:08:18,882 - #45 }
INFO  21:08:18,882 - #48 bool
INFO  21:08:18,882 - #48 verify
INFO  21:08:18,882 - #40 (
INFO  21:08:18,882 - #41 )
INFO  21:08:18,882 - #44 {
INFO  21:08:18,882 - #12 print
INFO  21:08:18,882 - #40 (
INFO  21:08:18,882 - #50 v
INFO  21:08:18,882 - #41 )
INFO  21:08:18,883 - #38 ;
INFO  21:08:18,883 - #15 return
INFO  21:08:18,883 - #49 false
INFO  21:08:18,883 - #38 ;
INFO  21:08:18,883 - #45 }
INFO  21:08:18,883 - #14 void
INFO  21:08:18,883 - #48 main
INFO  21:08:18,883 - #40 (
INFO  21:08:18,883 - #41 )
INFO  21:08:18,883 - #44 {
INFO  21:08:18,883 - #5 if
INFO  21:08:18,883 - #40 (
INFO  21:08:18,883 - #48 verify
INFO  21:08:18,883 - #40 (
INFO  21:08:18,883 - #41 )
INFO  21:08:18,883 - #35 ||
INFO  21:08:18,884 - #48 niz
INFO  21:08:18,884 - #42 [
INFO  21:08:18,884 - #51 2
INFO  21:08:18,884 - #43 ]
INFO  21:08:18,884 - #28 ==
INFO  21:08:18,884 - #51 4
INFO  21:08:18,884 - #41 )
INFO  21:08:18,884 - #12 print
INFO  21:08:18,884 - #40 (
INFO  21:08:18,884 - #48 ord
INFO  21:08:18,884 - #40 (
INFO  21:08:18,884 - #50 A
INFO  21:08:18,884 - #41 )
INFO  21:08:18,885 - #41 )
INFO  21:08:18,885 - #38 ;
INFO  21:08:18,885 - #6 else
INFO  21:08:18,885 - #12 print
INFO  21:08:18,885 - #40 (
INFO  21:08:18,885 - #48 ord
INFO  21:08:18,885 - #40 (
INFO  21:08:18,885 - #50 a
INFO  21:08:18,885 - #41 )
INFO  21:08:18,885 - #41 )
INFO  21:08:18,885 - #38 ;
INFO  21:08:18,885 - #45 }
INFO  21:08:18,885 - #45 }
INFO  21:08:18,886 - Program(
  ProgramName(
   test302
  ) [ProgramName]
  AllDeclListMultiple(
    AllDeclListMultiple(
      AllDeclListMultiple(
        AllDeclListMultiple(
          AllDeclListMultiple(
            AllDeclListMultiple(
              NoDecl(
              ) [NoDecl]
              ConstDeclaration(
                ConstDeclarationExpr(
                  Type(
                   int
                  ) [Type]
                  ConstAssignSingle(
                    ConstAssign(
                     jedan
                      NumberConst(
                       1
                      ) [NumberConst]
                    ) [ConstAssign]
                  ) [ConstAssignSingle]
                ) [ConstDeclarationExpr]
              ) [ConstDeclaration]
            ) [AllDeclListMultiple]
            GlobalVarDeclaration(
              GlobalVarDeclarationExpr(
                Type(
                 int
                ) [Type]
                GlobalVarDeclListSingle(
                  GlobalVarDeclarationSingle(
                   i
                    NoArray(
                    ) [NoArray]
                  ) [GlobalVarDeclarationSingle]
                ) [GlobalVarDeclListSingle]
              ) [GlobalVarDeclarationExpr]
            ) [GlobalVarDeclaration]
          ) [AllDeclListMultiple]
          GlobalVarDeclaration(
            GlobalVarDeclarationExpr(
              Type(
               bool
              ) [Type]
              GlobalVarDeclListSingle(
                GlobalVarDeclarationSingle(
                 ibool
                  NoArray(
                  ) [NoArray]
                ) [GlobalVarDeclarationSingle]
              ) [GlobalVarDeclListSingle]
            ) [GlobalVarDeclarationExpr]
          ) [GlobalVarDeclaration]
        ) [AllDeclListMultiple]
        GlobalVarDeclaration(
          GlobalVarDeclarationExpr(
            Type(
             int
            ) [Type]
            GlobalVarDeclListSingle(
              GlobalVarDeclarationSingle(
               niz2
                NoArray(
                ) [NoArray]
              ) [GlobalVarDeclarationSingle]
            ) [GlobalVarDeclListSingle]
          ) [GlobalVarDeclarationExpr]
        ) [GlobalVarDeclaration]
      ) [AllDeclListMultiple]
      GlobalVarDeclaration(
        GlobalVarDeclarationExpr(
          Type(
           int
          ) [Type]
          GlobalVarDeclListSingle(
            GlobalVarDeclarationSingle(
             niz
              ArrayBrackets(
              ) [ArrayBrackets]
            ) [GlobalVarDeclarationSingle]
          ) [GlobalVarDeclListSingle]
        ) [GlobalVarDeclarationExpr]
      ) [GlobalVarDeclaration]
    ) [AllDeclListMultiple]
    GlobalVarDeclaration(
      GlobalVarDeclarationExpr(
        Type(
         int
        ) [Type]
        GlobalVarDeclListSingle(
          GlobalVarDeclarationSingle(
           a
            NoArray(
            ) [NoArray]
          ) [GlobalVarDeclarationSingle]
        ) [GlobalVarDeclListSingle]
      ) [GlobalVarDeclarationExpr]
    ) [GlobalVarDeclaration]
  ) [AllDeclListMultiple]
  MethodDeclListMultiple(
    MethodDeclListMultiple(
      MethodDeclListMultiple(
        MethodDeclListMultiple(
          MethodDeclListNo(
          ) [MethodDeclListNo]
          MethodDeclaration(
            MethodSignatureParams(
              MethodTypeType(
                Type(
                 int
                ) [Type]
              ) [MethodTypeType]
              MethodName(
               sum
              ) [MethodName]
              FormParsMultiple(
                FormParsSingle(
                  FormParSingle(
                    Type(
                     int
                    ) [Type]
                   z
                    NoArray(
                    ) [NoArray]
                  ) [FormParSingle]
                ) [FormParsSingle]
                FormParSingle(
                  Type(
                   int
                  ) [Type]
                 d
                  NoArray(
                  ) [NoArray]
                ) [FormParSingle]
              ) [FormParsMultiple]
              FormParsEnd(
              ) [FormParsEnd]
            ) [MethodSignatureParams]
            NoVarDeclOption(
            ) [NoVarDeclOption]
            StatementListMultiple(
              StatementListNo(
              ) [StatementListNo]
              StatementSingle(
                SingleReturnExprStatement(
                  MultiTermExpr(
                    SingleTermExprPositive(
                      SingleFactorTerm(
                        DesignatorEmptyFactor(
                          IdentDesignator(
                           z
                          ) [IdentDesignator]
                        ) [DesignatorEmptyFactor]
                      ) [SingleFactorTerm]
                    ) [SingleTermExprPositive]
                    AddopPlus(
                    ) [AddopPlus]
                    SingleFactorTerm(
                      DesignatorEmptyFactor(
                        IdentDesignator(
                         d
                        ) [IdentDesignator]
                      ) [DesignatorEmptyFactor]
                    ) [SingleFactorTerm]
                  ) [MultiTermExpr]
                ) [SingleReturnExprStatement]
              ) [StatementSingle]
            ) [StatementListMultiple]
          ) [MethodDeclaration]
        ) [MethodDeclListMultiple]
        MethodDeclaration(
          MethodSignatureParams(
            MethodTypeType(
              Type(
               int
              ) [Type]
            ) [MethodTypeType]
            MethodName(
             inkrement
            ) [MethodName]
            FormParsMultiple(
              FormParsSingle(
                FormParSingle(
                  Type(
                   int
                  ) [Type]
                 a
                  NoArray(
                  ) [NoArray]
                ) [FormParSingle]
              ) [FormParsSingle]
              FormParSingle(
                Type(
                 int
                ) [Type]
               inc
                NoArray(
                ) [NoArray]
              ) [FormParSingle]
            ) [FormParsMultiple]
            FormParsEnd(
            ) [FormParsEnd]
          ) [MethodSignatureParams]
          VarDeclOptionTrue(
            NoVarDeclOption(
            ) [NoVarDeclOption]
            VarDeclarationExpr(
              Type(
               int
              ) [Type]
              VarDeclListSingle(
                VarDeclSingle(
                 pom
                  NoArray(
                  ) [NoArray]
                ) [VarDeclSingle]
              ) [VarDeclListSingle]
            ) [VarDeclarationExpr]
          ) [VarDeclOptionTrue]
          StatementListMultiple(
            StatementListNo(
            ) [StatementListNo]
            StatementSingle(
              SingleReturnExprStatement(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    MethodCallFactor(
                      MethodCall(
                        IdentDesignator(
                         sum
                        ) [IdentDesignator]
                        ActParsLeftParen(
                        ) [ActParsLeftParen]
                        ActParsYes(
                          ActParsMultiExpr(
                            ActParsSingleExpr(
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentDesignator(
                                     a
                                    ) [IdentDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [ActParsSingleExpr]
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                DesignatorEmptyFactor(
                                  IdentDesignator(
                                   pom
                                  ) [IdentDesignator]
                                ) [DesignatorEmptyFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [ActParsMultiExpr]
                        ) [ActParsYes]
                        ActParsRightParen(
                        ) [ActParsRightParen]
                      ) [MethodCall]
                    ) [MethodCallFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
              ) [SingleReturnExprStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
        ) [MethodDeclaration]
      ) [MethodDeclListMultiple]
      MethodDeclaration(
        MethodSignaturePlain(
          MethodTypeType(
            Type(
             bool
            ) [Type]
          ) [MethodTypeType]
          MethodName(
           verify
          ) [MethodName]
        ) [MethodSignaturePlain]
        NoVarDeclOption(
        ) [NoVarDeclOption]
        StatementListMultiple(
          StatementListMultiple(
            StatementListNo(
            ) [StatementListNo]
            StatementSingle(
              SinglePrintStatement(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    CharConstFactor(
                     v
                    ) [CharConstFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
                NumConstNo(
                ) [NumConstNo]
              ) [SinglePrintStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
          StatementSingle(
            SingleReturnExprStatement(
              SingleTermExprPositive(
                SingleFactorTerm(
                  BoolConstFactor(
                   false
                  ) [BoolConstFactor]
                ) [SingleFactorTerm]
              ) [SingleTermExprPositive]
            ) [SingleReturnExprStatement]
          ) [StatementSingle]
        ) [StatementListMultiple]
      ) [MethodDeclaration]
    ) [MethodDeclListMultiple]
    MethodDeclaration(
      MethodSignaturePlain(
        MethodTypeVoid(
        ) [MethodTypeVoid]
        MethodName(
         main
        ) [MethodName]
      ) [MethodSignaturePlain]
      NoVarDeclOption(
      ) [NoVarDeclOption]
      StatementListMultiple(
        StatementListNo(
        ) [StatementListNo]
        StatementSingle(
          IfElseStatement(
            IfConditionMultiTerm(
              ConditionSingleTerm(
                CondSingleFactTerm(
                  CondSingleExprFact(
                    SingleTermExprPositive(
                      SingleFactorTerm(
                        MethodCallFactor(
                          MethodCall(
                            IdentDesignator(
                             verify
                            ) [IdentDesignator]
                            ActParsLeftParen(
                            ) [ActParsLeftParen]
                            ActParsNo(
                            ) [ActParsNo]
                            ActParsRightParen(
                            ) [ActParsRightParen]
                          ) [MethodCall]
                        ) [MethodCallFactor]
                      ) [SingleFactorTerm]
                    ) [SingleTermExprPositive]
                  ) [CondSingleExprFact]
                ) [CondSingleFactTerm]
              ) [ConditionSingleTerm]
              CondSingleFactTerm(
                CondMultiExprFact(
                  CondSingleExprFact(
                    SingleTermExprPositive(
                      SingleFactorTerm(
                        DesignatorEmptyFactor(
                          IdentArrayDesignator(
                           niz
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                NumConstFactor(
                                 2
                                ) [NumConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [IdentArrayDesignator]
                        ) [DesignatorEmptyFactor]
                      ) [SingleFactorTerm]
                    ) [SingleTermExprPositive]
                  ) [CondSingleExprFact]
                  RelopEQUAL(
                  ) [RelopEQUAL]
                  SingleTermExprPositive(
                    SingleFactorTerm(
                      NumConstFactor(
                       4
                      ) [NumConstFactor]
                    ) [SingleFactorTerm]
                  ) [SingleTermExprPositive]
                ) [CondMultiExprFact]
              ) [CondSingleFactTerm]
            ) [IfConditionMultiTerm]
            StatementSingle(
              SinglePrintStatement(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    MethodCallFactor(
                      MethodCall(
                        IdentDesignator(
                         ord
                        ) [IdentDesignator]
                        ActParsLeftParen(
                        ) [ActParsLeftParen]
                        ActParsYes(
                          ActParsSingleExpr(
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                CharConstFactor(
                                 A
                                ) [CharConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [ActParsSingleExpr]
                        ) [ActParsYes]
                        ActParsRightParen(
                        ) [ActParsRightParen]
                      ) [MethodCall]
                    ) [MethodCallFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
                NumConstNo(
                ) [NumConstNo]
              ) [SinglePrintStatement]
            ) [StatementSingle]
            StatementSingle(
              SinglePrintStatement(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    MethodCallFactor(
                      MethodCall(
                        IdentDesignator(
                         ord
                        ) [IdentDesignator]
                        ActParsLeftParen(
                        ) [ActParsLeftParen]
                        ActParsYes(
                          ActParsSingleExpr(
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                CharConstFactor(
                                 a
                                ) [CharConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [ActParsSingleExpr]
                        ) [ActParsYes]
                        ActParsRightParen(
                        ) [ActParsRightParen]
                      ) [MethodCall]
                    ) [MethodCallFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
                NumConstNo(
                ) [NumConstNo]
              ) [SinglePrintStatement]
            ) [StatementSingle]
          ) [IfElseStatement]
        ) [StatementSingle]
      ) [StatementListMultiple]
    ) [MethodDeclaration]
  ) [MethodDeclListMultiple]
) [Program]
INFO  21:08:18,886 - ===================================
INFO  21:08:18,889 - Method Call detected. Method name: sum
INFO  21:08:18,890 - Method Call detected. Method name: verify
INFO  21:08:18,890 - Access to array element detected. Array name: niz
INFO  21:08:18,890 - Method Call detected. Method name: ord
INFO  21:08:18,890 - Method Call detected. Method name: ord
INFO  21:08:18,890 - Compile successful!
INFO  21:08:47,554 - Compiling source file: D:\source\repos\PP_Projekat\MicroJavaCompiler\test\program.mj
INFO  21:08:47,571 - #2 program
INFO  21:08:47,571 - #48 test302
INFO  21:08:47,571 - #7 const
INFO  21:08:47,571 - #48 int
INFO  21:08:47,571 - #48 jedan
INFO  21:08:47,572 - #27 =
INFO  21:08:47,572 - #51 1
INFO  21:08:47,572 - #38 ;
INFO  21:08:47,572 - #48 int
INFO  21:08:47,572 - #48 i
INFO  21:08:47,572 - #38 ;
INFO  21:08:47,573 - #48 bool
INFO  21:08:47,573 - #48 ibool
INFO  21:08:47,573 - #38 ;
INFO  21:08:47,573 - #48 int
INFO  21:08:47,573 - #48 niz2
INFO  21:08:47,573 - #38 ;
INFO  21:08:47,573 - #48 int
INFO  21:08:47,573 - #48 niz
INFO  21:08:47,573 - #42 [
INFO  21:08:47,573 - #43 ]
INFO  21:08:47,573 - #38 ;
INFO  21:08:47,574 - #48 int
INFO  21:08:47,574 - #48 a
INFO  21:08:47,574 - #38 ;
INFO  21:08:47,574 - #44 {
INFO  21:08:47,574 - #48 int
INFO  21:08:47,574 - #48 sum
INFO  21:08:47,574 - #40 (
INFO  21:08:47,574 - #48 int
INFO  21:08:47,574 - #48 z
INFO  21:08:47,574 - #39 ,
INFO  21:08:47,574 - #48 int
INFO  21:08:47,574 - #48 d
INFO  21:08:47,574 - #41 )
INFO  21:08:47,574 - #44 {
INFO  21:08:47,575 - #15 return
INFO  21:08:47,575 - #48 z
INFO  21:08:47,575 - #22 +
INFO  21:08:47,575 - #48 d
INFO  21:08:47,576 - #38 ;
INFO  21:08:47,576 - #45 }
INFO  21:08:47,576 - #48 int
INFO  21:08:47,576 - #48 inkrement
INFO  21:08:47,576 - #40 (
INFO  21:08:47,576 - #48 int
INFO  21:08:47,576 - #48 a
INFO  21:08:47,576 - #39 ,
INFO  21:08:47,576 - #48 int
INFO  21:08:47,576 - #48 inc
INFO  21:08:47,576 - #41 )
INFO  21:08:47,576 - #48 int
INFO  21:08:47,576 - #48 pom
INFO  21:08:47,576 - #38 ;
INFO  21:08:47,577 - #44 {
INFO  21:08:47,577 - #5 if
INFO  21:08:47,577 - #40 (
INFO  21:08:47,577 - #48 inc
INFO  21:08:47,577 - #28 ==
INFO  21:08:47,577 - #48 jedan
INFO  21:08:47,577 - #41 )
INFO  21:08:47,577 - #48 pom
INFO  21:08:47,577 - #27 =
INFO  21:08:47,577 - #51 1
INFO  21:08:47,577 - #38 ;
INFO  21:08:47,578 - #6 else
INFO  21:08:47,578 - #5 if
INFO  21:08:47,578 - #40 (
INFO  21:08:47,578 - #48 inc
INFO  21:08:47,578 - #28 ==
INFO  21:08:47,578 - #51 2
INFO  21:08:47,578 - #41 )
INFO  21:08:47,578 - #48 pom
INFO  21:08:47,578 - #27 =
INFO  21:08:47,578 - #48 a
INFO  21:08:47,578 - #38 ;
INFO  21:08:47,578 - #15 return
INFO  21:08:47,578 - #48 sum
INFO  21:08:47,578 - #40 (
INFO  21:08:47,578 - #48 a
INFO  21:08:47,578 - #39 ,
INFO  21:08:47,579 - #48 pom
INFO  21:08:47,579 - #41 )
INFO  21:08:47,579 - #38 ;
INFO  21:08:47,579 - #45 }
INFO  21:08:47,579 - #48 bool
INFO  21:08:47,579 - #48 verify
INFO  21:08:47,579 - #40 (
INFO  21:08:47,579 - #41 )
INFO  21:08:47,579 - #44 {
INFO  21:08:47,580 - #12 print
INFO  21:08:47,580 - #40 (
INFO  21:08:47,580 - #50 v
INFO  21:08:47,580 - #41 )
INFO  21:08:47,580 - #38 ;
INFO  21:08:47,580 - #15 return
INFO  21:08:47,580 - #49 false
INFO  21:08:47,580 - #38 ;
INFO  21:08:47,580 - #45 }
INFO  21:08:47,580 - #14 void
INFO  21:08:47,580 - #48 main
INFO  21:08:47,580 - #40 (
INFO  21:08:47,580 - #41 )
INFO  21:08:47,580 - #44 {
INFO  21:08:47,581 - #5 if
INFO  21:08:47,581 - #40 (
INFO  21:08:47,581 - #51 1
INFO  21:08:47,581 - #29 !=
INFO  21:08:47,581 - #51 1
INFO  21:08:47,581 - #41 )
INFO  21:08:47,581 - #12 print
INFO  21:08:47,581 - #40 (
INFO  21:08:47,581 - #23 -
INFO  21:08:47,581 - #51 6
INFO  21:08:47,581 - #41 )
INFO  21:08:47,581 - #38 ;
INFO  21:08:47,581 - #6 else
INFO  21:08:47,581 - #12 print
INFO  21:08:47,581 - #40 (
INFO  21:08:47,581 - #51 0
INFO  21:08:47,581 - #41 )
INFO  21:08:47,581 - #38 ;
INFO  21:08:47,581 - #48 ibool
INFO  21:08:47,581 - #27 =
INFO  21:08:47,581 - #49 false
INFO  21:08:47,582 - #38 ;
INFO  21:08:47,582 - #48 i
INFO  21:08:47,582 - #27 =
INFO  21:08:47,582 - #51 0
INFO  21:08:47,582 - #38 ;
INFO  21:08:47,582 - #9 do
INFO  21:08:47,582 - #44 {
INFO  21:08:47,582 - #5 if
INFO  21:08:47,582 - #40 (
INFO  21:08:47,582 - #48 i
INFO  21:08:47,582 - #28 ==
INFO  21:08:47,582 - #51 2
INFO  21:08:47,582 - #41 )
INFO  21:08:47,582 - #48 ibool
INFO  21:08:47,582 - #27 =
INFO  21:08:47,582 - #49 true
INFO  21:08:47,582 - #38 ;
INFO  21:08:47,582 - #48 i
INFO  21:08:47,582 - #36 ++
INFO  21:08:47,582 - #38 ;
INFO  21:08:47,582 - #45 }
INFO  21:08:47,582 - #10 while
INFO  21:08:47,582 - #40 (
INFO  21:08:47,582 - #48 i
INFO  21:08:47,583 - #32 <
INFO  21:08:47,583 - #51 5
INFO  21:08:47,583 - #41 )
INFO  21:08:47,583 - #38 ;
INFO  21:08:47,583 - #5 if
INFO  21:08:47,583 - #40 (
INFO  21:08:47,583 - #48 ibool
INFO  21:08:47,583 - #41 )
INFO  21:08:47,583 - #5 if
INFO  21:08:47,583 - #40 (
INFO  21:08:47,583 - #48 i
INFO  21:08:47,583 - #28 ==
INFO  21:08:47,583 - #51 5
INFO  21:08:47,583 - #41 )
INFO  21:08:47,583 - #12 print
INFO  21:08:47,583 - #40 (
INFO  21:08:47,583 - #51 1
INFO  21:08:47,583 - #41 )
INFO  21:08:47,583 - #38 ;
INFO  21:08:47,583 - #6 else
INFO  21:08:47,583 - #12 print
INFO  21:08:47,583 - #40 (
INFO  21:08:47,583 - #23 -
INFO  21:08:47,583 - #51 1
INFO  21:08:47,583 - #41 )
INFO  21:08:47,583 - #38 ;
INFO  21:08:47,583 - #48 a
INFO  21:08:47,583 - #27 =
INFO  21:08:47,583 - #51 2
INFO  21:08:47,583 - #38 ;
INFO  21:08:47,583 - #48 niz
INFO  21:08:47,583 - #27 =
INFO  21:08:47,583 - #11 new
INFO  21:08:47,583 - #48 int
INFO  21:08:47,584 - #42 [
INFO  21:08:47,584 - #51 3
INFO  21:08:47,584 - #43 ]
INFO  21:08:47,584 - #38 ;
INFO  21:08:47,584 - #48 niz
INFO  21:08:47,584 - #42 [
INFO  21:08:47,584 - #51 0
INFO  21:08:47,584 - #43 ]
INFO  21:08:47,584 - #27 =
INFO  21:08:47,584 - #51 1
INFO  21:08:47,584 - #24 *
INFO  21:08:47,584 - #48 a
INFO  21:08:47,584 - #38 ;
INFO  21:08:47,584 - #48 niz
INFO  21:08:47,584 - #42 [
INFO  21:08:47,584 - #51 1
INFO  21:08:47,584 - #43 ]
INFO  21:08:47,584 - #27 =
INFO  21:08:47,584 - #51 2
INFO  21:08:47,584 - #24 *
INFO  21:08:47,585 - #48 a
INFO  21:08:47,585 - #38 ;
INFO  21:08:47,585 - #48 niz
INFO  21:08:47,585 - #42 [
INFO  21:08:47,585 - #51 2
INFO  21:08:47,585 - #43 ]
INFO  21:08:47,585 - #27 =
INFO  21:08:47,585 - #48 sum
INFO  21:08:47,585 - #40 (
INFO  21:08:47,585 - #48 niz
INFO  21:08:47,585 - #42 [
INFO  21:08:47,585 - #51 1
INFO  21:08:47,585 - #43 ]
INFO  21:08:47,585 - #39 ,
INFO  21:08:47,585 - #48 niz
INFO  21:08:47,585 - #42 [
INFO  21:08:47,585 - #51 0
INFO  21:08:47,585 - #43 ]
INFO  21:08:47,585 - #41 )
INFO  21:08:47,585 - #24 *
INFO  21:08:47,585 - #48 a
INFO  21:08:47,585 - #22 +
INFO  21:08:47,585 - #51 1
INFO  21:08:47,585 - #38 ;
INFO  21:08:47,585 - #5 if
INFO  21:08:47,585 - #40 (
INFO  21:08:47,585 - #48 verify
INFO  21:08:47,585 - #40 (
INFO  21:08:47,585 - #41 )
INFO  21:08:47,585 - #35 ||
INFO  21:08:47,585 - #48 niz
INFO  21:08:47,585 - #42 [
INFO  21:08:47,585 - #51 2
INFO  21:08:47,585 - #43 ]
INFO  21:08:47,585 - #28 ==
INFO  21:08:47,585 - #51 4
INFO  21:08:47,585 - #41 )
INFO  21:08:47,585 - #12 print
INFO  21:08:47,585 - #40 (
INFO  21:08:47,585 - #48 ord
INFO  21:08:47,585 - #40 (
INFO  21:08:47,585 - #50 A
INFO  21:08:47,585 - #41 )
INFO  21:08:47,585 - #41 )
INFO  21:08:47,585 - #38 ;
INFO  21:08:47,585 - #6 else
INFO  21:08:47,585 - #12 print
INFO  21:08:47,585 - #40 (
INFO  21:08:47,585 - #48 ord
INFO  21:08:47,585 - #40 (
INFO  21:08:47,585 - #50 a
INFO  21:08:47,586 - #41 )
INFO  21:08:47,586 - #41 )
INFO  21:08:47,586 - #38 ;
INFO  21:08:47,586 - #12 print
INFO  21:08:47,586 - #40 (
INFO  21:08:47,586 - #48 eol
INFO  21:08:47,586 - #41 )
INFO  21:08:47,586 - #38 ;
INFO  21:08:47,586 - #48 i
INFO  21:08:47,586 - #27 =
INFO  21:08:47,586 - #51 0
INFO  21:08:47,586 - #38 ;
INFO  21:08:47,586 - #9 do
INFO  21:08:47,586 - #44 {
INFO  21:08:47,586 - #5 if
INFO  21:08:47,586 - #40 (
INFO  21:08:47,586 - #48 i
INFO  21:08:47,586 - #28 ==
INFO  21:08:47,586 - #51 3
INFO  21:08:47,586 - #41 )
INFO  21:08:47,586 - #44 {
INFO  21:08:47,586 - #48 i
INFO  21:08:47,586 - #36 ++
INFO  21:08:47,586 - #38 ;
INFO  21:08:47,586 - #4 continue
INFO  21:08:47,586 - #38 ;
INFO  21:08:47,586 - #45 }
INFO  21:08:47,586 - #5 if
INFO  21:08:47,586 - #40 (
INFO  21:08:47,586 - #48 i
INFO  21:08:47,586 - #28 ==
INFO  21:08:47,586 - #51 4
INFO  21:08:47,587 - #41 )
INFO  21:08:47,587 - #3 break
INFO  21:08:47,587 - #38 ;
INFO  21:08:47,587 - #48 i
INFO  21:08:47,587 - #27 =
INFO  21:08:47,587 - #48 inkrement
INFO  21:08:47,587 - #40 (
INFO  21:08:47,587 - #48 i
INFO  21:08:47,587 - #39 ,
INFO  21:08:47,587 - #51 1
INFO  21:08:47,587 - #41 )
INFO  21:08:47,587 - #38 ;
INFO  21:08:47,587 - #45 }
INFO  21:08:47,587 - #10 while
INFO  21:08:47,587 - #40 (
INFO  21:08:47,587 - #48 i
INFO  21:08:47,587 - #32 <
INFO  21:08:47,587 - #51 10
INFO  21:08:47,587 - #41 )
INFO  21:08:47,587 - #38 ;
INFO  21:08:47,587 - #5 if
INFO  21:08:47,587 - #40 (
INFO  21:08:47,587 - #48 i
INFO  21:08:47,587 - #28 ==
INFO  21:08:47,587 - #51 3
INFO  21:08:47,587 - #34 &&
INFO  21:08:47,587 - #48 verify
INFO  21:08:47,587 - #40 (
INFO  21:08:47,587 - #41 )
INFO  21:08:47,587 - #41 )
INFO  21:08:47,587 - #12 print
INFO  21:08:47,587 - #40 (
INFO  21:08:47,587 - #23 -
INFO  21:08:47,587 - #51 4
INFO  21:08:47,587 - #41 )
INFO  21:08:47,587 - #38 ;
INFO  21:08:47,587 - #6 else
INFO  21:08:47,587 - #12 print
INFO  21:08:47,587 - #40 (
INFO  21:08:47,587 - #51 4
INFO  21:08:47,587 - #41 )
INFO  21:08:47,587 - #38 ;
INFO  21:08:47,587 - #13 read
INFO  21:08:47,587 - #40 (
INFO  21:08:47,587 - #48 niz
INFO  21:08:47,587 - #42 [
INFO  21:08:47,587 - #51 0
INFO  21:08:47,587 - #43 ]
INFO  21:08:47,587 - #41 )
INFO  21:08:47,587 - #38 ;
INFO  21:08:47,587 - #13 read
INFO  21:08:47,587 - #40 (
INFO  21:08:47,587 - #48 niz
INFO  21:08:47,587 - #42 [
INFO  21:08:47,587 - #51 1
INFO  21:08:47,587 - #43 ]
INFO  21:08:47,587 - #41 )
INFO  21:08:47,587 - #38 ;
INFO  21:08:47,587 - #13 read
INFO  21:08:47,587 - #40 (
INFO  21:08:47,587 - #48 niz
INFO  21:08:47,587 - #42 [
INFO  21:08:47,587 - #51 2
INFO  21:08:47,587 - #43 ]
INFO  21:08:47,587 - #41 )
INFO  21:08:47,587 - #38 ;
INFO  21:08:47,587 - #12 print
INFO  21:08:47,587 - #40 (
INFO  21:08:47,587 - #48 eol
INFO  21:08:47,587 - #41 )
INFO  21:08:47,587 - #38 ;
INFO  21:08:47,587 - #12 print
INFO  21:08:47,587 - #40 (
INFO  21:08:47,587 - #48 sum
INFO  21:08:47,587 - #40 (
INFO  21:08:47,587 - #48 sum
INFO  21:08:47,587 - #40 (
INFO  21:08:47,587 - #48 niz
INFO  21:08:47,587 - #42 [
INFO  21:08:47,587 - #51 0
INFO  21:08:47,587 - #43 ]
INFO  21:08:47,587 - #39 ,
INFO  21:08:47,587 - #48 niz
INFO  21:08:47,587 - #42 [
INFO  21:08:47,587 - #51 1
INFO  21:08:47,587 - #43 ]
INFO  21:08:47,587 - #41 )
INFO  21:08:47,588 - #39 ,
INFO  21:08:47,588 - #48 niz
INFO  21:08:47,588 - #42 [
INFO  21:08:47,588 - #51 2
INFO  21:08:47,588 - #43 ]
INFO  21:08:47,588 - #41 )
INFO  21:08:47,588 - #41 )
INFO  21:08:47,588 - #38 ;
INFO  21:08:47,588 - #12 print
INFO  21:08:47,588 - #40 (
INFO  21:08:47,588 - #48 eol
INFO  21:08:47,588 - #41 )
INFO  21:08:47,588 - #38 ;
INFO  21:08:47,588 - #12 print
INFO  21:08:47,588 - #40 (
INFO  21:08:47,588 - #48 inkrement
INFO  21:08:47,588 - #40 (
INFO  21:08:47,588 - #48 niz
INFO  21:08:47,588 - #42 [
INFO  21:08:47,588 - #51 2
INFO  21:08:47,588 - #43 ]
INFO  21:08:47,588 - #39 ,
INFO  21:08:47,588 - #51 2
INFO  21:08:47,588 - #41 )
INFO  21:08:47,588 - #41 )
INFO  21:08:47,588 - #38 ;
INFO  21:08:47,588 - #48 a
INFO  21:08:47,588 - #27 =
INFO  21:08:47,588 - #51 3
INFO  21:08:47,588 - #38 ;
INFO  21:08:47,588 - #48 i
INFO  21:08:47,588 - #27 =
INFO  21:08:47,588 - #51 0
INFO  21:08:47,588 - #38 ;
INFO  21:08:47,588 - #9 do
INFO  21:08:47,588 - #44 {
INFO  21:08:47,588 - #48 niz
INFO  21:08:47,588 - #42 [
INFO  21:08:47,588 - #48 i
INFO  21:08:47,588 - #43 ]
INFO  21:08:47,588 - #27 =
INFO  21:08:47,588 - #48 niz
INFO  21:08:47,588 - #42 [
INFO  21:08:47,588 - #48 i
INFO  21:08:47,588 - #43 ]
INFO  21:08:47,588 - #24 *
INFO  21:08:47,588 - #51 2
INFO  21:08:47,588 - #24 *
INFO  21:08:47,588 - #48 a
INFO  21:08:47,588 - #38 ;
INFO  21:08:47,588 - #48 i
INFO  21:08:47,588 - #36 ++
INFO  21:08:47,588 - #38 ;
INFO  21:08:47,588 - #45 }
INFO  21:08:47,588 - #10 while
INFO  21:08:47,588 - #40 (
INFO  21:08:47,588 - #48 i
INFO  21:08:47,588 - #32 <
INFO  21:08:47,588 - #51 3
INFO  21:08:47,588 - #41 )
INFO  21:08:47,588 - #38 ;
INFO  21:08:47,588 - #12 print
INFO  21:08:47,588 - #40 (
INFO  21:08:47,588 - #48 niz
INFO  21:08:47,588 - #42 [
INFO  21:08:47,588 - #51 0
INFO  21:08:47,588 - #43 ]
INFO  21:08:47,588 - #41 )
INFO  21:08:47,588 - #38 ;
INFO  21:08:47,588 - #12 print
INFO  21:08:47,588 - #40 (
INFO  21:08:47,588 - #48 niz
INFO  21:08:47,588 - #42 [
INFO  21:08:47,588 - #51 1
INFO  21:08:47,588 - #43 ]
INFO  21:08:47,588 - #41 )
INFO  21:08:47,588 - #38 ;
INFO  21:08:47,588 - #12 print
INFO  21:08:47,588 - #40 (
INFO  21:08:47,588 - #48 niz
INFO  21:08:47,588 - #42 [
INFO  21:08:47,588 - #51 2
INFO  21:08:47,588 - #43 ]
INFO  21:08:47,588 - #41 )
INFO  21:08:47,588 - #38 ;
INFO  21:08:47,588 - #12 print
INFO  21:08:47,588 - #40 (
INFO  21:08:47,588 - #48 eol
INFO  21:08:47,588 - #41 )
INFO  21:08:47,588 - #38 ;
INFO  21:08:47,588 - #48 i
INFO  21:08:47,588 - #27 =
INFO  21:08:47,588 - #51 0
INFO  21:08:47,588 - #38 ;
INFO  21:08:47,588 - #48 niz2
INFO  21:08:47,588 - #27 =
INFO  21:08:47,588 - #51 0
INFO  21:08:47,588 - #38 ;
INFO  21:08:47,588 - #9 do
INFO  21:08:47,588 - #44 {
INFO  21:08:47,588 - #48 niz2
INFO  21:08:47,588 - #27 =
INFO  21:08:47,588 - #48 niz2
INFO  21:08:47,588 - #22 +
INFO  21:08:47,588 - #48 niz
INFO  21:08:47,588 - #42 [
INFO  21:08:47,588 - #48 i
INFO  21:08:47,588 - #43 ]
INFO  21:08:47,588 - #24 *
INFO  21:08:47,588 - #48 niz
INFO  21:08:47,588 - #42 [
INFO  21:08:47,588 - #48 i
INFO  21:08:47,588 - #43 ]
INFO  21:08:47,589 - #38 ;
INFO  21:08:47,589 - #48 i
INFO  21:08:47,589 - #36 ++
INFO  21:08:47,589 - #38 ;
INFO  21:08:47,589 - #45 }
INFO  21:08:47,589 - #10 while
INFO  21:08:47,589 - #40 (
INFO  21:08:47,589 - #48 i
INFO  21:08:47,589 - #32 <
INFO  21:08:47,589 - #51 3
INFO  21:08:47,589 - #41 )
INFO  21:08:47,589 - #38 ;
INFO  21:08:47,589 - #12 print
INFO  21:08:47,589 - #40 (
INFO  21:08:47,589 - #48 niz2
INFO  21:08:47,589 - #41 )
INFO  21:08:47,589 - #38 ;
INFO  21:08:47,589 - #12 print
INFO  21:08:47,589 - #40 (
INFO  21:08:47,589 - #48 eol
INFO  21:08:47,589 - #41 )
INFO  21:08:47,589 - #38 ;
INFO  21:08:47,589 - #45 }
INFO  21:08:47,589 - #45 }
INFO  21:08:47,593 - Program(
  ProgramName(
   test302
  ) [ProgramName]
  AllDeclListMultiple(
    AllDeclListMultiple(
      AllDeclListMultiple(
        AllDeclListMultiple(
          AllDeclListMultiple(
            AllDeclListMultiple(
              NoDecl(
              ) [NoDecl]
              ConstDeclaration(
                ConstDeclarationExpr(
                  Type(
                   int
                  ) [Type]
                  ConstAssignSingle(
                    ConstAssign(
                     jedan
                      NumberConst(
                       1
                      ) [NumberConst]
                    ) [ConstAssign]
                  ) [ConstAssignSingle]
                ) [ConstDeclarationExpr]
              ) [ConstDeclaration]
            ) [AllDeclListMultiple]
            GlobalVarDeclaration(
              GlobalVarDeclarationExpr(
                Type(
                 int
                ) [Type]
                GlobalVarDeclListSingle(
                  GlobalVarDeclarationSingle(
                   i
                    NoArray(
                    ) [NoArray]
                  ) [GlobalVarDeclarationSingle]
                ) [GlobalVarDeclListSingle]
              ) [GlobalVarDeclarationExpr]
            ) [GlobalVarDeclaration]
          ) [AllDeclListMultiple]
          GlobalVarDeclaration(
            GlobalVarDeclarationExpr(
              Type(
               bool
              ) [Type]
              GlobalVarDeclListSingle(
                GlobalVarDeclarationSingle(
                 ibool
                  NoArray(
                  ) [NoArray]
                ) [GlobalVarDeclarationSingle]
              ) [GlobalVarDeclListSingle]
            ) [GlobalVarDeclarationExpr]
          ) [GlobalVarDeclaration]
        ) [AllDeclListMultiple]
        GlobalVarDeclaration(
          GlobalVarDeclarationExpr(
            Type(
             int
            ) [Type]
            GlobalVarDeclListSingle(
              GlobalVarDeclarationSingle(
               niz2
                NoArray(
                ) [NoArray]
              ) [GlobalVarDeclarationSingle]
            ) [GlobalVarDeclListSingle]
          ) [GlobalVarDeclarationExpr]
        ) [GlobalVarDeclaration]
      ) [AllDeclListMultiple]
      GlobalVarDeclaration(
        GlobalVarDeclarationExpr(
          Type(
           int
          ) [Type]
          GlobalVarDeclListSingle(
            GlobalVarDeclarationSingle(
             niz
              ArrayBrackets(
              ) [ArrayBrackets]
            ) [GlobalVarDeclarationSingle]
          ) [GlobalVarDeclListSingle]
        ) [GlobalVarDeclarationExpr]
      ) [GlobalVarDeclaration]
    ) [AllDeclListMultiple]
    GlobalVarDeclaration(
      GlobalVarDeclarationExpr(
        Type(
         int
        ) [Type]
        GlobalVarDeclListSingle(
          GlobalVarDeclarationSingle(
           a
            NoArray(
            ) [NoArray]
          ) [GlobalVarDeclarationSingle]
        ) [GlobalVarDeclListSingle]
      ) [GlobalVarDeclarationExpr]
    ) [GlobalVarDeclaration]
  ) [AllDeclListMultiple]
  MethodDeclListMultiple(
    MethodDeclListMultiple(
      MethodDeclListMultiple(
        MethodDeclListMultiple(
          MethodDeclListNo(
          ) [MethodDeclListNo]
          MethodDeclaration(
            MethodSignatureParams(
              MethodTypeType(
                Type(
                 int
                ) [Type]
              ) [MethodTypeType]
              MethodName(
               sum
              ) [MethodName]
              FormParsMultiple(
                FormParsSingle(
                  FormParSingle(
                    Type(
                     int
                    ) [Type]
                   z
                    NoArray(
                    ) [NoArray]
                  ) [FormParSingle]
                ) [FormParsSingle]
                FormParSingle(
                  Type(
                   int
                  ) [Type]
                 d
                  NoArray(
                  ) [NoArray]
                ) [FormParSingle]
              ) [FormParsMultiple]
              FormParsEnd(
              ) [FormParsEnd]
            ) [MethodSignatureParams]
            NoVarDeclOption(
            ) [NoVarDeclOption]
            StatementListMultiple(
              StatementListNo(
              ) [StatementListNo]
              StatementSingle(
                SingleReturnExprStatement(
                  MultiTermExpr(
                    SingleTermExprPositive(
                      SingleFactorTerm(
                        DesignatorEmptyFactor(
                          IdentDesignator(
                           z
                          ) [IdentDesignator]
                        ) [DesignatorEmptyFactor]
                      ) [SingleFactorTerm]
                    ) [SingleTermExprPositive]
                    AddopPlus(
                    ) [AddopPlus]
                    SingleFactorTerm(
                      DesignatorEmptyFactor(
                        IdentDesignator(
                         d
                        ) [IdentDesignator]
                      ) [DesignatorEmptyFactor]
                    ) [SingleFactorTerm]
                  ) [MultiTermExpr]
                ) [SingleReturnExprStatement]
              ) [StatementSingle]
            ) [StatementListMultiple]
          ) [MethodDeclaration]
        ) [MethodDeclListMultiple]
        MethodDeclaration(
          MethodSignatureParams(
            MethodTypeType(
              Type(
               int
              ) [Type]
            ) [MethodTypeType]
            MethodName(
             inkrement
            ) [MethodName]
            FormParsMultiple(
              FormParsSingle(
                FormParSingle(
                  Type(
                   int
                  ) [Type]
                 a
                  NoArray(
                  ) [NoArray]
                ) [FormParSingle]
              ) [FormParsSingle]
              FormParSingle(
                Type(
                 int
                ) [Type]
               inc
                NoArray(
                ) [NoArray]
              ) [FormParSingle]
            ) [FormParsMultiple]
            FormParsEnd(
            ) [FormParsEnd]
          ) [MethodSignatureParams]
          VarDeclOptionTrue(
            NoVarDeclOption(
            ) [NoVarDeclOption]
            VarDeclarationExpr(
              Type(
               int
              ) [Type]
              VarDeclListSingle(
                VarDeclSingle(
                 pom
                  NoArray(
                  ) [NoArray]
                ) [VarDeclSingle]
              ) [VarDeclListSingle]
            ) [VarDeclarationExpr]
          ) [VarDeclOptionTrue]
          StatementListMultiple(
            StatementListMultiple(
              StatementListNo(
              ) [StatementListNo]
              StatementSingle(
                IfElseStatement(
                  IfConditionSingleTerm(
                    CondSingleFactTerm(
                      CondMultiExprFact(
                        CondSingleExprFact(
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              DesignatorEmptyFactor(
                                IdentDesignator(
                                 inc
                                ) [IdentDesignator]
                              ) [DesignatorEmptyFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [CondSingleExprFact]
                        RelopEQUAL(
                        ) [RelopEQUAL]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            DesignatorEmptyFactor(
                              IdentDesignator(
                               jedan
                              ) [IdentDesignator]
                            ) [DesignatorEmptyFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [CondMultiExprFact]
                    ) [CondSingleFactTerm]
                  ) [IfConditionSingleTerm]
                  StatementSingle(
                    SingleDesignatorStatement(
                      DesignatorStmtAssign(
                        DesignatorStmtAssignCorrect(
                          IdentDesignator(
                           pom
                          ) [IdentDesignator]
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              NumConstFactor(
                               1
                              ) [NumConstFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [DesignatorStmtAssignCorrect]
                      ) [DesignatorStmtAssign]
                    ) [SingleDesignatorStatement]
                  ) [StatementSingle]
                  StatementSingle(
                    IfStatement(
                      IfConditionSingleTerm(
                        CondSingleFactTerm(
                          CondMultiExprFact(
                            CondSingleExprFact(
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentDesignator(
                                     inc
                                    ) [IdentDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [CondSingleExprFact]
                            RelopEQUAL(
                            ) [RelopEQUAL]
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                NumConstFactor(
                                 2
                                ) [NumConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [CondMultiExprFact]
                        ) [CondSingleFactTerm]
                      ) [IfConditionSingleTerm]
                      StatementSingle(
                        SingleDesignatorStatement(
                          DesignatorStmtAssign(
                            DesignatorStmtAssignCorrect(
                              IdentDesignator(
                               pom
                              ) [IdentDesignator]
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentDesignator(
                                     a
                                    ) [IdentDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [DesignatorStmtAssignCorrect]
                          ) [DesignatorStmtAssign]
                        ) [SingleDesignatorStatement]
                      ) [StatementSingle]
                    ) [IfStatement]
                  ) [StatementSingle]
                ) [IfElseStatement]
              ) [StatementSingle]
            ) [StatementListMultiple]
            StatementSingle(
              SingleReturnExprStatement(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    MethodCallFactor(
                      MethodCall(
                        IdentDesignator(
                         sum
                        ) [IdentDesignator]
                        ActParsLeftParen(
                        ) [ActParsLeftParen]
                        ActParsYes(
                          ActParsMultiExpr(
                            ActParsSingleExpr(
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentDesignator(
                                     a
                                    ) [IdentDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [ActParsSingleExpr]
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                DesignatorEmptyFactor(
                                  IdentDesignator(
                                   pom
                                  ) [IdentDesignator]
                                ) [DesignatorEmptyFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [ActParsMultiExpr]
                        ) [ActParsYes]
                        ActParsRightParen(
                        ) [ActParsRightParen]
                      ) [MethodCall]
                    ) [MethodCallFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
              ) [SingleReturnExprStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
        ) [MethodDeclaration]
      ) [MethodDeclListMultiple]
      MethodDeclaration(
        MethodSignaturePlain(
          MethodTypeType(
            Type(
             bool
            ) [Type]
          ) [MethodTypeType]
          MethodName(
           verify
          ) [MethodName]
        ) [MethodSignaturePlain]
        NoVarDeclOption(
        ) [NoVarDeclOption]
        StatementListMultiple(
          StatementListMultiple(
            StatementListNo(
            ) [StatementListNo]
            StatementSingle(
              SinglePrintStatement(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    CharConstFactor(
                     v
                    ) [CharConstFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
                NumConstNo(
                ) [NumConstNo]
              ) [SinglePrintStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
          StatementSingle(
            SingleReturnExprStatement(
              SingleTermExprPositive(
                SingleFactorTerm(
                  BoolConstFactor(
                   false
                  ) [BoolConstFactor]
                ) [SingleFactorTerm]
              ) [SingleTermExprPositive]
            ) [SingleReturnExprStatement]
          ) [StatementSingle]
        ) [StatementListMultiple]
      ) [MethodDeclaration]
    ) [MethodDeclListMultiple]
    MethodDeclaration(
      MethodSignaturePlain(
        MethodTypeVoid(
        ) [MethodTypeVoid]
        MethodName(
         main
        ) [MethodName]
      ) [MethodSignaturePlain]
      NoVarDeclOption(
      ) [NoVarDeclOption]
      StatementListMultiple(
        StatementListMultiple(
          StatementListMultiple(
            StatementListMultiple(
              StatementListMultiple(
                StatementListMultiple(
                  StatementListMultiple(
                    StatementListMultiple(
                      StatementListMultiple(
                        StatementListMultiple(
                          StatementListMultiple(
                            StatementListMultiple(
                              StatementListMultiple(
                                StatementListMultiple(
                                  StatementListMultiple(
                                    StatementListMultiple(
                                      StatementListMultiple(
                                        StatementListMultiple(
                                          StatementListMultiple(
                                            StatementListMultiple(
                                              StatementListMultiple(
                                                StatementListMultiple(
                                                  StatementListMultiple(
                                                    StatementListMultiple(
                                                      StatementListMultiple(
                                                        StatementListMultiple(
                                                          StatementListMultiple(
                                                            StatementListMultiple(
                                                              StatementListMultiple(
                                                                StatementListMultiple(
                                                                  StatementListMultiple(
                                                                    StatementListMultiple(
                                                                      StatementListMultiple(
                                                                        StatementListMultiple(
                                                                          StatementListNo(
                                                                          ) [StatementListNo]
                                                                          StatementSingle(
                                                                            IfElseStatement(
                                                                              IfConditionSingleTerm(
                                                                                CondSingleFactTerm(
                                                                                  CondMultiExprFact(
                                                                                    CondSingleExprFact(
                                                                                      SingleTermExprPositive(
                                                                                        SingleFactorTerm(
                                                                                          NumConstFactor(
                                                                                           1
                                                                                          ) [NumConstFactor]
                                                                                        ) [SingleFactorTerm]
                                                                                      ) [SingleTermExprPositive]
                                                                                    ) [CondSingleExprFact]
                                                                                    RelopNOTEQUAL(
                                                                                    ) [RelopNOTEQUAL]
                                                                                    SingleTermExprPositive(
                                                                                      SingleFactorTerm(
                                                                                        NumConstFactor(
                                                                                         1
                                                                                        ) [NumConstFactor]
                                                                                      ) [SingleFactorTerm]
                                                                                    ) [SingleTermExprPositive]
                                                                                  ) [CondMultiExprFact]
                                                                                ) [CondSingleFactTerm]
                                                                              ) [IfConditionSingleTerm]
                                                                              StatementSingle(
                                                                                SinglePrintStatement(
                                                                                  SingleTermExprNegative(
                                                                                    SingleFactorTerm(
                                                                                      NumConstFactor(
                                                                                       6
                                                                                      ) [NumConstFactor]
                                                                                    ) [SingleFactorTerm]
                                                                                  ) [SingleTermExprNegative]
                                                                                  NumConstNo(
                                                                                  ) [NumConstNo]
                                                                                ) [SinglePrintStatement]
                                                                              ) [StatementSingle]
                                                                              StatementSingle(
                                                                                SinglePrintStatement(
                                                                                  SingleTermExprPositive(
                                                                                    SingleFactorTerm(
                                                                                      NumConstFactor(
                                                                                       0
                                                                                      ) [NumConstFactor]
                                                                                    ) [SingleFactorTerm]
                                                                                  ) [SingleTermExprPositive]
                                                                                  NumConstNo(
                                                                                  ) [NumConstNo]
                                                                                ) [SinglePrintStatement]
                                                                              ) [StatementSingle]
                                                                            ) [IfElseStatement]
                                                                          ) [StatementSingle]
                                                                        ) [StatementListMultiple]
                                                                        StatementSingle(
                                                                          SingleDesignatorStatement(
                                                                            DesignatorStmtAssign(
                                                                              DesignatorStmtAssignCorrect(
                                                                                IdentDesignator(
                                                                                 ibool
                                                                                ) [IdentDesignator]
                                                                                SingleTermExprPositive(
                                                                                  SingleFactorTerm(
                                                                                    BoolConstFactor(
                                                                                     false
                                                                                    ) [BoolConstFactor]
                                                                                  ) [SingleFactorTerm]
                                                                                ) [SingleTermExprPositive]
                                                                              ) [DesignatorStmtAssignCorrect]
                                                                            ) [DesignatorStmtAssign]
                                                                          ) [SingleDesignatorStatement]
                                                                        ) [StatementSingle]
                                                                      ) [StatementListMultiple]
                                                                      StatementSingle(
                                                                        SingleDesignatorStatement(
                                                                          DesignatorStmtAssign(
                                                                            DesignatorStmtAssignCorrect(
                                                                              IdentDesignator(
                                                                               i
                                                                              ) [IdentDesignator]
                                                                              SingleTermExprPositive(
                                                                                SingleFactorTerm(
                                                                                  NumConstFactor(
                                                                                   0
                                                                                  ) [NumConstFactor]
                                                                                ) [SingleFactorTerm]
                                                                              ) [SingleTermExprPositive]
                                                                            ) [DesignatorStmtAssignCorrect]
                                                                          ) [DesignatorStmtAssign]
                                                                        ) [SingleDesignatorStatement]
                                                                      ) [StatementSingle]
                                                                    ) [StatementListMultiple]
                                                                    StatementSingle(
                                                                      DoWhileStatement(
                                                                        DoEnter(
                                                                        ) [DoEnter]
                                                                        StatementListMultiple(
                                                                          StatementListNo(
                                                                          ) [StatementListNo]
                                                                          StatementMultiple(
                                                                            StatementsInBraces(
                                                                              StatementListMultiple(
                                                                                StatementListMultiple(
                                                                                  StatementListNo(
                                                                                  ) [StatementListNo]
                                                                                  StatementSingle(
                                                                                    IfStatement(
                                                                                      IfConditionSingleTerm(
                                                                                        CondSingleFactTerm(
                                                                                          CondMultiExprFact(
                                                                                            CondSingleExprFact(
                                                                                              SingleTermExprPositive(
                                                                                                SingleFactorTerm(
                                                                                                  DesignatorEmptyFactor(
                                                                                                    IdentDesignator(
                                                                                                     i
                                                                                                    ) [IdentDesignator]
                                                                                                  ) [DesignatorEmptyFactor]
                                                                                                ) [SingleFactorTerm]
                                                                                              ) [SingleTermExprPositive]
                                                                                            ) [CondSingleExprFact]
                                                                                            RelopEQUAL(
                                                                                            ) [RelopEQUAL]
                                                                                            SingleTermExprPositive(
                                                                                              SingleFactorTerm(
                                                                                                NumConstFactor(
                                                                                                 2
                                                                                                ) [NumConstFactor]
                                                                                              ) [SingleFactorTerm]
                                                                                            ) [SingleTermExprPositive]
                                                                                          ) [CondMultiExprFact]
                                                                                        ) [CondSingleFactTerm]
                                                                                      ) [IfConditionSingleTerm]
                                                                                      StatementSingle(
                                                                                        SingleDesignatorStatement(
                                                                                          DesignatorStmtAssign(
                                                                                            DesignatorStmtAssignCorrect(
                                                                                              IdentDesignator(
                                                                                               ibool
                                                                                              ) [IdentDesignator]
                                                                                              SingleTermExprPositive(
                                                                                                SingleFactorTerm(
                                                                                                  BoolConstFactor(
                                                                                                   true
                                                                                                  ) [BoolConstFactor]
                                                                                                ) [SingleFactorTerm]
                                                                                              ) [SingleTermExprPositive]
                                                                                            ) [DesignatorStmtAssignCorrect]
                                                                                          ) [DesignatorStmtAssign]
                                                                                        ) [SingleDesignatorStatement]
                                                                                      ) [StatementSingle]
                                                                                    ) [IfStatement]
                                                                                  ) [StatementSingle]
                                                                                ) [StatementListMultiple]
                                                                                StatementSingle(
                                                                                  SingleDesignatorStatement(
                                                                                    DesignatorStmtPlusPlus(
                                                                                      IdentDesignator(
                                                                                       i
                                                                                      ) [IdentDesignator]
                                                                                    ) [DesignatorStmtPlusPlus]
                                                                                  ) [SingleDesignatorStatement]
                                                                                ) [StatementSingle]
                                                                              ) [StatementListMultiple]
                                                                            ) [StatementsInBraces]
                                                                          ) [StatementMultiple]
                                                                        ) [StatementListMultiple]
                                                                        ConditionSingleTerm(
                                                                          CondSingleFactTerm(
                                                                            CondMultiExprFact(
                                                                              CondSingleExprFact(
                                                                                SingleTermExprPositive(
                                                                                  SingleFactorTerm(
                                                                                    DesignatorEmptyFactor(
                                                                                      IdentDesignator(
                                                                                       i
                                                                                      ) [IdentDesignator]
                                                                                    ) [DesignatorEmptyFactor]
                                                                                  ) [SingleFactorTerm]
                                                                                ) [SingleTermExprPositive]
                                                                              ) [CondSingleExprFact]
                                                                              RelopLS(
                                                                              ) [RelopLS]
                                                                              SingleTermExprPositive(
                                                                                SingleFactorTerm(
                                                                                  NumConstFactor(
                                                                                   5
                                                                                  ) [NumConstFactor]
                                                                                ) [SingleFactorTerm]
                                                                              ) [SingleTermExprPositive]
                                                                            ) [CondMultiExprFact]
                                                                          ) [CondSingleFactTerm]
                                                                        ) [ConditionSingleTerm]
                                                                      ) [DoWhileStatement]
                                                                    ) [StatementSingle]
                                                                  ) [StatementListMultiple]
                                                                  StatementSingle(
                                                                    IfStatement(
                                                                      IfConditionSingleTerm(
                                                                        CondSingleFactTerm(
                                                                          CondSingleExprFact(
                                                                            SingleTermExprPositive(
                                                                              SingleFactorTerm(
                                                                                DesignatorEmptyFactor(
                                                                                  IdentDesignator(
                                                                                   ibool
                                                                                  ) [IdentDesignator]
                                                                                ) [DesignatorEmptyFactor]
                                                                              ) [SingleFactorTerm]
                                                                            ) [SingleTermExprPositive]
                                                                          ) [CondSingleExprFact]
                                                                        ) [CondSingleFactTerm]
                                                                      ) [IfConditionSingleTerm]
                                                                      StatementSingle(
                                                                        IfElseStatement(
                                                                          IfConditionSingleTerm(
                                                                            CondSingleFactTerm(
                                                                              CondMultiExprFact(
                                                                                CondSingleExprFact(
                                                                                  SingleTermExprPositive(
                                                                                    SingleFactorTerm(
                                                                                      DesignatorEmptyFactor(
                                                                                        IdentDesignator(
                                                                                         i
                                                                                        ) [IdentDesignator]
                                                                                      ) [DesignatorEmptyFactor]
                                                                                    ) [SingleFactorTerm]
                                                                                  ) [SingleTermExprPositive]
                                                                                ) [CondSingleExprFact]
                                                                                RelopEQUAL(
                                                                                ) [RelopEQUAL]
                                                                                SingleTermExprPositive(
                                                                                  SingleFactorTerm(
                                                                                    NumConstFactor(
                                                                                     5
                                                                                    ) [NumConstFactor]
                                                                                  ) [SingleFactorTerm]
                                                                                ) [SingleTermExprPositive]
                                                                              ) [CondMultiExprFact]
                                                                            ) [CondSingleFactTerm]
                                                                          ) [IfConditionSingleTerm]
                                                                          StatementSingle(
                                                                            SinglePrintStatement(
                                                                              SingleTermExprPositive(
                                                                                SingleFactorTerm(
                                                                                  NumConstFactor(
                                                                                   1
                                                                                  ) [NumConstFactor]
                                                                                ) [SingleFactorTerm]
                                                                              ) [SingleTermExprPositive]
                                                                              NumConstNo(
                                                                              ) [NumConstNo]
                                                                            ) [SinglePrintStatement]
                                                                          ) [StatementSingle]
                                                                          StatementSingle(
                                                                            SinglePrintStatement(
                                                                              SingleTermExprNegative(
                                                                                SingleFactorTerm(
                                                                                  NumConstFactor(
                                                                                   1
                                                                                  ) [NumConstFactor]
                                                                                ) [SingleFactorTerm]
                                                                              ) [SingleTermExprNegative]
                                                                              NumConstNo(
                                                                              ) [NumConstNo]
                                                                            ) [SinglePrintStatement]
                                                                          ) [StatementSingle]
                                                                        ) [IfElseStatement]
                                                                      ) [StatementSingle]
                                                                    ) [IfStatement]
                                                                  ) [StatementSingle]
                                                                ) [StatementListMultiple]
                                                                StatementSingle(
                                                                  SingleDesignatorStatement(
                                                                    DesignatorStmtAssign(
                                                                      DesignatorStmtAssignCorrect(
                                                                        IdentDesignator(
                                                                         a
                                                                        ) [IdentDesignator]
                                                                        SingleTermExprPositive(
                                                                          SingleFactorTerm(
                                                                            NumConstFactor(
                                                                             2
                                                                            ) [NumConstFactor]
                                                                          ) [SingleFactorTerm]
                                                                        ) [SingleTermExprPositive]
                                                                      ) [DesignatorStmtAssignCorrect]
                                                                    ) [DesignatorStmtAssign]
                                                                  ) [SingleDesignatorStatement]
                                                                ) [StatementSingle]
                                                              ) [StatementListMultiple]
                                                              StatementSingle(
                                                                SingleDesignatorStatement(
                                                                  DesignatorStmtAssign(
                                                                    DesignatorStmtAssignCorrect(
                                                                      IdentDesignator(
                                                                       niz
                                                                      ) [IdentDesignator]
                                                                      SingleTermExprPositive(
                                                                        SingleFactorTerm(
                                                                          NewTypeArrayFactor(
                                                                            Type(
                                                                             int
                                                                            ) [Type]
                                                                            SingleTermExprPositive(
                                                                              SingleFactorTerm(
                                                                                NumConstFactor(
                                                                                 3
                                                                                ) [NumConstFactor]
                                                                              ) [SingleFactorTerm]
                                                                            ) [SingleTermExprPositive]
                                                                          ) [NewTypeArrayFactor]
                                                                        ) [SingleFactorTerm]
                                                                      ) [SingleTermExprPositive]
                                                                    ) [DesignatorStmtAssignCorrect]
                                                                  ) [DesignatorStmtAssign]
                                                                ) [SingleDesignatorStatement]
                                                              ) [StatementSingle]
                                                            ) [StatementListMultiple]
                                                            StatementSingle(
                                                              SingleDesignatorStatement(
                                                                DesignatorStmtAssign(
                                                                  DesignatorStmtAssignCorrect(
                                                                    IdentArrayDesignator(
                                                                     niz
                                                                      SingleTermExprPositive(
                                                                        SingleFactorTerm(
                                                                          NumConstFactor(
                                                                           0
                                                                          ) [NumConstFactor]
                                                                        ) [SingleFactorTerm]
                                                                      ) [SingleTermExprPositive]
                                                                    ) [IdentArrayDesignator]
                                                                    SingleTermExprPositive(
                                                                      MultiFactorTerm(
                                                                        SingleFactorTerm(
                                                                          NumConstFactor(
                                                                           1
                                                                          ) [NumConstFactor]
                                                                        ) [SingleFactorTerm]
                                                                        MulopMul(
                                                                        ) [MulopMul]
                                                                        DesignatorEmptyFactor(
                                                                          IdentDesignator(
                                                                           a
                                                                          ) [IdentDesignator]
                                                                        ) [DesignatorEmptyFactor]
                                                                      ) [MultiFactorTerm]
                                                                    ) [SingleTermExprPositive]
                                                                  ) [DesignatorStmtAssignCorrect]
                                                                ) [DesignatorStmtAssign]
                                                              ) [SingleDesignatorStatement]
                                                            ) [StatementSingle]
                                                          ) [StatementListMultiple]
                                                          StatementSingle(
                                                            SingleDesignatorStatement(
                                                              DesignatorStmtAssign(
                                                                DesignatorStmtAssignCorrect(
                                                                  IdentArrayDesignator(
                                                                   niz
                                                                    SingleTermExprPositive(
                                                                      SingleFactorTerm(
                                                                        NumConstFactor(
                                                                         1
                                                                        ) [NumConstFactor]
                                                                      ) [SingleFactorTerm]
                                                                    ) [SingleTermExprPositive]
                                                                  ) [IdentArrayDesignator]
                                                                  SingleTermExprPositive(
                                                                    MultiFactorTerm(
                                                                      SingleFactorTerm(
                                                                        NumConstFactor(
                                                                         2
                                                                        ) [NumConstFactor]
                                                                      ) [SingleFactorTerm]
                                                                      MulopMul(
                                                                      ) [MulopMul]
                                                                      DesignatorEmptyFactor(
                                                                        IdentDesignator(
                                                                         a
                                                                        ) [IdentDesignator]
                                                                      ) [DesignatorEmptyFactor]
                                                                    ) [MultiFactorTerm]
                                                                  ) [SingleTermExprPositive]
                                                                ) [DesignatorStmtAssignCorrect]
                                                              ) [DesignatorStmtAssign]
                                                            ) [SingleDesignatorStatement]
                                                          ) [StatementSingle]
                                                        ) [StatementListMultiple]
                                                        StatementSingle(
                                                          SingleDesignatorStatement(
                                                            DesignatorStmtAssign(
                                                              DesignatorStmtAssignCorrect(
                                                                IdentArrayDesignator(
                                                                 niz
                                                                  SingleTermExprPositive(
                                                                    SingleFactorTerm(
                                                                      NumConstFactor(
                                                                       2
                                                                      ) [NumConstFactor]
                                                                    ) [SingleFactorTerm]
                                                                  ) [SingleTermExprPositive]
                                                                ) [IdentArrayDesignator]
                                                                MultiTermExpr(
                                                                  SingleTermExprPositive(
                                                                    MultiFactorTerm(
                                                                      SingleFactorTerm(
                                                                        MethodCallFactor(
                                                                          MethodCall(
                                                                            IdentDesignator(
                                                                             sum
                                                                            ) [IdentDesignator]
                                                                            ActParsLeftParen(
                                                                            ) [ActParsLeftParen]
                                                                            ActParsYes(
                                                                              ActParsMultiExpr(
                                                                                ActParsSingleExpr(
                                                                                  SingleTermExprPositive(
                                                                                    SingleFactorTerm(
                                                                                      DesignatorEmptyFactor(
                                                                                        IdentArrayDesignator(
                                                                                         niz
                                                                                          SingleTermExprPositive(
                                                                                            SingleFactorTerm(
                                                                                              NumConstFactor(
                                                                                               1
                                                                                              ) [NumConstFactor]
                                                                                            ) [SingleFactorTerm]
                                                                                          ) [SingleTermExprPositive]
                                                                                        ) [IdentArrayDesignator]
                                                                                      ) [DesignatorEmptyFactor]
                                                                                    ) [SingleFactorTerm]
                                                                                  ) [SingleTermExprPositive]
                                                                                ) [ActParsSingleExpr]
                                                                                SingleTermExprPositive(
                                                                                  SingleFactorTerm(
                                                                                    DesignatorEmptyFactor(
                                                                                      IdentArrayDesignator(
                                                                                       niz
                                                                                        SingleTermExprPositive(
                                                                                          SingleFactorTerm(
                                                                                            NumConstFactor(
                                                                                             0
                                                                                            ) [NumConstFactor]
                                                                                          ) [SingleFactorTerm]
                                                                                        ) [SingleTermExprPositive]
                                                                                      ) [IdentArrayDesignator]
                                                                                    ) [DesignatorEmptyFactor]
                                                                                  ) [SingleFactorTerm]
                                                                                ) [SingleTermExprPositive]
                                                                              ) [ActParsMultiExpr]
                                                                            ) [ActParsYes]
                                                                            ActParsRightParen(
                                                                            ) [ActParsRightParen]
                                                                          ) [MethodCall]
                                                                        ) [MethodCallFactor]
                                                                      ) [SingleFactorTerm]
                                                                      MulopMul(
                                                                      ) [MulopMul]
                                                                      DesignatorEmptyFactor(
                                                                        IdentDesignator(
                                                                         a
                                                                        ) [IdentDesignator]
                                                                      ) [DesignatorEmptyFactor]
                                                                    ) [MultiFactorTerm]
                                                                  ) [SingleTermExprPositive]
                                                                  AddopPlus(
                                                                  ) [AddopPlus]
                                                                  SingleFactorTerm(
                                                                    NumConstFactor(
                                                                     1
                                                                    ) [NumConstFactor]
                                                                  ) [SingleFactorTerm]
                                                                ) [MultiTermExpr]
                                                              ) [DesignatorStmtAssignCorrect]
                                                            ) [DesignatorStmtAssign]
                                                          ) [SingleDesignatorStatement]
                                                        ) [StatementSingle]
                                                      ) [StatementListMultiple]
                                                      StatementSingle(
                                                        IfElseStatement(
                                                          IfConditionMultiTerm(
                                                            ConditionSingleTerm(
                                                              CondSingleFactTerm(
                                                                CondSingleExprFact(
                                                                  SingleTermExprPositive(
                                                                    SingleFactorTerm(
                                                                      MethodCallFactor(
                                                                        MethodCall(
                                                                          IdentDesignator(
                                                                           verify
                                                                          ) [IdentDesignator]
                                                                          ActParsLeftParen(
                                                                          ) [ActParsLeftParen]
                                                                          ActParsNo(
                                                                          ) [ActParsNo]
                                                                          ActParsRightParen(
                                                                          ) [ActParsRightParen]
                                                                        ) [MethodCall]
                                                                      ) [MethodCallFactor]
                                                                    ) [SingleFactorTerm]
                                                                  ) [SingleTermExprPositive]
                                                                ) [CondSingleExprFact]
                                                              ) [CondSingleFactTerm]
                                                            ) [ConditionSingleTerm]
                                                            CondSingleFactTerm(
                                                              CondMultiExprFact(
                                                                CondSingleExprFact(
                                                                  SingleTermExprPositive(
                                                                    SingleFactorTerm(
                                                                      DesignatorEmptyFactor(
                                                                        IdentArrayDesignator(
                                                                         niz
                                                                          SingleTermExprPositive(
                                                                            SingleFactorTerm(
                                                                              NumConstFactor(
                                                                               2
                                                                              ) [NumConstFactor]
                                                                            ) [SingleFactorTerm]
                                                                          ) [SingleTermExprPositive]
                                                                        ) [IdentArrayDesignator]
                                                                      ) [DesignatorEmptyFactor]
                                                                    ) [SingleFactorTerm]
                                                                  ) [SingleTermExprPositive]
                                                                ) [CondSingleExprFact]
                                                                RelopEQUAL(
                                                                ) [RelopEQUAL]
                                                                SingleTermExprPositive(
                                                                  SingleFactorTerm(
                                                                    NumConstFactor(
                                                                     4
                                                                    ) [NumConstFactor]
                                                                  ) [SingleFactorTerm]
                                                                ) [SingleTermExprPositive]
                                                              ) [CondMultiExprFact]
                                                            ) [CondSingleFactTerm]
                                                          ) [IfConditionMultiTerm]
                                                          StatementSingle(
                                                            SinglePrintStatement(
                                                              SingleTermExprPositive(
                                                                SingleFactorTerm(
                                                                  MethodCallFactor(
                                                                    MethodCall(
                                                                      IdentDesignator(
                                                                       ord
                                                                      ) [IdentDesignator]
                                                                      ActParsLeftParen(
                                                                      ) [ActParsLeftParen]
                                                                      ActParsYes(
                                                                        ActParsSingleExpr(
                                                                          SingleTermExprPositive(
                                                                            SingleFactorTerm(
                                                                              CharConstFactor(
                                                                               A
                                                                              ) [CharConstFactor]
                                                                            ) [SingleFactorTerm]
                                                                          ) [SingleTermExprPositive]
                                                                        ) [ActParsSingleExpr]
                                                                      ) [ActParsYes]
                                                                      ActParsRightParen(
                                                                      ) [ActParsRightParen]
                                                                    ) [MethodCall]
                                                                  ) [MethodCallFactor]
                                                                ) [SingleFactorTerm]
                                                              ) [SingleTermExprPositive]
                                                              NumConstNo(
                                                              ) [NumConstNo]
                                                            ) [SinglePrintStatement]
                                                          ) [StatementSingle]
                                                          StatementSingle(
                                                            SinglePrintStatement(
                                                              SingleTermExprPositive(
                                                                SingleFactorTerm(
                                                                  MethodCallFactor(
                                                                    MethodCall(
                                                                      IdentDesignator(
                                                                       ord
                                                                      ) [IdentDesignator]
                                                                      ActParsLeftParen(
                                                                      ) [ActParsLeftParen]
                                                                      ActParsYes(
                                                                        ActParsSingleExpr(
                                                                          SingleTermExprPositive(
                                                                            SingleFactorTerm(
                                                                              CharConstFactor(
                                                                               a
                                                                              ) [CharConstFactor]
                                                                            ) [SingleFactorTerm]
                                                                          ) [SingleTermExprPositive]
                                                                        ) [ActParsSingleExpr]
                                                                      ) [ActParsYes]
                                                                      ActParsRightParen(
                                                                      ) [ActParsRightParen]
                                                                    ) [MethodCall]
                                                                  ) [MethodCallFactor]
                                                                ) [SingleFactorTerm]
                                                              ) [SingleTermExprPositive]
                                                              NumConstNo(
                                                              ) [NumConstNo]
                                                            ) [SinglePrintStatement]
                                                          ) [StatementSingle]
                                                        ) [IfElseStatement]
                                                      ) [StatementSingle]
                                                    ) [StatementListMultiple]
                                                    StatementSingle(
                                                      SinglePrintStatement(
                                                        SingleTermExprPositive(
                                                          SingleFactorTerm(
                                                            DesignatorEmptyFactor(
                                                              IdentDesignator(
                                                               eol
                                                              ) [IdentDesignator]
                                                            ) [DesignatorEmptyFactor]
                                                          ) [SingleFactorTerm]
                                                        ) [SingleTermExprPositive]
                                                        NumConstNo(
                                                        ) [NumConstNo]
                                                      ) [SinglePrintStatement]
                                                    ) [StatementSingle]
                                                  ) [StatementListMultiple]
                                                  StatementSingle(
                                                    SingleDesignatorStatement(
                                                      DesignatorStmtAssign(
                                                        DesignatorStmtAssignCorrect(
                                                          IdentDesignator(
                                                           i
                                                          ) [IdentDesignator]
                                                          SingleTermExprPositive(
                                                            SingleFactorTerm(
                                                              NumConstFactor(
                                                               0
                                                              ) [NumConstFactor]
                                                            ) [SingleFactorTerm]
                                                          ) [SingleTermExprPositive]
                                                        ) [DesignatorStmtAssignCorrect]
                                                      ) [DesignatorStmtAssign]
                                                    ) [SingleDesignatorStatement]
                                                  ) [StatementSingle]
                                                ) [StatementListMultiple]
                                                StatementSingle(
                                                  DoWhileStatement(
                                                    DoEnter(
                                                    ) [DoEnter]
                                                    StatementListMultiple(
                                                      StatementListNo(
                                                      ) [StatementListNo]
                                                      StatementMultiple(
                                                        StatementsInBraces(
                                                          StatementListMultiple(
                                                            StatementListMultiple(
                                                              StatementListMultiple(
                                                                StatementListNo(
                                                                ) [StatementListNo]
                                                                StatementSingle(
                                                                  IfStatement(
                                                                    IfConditionSingleTerm(
                                                                      CondSingleFactTerm(
                                                                        CondMultiExprFact(
                                                                          CondSingleExprFact(
                                                                            SingleTermExprPositive(
                                                                              SingleFactorTerm(
                                                                                DesignatorEmptyFactor(
                                                                                  IdentDesignator(
                                                                                   i
                                                                                  ) [IdentDesignator]
                                                                                ) [DesignatorEmptyFactor]
                                                                              ) [SingleFactorTerm]
                                                                            ) [SingleTermExprPositive]
                                                                          ) [CondSingleExprFact]
                                                                          RelopEQUAL(
                                                                          ) [RelopEQUAL]
                                                                          SingleTermExprPositive(
                                                                            SingleFactorTerm(
                                                                              NumConstFactor(
                                                                               3
                                                                              ) [NumConstFactor]
                                                                            ) [SingleFactorTerm]
                                                                          ) [SingleTermExprPositive]
                                                                        ) [CondMultiExprFact]
                                                                      ) [CondSingleFactTerm]
                                                                    ) [IfConditionSingleTerm]
                                                                    StatementMultiple(
                                                                      StatementsInBraces(
                                                                        StatementListMultiple(
                                                                          StatementListMultiple(
                                                                            StatementListNo(
                                                                            ) [StatementListNo]
                                                                            StatementSingle(
                                                                              SingleDesignatorStatement(
                                                                                DesignatorStmtPlusPlus(
                                                                                  IdentDesignator(
                                                                                   i
                                                                                  ) [IdentDesignator]
                                                                                ) [DesignatorStmtPlusPlus]
                                                                              ) [SingleDesignatorStatement]
                                                                            ) [StatementSingle]
                                                                          ) [StatementListMultiple]
                                                                          StatementSingle(
                                                                            SingleContinueStatement(
                                                                            ) [SingleContinueStatement]
                                                                          ) [StatementSingle]
                                                                        ) [StatementListMultiple]
                                                                      ) [StatementsInBraces]
                                                                    ) [StatementMultiple]
                                                                  ) [IfStatement]
                                                                ) [StatementSingle]
                                                              ) [StatementListMultiple]
                                                              StatementSingle(
                                                                IfStatement(
                                                                  IfConditionSingleTerm(
                                                                    CondSingleFactTerm(
                                                                      CondMultiExprFact(
                                                                        CondSingleExprFact(
                                                                          SingleTermExprPositive(
                                                                            SingleFactorTerm(
                                                                              DesignatorEmptyFactor(
                                                                                IdentDesignator(
                                                                                 i
                                                                                ) [IdentDesignator]
                                                                              ) [DesignatorEmptyFactor]
                                                                            ) [SingleFactorTerm]
                                                                          ) [SingleTermExprPositive]
                                                                        ) [CondSingleExprFact]
                                                                        RelopEQUAL(
                                                                        ) [RelopEQUAL]
                                                                        SingleTermExprPositive(
                                                                          SingleFactorTerm(
                                                                            NumConstFactor(
                                                                             4
                                                                            ) [NumConstFactor]
                                                                          ) [SingleFactorTerm]
                                                                        ) [SingleTermExprPositive]
                                                                      ) [CondMultiExprFact]
                                                                    ) [CondSingleFactTerm]
                                                                  ) [IfConditionSingleTerm]
                                                                  StatementSingle(
                                                                    SingleBreakStatement(
                                                                    ) [SingleBreakStatement]
                                                                  ) [StatementSingle]
                                                                ) [IfStatement]
                                                              ) [StatementSingle]
                                                            ) [StatementListMultiple]
                                                            StatementSingle(
                                                              SingleDesignatorStatement(
                                                                DesignatorStmtAssign(
                                                                  DesignatorStmtAssignCorrect(
                                                                    IdentDesignator(
                                                                     i
                                                                    ) [IdentDesignator]
                                                                    SingleTermExprPositive(
                                                                      SingleFactorTerm(
                                                                        MethodCallFactor(
                                                                          MethodCall(
                                                                            IdentDesignator(
                                                                             inkrement
                                                                            ) [IdentDesignator]
                                                                            ActParsLeftParen(
                                                                            ) [ActParsLeftParen]
                                                                            ActParsYes(
                                                                              ActParsMultiExpr(
                                                                                ActParsSingleExpr(
                                                                                  SingleTermExprPositive(
                                                                                    SingleFactorTerm(
                                                                                      DesignatorEmptyFactor(
                                                                                        IdentDesignator(
                                                                                         i
                                                                                        ) [IdentDesignator]
                                                                                      ) [DesignatorEmptyFactor]
                                                                                    ) [SingleFactorTerm]
                                                                                  ) [SingleTermExprPositive]
                                                                                ) [ActParsSingleExpr]
                                                                                SingleTermExprPositive(
                                                                                  SingleFactorTerm(
                                                                                    NumConstFactor(
                                                                                     1
                                                                                    ) [NumConstFactor]
                                                                                  ) [SingleFactorTerm]
                                                                                ) [SingleTermExprPositive]
                                                                              ) [ActParsMultiExpr]
                                                                            ) [ActParsYes]
                                                                            ActParsRightParen(
                                                                            ) [ActParsRightParen]
                                                                          ) [MethodCall]
                                                                        ) [MethodCallFactor]
                                                                      ) [SingleFactorTerm]
                                                                    ) [SingleTermExprPositive]
                                                                  ) [DesignatorStmtAssignCorrect]
                                                                ) [DesignatorStmtAssign]
                                                              ) [SingleDesignatorStatement]
                                                            ) [StatementSingle]
                                                          ) [StatementListMultiple]
                                                        ) [StatementsInBraces]
                                                      ) [StatementMultiple]
                                                    ) [StatementListMultiple]
                                                    ConditionSingleTerm(
                                                      CondSingleFactTerm(
                                                        CondMultiExprFact(
                                                          CondSingleExprFact(
                                                            SingleTermExprPositive(
                                                              SingleFactorTerm(
                                                                DesignatorEmptyFactor(
                                                                  IdentDesignator(
                                                                   i
                                                                  ) [IdentDesignator]
                                                                ) [DesignatorEmptyFactor]
                                                              ) [SingleFactorTerm]
                                                            ) [SingleTermExprPositive]
                                                          ) [CondSingleExprFact]
                                                          RelopLS(
                                                          ) [RelopLS]
                                                          SingleTermExprPositive(
                                                            SingleFactorTerm(
                                                              NumConstFactor(
                                                               10
                                                              ) [NumConstFactor]
                                                            ) [SingleFactorTerm]
                                                          ) [SingleTermExprPositive]
                                                        ) [CondMultiExprFact]
                                                      ) [CondSingleFactTerm]
                                                    ) [ConditionSingleTerm]
                                                  ) [DoWhileStatement]
                                                ) [StatementSingle]
                                              ) [StatementListMultiple]
                                              StatementSingle(
                                                IfElseStatement(
                                                  IfConditionSingleTerm(
                                                    CondMultiFactTerm(
                                                      CondSingleFactTerm(
                                                        CondMultiExprFact(
                                                          CondSingleExprFact(
                                                            SingleTermExprPositive(
                                                              SingleFactorTerm(
                                                                DesignatorEmptyFactor(
                                                                  IdentDesignator(
                                                                   i
                                                                  ) [IdentDesignator]
                                                                ) [DesignatorEmptyFactor]
                                                              ) [SingleFactorTerm]
                                                            ) [SingleTermExprPositive]
                                                          ) [CondSingleExprFact]
                                                          RelopEQUAL(
                                                          ) [RelopEQUAL]
                                                          SingleTermExprPositive(
                                                            SingleFactorTerm(
                                                              NumConstFactor(
                                                               3
                                                              ) [NumConstFactor]
                                                            ) [SingleFactorTerm]
                                                          ) [SingleTermExprPositive]
                                                        ) [CondMultiExprFact]
                                                      ) [CondSingleFactTerm]
                                                      CondSingleExprFact(
                                                        SingleTermExprPositive(
                                                          SingleFactorTerm(
                                                            MethodCallFactor(
                                                              MethodCall(
                                                                IdentDesignator(
                                                                 verify
                                                                ) [IdentDesignator]
                                                                ActParsLeftParen(
                                                                ) [ActParsLeftParen]
                                                                ActParsNo(
                                                                ) [ActParsNo]
                                                                ActParsRightParen(
                                                                ) [ActParsRightParen]
                                                              ) [MethodCall]
                                                            ) [MethodCallFactor]
                                                          ) [SingleFactorTerm]
                                                        ) [SingleTermExprPositive]
                                                      ) [CondSingleExprFact]
                                                    ) [CondMultiFactTerm]
                                                  ) [IfConditionSingleTerm]
                                                  StatementSingle(
                                                    SinglePrintStatement(
                                                      SingleTermExprNegative(
                                                        SingleFactorTerm(
                                                          NumConstFactor(
                                                           4
                                                          ) [NumConstFactor]
                                                        ) [SingleFactorTerm]
                                                      ) [SingleTermExprNegative]
                                                      NumConstNo(
                                                      ) [NumConstNo]
                                                    ) [SinglePrintStatement]
                                                  ) [StatementSingle]
                                                  StatementSingle(
                                                    SinglePrintStatement(
                                                      SingleTermExprPositive(
                                                        SingleFactorTerm(
                                                          NumConstFactor(
                                                           4
                                                          ) [NumConstFactor]
                                                        ) [SingleFactorTerm]
                                                      ) [SingleTermExprPositive]
                                                      NumConstNo(
                                                      ) [NumConstNo]
                                                    ) [SinglePrintStatement]
                                                  ) [StatementSingle]
                                                ) [IfElseStatement]
                                              ) [StatementSingle]
                                            ) [StatementListMultiple]
                                            StatementSingle(
                                              SingleReadStatement(
                                                IdentArrayDesignator(
                                                 niz
                                                  SingleTermExprPositive(
                                                    SingleFactorTerm(
                                                      NumConstFactor(
                                                       0
                                                      ) [NumConstFactor]
                                                    ) [SingleFactorTerm]
                                                  ) [SingleTermExprPositive]
                                                ) [IdentArrayDesignator]
                                              ) [SingleReadStatement]
                                            ) [StatementSingle]
                                          ) [StatementListMultiple]
                                          StatementSingle(
                                            SingleReadStatement(
                                              IdentArrayDesignator(
                                               niz
                                                SingleTermExprPositive(
                                                  SingleFactorTerm(
                                                    NumConstFactor(
                                                     1
                                                    ) [NumConstFactor]
                                                  ) [SingleFactorTerm]
                                                ) [SingleTermExprPositive]
                                              ) [IdentArrayDesignator]
                                            ) [SingleReadStatement]
                                          ) [StatementSingle]
                                        ) [StatementListMultiple]
                                        StatementSingle(
                                          SingleReadStatement(
                                            IdentArrayDesignator(
                                             niz
                                              SingleTermExprPositive(
                                                SingleFactorTerm(
                                                  NumConstFactor(
                                                   2
                                                  ) [NumConstFactor]
                                                ) [SingleFactorTerm]
                                              ) [SingleTermExprPositive]
                                            ) [IdentArrayDesignator]
                                          ) [SingleReadStatement]
                                        ) [StatementSingle]
                                      ) [StatementListMultiple]
                                      StatementSingle(
                                        SinglePrintStatement(
                                          SingleTermExprPositive(
                                            SingleFactorTerm(
                                              DesignatorEmptyFactor(
                                                IdentDesignator(
                                                 eol
                                                ) [IdentDesignator]
                                              ) [DesignatorEmptyFactor]
                                            ) [SingleFactorTerm]
                                          ) [SingleTermExprPositive]
                                          NumConstNo(
                                          ) [NumConstNo]
                                        ) [SinglePrintStatement]
                                      ) [StatementSingle]
                                    ) [StatementListMultiple]
                                    StatementSingle(
                                      SinglePrintStatement(
                                        SingleTermExprPositive(
                                          SingleFactorTerm(
                                            MethodCallFactor(
                                              MethodCall(
                                                IdentDesignator(
                                                 sum
                                                ) [IdentDesignator]
                                                ActParsLeftParen(
                                                ) [ActParsLeftParen]
                                                ActParsYes(
                                                  ActParsMultiExpr(
                                                    ActParsSingleExpr(
                                                      SingleTermExprPositive(
                                                        SingleFactorTerm(
                                                          MethodCallFactor(
                                                            MethodCall(
                                                              IdentDesignator(
                                                               sum
                                                              ) [IdentDesignator]
                                                              ActParsLeftParen(
                                                              ) [ActParsLeftParen]
                                                              ActParsYes(
                                                                ActParsMultiExpr(
                                                                  ActParsSingleExpr(
                                                                    SingleTermExprPositive(
                                                                      SingleFactorTerm(
                                                                        DesignatorEmptyFactor(
                                                                          IdentArrayDesignator(
                                                                           niz
                                                                            SingleTermExprPositive(
                                                                              SingleFactorTerm(
                                                                                NumConstFactor(
                                                                                 0
                                                                                ) [NumConstFactor]
                                                                              ) [SingleFactorTerm]
                                                                            ) [SingleTermExprPositive]
                                                                          ) [IdentArrayDesignator]
                                                                        ) [DesignatorEmptyFactor]
                                                                      ) [SingleFactorTerm]
                                                                    ) [SingleTermExprPositive]
                                                                  ) [ActParsSingleExpr]
                                                                  SingleTermExprPositive(
                                                                    SingleFactorTerm(
                                                                      DesignatorEmptyFactor(
                                                                        IdentArrayDesignator(
                                                                         niz
                                                                          SingleTermExprPositive(
                                                                            SingleFactorTerm(
                                                                              NumConstFactor(
                                                                               1
                                                                              ) [NumConstFactor]
                                                                            ) [SingleFactorTerm]
                                                                          ) [SingleTermExprPositive]
                                                                        ) [IdentArrayDesignator]
                                                                      ) [DesignatorEmptyFactor]
                                                                    ) [SingleFactorTerm]
                                                                  ) [SingleTermExprPositive]
                                                                ) [ActParsMultiExpr]
                                                              ) [ActParsYes]
                                                              ActParsRightParen(
                                                              ) [ActParsRightParen]
                                                            ) [MethodCall]
                                                          ) [MethodCallFactor]
                                                        ) [SingleFactorTerm]
                                                      ) [SingleTermExprPositive]
                                                    ) [ActParsSingleExpr]
                                                    SingleTermExprPositive(
                                                      SingleFactorTerm(
                                                        DesignatorEmptyFactor(
                                                          IdentArrayDesignator(
                                                           niz
                                                            SingleTermExprPositive(
                                                              SingleFactorTerm(
                                                                NumConstFactor(
                                                                 2
                                                                ) [NumConstFactor]
                                                              ) [SingleFactorTerm]
                                                            ) [SingleTermExprPositive]
                                                          ) [IdentArrayDesignator]
                                                        ) [DesignatorEmptyFactor]
                                                      ) [SingleFactorTerm]
                                                    ) [SingleTermExprPositive]
                                                  ) [ActParsMultiExpr]
                                                ) [ActParsYes]
                                                ActParsRightParen(
                                                ) [ActParsRightParen]
                                              ) [MethodCall]
                                            ) [MethodCallFactor]
                                          ) [SingleFactorTerm]
                                        ) [SingleTermExprPositive]
                                        NumConstNo(
                                        ) [NumConstNo]
                                      ) [SinglePrintStatement]
                                    ) [StatementSingle]
                                  ) [StatementListMultiple]
                                  StatementSingle(
                                    SinglePrintStatement(
                                      SingleTermExprPositive(
                                        SingleFactorTerm(
                                          DesignatorEmptyFactor(
                                            IdentDesignator(
                                             eol
                                            ) [IdentDesignator]
                                          ) [DesignatorEmptyFactor]
                                        ) [SingleFactorTerm]
                                      ) [SingleTermExprPositive]
                                      NumConstNo(
                                      ) [NumConstNo]
                                    ) [SinglePrintStatement]
                                  ) [StatementSingle]
                                ) [StatementListMultiple]
                                StatementSingle(
                                  SinglePrintStatement(
                                    SingleTermExprPositive(
                                      SingleFactorTerm(
                                        MethodCallFactor(
                                          MethodCall(
                                            IdentDesignator(
                                             inkrement
                                            ) [IdentDesignator]
                                            ActParsLeftParen(
                                            ) [ActParsLeftParen]
                                            ActParsYes(
                                              ActParsMultiExpr(
                                                ActParsSingleExpr(
                                                  SingleTermExprPositive(
                                                    SingleFactorTerm(
                                                      DesignatorEmptyFactor(
                                                        IdentArrayDesignator(
                                                         niz
                                                          SingleTermExprPositive(
                                                            SingleFactorTerm(
                                                              NumConstFactor(
                                                               2
                                                              ) [NumConstFactor]
                                                            ) [SingleFactorTerm]
                                                          ) [SingleTermExprPositive]
                                                        ) [IdentArrayDesignator]
                                                      ) [DesignatorEmptyFactor]
                                                    ) [SingleFactorTerm]
                                                  ) [SingleTermExprPositive]
                                                ) [ActParsSingleExpr]
                                                SingleTermExprPositive(
                                                  SingleFactorTerm(
                                                    NumConstFactor(
                                                     2
                                                    ) [NumConstFactor]
                                                  ) [SingleFactorTerm]
                                                ) [SingleTermExprPositive]
                                              ) [ActParsMultiExpr]
                                            ) [ActParsYes]
                                            ActParsRightParen(
                                            ) [ActParsRightParen]
                                          ) [MethodCall]
                                        ) [MethodCallFactor]
                                      ) [SingleFactorTerm]
                                    ) [SingleTermExprPositive]
                                    NumConstNo(
                                    ) [NumConstNo]
                                  ) [SinglePrintStatement]
                                ) [StatementSingle]
                              ) [StatementListMultiple]
                              StatementSingle(
                                SingleDesignatorStatement(
                                  DesignatorStmtAssign(
                                    DesignatorStmtAssignCorrect(
                                      IdentDesignator(
                                       a
                                      ) [IdentDesignator]
                                      SingleTermExprPositive(
                                        SingleFactorTerm(
                                          NumConstFactor(
                                           3
                                          ) [NumConstFactor]
                                        ) [SingleFactorTerm]
                                      ) [SingleTermExprPositive]
                                    ) [DesignatorStmtAssignCorrect]
                                  ) [DesignatorStmtAssign]
                                ) [SingleDesignatorStatement]
                              ) [StatementSingle]
                            ) [StatementListMultiple]
                            StatementSingle(
                              SingleDesignatorStatement(
                                DesignatorStmtAssign(
                                  DesignatorStmtAssignCorrect(
                                    IdentDesignator(
                                     i
                                    ) [IdentDesignator]
                                    SingleTermExprPositive(
                                      SingleFactorTerm(
                                        NumConstFactor(
                                         0
                                        ) [NumConstFactor]
                                      ) [SingleFactorTerm]
                                    ) [SingleTermExprPositive]
                                  ) [DesignatorStmtAssignCorrect]
                                ) [DesignatorStmtAssign]
                              ) [SingleDesignatorStatement]
                            ) [StatementSingle]
                          ) [StatementListMultiple]
                          StatementSingle(
                            DoWhileStatement(
                              DoEnter(
                              ) [DoEnter]
                              StatementListMultiple(
                                StatementListNo(
                                ) [StatementListNo]
                                StatementMultiple(
                                  StatementsInBraces(
                                    StatementListMultiple(
                                      StatementListMultiple(
                                        StatementListNo(
                                        ) [StatementListNo]
                                        StatementSingle(
                                          SingleDesignatorStatement(
                                            DesignatorStmtAssign(
                                              DesignatorStmtAssignCorrect(
                                                IdentArrayDesignator(
                                                 niz
                                                  SingleTermExprPositive(
                                                    SingleFactorTerm(
                                                      DesignatorEmptyFactor(
                                                        IdentDesignator(
                                                         i
                                                        ) [IdentDesignator]
                                                      ) [DesignatorEmptyFactor]
                                                    ) [SingleFactorTerm]
                                                  ) [SingleTermExprPositive]
                                                ) [IdentArrayDesignator]
                                                SingleTermExprPositive(
                                                  MultiFactorTerm(
                                                    MultiFactorTerm(
                                                      SingleFactorTerm(
                                                        DesignatorEmptyFactor(
                                                          IdentArrayDesignator(
                                                           niz
                                                            SingleTermExprPositive(
                                                              SingleFactorTerm(
                                                                DesignatorEmptyFactor(
                                                                  IdentDesignator(
                                                                   i
                                                                  ) [IdentDesignator]
                                                                ) [DesignatorEmptyFactor]
                                                              ) [SingleFactorTerm]
                                                            ) [SingleTermExprPositive]
                                                          ) [IdentArrayDesignator]
                                                        ) [DesignatorEmptyFactor]
                                                      ) [SingleFactorTerm]
                                                      MulopMul(
                                                      ) [MulopMul]
                                                      NumConstFactor(
                                                       2
                                                      ) [NumConstFactor]
                                                    ) [MultiFactorTerm]
                                                    MulopMul(
                                                    ) [MulopMul]
                                                    DesignatorEmptyFactor(
                                                      IdentDesignator(
                                                       a
                                                      ) [IdentDesignator]
                                                    ) [DesignatorEmptyFactor]
                                                  ) [MultiFactorTerm]
                                                ) [SingleTermExprPositive]
                                              ) [DesignatorStmtAssignCorrect]
                                            ) [DesignatorStmtAssign]
                                          ) [SingleDesignatorStatement]
                                        ) [StatementSingle]
                                      ) [StatementListMultiple]
                                      StatementSingle(
                                        SingleDesignatorStatement(
                                          DesignatorStmtPlusPlus(
                                            IdentDesignator(
                                             i
                                            ) [IdentDesignator]
                                          ) [DesignatorStmtPlusPlus]
                                        ) [SingleDesignatorStatement]
                                      ) [StatementSingle]
                                    ) [StatementListMultiple]
                                  ) [StatementsInBraces]
                                ) [StatementMultiple]
                              ) [StatementListMultiple]
                              ConditionSingleTerm(
                                CondSingleFactTerm(
                                  CondMultiExprFact(
                                    CondSingleExprFact(
                                      SingleTermExprPositive(
                                        SingleFactorTerm(
                                          DesignatorEmptyFactor(
                                            IdentDesignator(
                                             i
                                            ) [IdentDesignator]
                                          ) [DesignatorEmptyFactor]
                                        ) [SingleFactorTerm]
                                      ) [SingleTermExprPositive]
                                    ) [CondSingleExprFact]
                                    RelopLS(
                                    ) [RelopLS]
                                    SingleTermExprPositive(
                                      SingleFactorTerm(
                                        NumConstFactor(
                                         3
                                        ) [NumConstFactor]
                                      ) [SingleFactorTerm]
                                    ) [SingleTermExprPositive]
                                  ) [CondMultiExprFact]
                                ) [CondSingleFactTerm]
                              ) [ConditionSingleTerm]
                            ) [DoWhileStatement]
                          ) [StatementSingle]
                        ) [StatementListMultiple]
                        StatementSingle(
                          SinglePrintStatement(
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                DesignatorEmptyFactor(
                                  IdentArrayDesignator(
                                   niz
                                    SingleTermExprPositive(
                                      SingleFactorTerm(
                                        NumConstFactor(
                                         0
                                        ) [NumConstFactor]
                                      ) [SingleFactorTerm]
                                    ) [SingleTermExprPositive]
                                  ) [IdentArrayDesignator]
                                ) [DesignatorEmptyFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                            NumConstNo(
                            ) [NumConstNo]
                          ) [SinglePrintStatement]
                        ) [StatementSingle]
                      ) [StatementListMultiple]
                      StatementSingle(
                        SinglePrintStatement(
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              DesignatorEmptyFactor(
                                IdentArrayDesignator(
                                 niz
                                  SingleTermExprPositive(
                                    SingleFactorTerm(
                                      NumConstFactor(
                                       1
                                      ) [NumConstFactor]
                                    ) [SingleFactorTerm]
                                  ) [SingleTermExprPositive]
                                ) [IdentArrayDesignator]
                              ) [DesignatorEmptyFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                          NumConstNo(
                          ) [NumConstNo]
                        ) [SinglePrintStatement]
                      ) [StatementSingle]
                    ) [StatementListMultiple]
                    StatementSingle(
                      SinglePrintStatement(
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            DesignatorEmptyFactor(
                              IdentArrayDesignator(
                               niz
                                SingleTermExprPositive(
                                  SingleFactorTerm(
                                    NumConstFactor(
                                     2
                                    ) [NumConstFactor]
                                  ) [SingleFactorTerm]
                                ) [SingleTermExprPositive]
                              ) [IdentArrayDesignator]
                            ) [DesignatorEmptyFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                        NumConstNo(
                        ) [NumConstNo]
                      ) [SinglePrintStatement]
                    ) [StatementSingle]
                  ) [StatementListMultiple]
                  StatementSingle(
                    SinglePrintStatement(
                      SingleTermExprPositive(
                        SingleFactorTerm(
                          DesignatorEmptyFactor(
                            IdentDesignator(
                             eol
                            ) [IdentDesignator]
                          ) [DesignatorEmptyFactor]
                        ) [SingleFactorTerm]
                      ) [SingleTermExprPositive]
                      NumConstNo(
                      ) [NumConstNo]
                    ) [SinglePrintStatement]
                  ) [StatementSingle]
                ) [StatementListMultiple]
                StatementSingle(
                  SingleDesignatorStatement(
                    DesignatorStmtAssign(
                      DesignatorStmtAssignCorrect(
                        IdentDesignator(
                         i
                        ) [IdentDesignator]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            NumConstFactor(
                             0
                            ) [NumConstFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [DesignatorStmtAssignCorrect]
                    ) [DesignatorStmtAssign]
                  ) [SingleDesignatorStatement]
                ) [StatementSingle]
              ) [StatementListMultiple]
              StatementSingle(
                SingleDesignatorStatement(
                  DesignatorStmtAssign(
                    DesignatorStmtAssignCorrect(
                      IdentDesignator(
                       niz2
                      ) [IdentDesignator]
                      SingleTermExprPositive(
                        SingleFactorTerm(
                          NumConstFactor(
                           0
                          ) [NumConstFactor]
                        ) [SingleFactorTerm]
                      ) [SingleTermExprPositive]
                    ) [DesignatorStmtAssignCorrect]
                  ) [DesignatorStmtAssign]
                ) [SingleDesignatorStatement]
              ) [StatementSingle]
            ) [StatementListMultiple]
            StatementSingle(
              DoWhileStatement(
                DoEnter(
                ) [DoEnter]
                StatementListMultiple(
                  StatementListNo(
                  ) [StatementListNo]
                  StatementMultiple(
                    StatementsInBraces(
                      StatementListMultiple(
                        StatementListMultiple(
                          StatementListNo(
                          ) [StatementListNo]
                          StatementSingle(
                            SingleDesignatorStatement(
                              DesignatorStmtAssign(
                                DesignatorStmtAssignCorrect(
                                  IdentDesignator(
                                   niz2
                                  ) [IdentDesignator]
                                  MultiTermExpr(
                                    SingleTermExprPositive(
                                      SingleFactorTerm(
                                        DesignatorEmptyFactor(
                                          IdentDesignator(
                                           niz2
                                          ) [IdentDesignator]
                                        ) [DesignatorEmptyFactor]
                                      ) [SingleFactorTerm]
                                    ) [SingleTermExprPositive]
                                    AddopPlus(
                                    ) [AddopPlus]
                                    MultiFactorTerm(
                                      SingleFactorTerm(
                                        DesignatorEmptyFactor(
                                          IdentArrayDesignator(
                                           niz
                                            SingleTermExprPositive(
                                              SingleFactorTerm(
                                                DesignatorEmptyFactor(
                                                  IdentDesignator(
                                                   i
                                                  ) [IdentDesignator]
                                                ) [DesignatorEmptyFactor]
                                              ) [SingleFactorTerm]
                                            ) [SingleTermExprPositive]
                                          ) [IdentArrayDesignator]
                                        ) [DesignatorEmptyFactor]
                                      ) [SingleFactorTerm]
                                      MulopMul(
                                      ) [MulopMul]
                                      DesignatorEmptyFactor(
                                        IdentArrayDesignator(
                                         niz
                                          SingleTermExprPositive(
                                            SingleFactorTerm(
                                              DesignatorEmptyFactor(
                                                IdentDesignator(
                                                 i
                                                ) [IdentDesignator]
                                              ) [DesignatorEmptyFactor]
                                            ) [SingleFactorTerm]
                                          ) [SingleTermExprPositive]
                                        ) [IdentArrayDesignator]
                                      ) [DesignatorEmptyFactor]
                                    ) [MultiFactorTerm]
                                  ) [MultiTermExpr]
                                ) [DesignatorStmtAssignCorrect]
                              ) [DesignatorStmtAssign]
                            ) [SingleDesignatorStatement]
                          ) [StatementSingle]
                        ) [StatementListMultiple]
                        StatementSingle(
                          SingleDesignatorStatement(
                            DesignatorStmtPlusPlus(
                              IdentDesignator(
                               i
                              ) [IdentDesignator]
                            ) [DesignatorStmtPlusPlus]
                          ) [SingleDesignatorStatement]
                        ) [StatementSingle]
                      ) [StatementListMultiple]
                    ) [StatementsInBraces]
                  ) [StatementMultiple]
                ) [StatementListMultiple]
                ConditionSingleTerm(
                  CondSingleFactTerm(
                    CondMultiExprFact(
                      CondSingleExprFact(
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            DesignatorEmptyFactor(
                              IdentDesignator(
                               i
                              ) [IdentDesignator]
                            ) [DesignatorEmptyFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [CondSingleExprFact]
                      RelopLS(
                      ) [RelopLS]
                      SingleTermExprPositive(
                        SingleFactorTerm(
                          NumConstFactor(
                           3
                          ) [NumConstFactor]
                        ) [SingleFactorTerm]
                      ) [SingleTermExprPositive]
                    ) [CondMultiExprFact]
                  ) [CondSingleFactTerm]
                ) [ConditionSingleTerm]
              ) [DoWhileStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
          StatementSingle(
            SinglePrintStatement(
              SingleTermExprPositive(
                SingleFactorTerm(
                  DesignatorEmptyFactor(
                    IdentDesignator(
                     niz2
                    ) [IdentDesignator]
                  ) [DesignatorEmptyFactor]
                ) [SingleFactorTerm]
              ) [SingleTermExprPositive]
              NumConstNo(
              ) [NumConstNo]
            ) [SinglePrintStatement]
          ) [StatementSingle]
        ) [StatementListMultiple]
        StatementSingle(
          SinglePrintStatement(
            SingleTermExprPositive(
              SingleFactorTerm(
                DesignatorEmptyFactor(
                  IdentDesignator(
                   eol
                  ) [IdentDesignator]
                ) [DesignatorEmptyFactor]
              ) [SingleFactorTerm]
            ) [SingleTermExprPositive]
            NumConstNo(
            ) [NumConstNo]
          ) [SinglePrintStatement]
        ) [StatementSingle]
      ) [StatementListMultiple]
    ) [MethodDeclaration]
  ) [MethodDeclListMultiple]
) [Program]
INFO  21:08:47,594 - ===================================
INFO  21:08:47,599 - Method Call detected. Method name: sum
INFO  21:08:47,599 - Access to array element detected. Array name: niz
INFO  21:08:47,599 - Access to array element detected. Array name: niz
INFO  21:08:47,599 - Access to array element detected. Array name: niz
INFO  21:08:47,599 - Access to array element detected. Array name: niz
INFO  21:08:47,599 - Access to array element detected. Array name: niz
INFO  21:08:47,599 - Method Call detected. Method name: sum
INFO  21:08:47,599 - Method Call detected. Method name: verify
INFO  21:08:47,599 - Access to array element detected. Array name: niz
INFO  21:08:47,599 - Method Call detected. Method name: ord
INFO  21:08:47,599 - Method Call detected. Method name: ord
INFO  21:08:47,599 - Method Call detected. Method name: inkrement
INFO  21:08:47,599 - Method Call detected. Method name: verify
INFO  21:08:47,599 - Access to array element detected. Array name: niz
INFO  21:08:47,599 - Access to array element detected. Array name: niz
INFO  21:08:47,599 - Access to array element detected. Array name: niz
INFO  21:08:47,599 - Access to array element detected. Array name: niz
INFO  21:08:47,599 - Access to array element detected. Array name: niz
INFO  21:08:47,599 - Method Call detected. Method name: sum
INFO  21:08:47,599 - Access to array element detected. Array name: niz
INFO  21:08:47,599 - Method Call detected. Method name: sum
INFO  21:08:47,599 - Access to array element detected. Array name: niz
INFO  21:08:47,599 - Method Call detected. Method name: inkrement
INFO  21:08:47,599 - Access to array element detected. Array name: niz
INFO  21:08:47,599 - Access to array element detected. Array name: niz
INFO  21:08:47,599 - Access to array element detected. Array name: niz
INFO  21:08:47,599 - Access to array element detected. Array name: niz
INFO  21:08:47,599 - Access to array element detected. Array name: niz
INFO  21:08:47,599 - Access to array element detected. Array name: niz
INFO  21:08:47,599 - Access to array element detected. Array name: niz
INFO  21:08:47,599 - Compile successful!
INFO  21:10:51,719 - Compiling source file: D:\source\repos\PP_Projekat\MicroJavaCompiler\test\program.mj
INFO  21:10:51,737 - #2 program
INFO  21:10:51,737 - #48 test302
INFO  21:10:51,737 - #7 const
INFO  21:10:51,737 - #48 int
INFO  21:10:51,737 - #48 jedan
INFO  21:10:51,738 - #27 =
INFO  21:10:51,738 - #51 1
INFO  21:10:51,738 - #38 ;
INFO  21:10:51,738 - #48 int
INFO  21:10:51,738 - #48 i
INFO  21:10:51,738 - #38 ;
INFO  21:10:51,739 - #48 bool
INFO  21:10:51,739 - #48 ibool
INFO  21:10:51,739 - #38 ;
INFO  21:10:51,739 - #48 int
INFO  21:10:51,739 - #48 niz2
INFO  21:10:51,739 - #38 ;
INFO  21:10:51,739 - #48 int
INFO  21:10:51,739 - #48 niz
INFO  21:10:51,739 - #42 [
INFO  21:10:51,739 - #43 ]
INFO  21:10:51,739 - #38 ;
INFO  21:10:51,739 - #48 int
INFO  21:10:51,739 - #48 a
INFO  21:10:51,739 - #38 ;
INFO  21:10:51,740 - #44 {
INFO  21:10:51,740 - #48 int
INFO  21:10:51,740 - #48 sum
INFO  21:10:51,740 - #40 (
INFO  21:10:51,740 - #48 int
INFO  21:10:51,740 - #48 z
INFO  21:10:51,740 - #39 ,
INFO  21:10:51,740 - #48 int
INFO  21:10:51,740 - #48 d
INFO  21:10:51,740 - #41 )
INFO  21:10:51,740 - #44 {
INFO  21:10:51,741 - #15 return
INFO  21:10:51,741 - #48 z
INFO  21:10:51,741 - #22 +
INFO  21:10:51,741 - #48 d
INFO  21:10:51,742 - #38 ;
INFO  21:10:51,742 - #45 }
INFO  21:10:51,742 - #48 int
INFO  21:10:51,742 - #48 inkrement
INFO  21:10:51,742 - #40 (
INFO  21:10:51,742 - #48 int
INFO  21:10:51,742 - #48 a
INFO  21:10:51,742 - #39 ,
INFO  21:10:51,742 - #48 int
INFO  21:10:51,742 - #48 inc
INFO  21:10:51,742 - #41 )
INFO  21:10:51,742 - #48 int
INFO  21:10:51,742 - #48 pom
INFO  21:10:51,742 - #38 ;
INFO  21:10:51,743 - #44 {
INFO  21:10:51,743 - #5 if
INFO  21:10:51,743 - #40 (
INFO  21:10:51,743 - #48 inc
INFO  21:10:51,743 - #28 ==
INFO  21:10:51,743 - #48 jedan
INFO  21:10:51,743 - #41 )
INFO  21:10:51,743 - #48 pom
INFO  21:10:51,744 - #27 =
INFO  21:10:51,744 - #51 1
INFO  21:10:51,744 - #38 ;
INFO  21:10:51,744 - #6 else
INFO  21:10:51,744 - #5 if
INFO  21:10:51,744 - #40 (
INFO  21:10:51,744 - #48 inc
INFO  21:10:51,744 - #28 ==
INFO  21:10:51,744 - #51 2
INFO  21:10:51,744 - #41 )
INFO  21:10:51,744 - #48 pom
INFO  21:10:51,744 - #27 =
INFO  21:10:51,744 - #48 a
INFO  21:10:51,744 - #38 ;
INFO  21:10:51,744 - #15 return
INFO  21:10:51,744 - #48 sum
INFO  21:10:51,744 - #40 (
INFO  21:10:51,744 - #48 a
INFO  21:10:51,744 - #39 ,
INFO  21:10:51,744 - #48 pom
INFO  21:10:51,745 - #41 )
INFO  21:10:51,745 - #38 ;
INFO  21:10:51,745 - #45 }
INFO  21:10:51,745 - #48 bool
INFO  21:10:51,745 - #48 verify
INFO  21:10:51,745 - #40 (
INFO  21:10:51,745 - #41 )
INFO  21:10:51,745 - #44 {
INFO  21:10:51,745 - #12 print
INFO  21:10:51,745 - #40 (
INFO  21:10:51,746 - #50 v
INFO  21:10:51,746 - #41 )
INFO  21:10:51,746 - #38 ;
INFO  21:10:51,746 - #15 return
INFO  21:10:51,746 - #49 false
INFO  21:10:51,746 - #38 ;
INFO  21:10:51,746 - #45 }
INFO  21:10:51,746 - #14 void
INFO  21:10:51,746 - #48 main
INFO  21:10:51,746 - #40 (
INFO  21:10:51,746 - #41 )
INFO  21:10:51,746 - #44 {
INFO  21:10:51,746 - #5 if
INFO  21:10:51,746 - #40 (
INFO  21:10:51,746 - #51 1
INFO  21:10:51,747 - #29 !=
INFO  21:10:51,747 - #51 1
INFO  21:10:51,747 - #41 )
INFO  21:10:51,747 - #12 print
INFO  21:10:51,747 - #40 (
INFO  21:10:51,747 - #23 -
INFO  21:10:51,747 - #51 6
INFO  21:10:51,747 - #41 )
INFO  21:10:51,747 - #38 ;
INFO  21:10:51,747 - #6 else
INFO  21:10:51,747 - #12 print
INFO  21:10:51,747 - #40 (
INFO  21:10:51,747 - #51 0
INFO  21:10:51,747 - #41 )
INFO  21:10:51,747 - #38 ;
INFO  21:10:51,747 - #48 ibool
INFO  21:10:51,747 - #27 =
INFO  21:10:51,747 - #49 false
INFO  21:10:51,747 - #38 ;
INFO  21:10:51,747 - #48 i
INFO  21:10:51,747 - #27 =
INFO  21:10:51,747 - #51 0
INFO  21:10:51,747 - #38 ;
INFO  21:10:51,748 - #9 do
INFO  21:10:51,748 - #44 {
INFO  21:10:51,748 - #5 if
INFO  21:10:51,748 - #40 (
INFO  21:10:51,748 - #48 i
INFO  21:10:51,748 - #28 ==
INFO  21:10:51,748 - #51 2
INFO  21:10:51,748 - #41 )
INFO  21:10:51,748 - #48 ibool
INFO  21:10:51,748 - #27 =
INFO  21:10:51,748 - #49 true
INFO  21:10:51,748 - #38 ;
INFO  21:10:51,748 - #48 i
INFO  21:10:51,748 - #36 ++
INFO  21:10:51,748 - #38 ;
INFO  21:10:51,748 - #45 }
INFO  21:10:51,748 - #10 while
INFO  21:10:51,748 - #40 (
INFO  21:10:51,748 - #48 i
INFO  21:10:51,748 - #32 <
INFO  21:10:51,748 - #51 5
INFO  21:10:51,749 - #41 )
INFO  21:10:51,749 - #38 ;
INFO  21:10:51,749 - #5 if
INFO  21:10:51,749 - #40 (
INFO  21:10:51,749 - #48 ibool
INFO  21:10:51,749 - #41 )
INFO  21:10:51,749 - #5 if
INFO  21:10:51,749 - #40 (
INFO  21:10:51,749 - #48 i
INFO  21:10:51,749 - #28 ==
INFO  21:10:51,749 - #51 5
INFO  21:10:51,749 - #41 )
INFO  21:10:51,749 - #12 print
INFO  21:10:51,749 - #40 (
INFO  21:10:51,749 - #51 1
INFO  21:10:51,749 - #41 )
INFO  21:10:51,749 - #38 ;
INFO  21:10:51,749 - #6 else
INFO  21:10:51,749 - #12 print
INFO  21:10:51,749 - #40 (
INFO  21:10:51,749 - #23 -
INFO  21:10:51,749 - #51 1
INFO  21:10:51,749 - #41 )
INFO  21:10:51,749 - #38 ;
INFO  21:10:51,749 - #48 a
INFO  21:10:51,749 - #27 =
INFO  21:10:51,749 - #51 2
INFO  21:10:51,749 - #38 ;
INFO  21:10:51,749 - #48 niz
INFO  21:10:51,749 - #27 =
INFO  21:10:51,749 - #11 new
INFO  21:10:51,749 - #48 int
INFO  21:10:51,749 - #42 [
INFO  21:10:51,749 - #51 3
INFO  21:10:51,749 - #43 ]
INFO  21:10:51,749 - #38 ;
INFO  21:10:51,749 - #48 niz
INFO  21:10:51,750 - #42 [
INFO  21:10:51,750 - #51 0
INFO  21:10:51,750 - #43 ]
INFO  21:10:51,750 - #27 =
INFO  21:10:51,750 - #51 1
INFO  21:10:51,750 - #24 *
INFO  21:10:51,750 - #48 a
INFO  21:10:51,750 - #38 ;
INFO  21:10:51,750 - #48 niz
INFO  21:10:51,750 - #42 [
INFO  21:10:51,750 - #51 1
INFO  21:10:51,750 - #43 ]
INFO  21:10:51,750 - #27 =
INFO  21:10:51,751 - #51 2
INFO  21:10:51,751 - #24 *
INFO  21:10:51,751 - #48 a
INFO  21:10:51,751 - #38 ;
INFO  21:10:51,751 - #48 niz
INFO  21:10:51,751 - #42 [
INFO  21:10:51,751 - #51 2
INFO  21:10:51,751 - #43 ]
INFO  21:10:51,751 - #27 =
INFO  21:10:51,751 - #48 sum
INFO  21:10:51,751 - #40 (
INFO  21:10:51,751 - #48 niz
INFO  21:10:51,751 - #42 [
INFO  21:10:51,751 - #51 1
INFO  21:10:51,751 - #43 ]
INFO  21:10:51,751 - #39 ,
INFO  21:10:51,751 - #48 niz
INFO  21:10:51,751 - #42 [
INFO  21:10:51,751 - #51 0
INFO  21:10:51,751 - #43 ]
INFO  21:10:51,751 - #41 )
INFO  21:10:51,751 - #24 *
INFO  21:10:51,751 - #48 a
INFO  21:10:51,751 - #22 +
INFO  21:10:51,751 - #51 1
INFO  21:10:51,751 - #38 ;
INFO  21:10:51,751 - #5 if
INFO  21:10:51,751 - #40 (
INFO  21:10:51,751 - #48 verify
INFO  21:10:51,751 - #40 (
INFO  21:10:51,751 - #41 )
INFO  21:10:51,751 - #35 ||
INFO  21:10:51,751 - #48 niz
INFO  21:10:51,751 - #42 [
INFO  21:10:51,751 - #51 2
INFO  21:10:51,751 - #43 ]
INFO  21:10:51,751 - #28 ==
INFO  21:10:51,751 - #51 4
INFO  21:10:51,751 - #41 )
INFO  21:10:51,751 - #12 print
INFO  21:10:51,751 - #40 (
INFO  21:10:51,751 - #48 ord
INFO  21:10:51,751 - #40 (
INFO  21:10:51,752 - #50 A
INFO  21:10:51,752 - #41 )
INFO  21:10:51,752 - #41 )
INFO  21:10:51,752 - #38 ;
INFO  21:10:51,752 - #6 else
INFO  21:10:51,752 - #12 print
INFO  21:10:51,752 - #40 (
INFO  21:10:51,752 - #48 ord
INFO  21:10:51,752 - #40 (
INFO  21:10:51,752 - #50 a
INFO  21:10:51,752 - #41 )
INFO  21:10:51,752 - #41 )
INFO  21:10:51,752 - #38 ;
INFO  21:10:51,752 - #12 print
INFO  21:10:51,752 - #40 (
INFO  21:10:51,752 - #48 eol
INFO  21:10:51,752 - #41 )
INFO  21:10:51,752 - #38 ;
INFO  21:10:51,752 - #48 i
INFO  21:10:51,752 - #27 =
INFO  21:10:51,752 - #51 0
INFO  21:10:51,752 - #38 ;
INFO  21:10:51,752 - #9 do
INFO  21:10:51,752 - #44 {
INFO  21:10:51,752 - #5 if
INFO  21:10:51,752 - #40 (
INFO  21:10:51,752 - #48 i
INFO  21:10:51,752 - #28 ==
INFO  21:10:51,752 - #51 3
INFO  21:10:51,752 - #41 )
INFO  21:10:51,752 - #44 {
INFO  21:10:51,752 - #48 i
INFO  21:10:51,752 - #36 ++
INFO  21:10:51,752 - #38 ;
INFO  21:10:51,752 - #4 continue
INFO  21:10:51,752 - #38 ;
INFO  21:10:51,752 - #45 }
INFO  21:10:51,752 - #5 if
INFO  21:10:51,752 - #40 (
INFO  21:10:51,752 - #48 i
INFO  21:10:51,752 - #28 ==
INFO  21:10:51,752 - #51 4
INFO  21:10:51,752 - #41 )
INFO  21:10:51,752 - #3 break
INFO  21:10:51,752 - #38 ;
INFO  21:10:51,752 - #48 i
INFO  21:10:51,753 - #27 =
INFO  21:10:51,753 - #48 inkrement
INFO  21:10:51,753 - #40 (
INFO  21:10:51,753 - #48 i
INFO  21:10:51,753 - #39 ,
INFO  21:10:51,753 - #51 1
INFO  21:10:51,753 - #41 )
INFO  21:10:51,753 - #38 ;
INFO  21:10:51,753 - #45 }
INFO  21:10:51,753 - #10 while
INFO  21:10:51,753 - #40 (
INFO  21:10:51,753 - #48 i
INFO  21:10:51,753 - #32 <
INFO  21:10:51,753 - #51 10
INFO  21:10:51,753 - #41 )
INFO  21:10:51,753 - #38 ;
INFO  21:10:51,753 - #5 if
INFO  21:10:51,753 - #40 (
INFO  21:10:51,753 - #48 i
INFO  21:10:51,753 - #28 ==
INFO  21:10:51,753 - #51 3
INFO  21:10:51,753 - #34 &&
INFO  21:10:51,753 - #48 verify
INFO  21:10:51,753 - #40 (
INFO  21:10:51,753 - #41 )
INFO  21:10:51,753 - #41 )
INFO  21:10:51,753 - #12 print
INFO  21:10:51,753 - #40 (
INFO  21:10:51,753 - #23 -
INFO  21:10:51,753 - #51 4
INFO  21:10:51,753 - #41 )
INFO  21:10:51,753 - #38 ;
INFO  21:10:51,753 - #6 else
INFO  21:10:51,753 - #12 print
INFO  21:10:51,753 - #40 (
INFO  21:10:51,753 - #51 4
INFO  21:10:51,753 - #41 )
INFO  21:10:51,753 - #38 ;
INFO  21:10:51,753 - #13 read
INFO  21:10:51,753 - #40 (
INFO  21:10:51,753 - #48 niz
INFO  21:10:51,753 - #42 [
INFO  21:10:51,753 - #51 0
INFO  21:10:51,753 - #43 ]
INFO  21:10:51,753 - #41 )
INFO  21:10:51,753 - #38 ;
INFO  21:10:51,753 - #13 read
INFO  21:10:51,753 - #40 (
INFO  21:10:51,753 - #48 niz
INFO  21:10:51,753 - #42 [
INFO  21:10:51,753 - #51 1
INFO  21:10:51,753 - #43 ]
INFO  21:10:51,753 - #41 )
INFO  21:10:51,753 - #38 ;
INFO  21:10:51,753 - #13 read
INFO  21:10:51,753 - #40 (
INFO  21:10:51,753 - #48 niz
INFO  21:10:51,753 - #42 [
INFO  21:10:51,753 - #51 2
INFO  21:10:51,753 - #43 ]
INFO  21:10:51,753 - #41 )
INFO  21:10:51,753 - #38 ;
INFO  21:10:51,753 - #12 print
INFO  21:10:51,753 - #40 (
INFO  21:10:51,753 - #48 eol
INFO  21:10:51,753 - #41 )
INFO  21:10:51,753 - #38 ;
INFO  21:10:51,753 - #12 print
INFO  21:10:51,753 - #40 (
INFO  21:10:51,753 - #48 sum
INFO  21:10:51,753 - #40 (
INFO  21:10:51,753 - #48 sum
INFO  21:10:51,753 - #40 (
INFO  21:10:51,753 - #48 niz
INFO  21:10:51,753 - #42 [
INFO  21:10:51,753 - #51 0
INFO  21:10:51,753 - #43 ]
INFO  21:10:51,753 - #39 ,
INFO  21:10:51,753 - #48 niz
INFO  21:10:51,753 - #42 [
INFO  21:10:51,753 - #51 1
INFO  21:10:51,753 - #43 ]
INFO  21:10:51,753 - #41 )
INFO  21:10:51,753 - #39 ,
INFO  21:10:51,753 - #48 niz
INFO  21:10:51,753 - #42 [
INFO  21:10:51,753 - #51 2
INFO  21:10:51,753 - #43 ]
INFO  21:10:51,753 - #41 )
INFO  21:10:51,753 - #41 )
INFO  21:10:51,753 - #38 ;
INFO  21:10:51,753 - #12 print
INFO  21:10:51,753 - #40 (
INFO  21:10:51,753 - #48 eol
INFO  21:10:51,753 - #41 )
INFO  21:10:51,753 - #38 ;
INFO  21:10:51,754 - #12 print
INFO  21:10:51,754 - #40 (
INFO  21:10:51,754 - #48 inkrement
INFO  21:10:51,754 - #40 (
INFO  21:10:51,754 - #48 niz
INFO  21:10:51,754 - #42 [
INFO  21:10:51,754 - #51 2
INFO  21:10:51,754 - #43 ]
INFO  21:10:51,754 - #39 ,
INFO  21:10:51,754 - #51 2
INFO  21:10:51,754 - #41 )
INFO  21:10:51,754 - #41 )
INFO  21:10:51,754 - #38 ;
INFO  21:10:51,754 - #48 a
INFO  21:10:51,754 - #27 =
INFO  21:10:51,754 - #51 3
INFO  21:10:51,754 - #38 ;
INFO  21:10:51,754 - #48 i
INFO  21:10:51,754 - #27 =
INFO  21:10:51,754 - #51 0
INFO  21:10:51,754 - #38 ;
INFO  21:10:51,754 - #9 do
INFO  21:10:51,754 - #44 {
INFO  21:10:51,754 - #48 niz
INFO  21:10:51,754 - #42 [
INFO  21:10:51,754 - #48 i
INFO  21:10:51,754 - #43 ]
INFO  21:10:51,754 - #27 =
INFO  21:10:51,754 - #48 niz
INFO  21:10:51,754 - #42 [
INFO  21:10:51,754 - #48 i
INFO  21:10:51,754 - #43 ]
INFO  21:10:51,754 - #24 *
INFO  21:10:51,754 - #51 2
INFO  21:10:51,754 - #24 *
INFO  21:10:51,754 - #48 a
INFO  21:10:51,754 - #38 ;
INFO  21:10:51,754 - #48 i
INFO  21:10:51,754 - #36 ++
INFO  21:10:51,754 - #38 ;
INFO  21:10:51,754 - #45 }
INFO  21:10:51,754 - #10 while
INFO  21:10:51,754 - #40 (
INFO  21:10:51,754 - #48 i
INFO  21:10:51,754 - #32 <
INFO  21:10:51,754 - #51 3
INFO  21:10:51,754 - #41 )
INFO  21:10:51,754 - #38 ;
INFO  21:10:51,754 - #12 print
INFO  21:10:51,754 - #40 (
INFO  21:10:51,754 - #48 niz
INFO  21:10:51,754 - #42 [
INFO  21:10:51,754 - #51 0
INFO  21:10:51,754 - #43 ]
INFO  21:10:51,754 - #41 )
INFO  21:10:51,754 - #38 ;
INFO  21:10:51,754 - #12 print
INFO  21:10:51,754 - #40 (
INFO  21:10:51,754 - #48 niz
INFO  21:10:51,754 - #42 [
INFO  21:10:51,754 - #51 1
INFO  21:10:51,754 - #43 ]
INFO  21:10:51,754 - #41 )
INFO  21:10:51,754 - #38 ;
INFO  21:10:51,754 - #12 print
INFO  21:10:51,754 - #40 (
INFO  21:10:51,754 - #48 niz
INFO  21:10:51,754 - #42 [
INFO  21:10:51,754 - #51 2
INFO  21:10:51,754 - #43 ]
INFO  21:10:51,754 - #41 )
INFO  21:10:51,754 - #38 ;
INFO  21:10:51,754 - #12 print
INFO  21:10:51,754 - #40 (
INFO  21:10:51,754 - #48 eol
INFO  21:10:51,754 - #41 )
INFO  21:10:51,754 - #38 ;
INFO  21:10:51,754 - #48 i
INFO  21:10:51,754 - #27 =
INFO  21:10:51,754 - #51 0
INFO  21:10:51,754 - #38 ;
INFO  21:10:51,754 - #48 niz2
INFO  21:10:51,754 - #27 =
INFO  21:10:51,754 - #51 0
INFO  21:10:51,754 - #38 ;
INFO  21:10:51,754 - #9 do
INFO  21:10:51,754 - #44 {
INFO  21:10:51,754 - #48 niz2
INFO  21:10:51,754 - #27 =
INFO  21:10:51,754 - #48 niz2
INFO  21:10:51,754 - #22 +
INFO  21:10:51,754 - #48 niz
INFO  21:10:51,754 - #42 [
INFO  21:10:51,754 - #48 i
INFO  21:10:51,754 - #43 ]
INFO  21:10:51,754 - #24 *
INFO  21:10:51,754 - #48 niz
INFO  21:10:51,754 - #42 [
INFO  21:10:51,754 - #48 i
INFO  21:10:51,754 - #43 ]
INFO  21:10:51,754 - #38 ;
INFO  21:10:51,754 - #48 i
INFO  21:10:51,754 - #36 ++
INFO  21:10:51,754 - #38 ;
INFO  21:10:51,754 - #45 }
INFO  21:10:51,754 - #10 while
INFO  21:10:51,754 - #40 (
INFO  21:10:51,754 - #48 i
INFO  21:10:51,754 - #32 <
INFO  21:10:51,754 - #51 3
INFO  21:10:51,754 - #41 )
INFO  21:10:51,754 - #38 ;
INFO  21:10:51,754 - #12 print
INFO  21:10:51,754 - #40 (
INFO  21:10:51,754 - #48 niz2
INFO  21:10:51,754 - #41 )
INFO  21:10:51,754 - #38 ;
INFO  21:10:51,755 - #12 print
INFO  21:10:51,755 - #40 (
INFO  21:10:51,755 - #48 eol
INFO  21:10:51,755 - #41 )
INFO  21:10:51,755 - #38 ;
INFO  21:10:51,755 - #45 }
INFO  21:10:51,755 - #45 }
INFO  21:10:51,760 - Program(
  ProgramName(
   test302
  ) [ProgramName]
  AllDeclListMultiple(
    AllDeclListMultiple(
      AllDeclListMultiple(
        AllDeclListMultiple(
          AllDeclListMultiple(
            AllDeclListMultiple(
              NoDecl(
              ) [NoDecl]
              ConstDeclaration(
                ConstDeclarationExpr(
                  Type(
                   int
                  ) [Type]
                  ConstAssignSingle(
                    ConstAssign(
                     jedan
                      NumberConst(
                       1
                      ) [NumberConst]
                    ) [ConstAssign]
                  ) [ConstAssignSingle]
                ) [ConstDeclarationExpr]
              ) [ConstDeclaration]
            ) [AllDeclListMultiple]
            GlobalVarDeclaration(
              GlobalVarDeclarationExpr(
                Type(
                 int
                ) [Type]
                GlobalVarDeclListSingle(
                  GlobalVarDeclarationSingle(
                   i
                    NoArray(
                    ) [NoArray]
                  ) [GlobalVarDeclarationSingle]
                ) [GlobalVarDeclListSingle]
              ) [GlobalVarDeclarationExpr]
            ) [GlobalVarDeclaration]
          ) [AllDeclListMultiple]
          GlobalVarDeclaration(
            GlobalVarDeclarationExpr(
              Type(
               bool
              ) [Type]
              GlobalVarDeclListSingle(
                GlobalVarDeclarationSingle(
                 ibool
                  NoArray(
                  ) [NoArray]
                ) [GlobalVarDeclarationSingle]
              ) [GlobalVarDeclListSingle]
            ) [GlobalVarDeclarationExpr]
          ) [GlobalVarDeclaration]
        ) [AllDeclListMultiple]
        GlobalVarDeclaration(
          GlobalVarDeclarationExpr(
            Type(
             int
            ) [Type]
            GlobalVarDeclListSingle(
              GlobalVarDeclarationSingle(
               niz2
                NoArray(
                ) [NoArray]
              ) [GlobalVarDeclarationSingle]
            ) [GlobalVarDeclListSingle]
          ) [GlobalVarDeclarationExpr]
        ) [GlobalVarDeclaration]
      ) [AllDeclListMultiple]
      GlobalVarDeclaration(
        GlobalVarDeclarationExpr(
          Type(
           int
          ) [Type]
          GlobalVarDeclListSingle(
            GlobalVarDeclarationSingle(
             niz
              ArrayBrackets(
              ) [ArrayBrackets]
            ) [GlobalVarDeclarationSingle]
          ) [GlobalVarDeclListSingle]
        ) [GlobalVarDeclarationExpr]
      ) [GlobalVarDeclaration]
    ) [AllDeclListMultiple]
    GlobalVarDeclaration(
      GlobalVarDeclarationExpr(
        Type(
         int
        ) [Type]
        GlobalVarDeclListSingle(
          GlobalVarDeclarationSingle(
           a
            NoArray(
            ) [NoArray]
          ) [GlobalVarDeclarationSingle]
        ) [GlobalVarDeclListSingle]
      ) [GlobalVarDeclarationExpr]
    ) [GlobalVarDeclaration]
  ) [AllDeclListMultiple]
  MethodDeclListMultiple(
    MethodDeclListMultiple(
      MethodDeclListMultiple(
        MethodDeclListMultiple(
          MethodDeclListNo(
          ) [MethodDeclListNo]
          MethodDeclaration(
            MethodSignatureParams(
              MethodTypeType(
                Type(
                 int
                ) [Type]
              ) [MethodTypeType]
              MethodName(
               sum
              ) [MethodName]
              FormParsMultiple(
                FormParsSingle(
                  FormParSingle(
                    Type(
                     int
                    ) [Type]
                   z
                    NoArray(
                    ) [NoArray]
                  ) [FormParSingle]
                ) [FormParsSingle]
                FormParSingle(
                  Type(
                   int
                  ) [Type]
                 d
                  NoArray(
                  ) [NoArray]
                ) [FormParSingle]
              ) [FormParsMultiple]
              FormParsEnd(
              ) [FormParsEnd]
            ) [MethodSignatureParams]
            NoVarDeclOption(
            ) [NoVarDeclOption]
            StatementListMultiple(
              StatementListNo(
              ) [StatementListNo]
              StatementSingle(
                SingleReturnExprStatement(
                  MultiTermExpr(
                    SingleTermExprPositive(
                      SingleFactorTerm(
                        DesignatorEmptyFactor(
                          IdentDesignator(
                           z
                          ) [IdentDesignator]
                        ) [DesignatorEmptyFactor]
                      ) [SingleFactorTerm]
                    ) [SingleTermExprPositive]
                    AddopPlus(
                    ) [AddopPlus]
                    SingleFactorTerm(
                      DesignatorEmptyFactor(
                        IdentDesignator(
                         d
                        ) [IdentDesignator]
                      ) [DesignatorEmptyFactor]
                    ) [SingleFactorTerm]
                  ) [MultiTermExpr]
                ) [SingleReturnExprStatement]
              ) [StatementSingle]
            ) [StatementListMultiple]
          ) [MethodDeclaration]
        ) [MethodDeclListMultiple]
        MethodDeclaration(
          MethodSignatureParams(
            MethodTypeType(
              Type(
               int
              ) [Type]
            ) [MethodTypeType]
            MethodName(
             inkrement
            ) [MethodName]
            FormParsMultiple(
              FormParsSingle(
                FormParSingle(
                  Type(
                   int
                  ) [Type]
                 a
                  NoArray(
                  ) [NoArray]
                ) [FormParSingle]
              ) [FormParsSingle]
              FormParSingle(
                Type(
                 int
                ) [Type]
               inc
                NoArray(
                ) [NoArray]
              ) [FormParSingle]
            ) [FormParsMultiple]
            FormParsEnd(
            ) [FormParsEnd]
          ) [MethodSignatureParams]
          VarDeclOptionTrue(
            NoVarDeclOption(
            ) [NoVarDeclOption]
            VarDeclarationExpr(
              Type(
               int
              ) [Type]
              VarDeclListSingle(
                VarDeclSingle(
                 pom
                  NoArray(
                  ) [NoArray]
                ) [VarDeclSingle]
              ) [VarDeclListSingle]
            ) [VarDeclarationExpr]
          ) [VarDeclOptionTrue]
          StatementListMultiple(
            StatementListMultiple(
              StatementListNo(
              ) [StatementListNo]
              StatementSingle(
                IfElseStatement(
                  IfConditionSingleTerm(
                    CondSingleFactTerm(
                      CondMultiExprFact(
                        CondSingleExprFact(
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              DesignatorEmptyFactor(
                                IdentDesignator(
                                 inc
                                ) [IdentDesignator]
                              ) [DesignatorEmptyFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [CondSingleExprFact]
                        RelopEQUAL(
                        ) [RelopEQUAL]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            DesignatorEmptyFactor(
                              IdentDesignator(
                               jedan
                              ) [IdentDesignator]
                            ) [DesignatorEmptyFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [CondMultiExprFact]
                    ) [CondSingleFactTerm]
                  ) [IfConditionSingleTerm]
                  StatementSingle(
                    SingleDesignatorStatement(
                      DesignatorStmtAssign(
                        DesignatorStmtAssignCorrect(
                          IdentDesignator(
                           pom
                          ) [IdentDesignator]
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              NumConstFactor(
                               1
                              ) [NumConstFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [DesignatorStmtAssignCorrect]
                      ) [DesignatorStmtAssign]
                    ) [SingleDesignatorStatement]
                  ) [StatementSingle]
                  StatementSingle(
                    IfStatement(
                      IfConditionSingleTerm(
                        CondSingleFactTerm(
                          CondMultiExprFact(
                            CondSingleExprFact(
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentDesignator(
                                     inc
                                    ) [IdentDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [CondSingleExprFact]
                            RelopEQUAL(
                            ) [RelopEQUAL]
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                NumConstFactor(
                                 2
                                ) [NumConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [CondMultiExprFact]
                        ) [CondSingleFactTerm]
                      ) [IfConditionSingleTerm]
                      StatementSingle(
                        SingleDesignatorStatement(
                          DesignatorStmtAssign(
                            DesignatorStmtAssignCorrect(
                              IdentDesignator(
                               pom
                              ) [IdentDesignator]
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentDesignator(
                                     a
                                    ) [IdentDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [DesignatorStmtAssignCorrect]
                          ) [DesignatorStmtAssign]
                        ) [SingleDesignatorStatement]
                      ) [StatementSingle]
                    ) [IfStatement]
                  ) [StatementSingle]
                ) [IfElseStatement]
              ) [StatementSingle]
            ) [StatementListMultiple]
            StatementSingle(
              SingleReturnExprStatement(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    MethodCallFactor(
                      MethodCall(
                        IdentDesignator(
                         sum
                        ) [IdentDesignator]
                        ActParsLeftParen(
                        ) [ActParsLeftParen]
                        ActParsYes(
                          ActParsMultiExpr(
                            ActParsSingleExpr(
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentDesignator(
                                     a
                                    ) [IdentDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [ActParsSingleExpr]
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                DesignatorEmptyFactor(
                                  IdentDesignator(
                                   pom
                                  ) [IdentDesignator]
                                ) [DesignatorEmptyFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [ActParsMultiExpr]
                        ) [ActParsYes]
                        ActParsRightParen(
                        ) [ActParsRightParen]
                      ) [MethodCall]
                    ) [MethodCallFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
              ) [SingleReturnExprStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
        ) [MethodDeclaration]
      ) [MethodDeclListMultiple]
      MethodDeclaration(
        MethodSignaturePlain(
          MethodTypeType(
            Type(
             bool
            ) [Type]
          ) [MethodTypeType]
          MethodName(
           verify
          ) [MethodName]
        ) [MethodSignaturePlain]
        NoVarDeclOption(
        ) [NoVarDeclOption]
        StatementListMultiple(
          StatementListMultiple(
            StatementListNo(
            ) [StatementListNo]
            StatementSingle(
              SinglePrintStatement(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    CharConstFactor(
                     v
                    ) [CharConstFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
                NumConstNo(
                ) [NumConstNo]
              ) [SinglePrintStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
          StatementSingle(
            SingleReturnExprStatement(
              SingleTermExprPositive(
                SingleFactorTerm(
                  BoolConstFactor(
                   false
                  ) [BoolConstFactor]
                ) [SingleFactorTerm]
              ) [SingleTermExprPositive]
            ) [SingleReturnExprStatement]
          ) [StatementSingle]
        ) [StatementListMultiple]
      ) [MethodDeclaration]
    ) [MethodDeclListMultiple]
    MethodDeclaration(
      MethodSignaturePlain(
        MethodTypeVoid(
        ) [MethodTypeVoid]
        MethodName(
         main
        ) [MethodName]
      ) [MethodSignaturePlain]
      NoVarDeclOption(
      ) [NoVarDeclOption]
      StatementListMultiple(
        StatementListMultiple(
          StatementListMultiple(
            StatementListMultiple(
              StatementListMultiple(
                StatementListMultiple(
                  StatementListMultiple(
                    StatementListMultiple(
                      StatementListMultiple(
                        StatementListMultiple(
                          StatementListMultiple(
                            StatementListMultiple(
                              StatementListMultiple(
                                StatementListMultiple(
                                  StatementListMultiple(
                                    StatementListMultiple(
                                      StatementListMultiple(
                                        StatementListMultiple(
                                          StatementListMultiple(
                                            StatementListMultiple(
                                              StatementListMultiple(
                                                StatementListMultiple(
                                                  StatementListMultiple(
                                                    StatementListMultiple(
                                                      StatementListMultiple(
                                                        StatementListMultiple(
                                                          StatementListMultiple(
                                                            StatementListMultiple(
                                                              StatementListMultiple(
                                                                StatementListMultiple(
                                                                  StatementListMultiple(
                                                                    StatementListMultiple(
                                                                      StatementListMultiple(
                                                                        StatementListMultiple(
                                                                          StatementListNo(
                                                                          ) [StatementListNo]
                                                                          StatementSingle(
                                                                            IfElseStatement(
                                                                              IfConditionSingleTerm(
                                                                                CondSingleFactTerm(
                                                                                  CondMultiExprFact(
                                                                                    CondSingleExprFact(
                                                                                      SingleTermExprPositive(
                                                                                        SingleFactorTerm(
                                                                                          NumConstFactor(
                                                                                           1
                                                                                          ) [NumConstFactor]
                                                                                        ) [SingleFactorTerm]
                                                                                      ) [SingleTermExprPositive]
                                                                                    ) [CondSingleExprFact]
                                                                                    RelopNOTEQUAL(
                                                                                    ) [RelopNOTEQUAL]
                                                                                    SingleTermExprPositive(
                                                                                      SingleFactorTerm(
                                                                                        NumConstFactor(
                                                                                         1
                                                                                        ) [NumConstFactor]
                                                                                      ) [SingleFactorTerm]
                                                                                    ) [SingleTermExprPositive]
                                                                                  ) [CondMultiExprFact]
                                                                                ) [CondSingleFactTerm]
                                                                              ) [IfConditionSingleTerm]
                                                                              StatementSingle(
                                                                                SinglePrintStatement(
                                                                                  SingleTermExprNegative(
                                                                                    SingleFactorTerm(
                                                                                      NumConstFactor(
                                                                                       6
                                                                                      ) [NumConstFactor]
                                                                                    ) [SingleFactorTerm]
                                                                                  ) [SingleTermExprNegative]
                                                                                  NumConstNo(
                                                                                  ) [NumConstNo]
                                                                                ) [SinglePrintStatement]
                                                                              ) [StatementSingle]
                                                                              StatementSingle(
                                                                                SinglePrintStatement(
                                                                                  SingleTermExprPositive(
                                                                                    SingleFactorTerm(
                                                                                      NumConstFactor(
                                                                                       0
                                                                                      ) [NumConstFactor]
                                                                                    ) [SingleFactorTerm]
                                                                                  ) [SingleTermExprPositive]
                                                                                  NumConstNo(
                                                                                  ) [NumConstNo]
                                                                                ) [SinglePrintStatement]
                                                                              ) [StatementSingle]
                                                                            ) [IfElseStatement]
                                                                          ) [StatementSingle]
                                                                        ) [StatementListMultiple]
                                                                        StatementSingle(
                                                                          SingleDesignatorStatement(
                                                                            DesignatorStmtAssign(
                                                                              DesignatorStmtAssignCorrect(
                                                                                IdentDesignator(
                                                                                 ibool
                                                                                ) [IdentDesignator]
                                                                                SingleTermExprPositive(
                                                                                  SingleFactorTerm(
                                                                                    BoolConstFactor(
                                                                                     false
                                                                                    ) [BoolConstFactor]
                                                                                  ) [SingleFactorTerm]
                                                                                ) [SingleTermExprPositive]
                                                                              ) [DesignatorStmtAssignCorrect]
                                                                            ) [DesignatorStmtAssign]
                                                                          ) [SingleDesignatorStatement]
                                                                        ) [StatementSingle]
                                                                      ) [StatementListMultiple]
                                                                      StatementSingle(
                                                                        SingleDesignatorStatement(
                                                                          DesignatorStmtAssign(
                                                                            DesignatorStmtAssignCorrect(
                                                                              IdentDesignator(
                                                                               i
                                                                              ) [IdentDesignator]
                                                                              SingleTermExprPositive(
                                                                                SingleFactorTerm(
                                                                                  NumConstFactor(
                                                                                   0
                                                                                  ) [NumConstFactor]
                                                                                ) [SingleFactorTerm]
                                                                              ) [SingleTermExprPositive]
                                                                            ) [DesignatorStmtAssignCorrect]
                                                                          ) [DesignatorStmtAssign]
                                                                        ) [SingleDesignatorStatement]
                                                                      ) [StatementSingle]
                                                                    ) [StatementListMultiple]
                                                                    StatementSingle(
                                                                      DoWhileStatement(
                                                                        DoEnter(
                                                                        ) [DoEnter]
                                                                        StatementListMultiple(
                                                                          StatementListNo(
                                                                          ) [StatementListNo]
                                                                          StatementMultiple(
                                                                            StatementsInBraces(
                                                                              StatementListMultiple(
                                                                                StatementListMultiple(
                                                                                  StatementListNo(
                                                                                  ) [StatementListNo]
                                                                                  StatementSingle(
                                                                                    IfStatement(
                                                                                      IfConditionSingleTerm(
                                                                                        CondSingleFactTerm(
                                                                                          CondMultiExprFact(
                                                                                            CondSingleExprFact(
                                                                                              SingleTermExprPositive(
                                                                                                SingleFactorTerm(
                                                                                                  DesignatorEmptyFactor(
                                                                                                    IdentDesignator(
                                                                                                     i
                                                                                                    ) [IdentDesignator]
                                                                                                  ) [DesignatorEmptyFactor]
                                                                                                ) [SingleFactorTerm]
                                                                                              ) [SingleTermExprPositive]
                                                                                            ) [CondSingleExprFact]
                                                                                            RelopEQUAL(
                                                                                            ) [RelopEQUAL]
                                                                                            SingleTermExprPositive(
                                                                                              SingleFactorTerm(
                                                                                                NumConstFactor(
                                                                                                 2
                                                                                                ) [NumConstFactor]
                                                                                              ) [SingleFactorTerm]
                                                                                            ) [SingleTermExprPositive]
                                                                                          ) [CondMultiExprFact]
                                                                                        ) [CondSingleFactTerm]
                                                                                      ) [IfConditionSingleTerm]
                                                                                      StatementSingle(
                                                                                        SingleDesignatorStatement(
                                                                                          DesignatorStmtAssign(
                                                                                            DesignatorStmtAssignCorrect(
                                                                                              IdentDesignator(
                                                                                               ibool
                                                                                              ) [IdentDesignator]
                                                                                              SingleTermExprPositive(
                                                                                                SingleFactorTerm(
                                                                                                  BoolConstFactor(
                                                                                                   true
                                                                                                  ) [BoolConstFactor]
                                                                                                ) [SingleFactorTerm]
                                                                                              ) [SingleTermExprPositive]
                                                                                            ) [DesignatorStmtAssignCorrect]
                                                                                          ) [DesignatorStmtAssign]
                                                                                        ) [SingleDesignatorStatement]
                                                                                      ) [StatementSingle]
                                                                                    ) [IfStatement]
                                                                                  ) [StatementSingle]
                                                                                ) [StatementListMultiple]
                                                                                StatementSingle(
                                                                                  SingleDesignatorStatement(
                                                                                    DesignatorStmtPlusPlus(
                                                                                      IdentDesignator(
                                                                                       i
                                                                                      ) [IdentDesignator]
                                                                                    ) [DesignatorStmtPlusPlus]
                                                                                  ) [SingleDesignatorStatement]
                                                                                ) [StatementSingle]
                                                                              ) [StatementListMultiple]
                                                                            ) [StatementsInBraces]
                                                                          ) [StatementMultiple]
                                                                        ) [StatementListMultiple]
                                                                        ConditionSingleTerm(
                                                                          CondSingleFactTerm(
                                                                            CondMultiExprFact(
                                                                              CondSingleExprFact(
                                                                                SingleTermExprPositive(
                                                                                  SingleFactorTerm(
                                                                                    DesignatorEmptyFactor(
                                                                                      IdentDesignator(
                                                                                       i
                                                                                      ) [IdentDesignator]
                                                                                    ) [DesignatorEmptyFactor]
                                                                                  ) [SingleFactorTerm]
                                                                                ) [SingleTermExprPositive]
                                                                              ) [CondSingleExprFact]
                                                                              RelopLS(
                                                                              ) [RelopLS]
                                                                              SingleTermExprPositive(
                                                                                SingleFactorTerm(
                                                                                  NumConstFactor(
                                                                                   5
                                                                                  ) [NumConstFactor]
                                                                                ) [SingleFactorTerm]
                                                                              ) [SingleTermExprPositive]
                                                                            ) [CondMultiExprFact]
                                                                          ) [CondSingleFactTerm]
                                                                        ) [ConditionSingleTerm]
                                                                      ) [DoWhileStatement]
                                                                    ) [StatementSingle]
                                                                  ) [StatementListMultiple]
                                                                  StatementSingle(
                                                                    IfStatement(
                                                                      IfConditionSingleTerm(
                                                                        CondSingleFactTerm(
                                                                          CondSingleExprFact(
                                                                            SingleTermExprPositive(
                                                                              SingleFactorTerm(
                                                                                DesignatorEmptyFactor(
                                                                                  IdentDesignator(
                                                                                   ibool
                                                                                  ) [IdentDesignator]
                                                                                ) [DesignatorEmptyFactor]
                                                                              ) [SingleFactorTerm]
                                                                            ) [SingleTermExprPositive]
                                                                          ) [CondSingleExprFact]
                                                                        ) [CondSingleFactTerm]
                                                                      ) [IfConditionSingleTerm]
                                                                      StatementSingle(
                                                                        IfElseStatement(
                                                                          IfConditionSingleTerm(
                                                                            CondSingleFactTerm(
                                                                              CondMultiExprFact(
                                                                                CondSingleExprFact(
                                                                                  SingleTermExprPositive(
                                                                                    SingleFactorTerm(
                                                                                      DesignatorEmptyFactor(
                                                                                        IdentDesignator(
                                                                                         i
                                                                                        ) [IdentDesignator]
                                                                                      ) [DesignatorEmptyFactor]
                                                                                    ) [SingleFactorTerm]
                                                                                  ) [SingleTermExprPositive]
                                                                                ) [CondSingleExprFact]
                                                                                RelopEQUAL(
                                                                                ) [RelopEQUAL]
                                                                                SingleTermExprPositive(
                                                                                  SingleFactorTerm(
                                                                                    NumConstFactor(
                                                                                     5
                                                                                    ) [NumConstFactor]
                                                                                  ) [SingleFactorTerm]
                                                                                ) [SingleTermExprPositive]
                                                                              ) [CondMultiExprFact]
                                                                            ) [CondSingleFactTerm]
                                                                          ) [IfConditionSingleTerm]
                                                                          StatementSingle(
                                                                            SinglePrintStatement(
                                                                              SingleTermExprPositive(
                                                                                SingleFactorTerm(
                                                                                  NumConstFactor(
                                                                                   1
                                                                                  ) [NumConstFactor]
                                                                                ) [SingleFactorTerm]
                                                                              ) [SingleTermExprPositive]
                                                                              NumConstNo(
                                                                              ) [NumConstNo]
                                                                            ) [SinglePrintStatement]
                                                                          ) [StatementSingle]
                                                                          StatementSingle(
                                                                            SinglePrintStatement(
                                                                              SingleTermExprNegative(
                                                                                SingleFactorTerm(
                                                                                  NumConstFactor(
                                                                                   1
                                                                                  ) [NumConstFactor]
                                                                                ) [SingleFactorTerm]
                                                                              ) [SingleTermExprNegative]
                                                                              NumConstNo(
                                                                              ) [NumConstNo]
                                                                            ) [SinglePrintStatement]
                                                                          ) [StatementSingle]
                                                                        ) [IfElseStatement]
                                                                      ) [StatementSingle]
                                                                    ) [IfStatement]
                                                                  ) [StatementSingle]
                                                                ) [StatementListMultiple]
                                                                StatementSingle(
                                                                  SingleDesignatorStatement(
                                                                    DesignatorStmtAssign(
                                                                      DesignatorStmtAssignCorrect(
                                                                        IdentDesignator(
                                                                         a
                                                                        ) [IdentDesignator]
                                                                        SingleTermExprPositive(
                                                                          SingleFactorTerm(
                                                                            NumConstFactor(
                                                                             2
                                                                            ) [NumConstFactor]
                                                                          ) [SingleFactorTerm]
                                                                        ) [SingleTermExprPositive]
                                                                      ) [DesignatorStmtAssignCorrect]
                                                                    ) [DesignatorStmtAssign]
                                                                  ) [SingleDesignatorStatement]
                                                                ) [StatementSingle]
                                                              ) [StatementListMultiple]
                                                              StatementSingle(
                                                                SingleDesignatorStatement(
                                                                  DesignatorStmtAssign(
                                                                    DesignatorStmtAssignCorrect(
                                                                      IdentDesignator(
                                                                       niz
                                                                      ) [IdentDesignator]
                                                                      SingleTermExprPositive(
                                                                        SingleFactorTerm(
                                                                          NewTypeArrayFactor(
                                                                            Type(
                                                                             int
                                                                            ) [Type]
                                                                            SingleTermExprPositive(
                                                                              SingleFactorTerm(
                                                                                NumConstFactor(
                                                                                 3
                                                                                ) [NumConstFactor]
                                                                              ) [SingleFactorTerm]
                                                                            ) [SingleTermExprPositive]
                                                                          ) [NewTypeArrayFactor]
                                                                        ) [SingleFactorTerm]
                                                                      ) [SingleTermExprPositive]
                                                                    ) [DesignatorStmtAssignCorrect]
                                                                  ) [DesignatorStmtAssign]
                                                                ) [SingleDesignatorStatement]
                                                              ) [StatementSingle]
                                                            ) [StatementListMultiple]
                                                            StatementSingle(
                                                              SingleDesignatorStatement(
                                                                DesignatorStmtAssign(
                                                                  DesignatorStmtAssignCorrect(
                                                                    IdentArrayDesignator(
                                                                     niz
                                                                      SingleTermExprPositive(
                                                                        SingleFactorTerm(
                                                                          NumConstFactor(
                                                                           0
                                                                          ) [NumConstFactor]
                                                                        ) [SingleFactorTerm]
                                                                      ) [SingleTermExprPositive]
                                                                    ) [IdentArrayDesignator]
                                                                    SingleTermExprPositive(
                                                                      MultiFactorTerm(
                                                                        SingleFactorTerm(
                                                                          NumConstFactor(
                                                                           1
                                                                          ) [NumConstFactor]
                                                                        ) [SingleFactorTerm]
                                                                        MulopMul(
                                                                        ) [MulopMul]
                                                                        DesignatorEmptyFactor(
                                                                          IdentDesignator(
                                                                           a
                                                                          ) [IdentDesignator]
                                                                        ) [DesignatorEmptyFactor]
                                                                      ) [MultiFactorTerm]
                                                                    ) [SingleTermExprPositive]
                                                                  ) [DesignatorStmtAssignCorrect]
                                                                ) [DesignatorStmtAssign]
                                                              ) [SingleDesignatorStatement]
                                                            ) [StatementSingle]
                                                          ) [StatementListMultiple]
                                                          StatementSingle(
                                                            SingleDesignatorStatement(
                                                              DesignatorStmtAssign(
                                                                DesignatorStmtAssignCorrect(
                                                                  IdentArrayDesignator(
                                                                   niz
                                                                    SingleTermExprPositive(
                                                                      SingleFactorTerm(
                                                                        NumConstFactor(
                                                                         1
                                                                        ) [NumConstFactor]
                                                                      ) [SingleFactorTerm]
                                                                    ) [SingleTermExprPositive]
                                                                  ) [IdentArrayDesignator]
                                                                  SingleTermExprPositive(
                                                                    MultiFactorTerm(
                                                                      SingleFactorTerm(
                                                                        NumConstFactor(
                                                                         2
                                                                        ) [NumConstFactor]
                                                                      ) [SingleFactorTerm]
                                                                      MulopMul(
                                                                      ) [MulopMul]
                                                                      DesignatorEmptyFactor(
                                                                        IdentDesignator(
                                                                         a
                                                                        ) [IdentDesignator]
                                                                      ) [DesignatorEmptyFactor]
                                                                    ) [MultiFactorTerm]
                                                                  ) [SingleTermExprPositive]
                                                                ) [DesignatorStmtAssignCorrect]
                                                              ) [DesignatorStmtAssign]
                                                            ) [SingleDesignatorStatement]
                                                          ) [StatementSingle]
                                                        ) [StatementListMultiple]
                                                        StatementSingle(
                                                          SingleDesignatorStatement(
                                                            DesignatorStmtAssign(
                                                              DesignatorStmtAssignCorrect(
                                                                IdentArrayDesignator(
                                                                 niz
                                                                  SingleTermExprPositive(
                                                                    SingleFactorTerm(
                                                                      NumConstFactor(
                                                                       2
                                                                      ) [NumConstFactor]
                                                                    ) [SingleFactorTerm]
                                                                  ) [SingleTermExprPositive]
                                                                ) [IdentArrayDesignator]
                                                                MultiTermExpr(
                                                                  SingleTermExprPositive(
                                                                    MultiFactorTerm(
                                                                      SingleFactorTerm(
                                                                        MethodCallFactor(
                                                                          MethodCall(
                                                                            IdentDesignator(
                                                                             sum
                                                                            ) [IdentDesignator]
                                                                            ActParsLeftParen(
                                                                            ) [ActParsLeftParen]
                                                                            ActParsYes(
                                                                              ActParsMultiExpr(
                                                                                ActParsSingleExpr(
                                                                                  SingleTermExprPositive(
                                                                                    SingleFactorTerm(
                                                                                      DesignatorEmptyFactor(
                                                                                        IdentArrayDesignator(
                                                                                         niz
                                                                                          SingleTermExprPositive(
                                                                                            SingleFactorTerm(
                                                                                              NumConstFactor(
                                                                                               1
                                                                                              ) [NumConstFactor]
                                                                                            ) [SingleFactorTerm]
                                                                                          ) [SingleTermExprPositive]
                                                                                        ) [IdentArrayDesignator]
                                                                                      ) [DesignatorEmptyFactor]
                                                                                    ) [SingleFactorTerm]
                                                                                  ) [SingleTermExprPositive]
                                                                                ) [ActParsSingleExpr]
                                                                                SingleTermExprPositive(
                                                                                  SingleFactorTerm(
                                                                                    DesignatorEmptyFactor(
                                                                                      IdentArrayDesignator(
                                                                                       niz
                                                                                        SingleTermExprPositive(
                                                                                          SingleFactorTerm(
                                                                                            NumConstFactor(
                                                                                             0
                                                                                            ) [NumConstFactor]
                                                                                          ) [SingleFactorTerm]
                                                                                        ) [SingleTermExprPositive]
                                                                                      ) [IdentArrayDesignator]
                                                                                    ) [DesignatorEmptyFactor]
                                                                                  ) [SingleFactorTerm]
                                                                                ) [SingleTermExprPositive]
                                                                              ) [ActParsMultiExpr]
                                                                            ) [ActParsYes]
                                                                            ActParsRightParen(
                                                                            ) [ActParsRightParen]
                                                                          ) [MethodCall]
                                                                        ) [MethodCallFactor]
                                                                      ) [SingleFactorTerm]
                                                                      MulopMul(
                                                                      ) [MulopMul]
                                                                      DesignatorEmptyFactor(
                                                                        IdentDesignator(
                                                                         a
                                                                        ) [IdentDesignator]
                                                                      ) [DesignatorEmptyFactor]
                                                                    ) [MultiFactorTerm]
                                                                  ) [SingleTermExprPositive]
                                                                  AddopPlus(
                                                                  ) [AddopPlus]
                                                                  SingleFactorTerm(
                                                                    NumConstFactor(
                                                                     1
                                                                    ) [NumConstFactor]
                                                                  ) [SingleFactorTerm]
                                                                ) [MultiTermExpr]
                                                              ) [DesignatorStmtAssignCorrect]
                                                            ) [DesignatorStmtAssign]
                                                          ) [SingleDesignatorStatement]
                                                        ) [StatementSingle]
                                                      ) [StatementListMultiple]
                                                      StatementSingle(
                                                        IfElseStatement(
                                                          IfConditionMultiTerm(
                                                            ConditionSingleTerm(
                                                              CondSingleFactTerm(
                                                                CondSingleExprFact(
                                                                  SingleTermExprPositive(
                                                                    SingleFactorTerm(
                                                                      MethodCallFactor(
                                                                        MethodCall(
                                                                          IdentDesignator(
                                                                           verify
                                                                          ) [IdentDesignator]
                                                                          ActParsLeftParen(
                                                                          ) [ActParsLeftParen]
                                                                          ActParsNo(
                                                                          ) [ActParsNo]
                                                                          ActParsRightParen(
                                                                          ) [ActParsRightParen]
                                                                        ) [MethodCall]
                                                                      ) [MethodCallFactor]
                                                                    ) [SingleFactorTerm]
                                                                  ) [SingleTermExprPositive]
                                                                ) [CondSingleExprFact]
                                                              ) [CondSingleFactTerm]
                                                            ) [ConditionSingleTerm]
                                                            CondSingleFactTerm(
                                                              CondMultiExprFact(
                                                                CondSingleExprFact(
                                                                  SingleTermExprPositive(
                                                                    SingleFactorTerm(
                                                                      DesignatorEmptyFactor(
                                                                        IdentArrayDesignator(
                                                                         niz
                                                                          SingleTermExprPositive(
                                                                            SingleFactorTerm(
                                                                              NumConstFactor(
                                                                               2
                                                                              ) [NumConstFactor]
                                                                            ) [SingleFactorTerm]
                                                                          ) [SingleTermExprPositive]
                                                                        ) [IdentArrayDesignator]
                                                                      ) [DesignatorEmptyFactor]
                                                                    ) [SingleFactorTerm]
                                                                  ) [SingleTermExprPositive]
                                                                ) [CondSingleExprFact]
                                                                RelopEQUAL(
                                                                ) [RelopEQUAL]
                                                                SingleTermExprPositive(
                                                                  SingleFactorTerm(
                                                                    NumConstFactor(
                                                                     4
                                                                    ) [NumConstFactor]
                                                                  ) [SingleFactorTerm]
                                                                ) [SingleTermExprPositive]
                                                              ) [CondMultiExprFact]
                                                            ) [CondSingleFactTerm]
                                                          ) [IfConditionMultiTerm]
                                                          StatementSingle(
                                                            SinglePrintStatement(
                                                              SingleTermExprPositive(
                                                                SingleFactorTerm(
                                                                  MethodCallFactor(
                                                                    MethodCall(
                                                                      IdentDesignator(
                                                                       ord
                                                                      ) [IdentDesignator]
                                                                      ActParsLeftParen(
                                                                      ) [ActParsLeftParen]
                                                                      ActParsYes(
                                                                        ActParsSingleExpr(
                                                                          SingleTermExprPositive(
                                                                            SingleFactorTerm(
                                                                              CharConstFactor(
                                                                               A
                                                                              ) [CharConstFactor]
                                                                            ) [SingleFactorTerm]
                                                                          ) [SingleTermExprPositive]
                                                                        ) [ActParsSingleExpr]
                                                                      ) [ActParsYes]
                                                                      ActParsRightParen(
                                                                      ) [ActParsRightParen]
                                                                    ) [MethodCall]
                                                                  ) [MethodCallFactor]
                                                                ) [SingleFactorTerm]
                                                              ) [SingleTermExprPositive]
                                                              NumConstNo(
                                                              ) [NumConstNo]
                                                            ) [SinglePrintStatement]
                                                          ) [StatementSingle]
                                                          StatementSingle(
                                                            SinglePrintStatement(
                                                              SingleTermExprPositive(
                                                                SingleFactorTerm(
                                                                  MethodCallFactor(
                                                                    MethodCall(
                                                                      IdentDesignator(
                                                                       ord
                                                                      ) [IdentDesignator]
                                                                      ActParsLeftParen(
                                                                      ) [ActParsLeftParen]
                                                                      ActParsYes(
                                                                        ActParsSingleExpr(
                                                                          SingleTermExprPositive(
                                                                            SingleFactorTerm(
                                                                              CharConstFactor(
                                                                               a
                                                                              ) [CharConstFactor]
                                                                            ) [SingleFactorTerm]
                                                                          ) [SingleTermExprPositive]
                                                                        ) [ActParsSingleExpr]
                                                                      ) [ActParsYes]
                                                                      ActParsRightParen(
                                                                      ) [ActParsRightParen]
                                                                    ) [MethodCall]
                                                                  ) [MethodCallFactor]
                                                                ) [SingleFactorTerm]
                                                              ) [SingleTermExprPositive]
                                                              NumConstNo(
                                                              ) [NumConstNo]
                                                            ) [SinglePrintStatement]
                                                          ) [StatementSingle]
                                                        ) [IfElseStatement]
                                                      ) [StatementSingle]
                                                    ) [StatementListMultiple]
                                                    StatementSingle(
                                                      SinglePrintStatement(
                                                        SingleTermExprPositive(
                                                          SingleFactorTerm(
                                                            DesignatorEmptyFactor(
                                                              IdentDesignator(
                                                               eol
                                                              ) [IdentDesignator]
                                                            ) [DesignatorEmptyFactor]
                                                          ) [SingleFactorTerm]
                                                        ) [SingleTermExprPositive]
                                                        NumConstNo(
                                                        ) [NumConstNo]
                                                      ) [SinglePrintStatement]
                                                    ) [StatementSingle]
                                                  ) [StatementListMultiple]
                                                  StatementSingle(
                                                    SingleDesignatorStatement(
                                                      DesignatorStmtAssign(
                                                        DesignatorStmtAssignCorrect(
                                                          IdentDesignator(
                                                           i
                                                          ) [IdentDesignator]
                                                          SingleTermExprPositive(
                                                            SingleFactorTerm(
                                                              NumConstFactor(
                                                               0
                                                              ) [NumConstFactor]
                                                            ) [SingleFactorTerm]
                                                          ) [SingleTermExprPositive]
                                                        ) [DesignatorStmtAssignCorrect]
                                                      ) [DesignatorStmtAssign]
                                                    ) [SingleDesignatorStatement]
                                                  ) [StatementSingle]
                                                ) [StatementListMultiple]
                                                StatementSingle(
                                                  DoWhileStatement(
                                                    DoEnter(
                                                    ) [DoEnter]
                                                    StatementListMultiple(
                                                      StatementListNo(
                                                      ) [StatementListNo]
                                                      StatementMultiple(
                                                        StatementsInBraces(
                                                          StatementListMultiple(
                                                            StatementListMultiple(
                                                              StatementListMultiple(
                                                                StatementListNo(
                                                                ) [StatementListNo]
                                                                StatementSingle(
                                                                  IfStatement(
                                                                    IfConditionSingleTerm(
                                                                      CondSingleFactTerm(
                                                                        CondMultiExprFact(
                                                                          CondSingleExprFact(
                                                                            SingleTermExprPositive(
                                                                              SingleFactorTerm(
                                                                                DesignatorEmptyFactor(
                                                                                  IdentDesignator(
                                                                                   i
                                                                                  ) [IdentDesignator]
                                                                                ) [DesignatorEmptyFactor]
                                                                              ) [SingleFactorTerm]
                                                                            ) [SingleTermExprPositive]
                                                                          ) [CondSingleExprFact]
                                                                          RelopEQUAL(
                                                                          ) [RelopEQUAL]
                                                                          SingleTermExprPositive(
                                                                            SingleFactorTerm(
                                                                              NumConstFactor(
                                                                               3
                                                                              ) [NumConstFactor]
                                                                            ) [SingleFactorTerm]
                                                                          ) [SingleTermExprPositive]
                                                                        ) [CondMultiExprFact]
                                                                      ) [CondSingleFactTerm]
                                                                    ) [IfConditionSingleTerm]
                                                                    StatementMultiple(
                                                                      StatementsInBraces(
                                                                        StatementListMultiple(
                                                                          StatementListMultiple(
                                                                            StatementListNo(
                                                                            ) [StatementListNo]
                                                                            StatementSingle(
                                                                              SingleDesignatorStatement(
                                                                                DesignatorStmtPlusPlus(
                                                                                  IdentDesignator(
                                                                                   i
                                                                                  ) [IdentDesignator]
                                                                                ) [DesignatorStmtPlusPlus]
                                                                              ) [SingleDesignatorStatement]
                                                                            ) [StatementSingle]
                                                                          ) [StatementListMultiple]
                                                                          StatementSingle(
                                                                            SingleContinueStatement(
                                                                            ) [SingleContinueStatement]
                                                                          ) [StatementSingle]
                                                                        ) [StatementListMultiple]
                                                                      ) [StatementsInBraces]
                                                                    ) [StatementMultiple]
                                                                  ) [IfStatement]
                                                                ) [StatementSingle]
                                                              ) [StatementListMultiple]
                                                              StatementSingle(
                                                                IfStatement(
                                                                  IfConditionSingleTerm(
                                                                    CondSingleFactTerm(
                                                                      CondMultiExprFact(
                                                                        CondSingleExprFact(
                                                                          SingleTermExprPositive(
                                                                            SingleFactorTerm(
                                                                              DesignatorEmptyFactor(
                                                                                IdentDesignator(
                                                                                 i
                                                                                ) [IdentDesignator]
                                                                              ) [DesignatorEmptyFactor]
                                                                            ) [SingleFactorTerm]
                                                                          ) [SingleTermExprPositive]
                                                                        ) [CondSingleExprFact]
                                                                        RelopEQUAL(
                                                                        ) [RelopEQUAL]
                                                                        SingleTermExprPositive(
                                                                          SingleFactorTerm(
                                                                            NumConstFactor(
                                                                             4
                                                                            ) [NumConstFactor]
                                                                          ) [SingleFactorTerm]
                                                                        ) [SingleTermExprPositive]
                                                                      ) [CondMultiExprFact]
                                                                    ) [CondSingleFactTerm]
                                                                  ) [IfConditionSingleTerm]
                                                                  StatementSingle(
                                                                    SingleBreakStatement(
                                                                    ) [SingleBreakStatement]
                                                                  ) [StatementSingle]
                                                                ) [IfStatement]
                                                              ) [StatementSingle]
                                                            ) [StatementListMultiple]
                                                            StatementSingle(
                                                              SingleDesignatorStatement(
                                                                DesignatorStmtAssign(
                                                                  DesignatorStmtAssignCorrect(
                                                                    IdentDesignator(
                                                                     i
                                                                    ) [IdentDesignator]
                                                                    SingleTermExprPositive(
                                                                      SingleFactorTerm(
                                                                        MethodCallFactor(
                                                                          MethodCall(
                                                                            IdentDesignator(
                                                                             inkrement
                                                                            ) [IdentDesignator]
                                                                            ActParsLeftParen(
                                                                            ) [ActParsLeftParen]
                                                                            ActParsYes(
                                                                              ActParsMultiExpr(
                                                                                ActParsSingleExpr(
                                                                                  SingleTermExprPositive(
                                                                                    SingleFactorTerm(
                                                                                      DesignatorEmptyFactor(
                                                                                        IdentDesignator(
                                                                                         i
                                                                                        ) [IdentDesignator]
                                                                                      ) [DesignatorEmptyFactor]
                                                                                    ) [SingleFactorTerm]
                                                                                  ) [SingleTermExprPositive]
                                                                                ) [ActParsSingleExpr]
                                                                                SingleTermExprPositive(
                                                                                  SingleFactorTerm(
                                                                                    NumConstFactor(
                                                                                     1
                                                                                    ) [NumConstFactor]
                                                                                  ) [SingleFactorTerm]
                                                                                ) [SingleTermExprPositive]
                                                                              ) [ActParsMultiExpr]
                                                                            ) [ActParsYes]
                                                                            ActParsRightParen(
                                                                            ) [ActParsRightParen]
                                                                          ) [MethodCall]
                                                                        ) [MethodCallFactor]
                                                                      ) [SingleFactorTerm]
                                                                    ) [SingleTermExprPositive]
                                                                  ) [DesignatorStmtAssignCorrect]
                                                                ) [DesignatorStmtAssign]
                                                              ) [SingleDesignatorStatement]
                                                            ) [StatementSingle]
                                                          ) [StatementListMultiple]
                                                        ) [StatementsInBraces]
                                                      ) [StatementMultiple]
                                                    ) [StatementListMultiple]
                                                    ConditionSingleTerm(
                                                      CondSingleFactTerm(
                                                        CondMultiExprFact(
                                                          CondSingleExprFact(
                                                            SingleTermExprPositive(
                                                              SingleFactorTerm(
                                                                DesignatorEmptyFactor(
                                                                  IdentDesignator(
                                                                   i
                                                                  ) [IdentDesignator]
                                                                ) [DesignatorEmptyFactor]
                                                              ) [SingleFactorTerm]
                                                            ) [SingleTermExprPositive]
                                                          ) [CondSingleExprFact]
                                                          RelopLS(
                                                          ) [RelopLS]
                                                          SingleTermExprPositive(
                                                            SingleFactorTerm(
                                                              NumConstFactor(
                                                               10
                                                              ) [NumConstFactor]
                                                            ) [SingleFactorTerm]
                                                          ) [SingleTermExprPositive]
                                                        ) [CondMultiExprFact]
                                                      ) [CondSingleFactTerm]
                                                    ) [ConditionSingleTerm]
                                                  ) [DoWhileStatement]
                                                ) [StatementSingle]
                                              ) [StatementListMultiple]
                                              StatementSingle(
                                                IfElseStatement(
                                                  IfConditionSingleTerm(
                                                    CondMultiFactTerm(
                                                      CondSingleFactTerm(
                                                        CondMultiExprFact(
                                                          CondSingleExprFact(
                                                            SingleTermExprPositive(
                                                              SingleFactorTerm(
                                                                DesignatorEmptyFactor(
                                                                  IdentDesignator(
                                                                   i
                                                                  ) [IdentDesignator]
                                                                ) [DesignatorEmptyFactor]
                                                              ) [SingleFactorTerm]
                                                            ) [SingleTermExprPositive]
                                                          ) [CondSingleExprFact]
                                                          RelopEQUAL(
                                                          ) [RelopEQUAL]
                                                          SingleTermExprPositive(
                                                            SingleFactorTerm(
                                                              NumConstFactor(
                                                               3
                                                              ) [NumConstFactor]
                                                            ) [SingleFactorTerm]
                                                          ) [SingleTermExprPositive]
                                                        ) [CondMultiExprFact]
                                                      ) [CondSingleFactTerm]
                                                      CondSingleExprFact(
                                                        SingleTermExprPositive(
                                                          SingleFactorTerm(
                                                            MethodCallFactor(
                                                              MethodCall(
                                                                IdentDesignator(
                                                                 verify
                                                                ) [IdentDesignator]
                                                                ActParsLeftParen(
                                                                ) [ActParsLeftParen]
                                                                ActParsNo(
                                                                ) [ActParsNo]
                                                                ActParsRightParen(
                                                                ) [ActParsRightParen]
                                                              ) [MethodCall]
                                                            ) [MethodCallFactor]
                                                          ) [SingleFactorTerm]
                                                        ) [SingleTermExprPositive]
                                                      ) [CondSingleExprFact]
                                                    ) [CondMultiFactTerm]
                                                  ) [IfConditionSingleTerm]
                                                  StatementSingle(
                                                    SinglePrintStatement(
                                                      SingleTermExprNegative(
                                                        SingleFactorTerm(
                                                          NumConstFactor(
                                                           4
                                                          ) [NumConstFactor]
                                                        ) [SingleFactorTerm]
                                                      ) [SingleTermExprNegative]
                                                      NumConstNo(
                                                      ) [NumConstNo]
                                                    ) [SinglePrintStatement]
                                                  ) [StatementSingle]
                                                  StatementSingle(
                                                    SinglePrintStatement(
                                                      SingleTermExprPositive(
                                                        SingleFactorTerm(
                                                          NumConstFactor(
                                                           4
                                                          ) [NumConstFactor]
                                                        ) [SingleFactorTerm]
                                                      ) [SingleTermExprPositive]
                                                      NumConstNo(
                                                      ) [NumConstNo]
                                                    ) [SinglePrintStatement]
                                                  ) [StatementSingle]
                                                ) [IfElseStatement]
                                              ) [StatementSingle]
                                            ) [StatementListMultiple]
                                            StatementSingle(
                                              SingleReadStatement(
                                                IdentArrayDesignator(
                                                 niz
                                                  SingleTermExprPositive(
                                                    SingleFactorTerm(
                                                      NumConstFactor(
                                                       0
                                                      ) [NumConstFactor]
                                                    ) [SingleFactorTerm]
                                                  ) [SingleTermExprPositive]
                                                ) [IdentArrayDesignator]
                                              ) [SingleReadStatement]
                                            ) [StatementSingle]
                                          ) [StatementListMultiple]
                                          StatementSingle(
                                            SingleReadStatement(
                                              IdentArrayDesignator(
                                               niz
                                                SingleTermExprPositive(
                                                  SingleFactorTerm(
                                                    NumConstFactor(
                                                     1
                                                    ) [NumConstFactor]
                                                  ) [SingleFactorTerm]
                                                ) [SingleTermExprPositive]
                                              ) [IdentArrayDesignator]
                                            ) [SingleReadStatement]
                                          ) [StatementSingle]
                                        ) [StatementListMultiple]
                                        StatementSingle(
                                          SingleReadStatement(
                                            IdentArrayDesignator(
                                             niz
                                              SingleTermExprPositive(
                                                SingleFactorTerm(
                                                  NumConstFactor(
                                                   2
                                                  ) [NumConstFactor]
                                                ) [SingleFactorTerm]
                                              ) [SingleTermExprPositive]
                                            ) [IdentArrayDesignator]
                                          ) [SingleReadStatement]
                                        ) [StatementSingle]
                                      ) [StatementListMultiple]
                                      StatementSingle(
                                        SinglePrintStatement(
                                          SingleTermExprPositive(
                                            SingleFactorTerm(
                                              DesignatorEmptyFactor(
                                                IdentDesignator(
                                                 eol
                                                ) [IdentDesignator]
                                              ) [DesignatorEmptyFactor]
                                            ) [SingleFactorTerm]
                                          ) [SingleTermExprPositive]
                                          NumConstNo(
                                          ) [NumConstNo]
                                        ) [SinglePrintStatement]
                                      ) [StatementSingle]
                                    ) [StatementListMultiple]
                                    StatementSingle(
                                      SinglePrintStatement(
                                        SingleTermExprPositive(
                                          SingleFactorTerm(
                                            MethodCallFactor(
                                              MethodCall(
                                                IdentDesignator(
                                                 sum
                                                ) [IdentDesignator]
                                                ActParsLeftParen(
                                                ) [ActParsLeftParen]
                                                ActParsYes(
                                                  ActParsMultiExpr(
                                                    ActParsSingleExpr(
                                                      SingleTermExprPositive(
                                                        SingleFactorTerm(
                                                          MethodCallFactor(
                                                            MethodCall(
                                                              IdentDesignator(
                                                               sum
                                                              ) [IdentDesignator]
                                                              ActParsLeftParen(
                                                              ) [ActParsLeftParen]
                                                              ActParsYes(
                                                                ActParsMultiExpr(
                                                                  ActParsSingleExpr(
                                                                    SingleTermExprPositive(
                                                                      SingleFactorTerm(
                                                                        DesignatorEmptyFactor(
                                                                          IdentArrayDesignator(
                                                                           niz
                                                                            SingleTermExprPositive(
                                                                              SingleFactorTerm(
                                                                                NumConstFactor(
                                                                                 0
                                                                                ) [NumConstFactor]
                                                                              ) [SingleFactorTerm]
                                                                            ) [SingleTermExprPositive]
                                                                          ) [IdentArrayDesignator]
                                                                        ) [DesignatorEmptyFactor]
                                                                      ) [SingleFactorTerm]
                                                                    ) [SingleTermExprPositive]
                                                                  ) [ActParsSingleExpr]
                                                                  SingleTermExprPositive(
                                                                    SingleFactorTerm(
                                                                      DesignatorEmptyFactor(
                                                                        IdentArrayDesignator(
                                                                         niz
                                                                          SingleTermExprPositive(
                                                                            SingleFactorTerm(
                                                                              NumConstFactor(
                                                                               1
                                                                              ) [NumConstFactor]
                                                                            ) [SingleFactorTerm]
                                                                          ) [SingleTermExprPositive]
                                                                        ) [IdentArrayDesignator]
                                                                      ) [DesignatorEmptyFactor]
                                                                    ) [SingleFactorTerm]
                                                                  ) [SingleTermExprPositive]
                                                                ) [ActParsMultiExpr]
                                                              ) [ActParsYes]
                                                              ActParsRightParen(
                                                              ) [ActParsRightParen]
                                                            ) [MethodCall]
                                                          ) [MethodCallFactor]
                                                        ) [SingleFactorTerm]
                                                      ) [SingleTermExprPositive]
                                                    ) [ActParsSingleExpr]
                                                    SingleTermExprPositive(
                                                      SingleFactorTerm(
                                                        DesignatorEmptyFactor(
                                                          IdentArrayDesignator(
                                                           niz
                                                            SingleTermExprPositive(
                                                              SingleFactorTerm(
                                                                NumConstFactor(
                                                                 2
                                                                ) [NumConstFactor]
                                                              ) [SingleFactorTerm]
                                                            ) [SingleTermExprPositive]
                                                          ) [IdentArrayDesignator]
                                                        ) [DesignatorEmptyFactor]
                                                      ) [SingleFactorTerm]
                                                    ) [SingleTermExprPositive]
                                                  ) [ActParsMultiExpr]
                                                ) [ActParsYes]
                                                ActParsRightParen(
                                                ) [ActParsRightParen]
                                              ) [MethodCall]
                                            ) [MethodCallFactor]
                                          ) [SingleFactorTerm]
                                        ) [SingleTermExprPositive]
                                        NumConstNo(
                                        ) [NumConstNo]
                                      ) [SinglePrintStatement]
                                    ) [StatementSingle]
                                  ) [StatementListMultiple]
                                  StatementSingle(
                                    SinglePrintStatement(
                                      SingleTermExprPositive(
                                        SingleFactorTerm(
                                          DesignatorEmptyFactor(
                                            IdentDesignator(
                                             eol
                                            ) [IdentDesignator]
                                          ) [DesignatorEmptyFactor]
                                        ) [SingleFactorTerm]
                                      ) [SingleTermExprPositive]
                                      NumConstNo(
                                      ) [NumConstNo]
                                    ) [SinglePrintStatement]
                                  ) [StatementSingle]
                                ) [StatementListMultiple]
                                StatementSingle(
                                  SinglePrintStatement(
                                    SingleTermExprPositive(
                                      SingleFactorTerm(
                                        MethodCallFactor(
                                          MethodCall(
                                            IdentDesignator(
                                             inkrement
                                            ) [IdentDesignator]
                                            ActParsLeftParen(
                                            ) [ActParsLeftParen]
                                            ActParsYes(
                                              ActParsMultiExpr(
                                                ActParsSingleExpr(
                                                  SingleTermExprPositive(
                                                    SingleFactorTerm(
                                                      DesignatorEmptyFactor(
                                                        IdentArrayDesignator(
                                                         niz
                                                          SingleTermExprPositive(
                                                            SingleFactorTerm(
                                                              NumConstFactor(
                                                               2
                                                              ) [NumConstFactor]
                                                            ) [SingleFactorTerm]
                                                          ) [SingleTermExprPositive]
                                                        ) [IdentArrayDesignator]
                                                      ) [DesignatorEmptyFactor]
                                                    ) [SingleFactorTerm]
                                                  ) [SingleTermExprPositive]
                                                ) [ActParsSingleExpr]
                                                SingleTermExprPositive(
                                                  SingleFactorTerm(
                                                    NumConstFactor(
                                                     2
                                                    ) [NumConstFactor]
                                                  ) [SingleFactorTerm]
                                                ) [SingleTermExprPositive]
                                              ) [ActParsMultiExpr]
                                            ) [ActParsYes]
                                            ActParsRightParen(
                                            ) [ActParsRightParen]
                                          ) [MethodCall]
                                        ) [MethodCallFactor]
                                      ) [SingleFactorTerm]
                                    ) [SingleTermExprPositive]
                                    NumConstNo(
                                    ) [NumConstNo]
                                  ) [SinglePrintStatement]
                                ) [StatementSingle]
                              ) [StatementListMultiple]
                              StatementSingle(
                                SingleDesignatorStatement(
                                  DesignatorStmtAssign(
                                    DesignatorStmtAssignCorrect(
                                      IdentDesignator(
                                       a
                                      ) [IdentDesignator]
                                      SingleTermExprPositive(
                                        SingleFactorTerm(
                                          NumConstFactor(
                                           3
                                          ) [NumConstFactor]
                                        ) [SingleFactorTerm]
                                      ) [SingleTermExprPositive]
                                    ) [DesignatorStmtAssignCorrect]
                                  ) [DesignatorStmtAssign]
                                ) [SingleDesignatorStatement]
                              ) [StatementSingle]
                            ) [StatementListMultiple]
                            StatementSingle(
                              SingleDesignatorStatement(
                                DesignatorStmtAssign(
                                  DesignatorStmtAssignCorrect(
                                    IdentDesignator(
                                     i
                                    ) [IdentDesignator]
                                    SingleTermExprPositive(
                                      SingleFactorTerm(
                                        NumConstFactor(
                                         0
                                        ) [NumConstFactor]
                                      ) [SingleFactorTerm]
                                    ) [SingleTermExprPositive]
                                  ) [DesignatorStmtAssignCorrect]
                                ) [DesignatorStmtAssign]
                              ) [SingleDesignatorStatement]
                            ) [StatementSingle]
                          ) [StatementListMultiple]
                          StatementSingle(
                            DoWhileStatement(
                              DoEnter(
                              ) [DoEnter]
                              StatementListMultiple(
                                StatementListNo(
                                ) [StatementListNo]
                                StatementMultiple(
                                  StatementsInBraces(
                                    StatementListMultiple(
                                      StatementListMultiple(
                                        StatementListNo(
                                        ) [StatementListNo]
                                        StatementSingle(
                                          SingleDesignatorStatement(
                                            DesignatorStmtAssign(
                                              DesignatorStmtAssignCorrect(
                                                IdentArrayDesignator(
                                                 niz
                                                  SingleTermExprPositive(
                                                    SingleFactorTerm(
                                                      DesignatorEmptyFactor(
                                                        IdentDesignator(
                                                         i
                                                        ) [IdentDesignator]
                                                      ) [DesignatorEmptyFactor]
                                                    ) [SingleFactorTerm]
                                                  ) [SingleTermExprPositive]
                                                ) [IdentArrayDesignator]
                                                SingleTermExprPositive(
                                                  MultiFactorTerm(
                                                    MultiFactorTerm(
                                                      SingleFactorTerm(
                                                        DesignatorEmptyFactor(
                                                          IdentArrayDesignator(
                                                           niz
                                                            SingleTermExprPositive(
                                                              SingleFactorTerm(
                                                                DesignatorEmptyFactor(
                                                                  IdentDesignator(
                                                                   i
                                                                  ) [IdentDesignator]
                                                                ) [DesignatorEmptyFactor]
                                                              ) [SingleFactorTerm]
                                                            ) [SingleTermExprPositive]
                                                          ) [IdentArrayDesignator]
                                                        ) [DesignatorEmptyFactor]
                                                      ) [SingleFactorTerm]
                                                      MulopMul(
                                                      ) [MulopMul]
                                                      NumConstFactor(
                                                       2
                                                      ) [NumConstFactor]
                                                    ) [MultiFactorTerm]
                                                    MulopMul(
                                                    ) [MulopMul]
                                                    DesignatorEmptyFactor(
                                                      IdentDesignator(
                                                       a
                                                      ) [IdentDesignator]
                                                    ) [DesignatorEmptyFactor]
                                                  ) [MultiFactorTerm]
                                                ) [SingleTermExprPositive]
                                              ) [DesignatorStmtAssignCorrect]
                                            ) [DesignatorStmtAssign]
                                          ) [SingleDesignatorStatement]
                                        ) [StatementSingle]
                                      ) [StatementListMultiple]
                                      StatementSingle(
                                        SingleDesignatorStatement(
                                          DesignatorStmtPlusPlus(
                                            IdentDesignator(
                                             i
                                            ) [IdentDesignator]
                                          ) [DesignatorStmtPlusPlus]
                                        ) [SingleDesignatorStatement]
                                      ) [StatementSingle]
                                    ) [StatementListMultiple]
                                  ) [StatementsInBraces]
                                ) [StatementMultiple]
                              ) [StatementListMultiple]
                              ConditionSingleTerm(
                                CondSingleFactTerm(
                                  CondMultiExprFact(
                                    CondSingleExprFact(
                                      SingleTermExprPositive(
                                        SingleFactorTerm(
                                          DesignatorEmptyFactor(
                                            IdentDesignator(
                                             i
                                            ) [IdentDesignator]
                                          ) [DesignatorEmptyFactor]
                                        ) [SingleFactorTerm]
                                      ) [SingleTermExprPositive]
                                    ) [CondSingleExprFact]
                                    RelopLS(
                                    ) [RelopLS]
                                    SingleTermExprPositive(
                                      SingleFactorTerm(
                                        NumConstFactor(
                                         3
                                        ) [NumConstFactor]
                                      ) [SingleFactorTerm]
                                    ) [SingleTermExprPositive]
                                  ) [CondMultiExprFact]
                                ) [CondSingleFactTerm]
                              ) [ConditionSingleTerm]
                            ) [DoWhileStatement]
                          ) [StatementSingle]
                        ) [StatementListMultiple]
                        StatementSingle(
                          SinglePrintStatement(
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                DesignatorEmptyFactor(
                                  IdentArrayDesignator(
                                   niz
                                    SingleTermExprPositive(
                                      SingleFactorTerm(
                                        NumConstFactor(
                                         0
                                        ) [NumConstFactor]
                                      ) [SingleFactorTerm]
                                    ) [SingleTermExprPositive]
                                  ) [IdentArrayDesignator]
                                ) [DesignatorEmptyFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                            NumConstNo(
                            ) [NumConstNo]
                          ) [SinglePrintStatement]
                        ) [StatementSingle]
                      ) [StatementListMultiple]
                      StatementSingle(
                        SinglePrintStatement(
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              DesignatorEmptyFactor(
                                IdentArrayDesignator(
                                 niz
                                  SingleTermExprPositive(
                                    SingleFactorTerm(
                                      NumConstFactor(
                                       1
                                      ) [NumConstFactor]
                                    ) [SingleFactorTerm]
                                  ) [SingleTermExprPositive]
                                ) [IdentArrayDesignator]
                              ) [DesignatorEmptyFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                          NumConstNo(
                          ) [NumConstNo]
                        ) [SinglePrintStatement]
                      ) [StatementSingle]
                    ) [StatementListMultiple]
                    StatementSingle(
                      SinglePrintStatement(
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            DesignatorEmptyFactor(
                              IdentArrayDesignator(
                               niz
                                SingleTermExprPositive(
                                  SingleFactorTerm(
                                    NumConstFactor(
                                     2
                                    ) [NumConstFactor]
                                  ) [SingleFactorTerm]
                                ) [SingleTermExprPositive]
                              ) [IdentArrayDesignator]
                            ) [DesignatorEmptyFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                        NumConstNo(
                        ) [NumConstNo]
                      ) [SinglePrintStatement]
                    ) [StatementSingle]
                  ) [StatementListMultiple]
                  StatementSingle(
                    SinglePrintStatement(
                      SingleTermExprPositive(
                        SingleFactorTerm(
                          DesignatorEmptyFactor(
                            IdentDesignator(
                             eol
                            ) [IdentDesignator]
                          ) [DesignatorEmptyFactor]
                        ) [SingleFactorTerm]
                      ) [SingleTermExprPositive]
                      NumConstNo(
                      ) [NumConstNo]
                    ) [SinglePrintStatement]
                  ) [StatementSingle]
                ) [StatementListMultiple]
                StatementSingle(
                  SingleDesignatorStatement(
                    DesignatorStmtAssign(
                      DesignatorStmtAssignCorrect(
                        IdentDesignator(
                         i
                        ) [IdentDesignator]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            NumConstFactor(
                             0
                            ) [NumConstFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [DesignatorStmtAssignCorrect]
                    ) [DesignatorStmtAssign]
                  ) [SingleDesignatorStatement]
                ) [StatementSingle]
              ) [StatementListMultiple]
              StatementSingle(
                SingleDesignatorStatement(
                  DesignatorStmtAssign(
                    DesignatorStmtAssignCorrect(
                      IdentDesignator(
                       niz2
                      ) [IdentDesignator]
                      SingleTermExprPositive(
                        SingleFactorTerm(
                          NumConstFactor(
                           0
                          ) [NumConstFactor]
                        ) [SingleFactorTerm]
                      ) [SingleTermExprPositive]
                    ) [DesignatorStmtAssignCorrect]
                  ) [DesignatorStmtAssign]
                ) [SingleDesignatorStatement]
              ) [StatementSingle]
            ) [StatementListMultiple]
            StatementSingle(
              DoWhileStatement(
                DoEnter(
                ) [DoEnter]
                StatementListMultiple(
                  StatementListNo(
                  ) [StatementListNo]
                  StatementMultiple(
                    StatementsInBraces(
                      StatementListMultiple(
                        StatementListMultiple(
                          StatementListNo(
                          ) [StatementListNo]
                          StatementSingle(
                            SingleDesignatorStatement(
                              DesignatorStmtAssign(
                                DesignatorStmtAssignCorrect(
                                  IdentDesignator(
                                   niz2
                                  ) [IdentDesignator]
                                  MultiTermExpr(
                                    SingleTermExprPositive(
                                      SingleFactorTerm(
                                        DesignatorEmptyFactor(
                                          IdentDesignator(
                                           niz2
                                          ) [IdentDesignator]
                                        ) [DesignatorEmptyFactor]
                                      ) [SingleFactorTerm]
                                    ) [SingleTermExprPositive]
                                    AddopPlus(
                                    ) [AddopPlus]
                                    MultiFactorTerm(
                                      SingleFactorTerm(
                                        DesignatorEmptyFactor(
                                          IdentArrayDesignator(
                                           niz
                                            SingleTermExprPositive(
                                              SingleFactorTerm(
                                                DesignatorEmptyFactor(
                                                  IdentDesignator(
                                                   i
                                                  ) [IdentDesignator]
                                                ) [DesignatorEmptyFactor]
                                              ) [SingleFactorTerm]
                                            ) [SingleTermExprPositive]
                                          ) [IdentArrayDesignator]
                                        ) [DesignatorEmptyFactor]
                                      ) [SingleFactorTerm]
                                      MulopMul(
                                      ) [MulopMul]
                                      DesignatorEmptyFactor(
                                        IdentArrayDesignator(
                                         niz
                                          SingleTermExprPositive(
                                            SingleFactorTerm(
                                              DesignatorEmptyFactor(
                                                IdentDesignator(
                                                 i
                                                ) [IdentDesignator]
                                              ) [DesignatorEmptyFactor]
                                            ) [SingleFactorTerm]
                                          ) [SingleTermExprPositive]
                                        ) [IdentArrayDesignator]
                                      ) [DesignatorEmptyFactor]
                                    ) [MultiFactorTerm]
                                  ) [MultiTermExpr]
                                ) [DesignatorStmtAssignCorrect]
                              ) [DesignatorStmtAssign]
                            ) [SingleDesignatorStatement]
                          ) [StatementSingle]
                        ) [StatementListMultiple]
                        StatementSingle(
                          SingleDesignatorStatement(
                            DesignatorStmtPlusPlus(
                              IdentDesignator(
                               i
                              ) [IdentDesignator]
                            ) [DesignatorStmtPlusPlus]
                          ) [SingleDesignatorStatement]
                        ) [StatementSingle]
                      ) [StatementListMultiple]
                    ) [StatementsInBraces]
                  ) [StatementMultiple]
                ) [StatementListMultiple]
                ConditionSingleTerm(
                  CondSingleFactTerm(
                    CondMultiExprFact(
                      CondSingleExprFact(
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            DesignatorEmptyFactor(
                              IdentDesignator(
                               i
                              ) [IdentDesignator]
                            ) [DesignatorEmptyFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [CondSingleExprFact]
                      RelopLS(
                      ) [RelopLS]
                      SingleTermExprPositive(
                        SingleFactorTerm(
                          NumConstFactor(
                           3
                          ) [NumConstFactor]
                        ) [SingleFactorTerm]
                      ) [SingleTermExprPositive]
                    ) [CondMultiExprFact]
                  ) [CondSingleFactTerm]
                ) [ConditionSingleTerm]
              ) [DoWhileStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
          StatementSingle(
            SinglePrintStatement(
              SingleTermExprPositive(
                SingleFactorTerm(
                  DesignatorEmptyFactor(
                    IdentDesignator(
                     niz2
                    ) [IdentDesignator]
                  ) [DesignatorEmptyFactor]
                ) [SingleFactorTerm]
              ) [SingleTermExprPositive]
              NumConstNo(
              ) [NumConstNo]
            ) [SinglePrintStatement]
          ) [StatementSingle]
        ) [StatementListMultiple]
        StatementSingle(
          SinglePrintStatement(
            SingleTermExprPositive(
              SingleFactorTerm(
                DesignatorEmptyFactor(
                  IdentDesignator(
                   eol
                  ) [IdentDesignator]
                ) [DesignatorEmptyFactor]
              ) [SingleFactorTerm]
            ) [SingleTermExprPositive]
            NumConstNo(
            ) [NumConstNo]
          ) [SinglePrintStatement]
        ) [StatementSingle]
      ) [StatementListMultiple]
    ) [MethodDeclaration]
  ) [MethodDeclListMultiple]
) [Program]
INFO  21:10:51,761 - ===================================
INFO  21:10:51,765 - Line 28: Method Call detected. Method name: sum
INFO  21:10:51,765 - Line 53: Access to array element detected. Array name: niz
INFO  21:10:51,765 - Line 54: Access to array element detected. Array name: niz
INFO  21:10:51,765 - Line 55: Access to array element detected. Array name: niz
INFO  21:10:51,765 - Line 55: Access to array element detected. Array name: niz
INFO  21:10:51,765 - Line 55: Access to array element detected. Array name: niz
INFO  21:10:51,765 - Line 55: Method Call detected. Method name: sum
INFO  21:10:51,765 - Line 56: Method Call detected. Method name: verify
INFO  21:10:51,765 - Line 56: Access to array element detected. Array name: niz
INFO  21:10:51,765 - Line 56: Method Call detected. Method name: ord
INFO  21:10:51,765 - Line 57: Method Call detected. Method name: ord
INFO  21:10:51,765 - Line 68: Method Call detected. Method name: inkrement
INFO  21:10:51,765 - Line 71: Method Call detected. Method name: verify
INFO  21:10:51,765 - Line 74: Access to array element detected. Array name: niz
INFO  21:10:51,765 - Line 75: Access to array element detected. Array name: niz
INFO  21:10:51,765 - Line 76: Access to array element detected. Array name: niz
INFO  21:10:51,765 - Line 79: Access to array element detected. Array name: niz
INFO  21:10:51,765 - Line 79: Access to array element detected. Array name: niz
INFO  21:10:51,765 - Line 79: Method Call detected. Method name: sum
INFO  21:10:51,765 - Line 79: Access to array element detected. Array name: niz
INFO  21:10:51,765 - Line 79: Method Call detected. Method name: sum
INFO  21:10:51,765 - Line 82: Access to array element detected. Array name: niz
INFO  21:10:51,765 - Line 82: Method Call detected. Method name: inkrement
INFO  21:10:51,765 - Line 87: Access to array element detected. Array name: niz
INFO  21:10:51,765 - Line 87: Access to array element detected. Array name: niz
INFO  21:10:51,765 - Line 90: Access to array element detected. Array name: niz
INFO  21:10:51,765 - Line 91: Access to array element detected. Array name: niz
INFO  21:10:51,765 - Line 92: Access to array element detected. Array name: niz
INFO  21:10:51,765 - Line 98: Access to array element detected. Array name: niz
INFO  21:10:51,765 - Line 98: Access to array element detected. Array name: niz
INFO  21:10:51,765 - Compile successful!
INFO  21:11:59,381 - Compiling source file: D:\source\repos\PP_Projekat\MicroJavaCompiler\test\program.mj
INFO  21:11:59,399 - #2 program
INFO  21:11:59,399 - #48 test302
INFO  21:11:59,399 - #7 const
INFO  21:11:59,399 - #48 int
INFO  21:11:59,399 - #48 jedan
INFO  21:11:59,400 - #27 =
INFO  21:11:59,400 - #51 1
INFO  21:11:59,400 - #38 ;
INFO  21:11:59,400 - #48 int
INFO  21:11:59,400 - #48 i
INFO  21:11:59,400 - #38 ;
INFO  21:11:59,400 - #48 bool
INFO  21:11:59,401 - #48 ibool
INFO  21:11:59,401 - #38 ;
INFO  21:11:59,401 - #48 int
INFO  21:11:59,401 - #48 niz2
INFO  21:11:59,401 - #38 ;
INFO  21:11:59,401 - #48 int
INFO  21:11:59,401 - #48 niz
INFO  21:11:59,401 - #42 [
INFO  21:11:59,401 - #43 ]
INFO  21:11:59,401 - #38 ;
INFO  21:11:59,401 - #48 int
INFO  21:11:59,401 - #48 a
INFO  21:11:59,401 - #38 ;
INFO  21:11:59,401 - #44 {
INFO  21:11:59,401 - #48 int
INFO  21:11:59,401 - #48 sum
INFO  21:11:59,402 - #40 (
INFO  21:11:59,402 - #48 int
INFO  21:11:59,402 - #47 .
ERROR 21:11:59,402 - 
Sintaksna greska na liniji 17
INFO  21:11:59,402 - #47 .
INFO  21:11:59,402 - #47 .
INFO  21:11:59,402 - #48 args
INFO  21:11:59,402 - #41 )
INFO  21:11:59,402 - #48 int
INFO  21:11:59,402 - #48 z
INFO  21:11:59,402 - #39 ,
ERROR 21:11:59,402 - Izvrsen oporovak prilikom greske u formalnom parametru do , ili ) u liniji 17
INFO  21:11:59,403 - #48 d
INFO  21:11:59,403 - #38 ;
INFO  21:11:59,403 - #44 {
INFO  21:11:59,404 - #48 z
INFO  21:11:59,404 - #27 =
INFO  21:11:59,404 - #48 args
INFO  21:11:59,404 - #42 [
INFO  21:11:59,404 - #51 0
INFO  21:11:59,404 - #43 ]
INFO  21:11:59,404 - #38 ;
INFO  21:11:59,404 - #48 d
INFO  21:11:59,404 - #27 =
INFO  21:11:59,404 - #48 args
INFO  21:11:59,404 - #42 [
INFO  21:11:59,404 - #51 1
INFO  21:11:59,404 - #43 ]
INFO  21:11:59,405 - #38 ;
INFO  21:11:59,405 - #15 return
INFO  21:11:59,405 - #48 z
INFO  21:11:59,405 - #22 +
INFO  21:11:59,405 - #48 d
INFO  21:11:59,405 - #38 ;
INFO  21:11:59,405 - #45 }
INFO  21:11:59,405 - #14 void
INFO  21:11:59,405 - #48 printArgs
INFO  21:11:59,405 - #40 (
INFO  21:11:59,405 - #48 int
INFO  21:11:59,405 - #48 num
INFO  21:11:59,406 - #39 ,
INFO  21:11:59,406 - #48 char
INFO  21:11:59,406 - #47 .
INFO  21:11:59,406 - #47 .
INFO  21:11:59,406 - #47 .
INFO  21:11:59,406 - #48 args
INFO  21:11:59,406 - #41 )
INFO  21:11:59,406 - #48 int
INFO  21:11:59,406 - #48 i
INFO  21:11:59,406 - #38 ;
INFO  21:11:59,406 - #44 {
INFO  21:11:59,406 - #48 i
INFO  21:11:59,406 - #27 =
INFO  21:11:59,406 - #51 0
INFO  21:11:59,406 - #38 ;
INFO  21:11:59,406 - #9 do
INFO  21:11:59,406 - #44 {
INFO  21:11:59,406 - #12 print
INFO  21:11:59,406 - #40 (
INFO  21:11:59,406 - #48 args
INFO  21:11:59,406 - #42 [
INFO  21:11:59,406 - #48 i
INFO  21:11:59,406 - #43 ]
INFO  21:11:59,406 - #41 )
INFO  21:11:59,407 - #38 ;
INFO  21:11:59,407 - #48 i
INFO  21:11:59,407 - #36 ++
INFO  21:11:59,407 - #38 ;
INFO  21:11:59,407 - #45 }
INFO  21:11:59,407 - #10 while
INFO  21:11:59,407 - #40 (
INFO  21:11:59,407 - #48 i
INFO  21:11:59,407 - #32 <
INFO  21:11:59,407 - #48 num
INFO  21:11:59,407 - #41 )
INFO  21:11:59,407 - #38 ;
INFO  21:11:59,408 - #45 }
INFO  21:11:59,408 - #48 int
INFO  21:11:59,408 - #48 inkrement
INFO  21:11:59,408 - #40 (
INFO  21:11:59,408 - #48 int
INFO  21:11:59,408 - #48 a
INFO  21:11:59,408 - #39 ,
INFO  21:11:59,408 - #48 int
INFO  21:11:59,408 - #48 inc
INFO  21:11:59,408 - #41 )
INFO  21:11:59,408 - #48 int
INFO  21:11:59,408 - #48 pom
INFO  21:11:59,408 - #38 ;
INFO  21:11:59,408 - #44 {
INFO  21:11:59,408 - #5 if
INFO  21:11:59,408 - #40 (
INFO  21:11:59,408 - #48 inc
INFO  21:11:59,408 - #28 ==
INFO  21:11:59,408 - #48 jedan
INFO  21:11:59,408 - #41 )
INFO  21:11:59,408 - #48 pom
INFO  21:11:59,408 - #27 =
INFO  21:11:59,408 - #51 1
INFO  21:11:59,408 - #38 ;
INFO  21:11:59,409 - #6 else
INFO  21:11:59,409 - #5 if
INFO  21:11:59,409 - #40 (
INFO  21:11:59,409 - #48 inc
INFO  21:11:59,409 - #28 ==
INFO  21:11:59,409 - #51 2
INFO  21:11:59,409 - #41 )
INFO  21:11:59,409 - #48 pom
INFO  21:11:59,409 - #27 =
INFO  21:11:59,409 - #48 a
INFO  21:11:59,409 - #38 ;
INFO  21:11:59,409 - #15 return
INFO  21:11:59,409 - #48 sum
INFO  21:11:59,409 - #40 (
INFO  21:11:59,409 - #48 a
INFO  21:11:59,409 - #39 ,
INFO  21:11:59,409 - #48 pom
INFO  21:11:59,409 - #41 )
INFO  21:11:59,409 - #38 ;
INFO  21:11:59,410 - #45 }
INFO  21:11:59,410 - #48 bool
INFO  21:11:59,410 - #48 verify
INFO  21:11:59,410 - #40 (
INFO  21:11:59,410 - #41 )
INFO  21:11:59,410 - #44 {
INFO  21:11:59,410 - #12 print
INFO  21:11:59,410 - #40 (
INFO  21:11:59,410 - #50 v
INFO  21:11:59,410 - #41 )
INFO  21:11:59,410 - #38 ;
INFO  21:11:59,410 - #15 return
INFO  21:11:59,411 - #49 false
INFO  21:11:59,411 - #38 ;
INFO  21:11:59,411 - #45 }
INFO  21:11:59,411 - #14 void
INFO  21:11:59,411 - #48 main
INFO  21:11:59,411 - #40 (
INFO  21:11:59,411 - #41 )
INFO  21:11:59,411 - #44 {
INFO  21:11:59,411 - #5 if
INFO  21:11:59,411 - #40 (
INFO  21:11:59,411 - #51 1
INFO  21:11:59,411 - #29 !=
INFO  21:11:59,411 - #51 1
INFO  21:11:59,411 - #41 )
INFO  21:11:59,411 - #12 print
INFO  21:11:59,411 - #40 (
INFO  21:11:59,411 - #23 -
INFO  21:11:59,411 - #51 6
INFO  21:11:59,411 - #41 )
INFO  21:11:59,411 - #38 ;
INFO  21:11:59,411 - #6 else
INFO  21:11:59,411 - #12 print
INFO  21:11:59,411 - #40 (
INFO  21:11:59,411 - #51 0
INFO  21:11:59,411 - #41 )
INFO  21:11:59,411 - #38 ;
INFO  21:11:59,411 - #48 ibool
INFO  21:11:59,411 - #27 =
INFO  21:11:59,411 - #49 false
INFO  21:11:59,411 - #38 ;
INFO  21:11:59,411 - #48 i
INFO  21:11:59,411 - #27 =
INFO  21:11:59,411 - #51 0
INFO  21:11:59,411 - #38 ;
INFO  21:11:59,411 - #9 do
INFO  21:11:59,411 - #44 {
INFO  21:11:59,411 - #5 if
INFO  21:11:59,411 - #40 (
INFO  21:11:59,412 - #48 i
INFO  21:11:59,412 - #28 ==
INFO  21:11:59,412 - #51 2
INFO  21:11:59,412 - #41 )
INFO  21:11:59,412 - #48 ibool
INFO  21:11:59,412 - #27 =
INFO  21:11:59,412 - #49 true
INFO  21:11:59,412 - #38 ;
INFO  21:11:59,412 - #48 i
INFO  21:11:59,412 - #36 ++
INFO  21:11:59,412 - #38 ;
INFO  21:11:59,412 - #45 }
INFO  21:11:59,412 - #10 while
INFO  21:11:59,412 - #40 (
INFO  21:11:59,412 - #48 i
INFO  21:11:59,412 - #32 <
INFO  21:11:59,412 - #51 5
INFO  21:11:59,412 - #41 )
INFO  21:11:59,412 - #38 ;
INFO  21:11:59,412 - #5 if
INFO  21:11:59,412 - #40 (
INFO  21:11:59,412 - #48 ibool
INFO  21:11:59,412 - #41 )
INFO  21:11:59,412 - #5 if
INFO  21:11:59,412 - #40 (
INFO  21:11:59,412 - #48 i
INFO  21:11:59,412 - #28 ==
INFO  21:11:59,412 - #51 5
INFO  21:11:59,412 - #41 )
INFO  21:11:59,412 - #12 print
INFO  21:11:59,412 - #40 (
INFO  21:11:59,412 - #51 1
INFO  21:11:59,412 - #41 )
INFO  21:11:59,412 - #38 ;
INFO  21:11:59,412 - #6 else
INFO  21:11:59,412 - #12 print
INFO  21:11:59,412 - #40 (
INFO  21:11:59,412 - #23 -
INFO  21:11:59,412 - #51 1
INFO  21:11:59,412 - #41 )
INFO  21:11:59,413 - #38 ;
INFO  21:11:59,413 - #48 a
INFO  21:11:59,413 - #27 =
INFO  21:11:59,413 - #51 2
INFO  21:11:59,413 - #38 ;
INFO  21:11:59,413 - #48 niz
INFO  21:11:59,413 - #27 =
INFO  21:11:59,413 - #11 new
INFO  21:11:59,413 - #48 int
INFO  21:11:59,413 - #42 [
INFO  21:11:59,413 - #51 3
INFO  21:11:59,413 - #43 ]
INFO  21:11:59,413 - #38 ;
INFO  21:11:59,413 - #48 niz
INFO  21:11:59,413 - #42 [
INFO  21:11:59,413 - #51 0
INFO  21:11:59,413 - #43 ]
INFO  21:11:59,413 - #27 =
INFO  21:11:59,413 - #51 1
INFO  21:11:59,413 - #24 *
INFO  21:11:59,413 - #48 a
INFO  21:11:59,414 - #38 ;
INFO  21:11:59,414 - #48 niz
INFO  21:11:59,414 - #42 [
INFO  21:11:59,414 - #51 1
INFO  21:11:59,414 - #43 ]
INFO  21:11:59,414 - #27 =
INFO  21:11:59,414 - #51 2
INFO  21:11:59,414 - #24 *
INFO  21:11:59,414 - #48 a
INFO  21:11:59,414 - #38 ;
INFO  21:11:59,414 - #48 niz
INFO  21:11:59,414 - #42 [
INFO  21:11:59,414 - #51 2
INFO  21:11:59,414 - #43 ]
INFO  21:11:59,414 - #27 =
INFO  21:11:59,414 - #48 sum
INFO  21:11:59,414 - #40 (
INFO  21:11:59,414 - #48 niz
INFO  21:11:59,414 - #42 [
INFO  21:11:59,414 - #51 1
INFO  21:11:59,414 - #43 ]
INFO  21:11:59,414 - #39 ,
INFO  21:11:59,414 - #48 niz
INFO  21:11:59,414 - #42 [
INFO  21:11:59,414 - #51 0
INFO  21:11:59,414 - #43 ]
INFO  21:11:59,414 - #41 )
INFO  21:11:59,414 - #24 *
INFO  21:11:59,414 - #48 a
INFO  21:11:59,414 - #22 +
INFO  21:11:59,414 - #51 1
INFO  21:11:59,414 - #38 ;
INFO  21:11:59,414 - #5 if
INFO  21:11:59,414 - #40 (
INFO  21:11:59,414 - #48 verify
INFO  21:11:59,414 - #40 (
INFO  21:11:59,414 - #41 )
INFO  21:11:59,414 - #35 ||
INFO  21:11:59,414 - #48 niz
INFO  21:11:59,414 - #42 [
INFO  21:11:59,414 - #51 2
INFO  21:11:59,414 - #43 ]
INFO  21:11:59,414 - #28 ==
INFO  21:11:59,414 - #51 4
INFO  21:11:59,414 - #41 )
INFO  21:11:59,414 - #12 print
INFO  21:11:59,414 - #40 (
INFO  21:11:59,414 - #48 ord
INFO  21:11:59,414 - #40 (
INFO  21:11:59,414 - #50 A
INFO  21:11:59,414 - #41 )
INFO  21:11:59,414 - #41 )
INFO  21:11:59,414 - #38 ;
INFO  21:11:59,414 - #6 else
INFO  21:11:59,414 - #12 print
INFO  21:11:59,414 - #40 (
INFO  21:11:59,414 - #48 ord
INFO  21:11:59,414 - #40 (
INFO  21:11:59,414 - #50 a
INFO  21:11:59,414 - #41 )
INFO  21:11:59,414 - #41 )
INFO  21:11:59,414 - #38 ;
INFO  21:11:59,414 - #12 print
INFO  21:11:59,414 - #40 (
INFO  21:11:59,414 - #48 eol
INFO  21:11:59,414 - #41 )
INFO  21:11:59,414 - #38 ;
INFO  21:11:59,414 - #48 i
INFO  21:11:59,414 - #27 =
INFO  21:11:59,414 - #51 0
INFO  21:11:59,414 - #38 ;
INFO  21:11:59,414 - #9 do
INFO  21:11:59,414 - #44 {
INFO  21:11:59,414 - #5 if
INFO  21:11:59,414 - #40 (
INFO  21:11:59,414 - #48 i
INFO  21:11:59,414 - #28 ==
INFO  21:11:59,414 - #51 3
INFO  21:11:59,414 - #41 )
INFO  21:11:59,414 - #44 {
INFO  21:11:59,414 - #48 i
INFO  21:11:59,414 - #36 ++
INFO  21:11:59,414 - #38 ;
INFO  21:11:59,414 - #4 continue
INFO  21:11:59,414 - #38 ;
INFO  21:11:59,414 - #45 }
INFO  21:11:59,414 - #5 if
INFO  21:11:59,414 - #40 (
INFO  21:11:59,414 - #48 i
INFO  21:11:59,415 - #28 ==
INFO  21:11:59,415 - #51 4
INFO  21:11:59,415 - #41 )
INFO  21:11:59,415 - #3 break
INFO  21:11:59,415 - #38 ;
INFO  21:11:59,415 - #48 i
INFO  21:11:59,415 - #27 =
INFO  21:11:59,415 - #48 inkrement
INFO  21:11:59,415 - #40 (
INFO  21:11:59,415 - #48 i
INFO  21:11:59,415 - #39 ,
INFO  21:11:59,415 - #51 1
INFO  21:11:59,415 - #41 )
INFO  21:11:59,415 - #38 ;
INFO  21:11:59,415 - #45 }
INFO  21:11:59,415 - #10 while
INFO  21:11:59,415 - #40 (
INFO  21:11:59,415 - #48 i
INFO  21:11:59,415 - #32 <
INFO  21:11:59,415 - #51 10
INFO  21:11:59,415 - #41 )
INFO  21:11:59,415 - #38 ;
INFO  21:11:59,415 - #5 if
INFO  21:11:59,415 - #40 (
INFO  21:11:59,415 - #48 i
INFO  21:11:59,415 - #28 ==
INFO  21:11:59,415 - #51 3
INFO  21:11:59,415 - #34 &&
INFO  21:11:59,415 - #48 verify
INFO  21:11:59,415 - #40 (
INFO  21:11:59,415 - #41 )
INFO  21:11:59,415 - #41 )
INFO  21:11:59,415 - #12 print
INFO  21:11:59,415 - #40 (
INFO  21:11:59,415 - #23 -
INFO  21:11:59,415 - #51 4
INFO  21:11:59,415 - #41 )
INFO  21:11:59,415 - #38 ;
INFO  21:11:59,415 - #6 else
INFO  21:11:59,415 - #12 print
INFO  21:11:59,415 - #40 (
INFO  21:11:59,415 - #51 4
INFO  21:11:59,415 - #41 )
INFO  21:11:59,415 - #38 ;
INFO  21:11:59,415 - #13 read
INFO  21:11:59,415 - #40 (
INFO  21:11:59,415 - #48 niz
INFO  21:11:59,415 - #42 [
INFO  21:11:59,415 - #51 0
INFO  21:11:59,415 - #43 ]
INFO  21:11:59,415 - #41 )
INFO  21:11:59,415 - #38 ;
INFO  21:11:59,415 - #13 read
INFO  21:11:59,415 - #40 (
INFO  21:11:59,415 - #48 niz
INFO  21:11:59,415 - #42 [
INFO  21:11:59,415 - #51 1
INFO  21:11:59,415 - #43 ]
INFO  21:11:59,415 - #41 )
INFO  21:11:59,415 - #38 ;
INFO  21:11:59,415 - #13 read
INFO  21:11:59,415 - #40 (
INFO  21:11:59,415 - #48 niz
INFO  21:11:59,415 - #42 [
INFO  21:11:59,415 - #51 2
INFO  21:11:59,415 - #43 ]
INFO  21:11:59,415 - #41 )
INFO  21:11:59,415 - #38 ;
INFO  21:11:59,415 - #12 print
INFO  21:11:59,415 - #40 (
INFO  21:11:59,415 - #48 eol
INFO  21:11:59,415 - #41 )
INFO  21:11:59,415 - #38 ;
INFO  21:11:59,415 - #12 print
INFO  21:11:59,415 - #40 (
INFO  21:11:59,415 - #48 sum
INFO  21:11:59,416 - #40 (
INFO  21:11:59,416 - #48 sum
INFO  21:11:59,416 - #40 (
INFO  21:11:59,416 - #48 niz
INFO  21:11:59,416 - #42 [
INFO  21:11:59,416 - #51 0
INFO  21:11:59,416 - #43 ]
INFO  21:11:59,416 - #39 ,
INFO  21:11:59,416 - #48 niz
INFO  21:11:59,416 - #42 [
INFO  21:11:59,416 - #51 1
INFO  21:11:59,416 - #43 ]
INFO  21:11:59,416 - #41 )
INFO  21:11:59,416 - #39 ,
INFO  21:11:59,416 - #48 niz
INFO  21:11:59,416 - #42 [
INFO  21:11:59,416 - #51 2
INFO  21:11:59,416 - #43 ]
INFO  21:11:59,416 - #41 )
INFO  21:11:59,416 - #41 )
INFO  21:11:59,416 - #38 ;
INFO  21:11:59,416 - #12 print
INFO  21:11:59,416 - #40 (
INFO  21:11:59,416 - #48 eol
INFO  21:11:59,416 - #41 )
INFO  21:11:59,416 - #38 ;
INFO  21:11:59,416 - #12 print
INFO  21:11:59,416 - #40 (
INFO  21:11:59,416 - #48 inkrement
INFO  21:11:59,416 - #40 (
INFO  21:11:59,416 - #48 niz
INFO  21:11:59,416 - #42 [
INFO  21:11:59,416 - #51 2
INFO  21:11:59,416 - #43 ]
INFO  21:11:59,416 - #39 ,
INFO  21:11:59,416 - #51 2
INFO  21:11:59,416 - #41 )
INFO  21:11:59,416 - #41 )
INFO  21:11:59,416 - #38 ;
INFO  21:11:59,416 - #48 a
INFO  21:11:59,416 - #27 =
INFO  21:11:59,416 - #51 3
INFO  21:11:59,416 - #38 ;
INFO  21:11:59,416 - #48 i
INFO  21:11:59,416 - #27 =
INFO  21:11:59,416 - #51 0
INFO  21:11:59,416 - #38 ;
INFO  21:11:59,416 - #9 do
INFO  21:11:59,416 - #44 {
INFO  21:11:59,416 - #48 niz
INFO  21:11:59,416 - #42 [
INFO  21:11:59,416 - #48 i
INFO  21:11:59,416 - #43 ]
INFO  21:11:59,416 - #27 =
INFO  21:11:59,416 - #48 niz
INFO  21:11:59,416 - #42 [
INFO  21:11:59,416 - #48 i
INFO  21:11:59,416 - #43 ]
INFO  21:11:59,416 - #24 *
INFO  21:11:59,416 - #51 2
INFO  21:11:59,416 - #24 *
INFO  21:11:59,416 - #48 a
INFO  21:11:59,416 - #38 ;
INFO  21:11:59,416 - #48 i
INFO  21:11:59,416 - #36 ++
INFO  21:11:59,416 - #38 ;
INFO  21:11:59,416 - #45 }
INFO  21:11:59,416 - #10 while
INFO  21:11:59,416 - #40 (
INFO  21:11:59,416 - #48 i
INFO  21:11:59,416 - #32 <
INFO  21:11:59,416 - #51 3
INFO  21:11:59,416 - #41 )
INFO  21:11:59,416 - #38 ;
INFO  21:11:59,416 - #12 print
INFO  21:11:59,416 - #40 (
INFO  21:11:59,416 - #48 niz
INFO  21:11:59,416 - #42 [
INFO  21:11:59,416 - #51 0
INFO  21:11:59,416 - #43 ]
INFO  21:11:59,416 - #41 )
INFO  21:11:59,416 - #38 ;
INFO  21:11:59,416 - #12 print
INFO  21:11:59,416 - #40 (
INFO  21:11:59,416 - #48 niz
INFO  21:11:59,416 - #42 [
INFO  21:11:59,416 - #51 1
INFO  21:11:59,416 - #43 ]
INFO  21:11:59,416 - #41 )
INFO  21:11:59,416 - #38 ;
INFO  21:11:59,416 - #12 print
INFO  21:11:59,416 - #40 (
INFO  21:11:59,416 - #48 niz
INFO  21:11:59,416 - #42 [
INFO  21:11:59,416 - #51 2
INFO  21:11:59,416 - #43 ]
INFO  21:11:59,416 - #41 )
INFO  21:11:59,416 - #38 ;
INFO  21:11:59,416 - #12 print
INFO  21:11:59,416 - #40 (
INFO  21:11:59,416 - #48 eol
INFO  21:11:59,416 - #41 )
INFO  21:11:59,416 - #38 ;
INFO  21:11:59,416 - #48 i
INFO  21:11:59,416 - #27 =
INFO  21:11:59,416 - #51 0
INFO  21:11:59,416 - #38 ;
INFO  21:11:59,416 - #48 niz2
INFO  21:11:59,416 - #27 =
INFO  21:11:59,416 - #51 0
INFO  21:11:59,416 - #38 ;
INFO  21:11:59,416 - #9 do
INFO  21:11:59,416 - #44 {
INFO  21:11:59,416 - #48 niz2
INFO  21:11:59,416 - #27 =
INFO  21:11:59,416 - #48 niz2
INFO  21:11:59,416 - #22 +
INFO  21:11:59,416 - #48 niz
INFO  21:11:59,416 - #42 [
INFO  21:11:59,416 - #48 i
INFO  21:11:59,416 - #43 ]
INFO  21:11:59,416 - #24 *
INFO  21:11:59,416 - #48 niz
INFO  21:11:59,416 - #42 [
INFO  21:11:59,416 - #48 i
INFO  21:11:59,416 - #43 ]
INFO  21:11:59,416 - #38 ;
INFO  21:11:59,416 - #48 i
INFO  21:11:59,416 - #36 ++
INFO  21:11:59,416 - #38 ;
INFO  21:11:59,416 - #45 }
INFO  21:11:59,417 - #10 while
INFO  21:11:59,417 - #40 (
INFO  21:11:59,417 - #48 i
INFO  21:11:59,417 - #32 <
INFO  21:11:59,417 - #51 3
INFO  21:11:59,417 - #41 )
INFO  21:11:59,417 - #38 ;
INFO  21:11:59,417 - #12 print
INFO  21:11:59,417 - #40 (
INFO  21:11:59,417 - #48 niz2
INFO  21:11:59,417 - #41 )
INFO  21:11:59,417 - #38 ;
INFO  21:11:59,417 - #12 print
INFO  21:11:59,417 - #40 (
INFO  21:11:59,417 - #48 eol
INFO  21:11:59,417 - #41 )
INFO  21:11:59,417 - #38 ;
INFO  21:11:59,417 - #48 printArgs
INFO  21:11:59,417 - #40 (
INFO  21:11:59,417 - #51 5
INFO  21:11:59,417 - #39 ,
INFO  21:11:59,417 - #50 t
INFO  21:11:59,417 - #39 ,
INFO  21:11:59,417 - #50 e
INFO  21:11:59,417 - #39 ,
INFO  21:11:59,417 - #50 s
INFO  21:11:59,417 - #39 ,
INFO  21:11:59,417 - #50 t
INFO  21:11:59,417 - #39 ,
INFO  21:11:59,417 - #50 B
INFO  21:11:59,417 - #41 )
INFO  21:11:59,417 - #38 ;
INFO  21:11:59,417 - #45 }
INFO  21:11:59,417 - #45 }
INFO  21:11:59,422 - Program(
  ProgramName(
   test302
  ) [ProgramName]
  AllDeclListMultiple(
    AllDeclListMultiple(
      AllDeclListMultiple(
        AllDeclListMultiple(
          AllDeclListMultiple(
            AllDeclListMultiple(
              NoDecl(
              ) [NoDecl]
              ConstDeclaration(
                ConstDeclarationExpr(
                  Type(
                   int
                  ) [Type]
                  ConstAssignSingle(
                    ConstAssign(
                     jedan
                      NumberConst(
                       1
                      ) [NumberConst]
                    ) [ConstAssign]
                  ) [ConstAssignSingle]
                ) [ConstDeclarationExpr]
              ) [ConstDeclaration]
            ) [AllDeclListMultiple]
            GlobalVarDeclaration(
              GlobalVarDeclarationExpr(
                Type(
                 int
                ) [Type]
                GlobalVarDeclListSingle(
                  GlobalVarDeclarationSingle(
                   i
                    NoArray(
                    ) [NoArray]
                  ) [GlobalVarDeclarationSingle]
                ) [GlobalVarDeclListSingle]
              ) [GlobalVarDeclarationExpr]
            ) [GlobalVarDeclaration]
          ) [AllDeclListMultiple]
          GlobalVarDeclaration(
            GlobalVarDeclarationExpr(
              Type(
               bool
              ) [Type]
              GlobalVarDeclListSingle(
                GlobalVarDeclarationSingle(
                 ibool
                  NoArray(
                  ) [NoArray]
                ) [GlobalVarDeclarationSingle]
              ) [GlobalVarDeclListSingle]
            ) [GlobalVarDeclarationExpr]
          ) [GlobalVarDeclaration]
        ) [AllDeclListMultiple]
        GlobalVarDeclaration(
          GlobalVarDeclarationExpr(
            Type(
             int
            ) [Type]
            GlobalVarDeclListSingle(
              GlobalVarDeclarationSingle(
               niz2
                NoArray(
                ) [NoArray]
              ) [GlobalVarDeclarationSingle]
            ) [GlobalVarDeclListSingle]
          ) [GlobalVarDeclarationExpr]
        ) [GlobalVarDeclaration]
      ) [AllDeclListMultiple]
      GlobalVarDeclaration(
        GlobalVarDeclarationExpr(
          Type(
           int
          ) [Type]
          GlobalVarDeclListSingle(
            GlobalVarDeclarationSingle(
             niz
              ArrayBrackets(
              ) [ArrayBrackets]
            ) [GlobalVarDeclarationSingle]
          ) [GlobalVarDeclListSingle]
        ) [GlobalVarDeclarationExpr]
      ) [GlobalVarDeclaration]
    ) [AllDeclListMultiple]
    GlobalVarDeclaration(
      GlobalVarDeclarationExpr(
        Type(
         int
        ) [Type]
        GlobalVarDeclListSingle(
          GlobalVarDeclarationSingle(
           a
            NoArray(
            ) [NoArray]
          ) [GlobalVarDeclarationSingle]
        ) [GlobalVarDeclListSingle]
      ) [GlobalVarDeclarationExpr]
    ) [GlobalVarDeclaration]
  ) [AllDeclListMultiple]
  MethodDeclListMultiple(
    MethodDeclListMultiple(
      MethodDeclListMultiple(
        MethodDeclListMultiple(
          MethodDeclListMultiple(
            MethodDeclListNo(
            ) [MethodDeclListNo]
            MethodDeclaration(
              MethodSignatureParams(
                MethodTypeType(
                  Type(
                   int
                  ) [Type]
                ) [MethodTypeType]
                MethodName(
                 sum
                ) [MethodName]
                FormParsSingle(
                  FormParError(
                  ) [FormParError]
                ) [FormParsSingle]
                FormParsEnd(
                ) [FormParsEnd]
              ) [MethodSignatureParams]
              VarDeclOptionTrue(
                NoVarDeclOption(
                ) [NoVarDeclOption]
                VarDeclarationExpr(
                  Type(
                   int
                  ) [Type]
                  VarDeclListMultiple(
                    VarDeclListSingle(
                      VarDeclSingle(
                       z
                        NoArray(
                        ) [NoArray]
                      ) [VarDeclSingle]
                    ) [VarDeclListSingle]
                    VarDeclSingle(
                     d
                      NoArray(
                      ) [NoArray]
                    ) [VarDeclSingle]
                  ) [VarDeclListMultiple]
                ) [VarDeclarationExpr]
              ) [VarDeclOptionTrue]
              StatementListMultiple(
                StatementListMultiple(
                  StatementListMultiple(
                    StatementListNo(
                    ) [StatementListNo]
                    StatementSingle(
                      SingleDesignatorStatement(
                        DesignatorStmtAssign(
                          DesignatorStmtAssignCorrect(
                            IdentDesignator(
                             z
                            ) [IdentDesignator]
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                DesignatorEmptyFactor(
                                  IdentArrayDesignator(
                                   args
                                    SingleTermExprPositive(
                                      SingleFactorTerm(
                                        NumConstFactor(
                                         0
                                        ) [NumConstFactor]
                                      ) [SingleFactorTerm]
                                    ) [SingleTermExprPositive]
                                  ) [IdentArrayDesignator]
                                ) [DesignatorEmptyFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [DesignatorStmtAssignCorrect]
                        ) [DesignatorStmtAssign]
                      ) [SingleDesignatorStatement]
                    ) [StatementSingle]
                  ) [StatementListMultiple]
                  StatementSingle(
                    SingleDesignatorStatement(
                      DesignatorStmtAssign(
                        DesignatorStmtAssignCorrect(
                          IdentDesignator(
                           d
                          ) [IdentDesignator]
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              DesignatorEmptyFactor(
                                IdentArrayDesignator(
                                 args
                                  SingleTermExprPositive(
                                    SingleFactorTerm(
                                      NumConstFactor(
                                       1
                                      ) [NumConstFactor]
                                    ) [SingleFactorTerm]
                                  ) [SingleTermExprPositive]
                                ) [IdentArrayDesignator]
                              ) [DesignatorEmptyFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [DesignatorStmtAssignCorrect]
                      ) [DesignatorStmtAssign]
                    ) [SingleDesignatorStatement]
                  ) [StatementSingle]
                ) [StatementListMultiple]
                StatementSingle(
                  SingleReturnExprStatement(
                    MultiTermExpr(
                      SingleTermExprPositive(
                        SingleFactorTerm(
                          DesignatorEmptyFactor(
                            IdentDesignator(
                             z
                            ) [IdentDesignator]
                          ) [DesignatorEmptyFactor]
                        ) [SingleFactorTerm]
                      ) [SingleTermExprPositive]
                      AddopPlus(
                      ) [AddopPlus]
                      SingleFactorTerm(
                        DesignatorEmptyFactor(
                          IdentDesignator(
                           d
                          ) [IdentDesignator]
                        ) [DesignatorEmptyFactor]
                      ) [SingleFactorTerm]
                    ) [MultiTermExpr]
                  ) [SingleReturnExprStatement]
                ) [StatementSingle]
              ) [StatementListMultiple]
            ) [MethodDeclaration]
          ) [MethodDeclListMultiple]
          MethodDeclaration(
            MethodSignatureVarArgs(
              MethodTypeVoid(
              ) [MethodTypeVoid]
              MethodName(
               printArgs
              ) [MethodName]
              FormParsSingle(
                FormParSingle(
                  Type(
                   int
                  ) [Type]
                 num
                  NoArray(
                  ) [NoArray]
                ) [FormParSingle]
              ) [FormParsSingle]
              VarArgsDeclaration(
                Type(
                 char
                ) [Type]
               args
              ) [VarArgsDeclaration]
              FormParsEnd(
              ) [FormParsEnd]
            ) [MethodSignatureVarArgs]
            VarDeclOptionTrue(
              NoVarDeclOption(
              ) [NoVarDeclOption]
              VarDeclarationExpr(
                Type(
                 int
                ) [Type]
                VarDeclListSingle(
                  VarDeclSingle(
                   i
                    NoArray(
                    ) [NoArray]
                  ) [VarDeclSingle]
                ) [VarDeclListSingle]
              ) [VarDeclarationExpr]
            ) [VarDeclOptionTrue]
            StatementListMultiple(
              StatementListMultiple(
                StatementListNo(
                ) [StatementListNo]
                StatementSingle(
                  SingleDesignatorStatement(
                    DesignatorStmtAssign(
                      DesignatorStmtAssignCorrect(
                        IdentDesignator(
                         i
                        ) [IdentDesignator]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            NumConstFactor(
                             0
                            ) [NumConstFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [DesignatorStmtAssignCorrect]
                    ) [DesignatorStmtAssign]
                  ) [SingleDesignatorStatement]
                ) [StatementSingle]
              ) [StatementListMultiple]
              StatementSingle(
                DoWhileStatement(
                  DoEnter(
                  ) [DoEnter]
                  StatementListMultiple(
                    StatementListNo(
                    ) [StatementListNo]
                    StatementMultiple(
                      StatementsInBraces(
                        StatementListMultiple(
                          StatementListMultiple(
                            StatementListNo(
                            ) [StatementListNo]
                            StatementSingle(
                              SinglePrintStatement(
                                SingleTermExprPositive(
                                  SingleFactorTerm(
                                    DesignatorEmptyFactor(
                                      IdentArrayDesignator(
                                       args
                                        SingleTermExprPositive(
                                          SingleFactorTerm(
                                            DesignatorEmptyFactor(
                                              IdentDesignator(
                                               i
                                              ) [IdentDesignator]
                                            ) [DesignatorEmptyFactor]
                                          ) [SingleFactorTerm]
                                        ) [SingleTermExprPositive]
                                      ) [IdentArrayDesignator]
                                    ) [DesignatorEmptyFactor]
                                  ) [SingleFactorTerm]
                                ) [SingleTermExprPositive]
                                NumConstNo(
                                ) [NumConstNo]
                              ) [SinglePrintStatement]
                            ) [StatementSingle]
                          ) [StatementListMultiple]
                          StatementSingle(
                            SingleDesignatorStatement(
                              DesignatorStmtPlusPlus(
                                IdentDesignator(
                                 i
                                ) [IdentDesignator]
                              ) [DesignatorStmtPlusPlus]
                            ) [SingleDesignatorStatement]
                          ) [StatementSingle]
                        ) [StatementListMultiple]
                      ) [StatementsInBraces]
                    ) [StatementMultiple]
                  ) [StatementListMultiple]
                  ConditionSingleTerm(
                    CondSingleFactTerm(
                      CondMultiExprFact(
                        CondSingleExprFact(
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              DesignatorEmptyFactor(
                                IdentDesignator(
                                 i
                                ) [IdentDesignator]
                              ) [DesignatorEmptyFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [CondSingleExprFact]
                        RelopLS(
                        ) [RelopLS]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            DesignatorEmptyFactor(
                              IdentDesignator(
                               num
                              ) [IdentDesignator]
                            ) [DesignatorEmptyFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [CondMultiExprFact]
                    ) [CondSingleFactTerm]
                  ) [ConditionSingleTerm]
                ) [DoWhileStatement]
              ) [StatementSingle]
            ) [StatementListMultiple]
          ) [MethodDeclaration]
        ) [MethodDeclListMultiple]
        MethodDeclaration(
          MethodSignatureParams(
            MethodTypeType(
              Type(
               int
              ) [Type]
            ) [MethodTypeType]
            MethodName(
             inkrement
            ) [MethodName]
            FormParsMultiple(
              FormParsSingle(
                FormParSingle(
                  Type(
                   int
                  ) [Type]
                 a
                  NoArray(
                  ) [NoArray]
                ) [FormParSingle]
              ) [FormParsSingle]
              FormParSingle(
                Type(
                 int
                ) [Type]
               inc
                NoArray(
                ) [NoArray]
              ) [FormParSingle]
            ) [FormParsMultiple]
            FormParsEnd(
            ) [FormParsEnd]
          ) [MethodSignatureParams]
          VarDeclOptionTrue(
            NoVarDeclOption(
            ) [NoVarDeclOption]
            VarDeclarationExpr(
              Type(
               int
              ) [Type]
              VarDeclListSingle(
                VarDeclSingle(
                 pom
                  NoArray(
                  ) [NoArray]
                ) [VarDeclSingle]
              ) [VarDeclListSingle]
            ) [VarDeclarationExpr]
          ) [VarDeclOptionTrue]
          StatementListMultiple(
            StatementListMultiple(
              StatementListNo(
              ) [StatementListNo]
              StatementSingle(
                IfElseStatement(
                  IfConditionSingleTerm(
                    CondSingleFactTerm(
                      CondMultiExprFact(
                        CondSingleExprFact(
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              DesignatorEmptyFactor(
                                IdentDesignator(
                                 inc
                                ) [IdentDesignator]
                              ) [DesignatorEmptyFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [CondSingleExprFact]
                        RelopEQUAL(
                        ) [RelopEQUAL]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            DesignatorEmptyFactor(
                              IdentDesignator(
                               jedan
                              ) [IdentDesignator]
                            ) [DesignatorEmptyFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [CondMultiExprFact]
                    ) [CondSingleFactTerm]
                  ) [IfConditionSingleTerm]
                  StatementSingle(
                    SingleDesignatorStatement(
                      DesignatorStmtAssign(
                        DesignatorStmtAssignCorrect(
                          IdentDesignator(
                           pom
                          ) [IdentDesignator]
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              NumConstFactor(
                               1
                              ) [NumConstFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [DesignatorStmtAssignCorrect]
                      ) [DesignatorStmtAssign]
                    ) [SingleDesignatorStatement]
                  ) [StatementSingle]
                  StatementSingle(
                    IfStatement(
                      IfConditionSingleTerm(
                        CondSingleFactTerm(
                          CondMultiExprFact(
                            CondSingleExprFact(
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentDesignator(
                                     inc
                                    ) [IdentDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [CondSingleExprFact]
                            RelopEQUAL(
                            ) [RelopEQUAL]
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                NumConstFactor(
                                 2
                                ) [NumConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [CondMultiExprFact]
                        ) [CondSingleFactTerm]
                      ) [IfConditionSingleTerm]
                      StatementSingle(
                        SingleDesignatorStatement(
                          DesignatorStmtAssign(
                            DesignatorStmtAssignCorrect(
                              IdentDesignator(
                               pom
                              ) [IdentDesignator]
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentDesignator(
                                     a
                                    ) [IdentDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [DesignatorStmtAssignCorrect]
                          ) [DesignatorStmtAssign]
                        ) [SingleDesignatorStatement]
                      ) [StatementSingle]
                    ) [IfStatement]
                  ) [StatementSingle]
                ) [IfElseStatement]
              ) [StatementSingle]
            ) [StatementListMultiple]
            StatementSingle(
              SingleReturnExprStatement(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    MethodCallFactor(
                      MethodCall(
                        IdentDesignator(
                         sum
                        ) [IdentDesignator]
                        ActParsLeftParen(
                        ) [ActParsLeftParen]
                        ActParsYes(
                          ActParsMultiExpr(
                            ActParsSingleExpr(
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentDesignator(
                                     a
                                    ) [IdentDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [ActParsSingleExpr]
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                DesignatorEmptyFactor(
                                  IdentDesignator(
                                   pom
                                  ) [IdentDesignator]
                                ) [DesignatorEmptyFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [ActParsMultiExpr]
                        ) [ActParsYes]
                        ActParsRightParen(
                        ) [ActParsRightParen]
                      ) [MethodCall]
                    ) [MethodCallFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
              ) [SingleReturnExprStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
        ) [MethodDeclaration]
      ) [MethodDeclListMultiple]
      MethodDeclaration(
        MethodSignaturePlain(
          MethodTypeType(
            Type(
             bool
            ) [Type]
          ) [MethodTypeType]
          MethodName(
           verify
          ) [MethodName]
        ) [MethodSignaturePlain]
        NoVarDeclOption(
        ) [NoVarDeclOption]
        StatementListMultiple(
          StatementListMultiple(
            StatementListNo(
            ) [StatementListNo]
            StatementSingle(
              SinglePrintStatement(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    CharConstFactor(
                     v
                    ) [CharConstFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
                NumConstNo(
                ) [NumConstNo]
              ) [SinglePrintStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
          StatementSingle(
            SingleReturnExprStatement(
              SingleTermExprPositive(
                SingleFactorTerm(
                  BoolConstFactor(
                   false
                  ) [BoolConstFactor]
                ) [SingleFactorTerm]
              ) [SingleTermExprPositive]
            ) [SingleReturnExprStatement]
          ) [StatementSingle]
        ) [StatementListMultiple]
      ) [MethodDeclaration]
    ) [MethodDeclListMultiple]
    MethodDeclaration(
      MethodSignaturePlain(
        MethodTypeVoid(
        ) [MethodTypeVoid]
        MethodName(
         main
        ) [MethodName]
      ) [MethodSignaturePlain]
      NoVarDeclOption(
      ) [NoVarDeclOption]
      StatementListMultiple(
        StatementListMultiple(
          StatementListMultiple(
            StatementListMultiple(
              StatementListMultiple(
                StatementListMultiple(
                  StatementListMultiple(
                    StatementListMultiple(
                      StatementListMultiple(
                        StatementListMultiple(
                          StatementListMultiple(
                            StatementListMultiple(
                              StatementListMultiple(
                                StatementListMultiple(
                                  StatementListMultiple(
                                    StatementListMultiple(
                                      StatementListMultiple(
                                        StatementListMultiple(
                                          StatementListMultiple(
                                            StatementListMultiple(
                                              StatementListMultiple(
                                                StatementListMultiple(
                                                  StatementListMultiple(
                                                    StatementListMultiple(
                                                      StatementListMultiple(
                                                        StatementListMultiple(
                                                          StatementListMultiple(
                                                            StatementListMultiple(
                                                              StatementListMultiple(
                                                                StatementListMultiple(
                                                                  StatementListMultiple(
                                                                    StatementListMultiple(
                                                                      StatementListMultiple(
                                                                        StatementListMultiple(
                                                                          StatementListMultiple(
                                                                            StatementListNo(
                                                                            ) [StatementListNo]
                                                                            StatementSingle(
                                                                              IfElseStatement(
                                                                                IfConditionSingleTerm(
                                                                                  CondSingleFactTerm(
                                                                                    CondMultiExprFact(
                                                                                      CondSingleExprFact(
                                                                                        SingleTermExprPositive(
                                                                                          SingleFactorTerm(
                                                                                            NumConstFactor(
                                                                                             1
                                                                                            ) [NumConstFactor]
                                                                                          ) [SingleFactorTerm]
                                                                                        ) [SingleTermExprPositive]
                                                                                      ) [CondSingleExprFact]
                                                                                      RelopNOTEQUAL(
                                                                                      ) [RelopNOTEQUAL]
                                                                                      SingleTermExprPositive(
                                                                                        SingleFactorTerm(
                                                                                          NumConstFactor(
                                                                                           1
                                                                                          ) [NumConstFactor]
                                                                                        ) [SingleFactorTerm]
                                                                                      ) [SingleTermExprPositive]
                                                                                    ) [CondMultiExprFact]
                                                                                  ) [CondSingleFactTerm]
                                                                                ) [IfConditionSingleTerm]
                                                                                StatementSingle(
                                                                                  SinglePrintStatement(
                                                                                    SingleTermExprNegative(
                                                                                      SingleFactorTerm(
                                                                                        NumConstFactor(
                                                                                         6
                                                                                        ) [NumConstFactor]
                                                                                      ) [SingleFactorTerm]
                                                                                    ) [SingleTermExprNegative]
                                                                                    NumConstNo(
                                                                                    ) [NumConstNo]
                                                                                  ) [SinglePrintStatement]
                                                                                ) [StatementSingle]
                                                                                StatementSingle(
                                                                                  SinglePrintStatement(
                                                                                    SingleTermExprPositive(
                                                                                      SingleFactorTerm(
                                                                                        NumConstFactor(
                                                                                         0
                                                                                        ) [NumConstFactor]
                                                                                      ) [SingleFactorTerm]
                                                                                    ) [SingleTermExprPositive]
                                                                                    NumConstNo(
                                                                                    ) [NumConstNo]
                                                                                  ) [SinglePrintStatement]
                                                                                ) [StatementSingle]
                                                                              ) [IfElseStatement]
                                                                            ) [StatementSingle]
                                                                          ) [StatementListMultiple]
                                                                          StatementSingle(
                                                                            SingleDesignatorStatement(
                                                                              DesignatorStmtAssign(
                                                                                DesignatorStmtAssignCorrect(
                                                                                  IdentDesignator(
                                                                                   ibool
                                                                                  ) [IdentDesignator]
                                                                                  SingleTermExprPositive(
                                                                                    SingleFactorTerm(
                                                                                      BoolConstFactor(
                                                                                       false
                                                                                      ) [BoolConstFactor]
                                                                                    ) [SingleFactorTerm]
                                                                                  ) [SingleTermExprPositive]
                                                                                ) [DesignatorStmtAssignCorrect]
                                                                              ) [DesignatorStmtAssign]
                                                                            ) [SingleDesignatorStatement]
                                                                          ) [StatementSingle]
                                                                        ) [StatementListMultiple]
                                                                        StatementSingle(
                                                                          SingleDesignatorStatement(
                                                                            DesignatorStmtAssign(
                                                                              DesignatorStmtAssignCorrect(
                                                                                IdentDesignator(
                                                                                 i
                                                                                ) [IdentDesignator]
                                                                                SingleTermExprPositive(
                                                                                  SingleFactorTerm(
                                                                                    NumConstFactor(
                                                                                     0
                                                                                    ) [NumConstFactor]
                                                                                  ) [SingleFactorTerm]
                                                                                ) [SingleTermExprPositive]
                                                                              ) [DesignatorStmtAssignCorrect]
                                                                            ) [DesignatorStmtAssign]
                                                                          ) [SingleDesignatorStatement]
                                                                        ) [StatementSingle]
                                                                      ) [StatementListMultiple]
                                                                      StatementSingle(
                                                                        DoWhileStatement(
                                                                          DoEnter(
                                                                          ) [DoEnter]
                                                                          StatementListMultiple(
                                                                            StatementListNo(
                                                                            ) [StatementListNo]
                                                                            StatementMultiple(
                                                                              StatementsInBraces(
                                                                                StatementListMultiple(
                                                                                  StatementListMultiple(
                                                                                    StatementListNo(
                                                                                    ) [StatementListNo]
                                                                                    StatementSingle(
                                                                                      IfStatement(
                                                                                        IfConditionSingleTerm(
                                                                                          CondSingleFactTerm(
                                                                                            CondMultiExprFact(
                                                                                              CondSingleExprFact(
                                                                                                SingleTermExprPositive(
                                                                                                  SingleFactorTerm(
                                                                                                    DesignatorEmptyFactor(
                                                                                                      IdentDesignator(
                                                                                                       i
                                                                                                      ) [IdentDesignator]
                                                                                                    ) [DesignatorEmptyFactor]
                                                                                                  ) [SingleFactorTerm]
                                                                                                ) [SingleTermExprPositive]
                                                                                              ) [CondSingleExprFact]
                                                                                              RelopEQUAL(
                                                                                              ) [RelopEQUAL]
                                                                                              SingleTermExprPositive(
                                                                                                SingleFactorTerm(
                                                                                                  NumConstFactor(
                                                                                                   2
                                                                                                  ) [NumConstFactor]
                                                                                                ) [SingleFactorTerm]
                                                                                              ) [SingleTermExprPositive]
                                                                                            ) [CondMultiExprFact]
                                                                                          ) [CondSingleFactTerm]
                                                                                        ) [IfConditionSingleTerm]
                                                                                        StatementSingle(
                                                                                          SingleDesignatorStatement(
                                                                                            DesignatorStmtAssign(
                                                                                              DesignatorStmtAssignCorrect(
                                                                                                IdentDesignator(
                                                                                                 ibool
                                                                                                ) [IdentDesignator]
                                                                                                SingleTermExprPositive(
                                                                                                  SingleFactorTerm(
                                                                                                    BoolConstFactor(
                                                                                                     true
                                                                                                    ) [BoolConstFactor]
                                                                                                  ) [SingleFactorTerm]
                                                                                                ) [SingleTermExprPositive]
                                                                                              ) [DesignatorStmtAssignCorrect]
                                                                                            ) [DesignatorStmtAssign]
                                                                                          ) [SingleDesignatorStatement]
                                                                                        ) [StatementSingle]
                                                                                      ) [IfStatement]
                                                                                    ) [StatementSingle]
                                                                                  ) [StatementListMultiple]
                                                                                  StatementSingle(
                                                                                    SingleDesignatorStatement(
                                                                                      DesignatorStmtPlusPlus(
                                                                                        IdentDesignator(
                                                                                         i
                                                                                        ) [IdentDesignator]
                                                                                      ) [DesignatorStmtPlusPlus]
                                                                                    ) [SingleDesignatorStatement]
                                                                                  ) [StatementSingle]
                                                                                ) [StatementListMultiple]
                                                                              ) [StatementsInBraces]
                                                                            ) [StatementMultiple]
                                                                          ) [StatementListMultiple]
                                                                          ConditionSingleTerm(
                                                                            CondSingleFactTerm(
                                                                              CondMultiExprFact(
                                                                                CondSingleExprFact(
                                                                                  SingleTermExprPositive(
                                                                                    SingleFactorTerm(
                                                                                      DesignatorEmptyFactor(
                                                                                        IdentDesignator(
                                                                                         i
                                                                                        ) [IdentDesignator]
                                                                                      ) [DesignatorEmptyFactor]
                                                                                    ) [SingleFactorTerm]
                                                                                  ) [SingleTermExprPositive]
                                                                                ) [CondSingleExprFact]
                                                                                RelopLS(
                                                                                ) [RelopLS]
                                                                                SingleTermExprPositive(
                                                                                  SingleFactorTerm(
                                                                                    NumConstFactor(
                                                                                     5
                                                                                    ) [NumConstFactor]
                                                                                  ) [SingleFactorTerm]
                                                                                ) [SingleTermExprPositive]
                                                                              ) [CondMultiExprFact]
                                                                            ) [CondSingleFactTerm]
                                                                          ) [ConditionSingleTerm]
                                                                        ) [DoWhileStatement]
                                                                      ) [StatementSingle]
                                                                    ) [StatementListMultiple]
                                                                    StatementSingle(
                                                                      IfStatement(
                                                                        IfConditionSingleTerm(
                                                                          CondSingleFactTerm(
                                                                            CondSingleExprFact(
                                                                              SingleTermExprPositive(
                                                                                SingleFactorTerm(
                                                                                  DesignatorEmptyFactor(
                                                                                    IdentDesignator(
                                                                                     ibool
                                                                                    ) [IdentDesignator]
                                                                                  ) [DesignatorEmptyFactor]
                                                                                ) [SingleFactorTerm]
                                                                              ) [SingleTermExprPositive]
                                                                            ) [CondSingleExprFact]
                                                                          ) [CondSingleFactTerm]
                                                                        ) [IfConditionSingleTerm]
                                                                        StatementSingle(
                                                                          IfElseStatement(
                                                                            IfConditionSingleTerm(
                                                                              CondSingleFactTerm(
                                                                                CondMultiExprFact(
                                                                                  CondSingleExprFact(
                                                                                    SingleTermExprPositive(
                                                                                      SingleFactorTerm(
                                                                                        DesignatorEmptyFactor(
                                                                                          IdentDesignator(
                                                                                           i
                                                                                          ) [IdentDesignator]
                                                                                        ) [DesignatorEmptyFactor]
                                                                                      ) [SingleFactorTerm]
                                                                                    ) [SingleTermExprPositive]
                                                                                  ) [CondSingleExprFact]
                                                                                  RelopEQUAL(
                                                                                  ) [RelopEQUAL]
                                                                                  SingleTermExprPositive(
                                                                                    SingleFactorTerm(
                                                                                      NumConstFactor(
                                                                                       5
                                                                                      ) [NumConstFactor]
                                                                                    ) [SingleFactorTerm]
                                                                                  ) [SingleTermExprPositive]
                                                                                ) [CondMultiExprFact]
                                                                              ) [CondSingleFactTerm]
                                                                            ) [IfConditionSingleTerm]
                                                                            StatementSingle(
                                                                              SinglePrintStatement(
                                                                                SingleTermExprPositive(
                                                                                  SingleFactorTerm(
                                                                                    NumConstFactor(
                                                                                     1
                                                                                    ) [NumConstFactor]
                                                                                  ) [SingleFactorTerm]
                                                                                ) [SingleTermExprPositive]
                                                                                NumConstNo(
                                                                                ) [NumConstNo]
                                                                              ) [SinglePrintStatement]
                                                                            ) [StatementSingle]
                                                                            StatementSingle(
                                                                              SinglePrintStatement(
                                                                                SingleTermExprNegative(
                                                                                  SingleFactorTerm(
                                                                                    NumConstFactor(
                                                                                     1
                                                                                    ) [NumConstFactor]
                                                                                  ) [SingleFactorTerm]
                                                                                ) [SingleTermExprNegative]
                                                                                NumConstNo(
                                                                                ) [NumConstNo]
                                                                              ) [SinglePrintStatement]
                                                                            ) [StatementSingle]
                                                                          ) [IfElseStatement]
                                                                        ) [StatementSingle]
                                                                      ) [IfStatement]
                                                                    ) [StatementSingle]
                                                                  ) [StatementListMultiple]
                                                                  StatementSingle(
                                                                    SingleDesignatorStatement(
                                                                      DesignatorStmtAssign(
                                                                        DesignatorStmtAssignCorrect(
                                                                          IdentDesignator(
                                                                           a
                                                                          ) [IdentDesignator]
                                                                          SingleTermExprPositive(
                                                                            SingleFactorTerm(
                                                                              NumConstFactor(
                                                                               2
                                                                              ) [NumConstFactor]
                                                                            ) [SingleFactorTerm]
                                                                          ) [SingleTermExprPositive]
                                                                        ) [DesignatorStmtAssignCorrect]
                                                                      ) [DesignatorStmtAssign]
                                                                    ) [SingleDesignatorStatement]
                                                                  ) [StatementSingle]
                                                                ) [StatementListMultiple]
                                                                StatementSingle(
                                                                  SingleDesignatorStatement(
                                                                    DesignatorStmtAssign(
                                                                      DesignatorStmtAssignCorrect(
                                                                        IdentDesignator(
                                                                         niz
                                                                        ) [IdentDesignator]
                                                                        SingleTermExprPositive(
                                                                          SingleFactorTerm(
                                                                            NewTypeArrayFactor(
                                                                              Type(
                                                                               int
                                                                              ) [Type]
                                                                              SingleTermExprPositive(
                                                                                SingleFactorTerm(
                                                                                  NumConstFactor(
                                                                                   3
                                                                                  ) [NumConstFactor]
                                                                                ) [SingleFactorTerm]
                                                                              ) [SingleTermExprPositive]
                                                                            ) [NewTypeArrayFactor]
                                                                          ) [SingleFactorTerm]
                                                                        ) [SingleTermExprPositive]
                                                                      ) [DesignatorStmtAssignCorrect]
                                                                    ) [DesignatorStmtAssign]
                                                                  ) [SingleDesignatorStatement]
                                                                ) [StatementSingle]
                                                              ) [StatementListMultiple]
                                                              StatementSingle(
                                                                SingleDesignatorStatement(
                                                                  DesignatorStmtAssign(
                                                                    DesignatorStmtAssignCorrect(
                                                                      IdentArrayDesignator(
                                                                       niz
                                                                        SingleTermExprPositive(
                                                                          SingleFactorTerm(
                                                                            NumConstFactor(
                                                                             0
                                                                            ) [NumConstFactor]
                                                                          ) [SingleFactorTerm]
                                                                        ) [SingleTermExprPositive]
                                                                      ) [IdentArrayDesignator]
                                                                      SingleTermExprPositive(
                                                                        MultiFactorTerm(
                                                                          SingleFactorTerm(
                                                                            NumConstFactor(
                                                                             1
                                                                            ) [NumConstFactor]
                                                                          ) [SingleFactorTerm]
                                                                          MulopMul(
                                                                          ) [MulopMul]
                                                                          DesignatorEmptyFactor(
                                                                            IdentDesignator(
                                                                             a
                                                                            ) [IdentDesignator]
                                                                          ) [DesignatorEmptyFactor]
                                                                        ) [MultiFactorTerm]
                                                                      ) [SingleTermExprPositive]
                                                                    ) [DesignatorStmtAssignCorrect]
                                                                  ) [DesignatorStmtAssign]
                                                                ) [SingleDesignatorStatement]
                                                              ) [StatementSingle]
                                                            ) [StatementListMultiple]
                                                            StatementSingle(
                                                              SingleDesignatorStatement(
                                                                DesignatorStmtAssign(
                                                                  DesignatorStmtAssignCorrect(
                                                                    IdentArrayDesignator(
                                                                     niz
                                                                      SingleTermExprPositive(
                                                                        SingleFactorTerm(
                                                                          NumConstFactor(
                                                                           1
                                                                          ) [NumConstFactor]
                                                                        ) [SingleFactorTerm]
                                                                      ) [SingleTermExprPositive]
                                                                    ) [IdentArrayDesignator]
                                                                    SingleTermExprPositive(
                                                                      MultiFactorTerm(
                                                                        SingleFactorTerm(
                                                                          NumConstFactor(
                                                                           2
                                                                          ) [NumConstFactor]
                                                                        ) [SingleFactorTerm]
                                                                        MulopMul(
                                                                        ) [MulopMul]
                                                                        DesignatorEmptyFactor(
                                                                          IdentDesignator(
                                                                           a
                                                                          ) [IdentDesignator]
                                                                        ) [DesignatorEmptyFactor]
                                                                      ) [MultiFactorTerm]
                                                                    ) [SingleTermExprPositive]
                                                                  ) [DesignatorStmtAssignCorrect]
                                                                ) [DesignatorStmtAssign]
                                                              ) [SingleDesignatorStatement]
                                                            ) [StatementSingle]
                                                          ) [StatementListMultiple]
                                                          StatementSingle(
                                                            SingleDesignatorStatement(
                                                              DesignatorStmtAssign(
                                                                DesignatorStmtAssignCorrect(
                                                                  IdentArrayDesignator(
                                                                   niz
                                                                    SingleTermExprPositive(
                                                                      SingleFactorTerm(
                                                                        NumConstFactor(
                                                                         2
                                                                        ) [NumConstFactor]
                                                                      ) [SingleFactorTerm]
                                                                    ) [SingleTermExprPositive]
                                                                  ) [IdentArrayDesignator]
                                                                  MultiTermExpr(
                                                                    SingleTermExprPositive(
                                                                      MultiFactorTerm(
                                                                        SingleFactorTerm(
                                                                          MethodCallFactor(
                                                                            MethodCall(
                                                                              IdentDesignator(
                                                                               sum
                                                                              ) [IdentDesignator]
                                                                              ActParsLeftParen(
                                                                              ) [ActParsLeftParen]
                                                                              ActParsYes(
                                                                                ActParsMultiExpr(
                                                                                  ActParsSingleExpr(
                                                                                    SingleTermExprPositive(
                                                                                      SingleFactorTerm(
                                                                                        DesignatorEmptyFactor(
                                                                                          IdentArrayDesignator(
                                                                                           niz
                                                                                            SingleTermExprPositive(
                                                                                              SingleFactorTerm(
                                                                                                NumConstFactor(
                                                                                                 1
                                                                                                ) [NumConstFactor]
                                                                                              ) [SingleFactorTerm]
                                                                                            ) [SingleTermExprPositive]
                                                                                          ) [IdentArrayDesignator]
                                                                                        ) [DesignatorEmptyFactor]
                                                                                      ) [SingleFactorTerm]
                                                                                    ) [SingleTermExprPositive]
                                                                                  ) [ActParsSingleExpr]
                                                                                  SingleTermExprPositive(
                                                                                    SingleFactorTerm(
                                                                                      DesignatorEmptyFactor(
                                                                                        IdentArrayDesignator(
                                                                                         niz
                                                                                          SingleTermExprPositive(
                                                                                            SingleFactorTerm(
                                                                                              NumConstFactor(
                                                                                               0
                                                                                              ) [NumConstFactor]
                                                                                            ) [SingleFactorTerm]
                                                                                          ) [SingleTermExprPositive]
                                                                                        ) [IdentArrayDesignator]
                                                                                      ) [DesignatorEmptyFactor]
                                                                                    ) [SingleFactorTerm]
                                                                                  ) [SingleTermExprPositive]
                                                                                ) [ActParsMultiExpr]
                                                                              ) [ActParsYes]
                                                                              ActParsRightParen(
                                                                              ) [ActParsRightParen]
                                                                            ) [MethodCall]
                                                                          ) [MethodCallFactor]
                                                                        ) [SingleFactorTerm]
                                                                        MulopMul(
                                                                        ) [MulopMul]
                                                                        DesignatorEmptyFactor(
                                                                          IdentDesignator(
                                                                           a
                                                                          ) [IdentDesignator]
                                                                        ) [DesignatorEmptyFactor]
                                                                      ) [MultiFactorTerm]
                                                                    ) [SingleTermExprPositive]
                                                                    AddopPlus(
                                                                    ) [AddopPlus]
                                                                    SingleFactorTerm(
                                                                      NumConstFactor(
                                                                       1
                                                                      ) [NumConstFactor]
                                                                    ) [SingleFactorTerm]
                                                                  ) [MultiTermExpr]
                                                                ) [DesignatorStmtAssignCorrect]
                                                              ) [DesignatorStmtAssign]
                                                            ) [SingleDesignatorStatement]
                                                          ) [StatementSingle]
                                                        ) [StatementListMultiple]
                                                        StatementSingle(
                                                          IfElseStatement(
                                                            IfConditionMultiTerm(
                                                              ConditionSingleTerm(
                                                                CondSingleFactTerm(
                                                                  CondSingleExprFact(
                                                                    SingleTermExprPositive(
                                                                      SingleFactorTerm(
                                                                        MethodCallFactor(
                                                                          MethodCall(
                                                                            IdentDesignator(
                                                                             verify
                                                                            ) [IdentDesignator]
                                                                            ActParsLeftParen(
                                                                            ) [ActParsLeftParen]
                                                                            ActParsNo(
                                                                            ) [ActParsNo]
                                                                            ActParsRightParen(
                                                                            ) [ActParsRightParen]
                                                                          ) [MethodCall]
                                                                        ) [MethodCallFactor]
                                                                      ) [SingleFactorTerm]
                                                                    ) [SingleTermExprPositive]
                                                                  ) [CondSingleExprFact]
                                                                ) [CondSingleFactTerm]
                                                              ) [ConditionSingleTerm]
                                                              CondSingleFactTerm(
                                                                CondMultiExprFact(
                                                                  CondSingleExprFact(
                                                                    SingleTermExprPositive(
                                                                      SingleFactorTerm(
                                                                        DesignatorEmptyFactor(
                                                                          IdentArrayDesignator(
                                                                           niz
                                                                            SingleTermExprPositive(
                                                                              SingleFactorTerm(
                                                                                NumConstFactor(
                                                                                 2
                                                                                ) [NumConstFactor]
                                                                              ) [SingleFactorTerm]
                                                                            ) [SingleTermExprPositive]
                                                                          ) [IdentArrayDesignator]
                                                                        ) [DesignatorEmptyFactor]
                                                                      ) [SingleFactorTerm]
                                                                    ) [SingleTermExprPositive]
                                                                  ) [CondSingleExprFact]
                                                                  RelopEQUAL(
                                                                  ) [RelopEQUAL]
                                                                  SingleTermExprPositive(
                                                                    SingleFactorTerm(
                                                                      NumConstFactor(
                                                                       4
                                                                      ) [NumConstFactor]
                                                                    ) [SingleFactorTerm]
                                                                  ) [SingleTermExprPositive]
                                                                ) [CondMultiExprFact]
                                                              ) [CondSingleFactTerm]
                                                            ) [IfConditionMultiTerm]
                                                            StatementSingle(
                                                              SinglePrintStatement(
                                                                SingleTermExprPositive(
                                                                  SingleFactorTerm(
                                                                    MethodCallFactor(
                                                                      MethodCall(
                                                                        IdentDesignator(
                                                                         ord
                                                                        ) [IdentDesignator]
                                                                        ActParsLeftParen(
                                                                        ) [ActParsLeftParen]
                                                                        ActParsYes(
                                                                          ActParsSingleExpr(
                                                                            SingleTermExprPositive(
                                                                              SingleFactorTerm(
                                                                                CharConstFactor(
                                                                                 A
                                                                                ) [CharConstFactor]
                                                                              ) [SingleFactorTerm]
                                                                            ) [SingleTermExprPositive]
                                                                          ) [ActParsSingleExpr]
                                                                        ) [ActParsYes]
                                                                        ActParsRightParen(
                                                                        ) [ActParsRightParen]
                                                                      ) [MethodCall]
                                                                    ) [MethodCallFactor]
                                                                  ) [SingleFactorTerm]
                                                                ) [SingleTermExprPositive]
                                                                NumConstNo(
                                                                ) [NumConstNo]
                                                              ) [SinglePrintStatement]
                                                            ) [StatementSingle]
                                                            StatementSingle(
                                                              SinglePrintStatement(
                                                                SingleTermExprPositive(
                                                                  SingleFactorTerm(
                                                                    MethodCallFactor(
                                                                      MethodCall(
                                                                        IdentDesignator(
                                                                         ord
                                                                        ) [IdentDesignator]
                                                                        ActParsLeftParen(
                                                                        ) [ActParsLeftParen]
                                                                        ActParsYes(
                                                                          ActParsSingleExpr(
                                                                            SingleTermExprPositive(
                                                                              SingleFactorTerm(
                                                                                CharConstFactor(
                                                                                 a
                                                                                ) [CharConstFactor]
                                                                              ) [SingleFactorTerm]
                                                                            ) [SingleTermExprPositive]
                                                                          ) [ActParsSingleExpr]
                                                                        ) [ActParsYes]
                                                                        ActParsRightParen(
                                                                        ) [ActParsRightParen]
                                                                      ) [MethodCall]
                                                                    ) [MethodCallFactor]
                                                                  ) [SingleFactorTerm]
                                                                ) [SingleTermExprPositive]
                                                                NumConstNo(
                                                                ) [NumConstNo]
                                                              ) [SinglePrintStatement]
                                                            ) [StatementSingle]
                                                          ) [IfElseStatement]
                                                        ) [StatementSingle]
                                                      ) [StatementListMultiple]
                                                      StatementSingle(
                                                        SinglePrintStatement(
                                                          SingleTermExprPositive(
                                                            SingleFactorTerm(
                                                              DesignatorEmptyFactor(
                                                                IdentDesignator(
                                                                 eol
                                                                ) [IdentDesignator]
                                                              ) [DesignatorEmptyFactor]
                                                            ) [SingleFactorTerm]
                                                          ) [SingleTermExprPositive]
                                                          NumConstNo(
                                                          ) [NumConstNo]
                                                        ) [SinglePrintStatement]
                                                      ) [StatementSingle]
                                                    ) [StatementListMultiple]
                                                    StatementSingle(
                                                      SingleDesignatorStatement(
                                                        DesignatorStmtAssign(
                                                          DesignatorStmtAssignCorrect(
                                                            IdentDesignator(
                                                             i
                                                            ) [IdentDesignator]
                                                            SingleTermExprPositive(
                                                              SingleFactorTerm(
                                                                NumConstFactor(
                                                                 0
                                                                ) [NumConstFactor]
                                                              ) [SingleFactorTerm]
                                                            ) [SingleTermExprPositive]
                                                          ) [DesignatorStmtAssignCorrect]
                                                        ) [DesignatorStmtAssign]
                                                      ) [SingleDesignatorStatement]
                                                    ) [StatementSingle]
                                                  ) [StatementListMultiple]
                                                  StatementSingle(
                                                    DoWhileStatement(
                                                      DoEnter(
                                                      ) [DoEnter]
                                                      StatementListMultiple(
                                                        StatementListNo(
                                                        ) [StatementListNo]
                                                        StatementMultiple(
                                                          StatementsInBraces(
                                                            StatementListMultiple(
                                                              StatementListMultiple(
                                                                StatementListMultiple(
                                                                  StatementListNo(
                                                                  ) [StatementListNo]
                                                                  StatementSingle(
                                                                    IfStatement(
                                                                      IfConditionSingleTerm(
                                                                        CondSingleFactTerm(
                                                                          CondMultiExprFact(
                                                                            CondSingleExprFact(
                                                                              SingleTermExprPositive(
                                                                                SingleFactorTerm(
                                                                                  DesignatorEmptyFactor(
                                                                                    IdentDesignator(
                                                                                     i
                                                                                    ) [IdentDesignator]
                                                                                  ) [DesignatorEmptyFactor]
                                                                                ) [SingleFactorTerm]
                                                                              ) [SingleTermExprPositive]
                                                                            ) [CondSingleExprFact]
                                                                            RelopEQUAL(
                                                                            ) [RelopEQUAL]
                                                                            SingleTermExprPositive(
                                                                              SingleFactorTerm(
                                                                                NumConstFactor(
                                                                                 3
                                                                                ) [NumConstFactor]
                                                                              ) [SingleFactorTerm]
                                                                            ) [SingleTermExprPositive]
                                                                          ) [CondMultiExprFact]
                                                                        ) [CondSingleFactTerm]
                                                                      ) [IfConditionSingleTerm]
                                                                      StatementMultiple(
                                                                        StatementsInBraces(
                                                                          StatementListMultiple(
                                                                            StatementListMultiple(
                                                                              StatementListNo(
                                                                              ) [StatementListNo]
                                                                              StatementSingle(
                                                                                SingleDesignatorStatement(
                                                                                  DesignatorStmtPlusPlus(
                                                                                    IdentDesignator(
                                                                                     i
                                                                                    ) [IdentDesignator]
                                                                                  ) [DesignatorStmtPlusPlus]
                                                                                ) [SingleDesignatorStatement]
                                                                              ) [StatementSingle]
                                                                            ) [StatementListMultiple]
                                                                            StatementSingle(
                                                                              SingleContinueStatement(
                                                                              ) [SingleContinueStatement]
                                                                            ) [StatementSingle]
                                                                          ) [StatementListMultiple]
                                                                        ) [StatementsInBraces]
                                                                      ) [StatementMultiple]
                                                                    ) [IfStatement]
                                                                  ) [StatementSingle]
                                                                ) [StatementListMultiple]
                                                                StatementSingle(
                                                                  IfStatement(
                                                                    IfConditionSingleTerm(
                                                                      CondSingleFactTerm(
                                                                        CondMultiExprFact(
                                                                          CondSingleExprFact(
                                                                            SingleTermExprPositive(
                                                                              SingleFactorTerm(
                                                                                DesignatorEmptyFactor(
                                                                                  IdentDesignator(
                                                                                   i
                                                                                  ) [IdentDesignator]
                                                                                ) [DesignatorEmptyFactor]
                                                                              ) [SingleFactorTerm]
                                                                            ) [SingleTermExprPositive]
                                                                          ) [CondSingleExprFact]
                                                                          RelopEQUAL(
                                                                          ) [RelopEQUAL]
                                                                          SingleTermExprPositive(
                                                                            SingleFactorTerm(
                                                                              NumConstFactor(
                                                                               4
                                                                              ) [NumConstFactor]
                                                                            ) [SingleFactorTerm]
                                                                          ) [SingleTermExprPositive]
                                                                        ) [CondMultiExprFact]
                                                                      ) [CondSingleFactTerm]
                                                                    ) [IfConditionSingleTerm]
                                                                    StatementSingle(
                                                                      SingleBreakStatement(
                                                                      ) [SingleBreakStatement]
                                                                    ) [StatementSingle]
                                                                  ) [IfStatement]
                                                                ) [StatementSingle]
                                                              ) [StatementListMultiple]
                                                              StatementSingle(
                                                                SingleDesignatorStatement(
                                                                  DesignatorStmtAssign(
                                                                    DesignatorStmtAssignCorrect(
                                                                      IdentDesignator(
                                                                       i
                                                                      ) [IdentDesignator]
                                                                      SingleTermExprPositive(
                                                                        SingleFactorTerm(
                                                                          MethodCallFactor(
                                                                            MethodCall(
                                                                              IdentDesignator(
                                                                               inkrement
                                                                              ) [IdentDesignator]
                                                                              ActParsLeftParen(
                                                                              ) [ActParsLeftParen]
                                                                              ActParsYes(
                                                                                ActParsMultiExpr(
                                                                                  ActParsSingleExpr(
                                                                                    SingleTermExprPositive(
                                                                                      SingleFactorTerm(
                                                                                        DesignatorEmptyFactor(
                                                                                          IdentDesignator(
                                                                                           i
                                                                                          ) [IdentDesignator]
                                                                                        ) [DesignatorEmptyFactor]
                                                                                      ) [SingleFactorTerm]
                                                                                    ) [SingleTermExprPositive]
                                                                                  ) [ActParsSingleExpr]
                                                                                  SingleTermExprPositive(
                                                                                    SingleFactorTerm(
                                                                                      NumConstFactor(
                                                                                       1
                                                                                      ) [NumConstFactor]
                                                                                    ) [SingleFactorTerm]
                                                                                  ) [SingleTermExprPositive]
                                                                                ) [ActParsMultiExpr]
                                                                              ) [ActParsYes]
                                                                              ActParsRightParen(
                                                                              ) [ActParsRightParen]
                                                                            ) [MethodCall]
                                                                          ) [MethodCallFactor]
                                                                        ) [SingleFactorTerm]
                                                                      ) [SingleTermExprPositive]
                                                                    ) [DesignatorStmtAssignCorrect]
                                                                  ) [DesignatorStmtAssign]
                                                                ) [SingleDesignatorStatement]
                                                              ) [StatementSingle]
                                                            ) [StatementListMultiple]
                                                          ) [StatementsInBraces]
                                                        ) [StatementMultiple]
                                                      ) [StatementListMultiple]
                                                      ConditionSingleTerm(
                                                        CondSingleFactTerm(
                                                          CondMultiExprFact(
                                                            CondSingleExprFact(
                                                              SingleTermExprPositive(
                                                                SingleFactorTerm(
                                                                  DesignatorEmptyFactor(
                                                                    IdentDesignator(
                                                                     i
                                                                    ) [IdentDesignator]
                                                                  ) [DesignatorEmptyFactor]
                                                                ) [SingleFactorTerm]
                                                              ) [SingleTermExprPositive]
                                                            ) [CondSingleExprFact]
                                                            RelopLS(
                                                            ) [RelopLS]
                                                            SingleTermExprPositive(
                                                              SingleFactorTerm(
                                                                NumConstFactor(
                                                                 10
                                                                ) [NumConstFactor]
                                                              ) [SingleFactorTerm]
                                                            ) [SingleTermExprPositive]
                                                          ) [CondMultiExprFact]
                                                        ) [CondSingleFactTerm]
                                                      ) [ConditionSingleTerm]
                                                    ) [DoWhileStatement]
                                                  ) [StatementSingle]
                                                ) [StatementListMultiple]
                                                StatementSingle(
                                                  IfElseStatement(
                                                    IfConditionSingleTerm(
                                                      CondMultiFactTerm(
                                                        CondSingleFactTerm(
                                                          CondMultiExprFact(
                                                            CondSingleExprFact(
                                                              SingleTermExprPositive(
                                                                SingleFactorTerm(
                                                                  DesignatorEmptyFactor(
                                                                    IdentDesignator(
                                                                     i
                                                                    ) [IdentDesignator]
                                                                  ) [DesignatorEmptyFactor]
                                                                ) [SingleFactorTerm]
                                                              ) [SingleTermExprPositive]
                                                            ) [CondSingleExprFact]
                                                            RelopEQUAL(
                                                            ) [RelopEQUAL]
                                                            SingleTermExprPositive(
                                                              SingleFactorTerm(
                                                                NumConstFactor(
                                                                 3
                                                                ) [NumConstFactor]
                                                              ) [SingleFactorTerm]
                                                            ) [SingleTermExprPositive]
                                                          ) [CondMultiExprFact]
                                                        ) [CondSingleFactTerm]
                                                        CondSingleExprFact(
                                                          SingleTermExprPositive(
                                                            SingleFactorTerm(
                                                              MethodCallFactor(
                                                                MethodCall(
                                                                  IdentDesignator(
                                                                   verify
                                                                  ) [IdentDesignator]
                                                                  ActParsLeftParen(
                                                                  ) [ActParsLeftParen]
                                                                  ActParsNo(
                                                                  ) [ActParsNo]
                                                                  ActParsRightParen(
                                                                  ) [ActParsRightParen]
                                                                ) [MethodCall]
                                                              ) [MethodCallFactor]
                                                            ) [SingleFactorTerm]
                                                          ) [SingleTermExprPositive]
                                                        ) [CondSingleExprFact]
                                                      ) [CondMultiFactTerm]
                                                    ) [IfConditionSingleTerm]
                                                    StatementSingle(
                                                      SinglePrintStatement(
                                                        SingleTermExprNegative(
                                                          SingleFactorTerm(
                                                            NumConstFactor(
                                                             4
                                                            ) [NumConstFactor]
                                                          ) [SingleFactorTerm]
                                                        ) [SingleTermExprNegative]
                                                        NumConstNo(
                                                        ) [NumConstNo]
                                                      ) [SinglePrintStatement]
                                                    ) [StatementSingle]
                                                    StatementSingle(
                                                      SinglePrintStatement(
                                                        SingleTermExprPositive(
                                                          SingleFactorTerm(
                                                            NumConstFactor(
                                                             4
                                                            ) [NumConstFactor]
                                                          ) [SingleFactorTerm]
                                                        ) [SingleTermExprPositive]
                                                        NumConstNo(
                                                        ) [NumConstNo]
                                                      ) [SinglePrintStatement]
                                                    ) [StatementSingle]
                                                  ) [IfElseStatement]
                                                ) [StatementSingle]
                                              ) [StatementListMultiple]
                                              StatementSingle(
                                                SingleReadStatement(
                                                  IdentArrayDesignator(
                                                   niz
                                                    SingleTermExprPositive(
                                                      SingleFactorTerm(
                                                        NumConstFactor(
                                                         0
                                                        ) [NumConstFactor]
                                                      ) [SingleFactorTerm]
                                                    ) [SingleTermExprPositive]
                                                  ) [IdentArrayDesignator]
                                                ) [SingleReadStatement]
                                              ) [StatementSingle]
                                            ) [StatementListMultiple]
                                            StatementSingle(
                                              SingleReadStatement(
                                                IdentArrayDesignator(
                                                 niz
                                                  SingleTermExprPositive(
                                                    SingleFactorTerm(
                                                      NumConstFactor(
                                                       1
                                                      ) [NumConstFactor]
                                                    ) [SingleFactorTerm]
                                                  ) [SingleTermExprPositive]
                                                ) [IdentArrayDesignator]
                                              ) [SingleReadStatement]
                                            ) [StatementSingle]
                                          ) [StatementListMultiple]
                                          StatementSingle(
                                            SingleReadStatement(
                                              IdentArrayDesignator(
                                               niz
                                                SingleTermExprPositive(
                                                  SingleFactorTerm(
                                                    NumConstFactor(
                                                     2
                                                    ) [NumConstFactor]
                                                  ) [SingleFactorTerm]
                                                ) [SingleTermExprPositive]
                                              ) [IdentArrayDesignator]
                                            ) [SingleReadStatement]
                                          ) [StatementSingle]
                                        ) [StatementListMultiple]
                                        StatementSingle(
                                          SinglePrintStatement(
                                            SingleTermExprPositive(
                                              SingleFactorTerm(
                                                DesignatorEmptyFactor(
                                                  IdentDesignator(
                                                   eol
                                                  ) [IdentDesignator]
                                                ) [DesignatorEmptyFactor]
                                              ) [SingleFactorTerm]
                                            ) [SingleTermExprPositive]
                                            NumConstNo(
                                            ) [NumConstNo]
                                          ) [SinglePrintStatement]
                                        ) [StatementSingle]
                                      ) [StatementListMultiple]
                                      StatementSingle(
                                        SinglePrintStatement(
                                          SingleTermExprPositive(
                                            SingleFactorTerm(
                                              MethodCallFactor(
                                                MethodCall(
                                                  IdentDesignator(
                                                   sum
                                                  ) [IdentDesignator]
                                                  ActParsLeftParen(
                                                  ) [ActParsLeftParen]
                                                  ActParsYes(
                                                    ActParsMultiExpr(
                                                      ActParsSingleExpr(
                                                        SingleTermExprPositive(
                                                          SingleFactorTerm(
                                                            MethodCallFactor(
                                                              MethodCall(
                                                                IdentDesignator(
                                                                 sum
                                                                ) [IdentDesignator]
                                                                ActParsLeftParen(
                                                                ) [ActParsLeftParen]
                                                                ActParsYes(
                                                                  ActParsMultiExpr(
                                                                    ActParsSingleExpr(
                                                                      SingleTermExprPositive(
                                                                        SingleFactorTerm(
                                                                          DesignatorEmptyFactor(
                                                                            IdentArrayDesignator(
                                                                             niz
                                                                              SingleTermExprPositive(
                                                                                SingleFactorTerm(
                                                                                  NumConstFactor(
                                                                                   0
                                                                                  ) [NumConstFactor]
                                                                                ) [SingleFactorTerm]
                                                                              ) [SingleTermExprPositive]
                                                                            ) [IdentArrayDesignator]
                                                                          ) [DesignatorEmptyFactor]
                                                                        ) [SingleFactorTerm]
                                                                      ) [SingleTermExprPositive]
                                                                    ) [ActParsSingleExpr]
                                                                    SingleTermExprPositive(
                                                                      SingleFactorTerm(
                                                                        DesignatorEmptyFactor(
                                                                          IdentArrayDesignator(
                                                                           niz
                                                                            SingleTermExprPositive(
                                                                              SingleFactorTerm(
                                                                                NumConstFactor(
                                                                                 1
                                                                                ) [NumConstFactor]
                                                                              ) [SingleFactorTerm]
                                                                            ) [SingleTermExprPositive]
                                                                          ) [IdentArrayDesignator]
                                                                        ) [DesignatorEmptyFactor]
                                                                      ) [SingleFactorTerm]
                                                                    ) [SingleTermExprPositive]
                                                                  ) [ActParsMultiExpr]
                                                                ) [ActParsYes]
                                                                ActParsRightParen(
                                                                ) [ActParsRightParen]
                                                              ) [MethodCall]
                                                            ) [MethodCallFactor]
                                                          ) [SingleFactorTerm]
                                                        ) [SingleTermExprPositive]
                                                      ) [ActParsSingleExpr]
                                                      SingleTermExprPositive(
                                                        SingleFactorTerm(
                                                          DesignatorEmptyFactor(
                                                            IdentArrayDesignator(
                                                             niz
                                                              SingleTermExprPositive(
                                                                SingleFactorTerm(
                                                                  NumConstFactor(
                                                                   2
                                                                  ) [NumConstFactor]
                                                                ) [SingleFactorTerm]
                                                              ) [SingleTermExprPositive]
                                                            ) [IdentArrayDesignator]
                                                          ) [DesignatorEmptyFactor]
                                                        ) [SingleFactorTerm]
                                                      ) [SingleTermExprPositive]
                                                    ) [ActParsMultiExpr]
                                                  ) [ActParsYes]
                                                  ActParsRightParen(
                                                  ) [ActParsRightParen]
                                                ) [MethodCall]
                                              ) [MethodCallFactor]
                                            ) [SingleFactorTerm]
                                          ) [SingleTermExprPositive]
                                          NumConstNo(
                                          ) [NumConstNo]
                                        ) [SinglePrintStatement]
                                      ) [StatementSingle]
                                    ) [StatementListMultiple]
                                    StatementSingle(
                                      SinglePrintStatement(
                                        SingleTermExprPositive(
                                          SingleFactorTerm(
                                            DesignatorEmptyFactor(
                                              IdentDesignator(
                                               eol
                                              ) [IdentDesignator]
                                            ) [DesignatorEmptyFactor]
                                          ) [SingleFactorTerm]
                                        ) [SingleTermExprPositive]
                                        NumConstNo(
                                        ) [NumConstNo]
                                      ) [SinglePrintStatement]
                                    ) [StatementSingle]
                                  ) [StatementListMultiple]
                                  StatementSingle(
                                    SinglePrintStatement(
                                      SingleTermExprPositive(
                                        SingleFactorTerm(
                                          MethodCallFactor(
                                            MethodCall(
                                              IdentDesignator(
                                               inkrement
                                              ) [IdentDesignator]
                                              ActParsLeftParen(
                                              ) [ActParsLeftParen]
                                              ActParsYes(
                                                ActParsMultiExpr(
                                                  ActParsSingleExpr(
                                                    SingleTermExprPositive(
                                                      SingleFactorTerm(
                                                        DesignatorEmptyFactor(
                                                          IdentArrayDesignator(
                                                           niz
                                                            SingleTermExprPositive(
                                                              SingleFactorTerm(
                                                                NumConstFactor(
                                                                 2
                                                                ) [NumConstFactor]
                                                              ) [SingleFactorTerm]
                                                            ) [SingleTermExprPositive]
                                                          ) [IdentArrayDesignator]
                                                        ) [DesignatorEmptyFactor]
                                                      ) [SingleFactorTerm]
                                                    ) [SingleTermExprPositive]
                                                  ) [ActParsSingleExpr]
                                                  SingleTermExprPositive(
                                                    SingleFactorTerm(
                                                      NumConstFactor(
                                                       2
                                                      ) [NumConstFactor]
                                                    ) [SingleFactorTerm]
                                                  ) [SingleTermExprPositive]
                                                ) [ActParsMultiExpr]
                                              ) [ActParsYes]
                                              ActParsRightParen(
                                              ) [ActParsRightParen]
                                            ) [MethodCall]
                                          ) [MethodCallFactor]
                                        ) [SingleFactorTerm]
                                      ) [SingleTermExprPositive]
                                      NumConstNo(
                                      ) [NumConstNo]
                                    ) [SinglePrintStatement]
                                  ) [StatementSingle]
                                ) [StatementListMultiple]
                                StatementSingle(
                                  SingleDesignatorStatement(
                                    DesignatorStmtAssign(
                                      DesignatorStmtAssignCorrect(
                                        IdentDesignator(
                                         a
                                        ) [IdentDesignator]
                                        SingleTermExprPositive(
                                          SingleFactorTerm(
                                            NumConstFactor(
                                             3
                                            ) [NumConstFactor]
                                          ) [SingleFactorTerm]
                                        ) [SingleTermExprPositive]
                                      ) [DesignatorStmtAssignCorrect]
                                    ) [DesignatorStmtAssign]
                                  ) [SingleDesignatorStatement]
                                ) [StatementSingle]
                              ) [StatementListMultiple]
                              StatementSingle(
                                SingleDesignatorStatement(
                                  DesignatorStmtAssign(
                                    DesignatorStmtAssignCorrect(
                                      IdentDesignator(
                                       i
                                      ) [IdentDesignator]
                                      SingleTermExprPositive(
                                        SingleFactorTerm(
                                          NumConstFactor(
                                           0
                                          ) [NumConstFactor]
                                        ) [SingleFactorTerm]
                                      ) [SingleTermExprPositive]
                                    ) [DesignatorStmtAssignCorrect]
                                  ) [DesignatorStmtAssign]
                                ) [SingleDesignatorStatement]
                              ) [StatementSingle]
                            ) [StatementListMultiple]
                            StatementSingle(
                              DoWhileStatement(
                                DoEnter(
                                ) [DoEnter]
                                StatementListMultiple(
                                  StatementListNo(
                                  ) [StatementListNo]
                                  StatementMultiple(
                                    StatementsInBraces(
                                      StatementListMultiple(
                                        StatementListMultiple(
                                          StatementListNo(
                                          ) [StatementListNo]
                                          StatementSingle(
                                            SingleDesignatorStatement(
                                              DesignatorStmtAssign(
                                                DesignatorStmtAssignCorrect(
                                                  IdentArrayDesignator(
                                                   niz
                                                    SingleTermExprPositive(
                                                      SingleFactorTerm(
                                                        DesignatorEmptyFactor(
                                                          IdentDesignator(
                                                           i
                                                          ) [IdentDesignator]
                                                        ) [DesignatorEmptyFactor]
                                                      ) [SingleFactorTerm]
                                                    ) [SingleTermExprPositive]
                                                  ) [IdentArrayDesignator]
                                                  SingleTermExprPositive(
                                                    MultiFactorTerm(
                                                      MultiFactorTerm(
                                                        SingleFactorTerm(
                                                          DesignatorEmptyFactor(
                                                            IdentArrayDesignator(
                                                             niz
                                                              SingleTermExprPositive(
                                                                SingleFactorTerm(
                                                                  DesignatorEmptyFactor(
                                                                    IdentDesignator(
                                                                     i
                                                                    ) [IdentDesignator]
                                                                  ) [DesignatorEmptyFactor]
                                                                ) [SingleFactorTerm]
                                                              ) [SingleTermExprPositive]
                                                            ) [IdentArrayDesignator]
                                                          ) [DesignatorEmptyFactor]
                                                        ) [SingleFactorTerm]
                                                        MulopMul(
                                                        ) [MulopMul]
                                                        NumConstFactor(
                                                         2
                                                        ) [NumConstFactor]
                                                      ) [MultiFactorTerm]
                                                      MulopMul(
                                                      ) [MulopMul]
                                                      DesignatorEmptyFactor(
                                                        IdentDesignator(
                                                         a
                                                        ) [IdentDesignator]
                                                      ) [DesignatorEmptyFactor]
                                                    ) [MultiFactorTerm]
                                                  ) [SingleTermExprPositive]
                                                ) [DesignatorStmtAssignCorrect]
                                              ) [DesignatorStmtAssign]
                                            ) [SingleDesignatorStatement]
                                          ) [StatementSingle]
                                        ) [StatementListMultiple]
                                        StatementSingle(
                                          SingleDesignatorStatement(
                                            DesignatorStmtPlusPlus(
                                              IdentDesignator(
                                               i
                                              ) [IdentDesignator]
                                            ) [DesignatorStmtPlusPlus]
                                          ) [SingleDesignatorStatement]
                                        ) [StatementSingle]
                                      ) [StatementListMultiple]
                                    ) [StatementsInBraces]
                                  ) [StatementMultiple]
                                ) [StatementListMultiple]
                                ConditionSingleTerm(
                                  CondSingleFactTerm(
                                    CondMultiExprFact(
                                      CondSingleExprFact(
                                        SingleTermExprPositive(
                                          SingleFactorTerm(
                                            DesignatorEmptyFactor(
                                              IdentDesignator(
                                               i
                                              ) [IdentDesignator]
                                            ) [DesignatorEmptyFactor]
                                          ) [SingleFactorTerm]
                                        ) [SingleTermExprPositive]
                                      ) [CondSingleExprFact]
                                      RelopLS(
                                      ) [RelopLS]
                                      SingleTermExprPositive(
                                        SingleFactorTerm(
                                          NumConstFactor(
                                           3
                                          ) [NumConstFactor]
                                        ) [SingleFactorTerm]
                                      ) [SingleTermExprPositive]
                                    ) [CondMultiExprFact]
                                  ) [CondSingleFactTerm]
                                ) [ConditionSingleTerm]
                              ) [DoWhileStatement]
                            ) [StatementSingle]
                          ) [StatementListMultiple]
                          StatementSingle(
                            SinglePrintStatement(
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentArrayDesignator(
                                     niz
                                      SingleTermExprPositive(
                                        SingleFactorTerm(
                                          NumConstFactor(
                                           0
                                          ) [NumConstFactor]
                                        ) [SingleFactorTerm]
                                      ) [SingleTermExprPositive]
                                    ) [IdentArrayDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                              NumConstNo(
                              ) [NumConstNo]
                            ) [SinglePrintStatement]
                          ) [StatementSingle]
                        ) [StatementListMultiple]
                        StatementSingle(
                          SinglePrintStatement(
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                DesignatorEmptyFactor(
                                  IdentArrayDesignator(
                                   niz
                                    SingleTermExprPositive(
                                      SingleFactorTerm(
                                        NumConstFactor(
                                         1
                                        ) [NumConstFactor]
                                      ) [SingleFactorTerm]
                                    ) [SingleTermExprPositive]
                                  ) [IdentArrayDesignator]
                                ) [DesignatorEmptyFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                            NumConstNo(
                            ) [NumConstNo]
                          ) [SinglePrintStatement]
                        ) [StatementSingle]
                      ) [StatementListMultiple]
                      StatementSingle(
                        SinglePrintStatement(
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              DesignatorEmptyFactor(
                                IdentArrayDesignator(
                                 niz
                                  SingleTermExprPositive(
                                    SingleFactorTerm(
                                      NumConstFactor(
                                       2
                                      ) [NumConstFactor]
                                    ) [SingleFactorTerm]
                                  ) [SingleTermExprPositive]
                                ) [IdentArrayDesignator]
                              ) [DesignatorEmptyFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                          NumConstNo(
                          ) [NumConstNo]
                        ) [SinglePrintStatement]
                      ) [StatementSingle]
                    ) [StatementListMultiple]
                    StatementSingle(
                      SinglePrintStatement(
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            DesignatorEmptyFactor(
                              IdentDesignator(
                               eol
                              ) [IdentDesignator]
                            ) [DesignatorEmptyFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                        NumConstNo(
                        ) [NumConstNo]
                      ) [SinglePrintStatement]
                    ) [StatementSingle]
                  ) [StatementListMultiple]
                  StatementSingle(
                    SingleDesignatorStatement(
                      DesignatorStmtAssign(
                        DesignatorStmtAssignCorrect(
                          IdentDesignator(
                           i
                          ) [IdentDesignator]
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              NumConstFactor(
                               0
                              ) [NumConstFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [DesignatorStmtAssignCorrect]
                      ) [DesignatorStmtAssign]
                    ) [SingleDesignatorStatement]
                  ) [StatementSingle]
                ) [StatementListMultiple]
                StatementSingle(
                  SingleDesignatorStatement(
                    DesignatorStmtAssign(
                      DesignatorStmtAssignCorrect(
                        IdentDesignator(
                         niz2
                        ) [IdentDesignator]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            NumConstFactor(
                             0
                            ) [NumConstFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [DesignatorStmtAssignCorrect]
                    ) [DesignatorStmtAssign]
                  ) [SingleDesignatorStatement]
                ) [StatementSingle]
              ) [StatementListMultiple]
              StatementSingle(
                DoWhileStatement(
                  DoEnter(
                  ) [DoEnter]
                  StatementListMultiple(
                    StatementListNo(
                    ) [StatementListNo]
                    StatementMultiple(
                      StatementsInBraces(
                        StatementListMultiple(
                          StatementListMultiple(
                            StatementListNo(
                            ) [StatementListNo]
                            StatementSingle(
                              SingleDesignatorStatement(
                                DesignatorStmtAssign(
                                  DesignatorStmtAssignCorrect(
                                    IdentDesignator(
                                     niz2
                                    ) [IdentDesignator]
                                    MultiTermExpr(
                                      SingleTermExprPositive(
                                        SingleFactorTerm(
                                          DesignatorEmptyFactor(
                                            IdentDesignator(
                                             niz2
                                            ) [IdentDesignator]
                                          ) [DesignatorEmptyFactor]
                                        ) [SingleFactorTerm]
                                      ) [SingleTermExprPositive]
                                      AddopPlus(
                                      ) [AddopPlus]
                                      MultiFactorTerm(
                                        SingleFactorTerm(
                                          DesignatorEmptyFactor(
                                            IdentArrayDesignator(
                                             niz
                                              SingleTermExprPositive(
                                                SingleFactorTerm(
                                                  DesignatorEmptyFactor(
                                                    IdentDesignator(
                                                     i
                                                    ) [IdentDesignator]
                                                  ) [DesignatorEmptyFactor]
                                                ) [SingleFactorTerm]
                                              ) [SingleTermExprPositive]
                                            ) [IdentArrayDesignator]
                                          ) [DesignatorEmptyFactor]
                                        ) [SingleFactorTerm]
                                        MulopMul(
                                        ) [MulopMul]
                                        DesignatorEmptyFactor(
                                          IdentArrayDesignator(
                                           niz
                                            SingleTermExprPositive(
                                              SingleFactorTerm(
                                                DesignatorEmptyFactor(
                                                  IdentDesignator(
                                                   i
                                                  ) [IdentDesignator]
                                                ) [DesignatorEmptyFactor]
                                              ) [SingleFactorTerm]
                                            ) [SingleTermExprPositive]
                                          ) [IdentArrayDesignator]
                                        ) [DesignatorEmptyFactor]
                                      ) [MultiFactorTerm]
                                    ) [MultiTermExpr]
                                  ) [DesignatorStmtAssignCorrect]
                                ) [DesignatorStmtAssign]
                              ) [SingleDesignatorStatement]
                            ) [StatementSingle]
                          ) [StatementListMultiple]
                          StatementSingle(
                            SingleDesignatorStatement(
                              DesignatorStmtPlusPlus(
                                IdentDesignator(
                                 i
                                ) [IdentDesignator]
                              ) [DesignatorStmtPlusPlus]
                            ) [SingleDesignatorStatement]
                          ) [StatementSingle]
                        ) [StatementListMultiple]
                      ) [StatementsInBraces]
                    ) [StatementMultiple]
                  ) [StatementListMultiple]
                  ConditionSingleTerm(
                    CondSingleFactTerm(
                      CondMultiExprFact(
                        CondSingleExprFact(
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              DesignatorEmptyFactor(
                                IdentDesignator(
                                 i
                                ) [IdentDesignator]
                              ) [DesignatorEmptyFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [CondSingleExprFact]
                        RelopLS(
                        ) [RelopLS]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            NumConstFactor(
                             3
                            ) [NumConstFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [CondMultiExprFact]
                    ) [CondSingleFactTerm]
                  ) [ConditionSingleTerm]
                ) [DoWhileStatement]
              ) [StatementSingle]
            ) [StatementListMultiple]
            StatementSingle(
              SinglePrintStatement(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    DesignatorEmptyFactor(
                      IdentDesignator(
                       niz2
                      ) [IdentDesignator]
                    ) [DesignatorEmptyFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
                NumConstNo(
                ) [NumConstNo]
              ) [SinglePrintStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
          StatementSingle(
            SinglePrintStatement(
              SingleTermExprPositive(
                SingleFactorTerm(
                  DesignatorEmptyFactor(
                    IdentDesignator(
                     eol
                    ) [IdentDesignator]
                  ) [DesignatorEmptyFactor]
                ) [SingleFactorTerm]
              ) [SingleTermExprPositive]
              NumConstNo(
              ) [NumConstNo]
            ) [SinglePrintStatement]
          ) [StatementSingle]
        ) [StatementListMultiple]
        StatementSingle(
          SingleDesignatorStatement(
            DesignatorStmtMethodCall(
              MethodCall(
                IdentDesignator(
                 printArgs
                ) [IdentDesignator]
                ActParsLeftParen(
                ) [ActParsLeftParen]
                ActParsYes(
                  ActParsMultiExpr(
                    ActParsMultiExpr(
                      ActParsMultiExpr(
                        ActParsMultiExpr(
                          ActParsMultiExpr(
                            ActParsSingleExpr(
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  NumConstFactor(
                                   5
                                  ) [NumConstFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [ActParsSingleExpr]
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                CharConstFactor(
                                 t
                                ) [CharConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [ActParsMultiExpr]
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              CharConstFactor(
                               e
                              ) [CharConstFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [ActParsMultiExpr]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            CharConstFactor(
                             s
                            ) [CharConstFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [ActParsMultiExpr]
                      SingleTermExprPositive(
                        SingleFactorTerm(
                          CharConstFactor(
                           t
                          ) [CharConstFactor]
                        ) [SingleFactorTerm]
                      ) [SingleTermExprPositive]
                    ) [ActParsMultiExpr]
                    SingleTermExprPositive(
                      SingleFactorTerm(
                        CharConstFactor(
                         B
                        ) [CharConstFactor]
                      ) [SingleFactorTerm]
                    ) [SingleTermExprPositive]
                  ) [ActParsMultiExpr]
                ) [ActParsYes]
                ActParsRightParen(
                ) [ActParsRightParen]
              ) [MethodCall]
            ) [DesignatorStmtMethodCall]
          ) [SingleDesignatorStatement]
        ) [StatementSingle]
      ) [StatementListMultiple]
    ) [MethodDeclaration]
  ) [MethodDeclListMultiple]
) [Program]
INFO  21:11:59,423 - ===================================
ERROR 21:11:59,427 - Line 20: Symbol args is not defined.
ERROR 21:11:59,427 - Line 21: Symbol args is not defined.
INFO  21:11:59,427 - Line 30: Access to array element detected. Array name: args
INFO  21:11:59,427 - Line 40: Method Call detected. Method name: sum
ERROR 21:11:59,427 - Line 40: Invalid number of function parameters.
INFO  21:19:25,909 - Compiling source file: D:\source\repos\PP_Projekat\MicroJavaCompiler\test\program.mj
INFO  21:19:25,926 - #2 program
INFO  21:19:25,927 - #48 test302
INFO  21:19:25,927 - #7 const
INFO  21:19:25,927 - #48 int
INFO  21:19:25,927 - #48 jedan
INFO  21:19:25,927 - #27 =
INFO  21:19:25,927 - #51 1
INFO  21:19:25,927 - #38 ;
INFO  21:19:25,927 - #48 int
INFO  21:19:25,928 - #48 i
INFO  21:19:25,928 - #38 ;
INFO  21:19:25,928 - #48 bool
INFO  21:19:25,928 - #48 ibool
INFO  21:19:25,928 - #38 ;
INFO  21:19:25,928 - #48 int
INFO  21:19:25,928 - #48 niz2
INFO  21:19:25,928 - #38 ;
INFO  21:19:25,928 - #48 int
INFO  21:19:25,928 - #48 niz
INFO  21:19:25,928 - #42 [
INFO  21:19:25,929 - #43 ]
INFO  21:19:25,929 - #38 ;
INFO  21:19:25,929 - #48 int
INFO  21:19:25,929 - #48 a
INFO  21:19:25,929 - #38 ;
INFO  21:19:25,929 - #44 {
INFO  21:19:25,929 - #48 int
INFO  21:19:25,929 - #48 sum
INFO  21:19:25,929 - #40 (
INFO  21:19:25,929 - #48 int
INFO  21:19:25,930 - #47 .
ERROR 21:19:25,930 - 
Sintaksna greska na liniji 17
INFO  21:19:25,930 - #47 .
INFO  21:19:25,930 - #47 .
INFO  21:19:25,930 - #48 args
INFO  21:19:25,930 - #41 )
INFO  21:19:25,930 - #48 int
INFO  21:19:25,930 - #48 z
INFO  21:19:25,930 - #39 ,
ERROR 21:19:25,930 - Izvrsen oporovak prilikom greske u formalnom parametru do , ili ) u liniji 17
INFO  21:19:25,931 - #48 d
INFO  21:19:25,931 - #38 ;
INFO  21:19:25,931 - #44 {
INFO  21:19:25,932 - #48 z
INFO  21:19:25,932 - #27 =
INFO  21:19:25,932 - #48 args
INFO  21:19:25,932 - #42 [
INFO  21:19:25,932 - #51 0
INFO  21:19:25,932 - #43 ]
INFO  21:19:25,932 - #38 ;
INFO  21:19:25,932 - #48 d
INFO  21:19:25,932 - #27 =
INFO  21:19:25,932 - #48 args
INFO  21:19:25,933 - #42 [
INFO  21:19:25,933 - #51 1
INFO  21:19:25,933 - #43 ]
INFO  21:19:25,933 - #38 ;
INFO  21:19:25,933 - #15 return
INFO  21:19:25,933 - #48 z
INFO  21:19:25,933 - #22 +
INFO  21:19:25,933 - #48 d
INFO  21:19:25,933 - #38 ;
INFO  21:19:25,933 - #45 }
INFO  21:19:25,933 - #14 void
INFO  21:19:25,933 - #48 printArgs
INFO  21:19:25,934 - #40 (
INFO  21:19:25,934 - #48 int
INFO  21:19:25,934 - #48 num
INFO  21:19:25,934 - #39 ,
INFO  21:19:25,934 - #48 char
INFO  21:19:25,934 - #47 .
INFO  21:19:25,934 - #47 .
INFO  21:19:25,934 - #47 .
INFO  21:19:25,934 - #48 args
INFO  21:19:25,934 - #41 )
INFO  21:19:25,934 - #48 int
INFO  21:19:25,934 - #48 i
INFO  21:19:25,934 - #38 ;
INFO  21:19:25,934 - #44 {
INFO  21:19:25,934 - #48 i
INFO  21:19:25,934 - #27 =
INFO  21:19:25,934 - #51 0
INFO  21:19:25,934 - #38 ;
INFO  21:19:25,934 - #9 do
INFO  21:19:25,934 - #44 {
INFO  21:19:25,934 - #12 print
INFO  21:19:25,934 - #40 (
INFO  21:19:25,934 - #48 args
INFO  21:19:25,935 - #42 [
INFO  21:19:25,935 - #48 i
INFO  21:19:25,935 - #43 ]
INFO  21:19:25,935 - #41 )
INFO  21:19:25,935 - #38 ;
INFO  21:19:25,935 - #48 i
INFO  21:19:25,935 - #36 ++
INFO  21:19:25,935 - #38 ;
INFO  21:19:25,935 - #45 }
INFO  21:19:25,935 - #10 while
INFO  21:19:25,935 - #40 (
INFO  21:19:25,935 - #48 i
INFO  21:19:25,935 - #32 <
INFO  21:19:25,935 - #48 num
INFO  21:19:25,936 - #41 )
INFO  21:19:25,936 - #38 ;
INFO  21:19:25,936 - #45 }
INFO  21:19:25,936 - #48 int
INFO  21:19:25,936 - #48 inkrement
INFO  21:19:25,936 - #40 (
INFO  21:19:25,936 - #48 int
INFO  21:19:25,936 - #48 a
INFO  21:19:25,936 - #39 ,
INFO  21:19:25,936 - #48 int
INFO  21:19:25,936 - #48 inc
INFO  21:19:25,936 - #41 )
INFO  21:19:25,936 - #48 int
INFO  21:19:25,936 - #48 pom
INFO  21:19:25,936 - #38 ;
INFO  21:19:25,936 - #44 {
INFO  21:19:25,936 - #5 if
INFO  21:19:25,936 - #40 (
INFO  21:19:25,937 - #48 inc
INFO  21:19:25,937 - #28 ==
INFO  21:19:25,937 - #48 jedan
INFO  21:19:25,937 - #41 )
INFO  21:19:25,937 - #48 pom
INFO  21:19:25,937 - #27 =
INFO  21:19:25,937 - #51 1
INFO  21:19:25,937 - #38 ;
INFO  21:19:25,937 - #6 else
INFO  21:19:25,937 - #5 if
INFO  21:19:25,937 - #40 (
INFO  21:19:25,937 - #48 inc
INFO  21:19:25,937 - #28 ==
INFO  21:19:25,937 - #51 2
INFO  21:19:25,937 - #41 )
INFO  21:19:25,937 - #48 pom
INFO  21:19:25,937 - #27 =
INFO  21:19:25,937 - #48 a
INFO  21:19:25,937 - #38 ;
INFO  21:19:25,937 - #15 return
INFO  21:19:25,937 - #48 sum
INFO  21:19:25,937 - #40 (
INFO  21:19:25,937 - #48 a
INFO  21:19:25,938 - #39 ,
INFO  21:19:25,938 - #48 pom
INFO  21:19:25,938 - #41 )
INFO  21:19:25,938 - #38 ;
INFO  21:19:25,938 - #45 }
INFO  21:19:25,938 - #48 bool
INFO  21:19:25,938 - #48 verify
INFO  21:19:25,938 - #40 (
INFO  21:19:25,938 - #41 )
INFO  21:19:25,938 - #44 {
INFO  21:19:25,938 - #12 print
INFO  21:19:25,938 - #40 (
INFO  21:19:25,938 - #50 v
INFO  21:19:25,938 - #41 )
INFO  21:19:25,938 - #38 ;
INFO  21:19:25,938 - #15 return
INFO  21:19:25,938 - #49 false
INFO  21:19:25,939 - #38 ;
INFO  21:19:25,939 - #45 }
INFO  21:19:25,939 - #14 void
INFO  21:19:25,939 - #48 main
INFO  21:19:25,939 - #40 (
INFO  21:19:25,939 - #41 )
INFO  21:19:25,939 - #44 {
INFO  21:19:25,939 - #5 if
INFO  21:19:25,939 - #40 (
INFO  21:19:25,939 - #51 1
INFO  21:19:25,939 - #29 !=
INFO  21:19:25,939 - #51 1
INFO  21:19:25,939 - #41 )
INFO  21:19:25,939 - #12 print
INFO  21:19:25,939 - #40 (
INFO  21:19:25,939 - #23 -
INFO  21:19:25,939 - #51 6
INFO  21:19:25,939 - #41 )
INFO  21:19:25,939 - #38 ;
INFO  21:19:25,939 - #6 else
INFO  21:19:25,939 - #12 print
INFO  21:19:25,939 - #40 (
INFO  21:19:25,939 - #51 0
INFO  21:19:25,939 - #41 )
INFO  21:19:25,939 - #38 ;
INFO  21:19:25,939 - #48 ibool
INFO  21:19:25,939 - #27 =
INFO  21:19:25,939 - #49 false
INFO  21:19:25,939 - #38 ;
INFO  21:19:25,939 - #48 i
INFO  21:19:25,939 - #27 =
INFO  21:19:25,939 - #51 0
INFO  21:19:25,939 - #38 ;
INFO  21:19:25,939 - #9 do
INFO  21:19:25,940 - #44 {
INFO  21:19:25,940 - #5 if
INFO  21:19:25,940 - #40 (
INFO  21:19:25,940 - #48 i
INFO  21:19:25,940 - #28 ==
INFO  21:19:25,940 - #51 2
INFO  21:19:25,940 - #41 )
INFO  21:19:25,940 - #48 ibool
INFO  21:19:25,940 - #27 =
INFO  21:19:25,940 - #49 true
INFO  21:19:25,940 - #38 ;
INFO  21:19:25,940 - #48 i
INFO  21:19:25,940 - #36 ++
INFO  21:19:25,940 - #38 ;
INFO  21:19:25,940 - #45 }
INFO  21:19:25,940 - #10 while
INFO  21:19:25,940 - #40 (
INFO  21:19:25,940 - #48 i
INFO  21:19:25,940 - #32 <
INFO  21:19:25,940 - #51 5
INFO  21:19:25,940 - #41 )
INFO  21:19:25,940 - #38 ;
INFO  21:19:25,940 - #5 if
INFO  21:19:25,940 - #40 (
INFO  21:19:25,940 - #48 ibool
INFO  21:19:25,940 - #41 )
INFO  21:19:25,940 - #5 if
INFO  21:19:25,940 - #40 (
INFO  21:19:25,940 - #48 i
INFO  21:19:25,940 - #28 ==
INFO  21:19:25,940 - #51 5
INFO  21:19:25,940 - #41 )
INFO  21:19:25,940 - #12 print
INFO  21:19:25,940 - #40 (
INFO  21:19:25,940 - #51 1
INFO  21:19:25,940 - #41 )
INFO  21:19:25,940 - #38 ;
INFO  21:19:25,940 - #6 else
INFO  21:19:25,940 - #12 print
INFO  21:19:25,940 - #40 (
INFO  21:19:25,940 - #23 -
INFO  21:19:25,940 - #51 1
INFO  21:19:25,940 - #41 )
INFO  21:19:25,940 - #38 ;
INFO  21:19:25,940 - #48 a
INFO  21:19:25,940 - #27 =
INFO  21:19:25,940 - #51 2
INFO  21:19:25,940 - #38 ;
INFO  21:19:25,940 - #48 niz
INFO  21:19:25,941 - #27 =
INFO  21:19:25,941 - #11 new
INFO  21:19:25,941 - #48 int
INFO  21:19:25,941 - #42 [
INFO  21:19:25,941 - #51 3
INFO  21:19:25,941 - #43 ]
INFO  21:19:25,941 - #38 ;
INFO  21:19:25,941 - #48 niz
INFO  21:19:25,941 - #42 [
INFO  21:19:25,941 - #51 0
INFO  21:19:25,941 - #43 ]
INFO  21:19:25,941 - #27 =
INFO  21:19:25,941 - #51 1
INFO  21:19:25,941 - #24 *
INFO  21:19:25,941 - #48 a
INFO  21:19:25,941 - #38 ;
INFO  21:19:25,941 - #48 niz
INFO  21:19:25,941 - #42 [
INFO  21:19:25,941 - #51 1
INFO  21:19:25,941 - #43 ]
INFO  21:19:25,942 - #27 =
INFO  21:19:25,942 - #51 2
INFO  21:19:25,942 - #24 *
INFO  21:19:25,942 - #48 a
INFO  21:19:25,942 - #38 ;
INFO  21:19:25,942 - #48 niz
INFO  21:19:25,942 - #42 [
INFO  21:19:25,942 - #51 2
INFO  21:19:25,942 - #43 ]
INFO  21:19:25,942 - #27 =
INFO  21:19:25,942 - #48 sum
INFO  21:19:25,942 - #40 (
INFO  21:19:25,942 - #48 niz
INFO  21:19:25,942 - #42 [
INFO  21:19:25,942 - #51 1
INFO  21:19:25,942 - #43 ]
INFO  21:19:25,942 - #39 ,
INFO  21:19:25,942 - #48 niz
INFO  21:19:25,942 - #42 [
INFO  21:19:25,942 - #51 0
INFO  21:19:25,942 - #43 ]
INFO  21:19:25,942 - #41 )
INFO  21:19:25,942 - #24 *
INFO  21:19:25,942 - #48 a
INFO  21:19:25,942 - #22 +
INFO  21:19:25,942 - #51 1
INFO  21:19:25,942 - #38 ;
INFO  21:19:25,942 - #5 if
INFO  21:19:25,942 - #40 (
INFO  21:19:25,942 - #48 verify
INFO  21:19:25,942 - #40 (
INFO  21:19:25,942 - #41 )
INFO  21:19:25,942 - #35 ||
INFO  21:19:25,942 - #48 niz
INFO  21:19:25,942 - #42 [
INFO  21:19:25,942 - #51 2
INFO  21:19:25,942 - #43 ]
INFO  21:19:25,942 - #28 ==
INFO  21:19:25,942 - #51 4
INFO  21:19:25,942 - #41 )
INFO  21:19:25,942 - #12 print
INFO  21:19:25,942 - #40 (
INFO  21:19:25,942 - #48 ord
INFO  21:19:25,942 - #40 (
INFO  21:19:25,942 - #50 A
INFO  21:19:25,942 - #41 )
INFO  21:19:25,942 - #41 )
INFO  21:19:25,942 - #38 ;
INFO  21:19:25,942 - #6 else
INFO  21:19:25,942 - #12 print
INFO  21:19:25,942 - #40 (
INFO  21:19:25,942 - #48 ord
INFO  21:19:25,942 - #40 (
INFO  21:19:25,942 - #50 a
INFO  21:19:25,942 - #41 )
INFO  21:19:25,942 - #41 )
INFO  21:19:25,942 - #38 ;
INFO  21:19:25,942 - #12 print
INFO  21:19:25,942 - #40 (
INFO  21:19:25,942 - #48 eol
INFO  21:19:25,942 - #41 )
INFO  21:19:25,942 - #38 ;
INFO  21:19:25,942 - #48 i
INFO  21:19:25,942 - #27 =
INFO  21:19:25,942 - #51 0
INFO  21:19:25,942 - #38 ;
INFO  21:19:25,942 - #9 do
INFO  21:19:25,942 - #44 {
INFO  21:19:25,942 - #5 if
INFO  21:19:25,942 - #40 (
INFO  21:19:25,943 - #48 i
INFO  21:19:25,943 - #28 ==
INFO  21:19:25,943 - #51 3
INFO  21:19:25,943 - #41 )
INFO  21:19:25,943 - #44 {
INFO  21:19:25,943 - #48 i
INFO  21:19:25,943 - #36 ++
INFO  21:19:25,943 - #38 ;
INFO  21:19:25,943 - #4 continue
INFO  21:19:25,943 - #38 ;
INFO  21:19:25,943 - #45 }
INFO  21:19:25,943 - #5 if
INFO  21:19:25,943 - #40 (
INFO  21:19:25,943 - #48 i
INFO  21:19:25,943 - #28 ==
INFO  21:19:25,943 - #51 4
INFO  21:19:25,943 - #41 )
INFO  21:19:25,943 - #3 break
INFO  21:19:25,943 - #38 ;
INFO  21:19:25,943 - #48 i
INFO  21:19:25,943 - #27 =
INFO  21:19:25,943 - #48 inkrement
INFO  21:19:25,943 - #40 (
INFO  21:19:25,943 - #48 i
INFO  21:19:25,943 - #39 ,
INFO  21:19:25,943 - #51 1
INFO  21:19:25,943 - #41 )
INFO  21:19:25,943 - #38 ;
INFO  21:19:25,943 - #45 }
INFO  21:19:25,943 - #10 while
INFO  21:19:25,943 - #40 (
INFO  21:19:25,943 - #48 i
INFO  21:19:25,943 - #32 <
INFO  21:19:25,943 - #51 10
INFO  21:19:25,943 - #41 )
INFO  21:19:25,943 - #38 ;
INFO  21:19:25,943 - #5 if
INFO  21:19:25,943 - #40 (
INFO  21:19:25,943 - #48 i
INFO  21:19:25,943 - #28 ==
INFO  21:19:25,943 - #51 3
INFO  21:19:25,943 - #34 &&
INFO  21:19:25,943 - #48 verify
INFO  21:19:25,943 - #40 (
INFO  21:19:25,943 - #41 )
INFO  21:19:25,943 - #41 )
INFO  21:19:25,943 - #12 print
INFO  21:19:25,943 - #40 (
INFO  21:19:25,943 - #23 -
INFO  21:19:25,943 - #51 4
INFO  21:19:25,943 - #41 )
INFO  21:19:25,943 - #38 ;
INFO  21:19:25,943 - #6 else
INFO  21:19:25,943 - #12 print
INFO  21:19:25,943 - #40 (
INFO  21:19:25,943 - #51 4
INFO  21:19:25,943 - #41 )
INFO  21:19:25,943 - #38 ;
INFO  21:19:25,943 - #13 read
INFO  21:19:25,943 - #40 (
INFO  21:19:25,943 - #48 niz
INFO  21:19:25,943 - #42 [
INFO  21:19:25,943 - #51 0
INFO  21:19:25,943 - #43 ]
INFO  21:19:25,943 - #41 )
INFO  21:19:25,943 - #38 ;
INFO  21:19:25,943 - #13 read
INFO  21:19:25,943 - #40 (
INFO  21:19:25,943 - #48 niz
INFO  21:19:25,943 - #42 [
INFO  21:19:25,943 - #51 1
INFO  21:19:25,944 - #43 ]
INFO  21:19:25,944 - #41 )
INFO  21:19:25,944 - #38 ;
INFO  21:19:25,944 - #13 read
INFO  21:19:25,944 - #40 (
INFO  21:19:25,944 - #48 niz
INFO  21:19:25,944 - #42 [
INFO  21:19:25,944 - #51 2
INFO  21:19:25,944 - #43 ]
INFO  21:19:25,944 - #41 )
INFO  21:19:25,944 - #38 ;
INFO  21:19:25,944 - #12 print
INFO  21:19:25,944 - #40 (
INFO  21:19:25,944 - #48 eol
INFO  21:19:25,944 - #41 )
INFO  21:19:25,944 - #38 ;
INFO  21:19:25,944 - #12 print
INFO  21:19:25,944 - #40 (
INFO  21:19:25,944 - #48 sum
INFO  21:19:25,944 - #40 (
INFO  21:19:25,944 - #48 sum
INFO  21:19:25,944 - #40 (
INFO  21:19:25,944 - #48 niz
INFO  21:19:25,944 - #42 [
INFO  21:19:25,944 - #51 0
INFO  21:19:25,944 - #43 ]
INFO  21:19:25,944 - #39 ,
INFO  21:19:25,944 - #48 niz
INFO  21:19:25,944 - #42 [
INFO  21:19:25,944 - #51 1
INFO  21:19:25,944 - #43 ]
INFO  21:19:25,944 - #41 )
INFO  21:19:25,944 - #39 ,
INFO  21:19:25,944 - #48 niz
INFO  21:19:25,944 - #42 [
INFO  21:19:25,944 - #51 2
INFO  21:19:25,944 - #43 ]
INFO  21:19:25,944 - #41 )
INFO  21:19:25,944 - #41 )
INFO  21:19:25,944 - #38 ;
INFO  21:19:25,944 - #12 print
INFO  21:19:25,944 - #40 (
INFO  21:19:25,944 - #48 eol
INFO  21:19:25,944 - #41 )
INFO  21:19:25,944 - #38 ;
INFO  21:19:25,944 - #12 print
INFO  21:19:25,944 - #40 (
INFO  21:19:25,944 - #48 inkrement
INFO  21:19:25,944 - #40 (
INFO  21:19:25,944 - #48 niz
INFO  21:19:25,944 - #42 [
INFO  21:19:25,944 - #51 2
INFO  21:19:25,944 - #43 ]
INFO  21:19:25,944 - #39 ,
INFO  21:19:25,944 - #51 2
INFO  21:19:25,944 - #41 )
INFO  21:19:25,944 - #41 )
INFO  21:19:25,944 - #38 ;
INFO  21:19:25,944 - #48 a
INFO  21:19:25,944 - #27 =
INFO  21:19:25,944 - #51 3
INFO  21:19:25,944 - #38 ;
INFO  21:19:25,944 - #48 i
INFO  21:19:25,944 - #27 =
INFO  21:19:25,944 - #51 0
INFO  21:19:25,944 - #38 ;
INFO  21:19:25,944 - #9 do
INFO  21:19:25,944 - #44 {
INFO  21:19:25,944 - #48 niz
INFO  21:19:25,944 - #42 [
INFO  21:19:25,944 - #48 i
INFO  21:19:25,944 - #43 ]
INFO  21:19:25,944 - #27 =
INFO  21:19:25,944 - #48 niz
INFO  21:19:25,944 - #42 [
INFO  21:19:25,944 - #48 i
INFO  21:19:25,944 - #43 ]
INFO  21:19:25,944 - #24 *
INFO  21:19:25,944 - #51 2
INFO  21:19:25,944 - #24 *
INFO  21:19:25,944 - #48 a
INFO  21:19:25,944 - #38 ;
INFO  21:19:25,944 - #48 i
INFO  21:19:25,944 - #36 ++
INFO  21:19:25,944 - #38 ;
INFO  21:19:25,944 - #45 }
INFO  21:19:25,944 - #10 while
INFO  21:19:25,944 - #40 (
INFO  21:19:25,944 - #48 i
INFO  21:19:25,944 - #32 <
INFO  21:19:25,944 - #51 3
INFO  21:19:25,944 - #41 )
INFO  21:19:25,944 - #38 ;
INFO  21:19:25,944 - #12 print
INFO  21:19:25,944 - #40 (
INFO  21:19:25,944 - #48 niz
INFO  21:19:25,944 - #42 [
INFO  21:19:25,944 - #51 0
INFO  21:19:25,944 - #43 ]
INFO  21:19:25,944 - #41 )
INFO  21:19:25,944 - #38 ;
INFO  21:19:25,944 - #12 print
INFO  21:19:25,944 - #40 (
INFO  21:19:25,944 - #48 niz
INFO  21:19:25,944 - #42 [
INFO  21:19:25,944 - #51 1
INFO  21:19:25,944 - #43 ]
INFO  21:19:25,944 - #41 )
INFO  21:19:25,944 - #38 ;
INFO  21:19:25,944 - #12 print
INFO  21:19:25,944 - #40 (
INFO  21:19:25,944 - #48 niz
INFO  21:19:25,944 - #42 [
INFO  21:19:25,944 - #51 2
INFO  21:19:25,944 - #43 ]
INFO  21:19:25,944 - #41 )
INFO  21:19:25,944 - #38 ;
INFO  21:19:25,944 - #12 print
INFO  21:19:25,944 - #40 (
INFO  21:19:25,944 - #48 eol
INFO  21:19:25,945 - #41 )
INFO  21:19:25,945 - #38 ;
INFO  21:19:25,945 - #48 i
INFO  21:19:25,945 - #27 =
INFO  21:19:25,945 - #51 0
INFO  21:19:25,945 - #38 ;
INFO  21:19:25,945 - #48 niz2
INFO  21:19:25,945 - #27 =
INFO  21:19:25,945 - #51 0
INFO  21:19:25,945 - #38 ;
INFO  21:19:25,945 - #9 do
INFO  21:19:25,945 - #44 {
INFO  21:19:25,945 - #48 niz2
INFO  21:19:25,945 - #27 =
INFO  21:19:25,945 - #48 niz2
INFO  21:19:25,945 - #22 +
INFO  21:19:25,945 - #48 niz
INFO  21:19:25,945 - #42 [
INFO  21:19:25,945 - #48 i
INFO  21:19:25,945 - #43 ]
INFO  21:19:25,945 - #24 *
INFO  21:19:25,945 - #48 niz
INFO  21:19:25,945 - #42 [
INFO  21:19:25,945 - #48 i
INFO  21:19:25,945 - #43 ]
INFO  21:19:25,945 - #38 ;
INFO  21:19:25,945 - #48 i
INFO  21:19:25,945 - #36 ++
INFO  21:19:25,945 - #38 ;
INFO  21:19:25,945 - #45 }
INFO  21:19:25,945 - #10 while
INFO  21:19:25,945 - #40 (
INFO  21:19:25,945 - #48 i
INFO  21:19:25,945 - #32 <
INFO  21:19:25,945 - #51 3
INFO  21:19:25,945 - #41 )
INFO  21:19:25,945 - #38 ;
INFO  21:19:25,945 - #12 print
INFO  21:19:25,945 - #40 (
INFO  21:19:25,945 - #48 niz2
INFO  21:19:25,945 - #41 )
INFO  21:19:25,945 - #38 ;
INFO  21:19:25,945 - #12 print
INFO  21:19:25,945 - #40 (
INFO  21:19:25,945 - #48 eol
INFO  21:19:25,945 - #41 )
INFO  21:19:25,945 - #38 ;
INFO  21:19:25,945 - #48 printArgs
INFO  21:19:25,945 - #40 (
INFO  21:19:25,945 - #51 5
INFO  21:19:25,945 - #39 ,
INFO  21:19:25,945 - #50 t
INFO  21:19:25,945 - #39 ,
INFO  21:19:25,945 - #50 e
INFO  21:19:25,945 - #39 ,
INFO  21:19:25,945 - #50 s
INFO  21:19:25,945 - #39 ,
INFO  21:19:25,945 - #50 t
INFO  21:19:25,945 - #39 ,
INFO  21:19:25,945 - #50 B
INFO  21:19:25,945 - #41 )
INFO  21:19:25,945 - #38 ;
INFO  21:19:25,945 - #45 }
INFO  21:19:25,945 - #45 }
INFO  21:19:25,950 - Program(
  ProgramName(
   test302
  ) [ProgramName]
  AllDeclListMultiple(
    AllDeclListMultiple(
      AllDeclListMultiple(
        AllDeclListMultiple(
          AllDeclListMultiple(
            AllDeclListMultiple(
              NoDecl(
              ) [NoDecl]
              ConstDeclaration(
                ConstDeclarationExpr(
                  Type(
                   int
                  ) [Type]
                  ConstAssignSingle(
                    ConstAssign(
                     jedan
                      NumberConst(
                       1
                      ) [NumberConst]
                    ) [ConstAssign]
                  ) [ConstAssignSingle]
                ) [ConstDeclarationExpr]
              ) [ConstDeclaration]
            ) [AllDeclListMultiple]
            GlobalVarDeclaration(
              GlobalVarDeclarationExpr(
                Type(
                 int
                ) [Type]
                GlobalVarDeclListSingle(
                  GlobalVarDeclarationSingle(
                   i
                    NoArray(
                    ) [NoArray]
                  ) [GlobalVarDeclarationSingle]
                ) [GlobalVarDeclListSingle]
              ) [GlobalVarDeclarationExpr]
            ) [GlobalVarDeclaration]
          ) [AllDeclListMultiple]
          GlobalVarDeclaration(
            GlobalVarDeclarationExpr(
              Type(
               bool
              ) [Type]
              GlobalVarDeclListSingle(
                GlobalVarDeclarationSingle(
                 ibool
                  NoArray(
                  ) [NoArray]
                ) [GlobalVarDeclarationSingle]
              ) [GlobalVarDeclListSingle]
            ) [GlobalVarDeclarationExpr]
          ) [GlobalVarDeclaration]
        ) [AllDeclListMultiple]
        GlobalVarDeclaration(
          GlobalVarDeclarationExpr(
            Type(
             int
            ) [Type]
            GlobalVarDeclListSingle(
              GlobalVarDeclarationSingle(
               niz2
                NoArray(
                ) [NoArray]
              ) [GlobalVarDeclarationSingle]
            ) [GlobalVarDeclListSingle]
          ) [GlobalVarDeclarationExpr]
        ) [GlobalVarDeclaration]
      ) [AllDeclListMultiple]
      GlobalVarDeclaration(
        GlobalVarDeclarationExpr(
          Type(
           int
          ) [Type]
          GlobalVarDeclListSingle(
            GlobalVarDeclarationSingle(
             niz
              ArrayBrackets(
              ) [ArrayBrackets]
            ) [GlobalVarDeclarationSingle]
          ) [GlobalVarDeclListSingle]
        ) [GlobalVarDeclarationExpr]
      ) [GlobalVarDeclaration]
    ) [AllDeclListMultiple]
    GlobalVarDeclaration(
      GlobalVarDeclarationExpr(
        Type(
         int
        ) [Type]
        GlobalVarDeclListSingle(
          GlobalVarDeclarationSingle(
           a
            NoArray(
            ) [NoArray]
          ) [GlobalVarDeclarationSingle]
        ) [GlobalVarDeclListSingle]
      ) [GlobalVarDeclarationExpr]
    ) [GlobalVarDeclaration]
  ) [AllDeclListMultiple]
  MethodDeclListMultiple(
    MethodDeclListMultiple(
      MethodDeclListMultiple(
        MethodDeclListMultiple(
          MethodDeclListMultiple(
            MethodDeclListNo(
            ) [MethodDeclListNo]
            MethodDeclaration(
              MethodSignatureParams(
                MethodTypeType(
                  Type(
                   int
                  ) [Type]
                ) [MethodTypeType]
                MethodName(
                 sum
                ) [MethodName]
                FormParsSingle(
                  FormParError(
                  ) [FormParError]
                ) [FormParsSingle]
                FormParsEnd(
                ) [FormParsEnd]
              ) [MethodSignatureParams]
              VarDeclOptionTrue(
                NoVarDeclOption(
                ) [NoVarDeclOption]
                VarDeclarationExpr(
                  Type(
                   int
                  ) [Type]
                  VarDeclListMultiple(
                    VarDeclListSingle(
                      VarDeclSingle(
                       z
                        NoArray(
                        ) [NoArray]
                      ) [VarDeclSingle]
                    ) [VarDeclListSingle]
                    VarDeclSingle(
                     d
                      NoArray(
                      ) [NoArray]
                    ) [VarDeclSingle]
                  ) [VarDeclListMultiple]
                ) [VarDeclarationExpr]
              ) [VarDeclOptionTrue]
              StatementListMultiple(
                StatementListMultiple(
                  StatementListMultiple(
                    StatementListNo(
                    ) [StatementListNo]
                    StatementSingle(
                      SingleDesignatorStatement(
                        DesignatorStmtAssign(
                          DesignatorStmtAssignCorrect(
                            IdentDesignator(
                             z
                            ) [IdentDesignator]
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                DesignatorEmptyFactor(
                                  IdentArrayDesignator(
                                   args
                                    SingleTermExprPositive(
                                      SingleFactorTerm(
                                        NumConstFactor(
                                         0
                                        ) [NumConstFactor]
                                      ) [SingleFactorTerm]
                                    ) [SingleTermExprPositive]
                                  ) [IdentArrayDesignator]
                                ) [DesignatorEmptyFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [DesignatorStmtAssignCorrect]
                        ) [DesignatorStmtAssign]
                      ) [SingleDesignatorStatement]
                    ) [StatementSingle]
                  ) [StatementListMultiple]
                  StatementSingle(
                    SingleDesignatorStatement(
                      DesignatorStmtAssign(
                        DesignatorStmtAssignCorrect(
                          IdentDesignator(
                           d
                          ) [IdentDesignator]
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              DesignatorEmptyFactor(
                                IdentArrayDesignator(
                                 args
                                  SingleTermExprPositive(
                                    SingleFactorTerm(
                                      NumConstFactor(
                                       1
                                      ) [NumConstFactor]
                                    ) [SingleFactorTerm]
                                  ) [SingleTermExprPositive]
                                ) [IdentArrayDesignator]
                              ) [DesignatorEmptyFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [DesignatorStmtAssignCorrect]
                      ) [DesignatorStmtAssign]
                    ) [SingleDesignatorStatement]
                  ) [StatementSingle]
                ) [StatementListMultiple]
                StatementSingle(
                  SingleReturnExprStatement(
                    MultiTermExpr(
                      SingleTermExprPositive(
                        SingleFactorTerm(
                          DesignatorEmptyFactor(
                            IdentDesignator(
                             z
                            ) [IdentDesignator]
                          ) [DesignatorEmptyFactor]
                        ) [SingleFactorTerm]
                      ) [SingleTermExprPositive]
                      AddopPlus(
                      ) [AddopPlus]
                      SingleFactorTerm(
                        DesignatorEmptyFactor(
                          IdentDesignator(
                           d
                          ) [IdentDesignator]
                        ) [DesignatorEmptyFactor]
                      ) [SingleFactorTerm]
                    ) [MultiTermExpr]
                  ) [SingleReturnExprStatement]
                ) [StatementSingle]
              ) [StatementListMultiple]
            ) [MethodDeclaration]
          ) [MethodDeclListMultiple]
          MethodDeclaration(
            MethodSignatureVarArgs(
              MethodTypeVoid(
              ) [MethodTypeVoid]
              MethodName(
               printArgs
              ) [MethodName]
              FormParsSingle(
                FormParSingle(
                  Type(
                   int
                  ) [Type]
                 num
                  NoArray(
                  ) [NoArray]
                ) [FormParSingle]
              ) [FormParsSingle]
              VarArgsDeclaration(
                Type(
                 char
                ) [Type]
               args
              ) [VarArgsDeclaration]
              FormParsEnd(
              ) [FormParsEnd]
            ) [MethodSignatureVarArgs]
            VarDeclOptionTrue(
              NoVarDeclOption(
              ) [NoVarDeclOption]
              VarDeclarationExpr(
                Type(
                 int
                ) [Type]
                VarDeclListSingle(
                  VarDeclSingle(
                   i
                    NoArray(
                    ) [NoArray]
                  ) [VarDeclSingle]
                ) [VarDeclListSingle]
              ) [VarDeclarationExpr]
            ) [VarDeclOptionTrue]
            StatementListMultiple(
              StatementListMultiple(
                StatementListNo(
                ) [StatementListNo]
                StatementSingle(
                  SingleDesignatorStatement(
                    DesignatorStmtAssign(
                      DesignatorStmtAssignCorrect(
                        IdentDesignator(
                         i
                        ) [IdentDesignator]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            NumConstFactor(
                             0
                            ) [NumConstFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [DesignatorStmtAssignCorrect]
                    ) [DesignatorStmtAssign]
                  ) [SingleDesignatorStatement]
                ) [StatementSingle]
              ) [StatementListMultiple]
              StatementSingle(
                DoWhileStatement(
                  DoEnter(
                  ) [DoEnter]
                  StatementListMultiple(
                    StatementListNo(
                    ) [StatementListNo]
                    StatementMultiple(
                      StatementsInBraces(
                        StatementListMultiple(
                          StatementListMultiple(
                            StatementListNo(
                            ) [StatementListNo]
                            StatementSingle(
                              SinglePrintStatement(
                                SingleTermExprPositive(
                                  SingleFactorTerm(
                                    DesignatorEmptyFactor(
                                      IdentArrayDesignator(
                                       args
                                        SingleTermExprPositive(
                                          SingleFactorTerm(
                                            DesignatorEmptyFactor(
                                              IdentDesignator(
                                               i
                                              ) [IdentDesignator]
                                            ) [DesignatorEmptyFactor]
                                          ) [SingleFactorTerm]
                                        ) [SingleTermExprPositive]
                                      ) [IdentArrayDesignator]
                                    ) [DesignatorEmptyFactor]
                                  ) [SingleFactorTerm]
                                ) [SingleTermExprPositive]
                                NumConstNo(
                                ) [NumConstNo]
                              ) [SinglePrintStatement]
                            ) [StatementSingle]
                          ) [StatementListMultiple]
                          StatementSingle(
                            SingleDesignatorStatement(
                              DesignatorStmtPlusPlus(
                                IdentDesignator(
                                 i
                                ) [IdentDesignator]
                              ) [DesignatorStmtPlusPlus]
                            ) [SingleDesignatorStatement]
                          ) [StatementSingle]
                        ) [StatementListMultiple]
                      ) [StatementsInBraces]
                    ) [StatementMultiple]
                  ) [StatementListMultiple]
                  ConditionSingleTerm(
                    CondSingleFactTerm(
                      CondMultiExprFact(
                        CondSingleExprFact(
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              DesignatorEmptyFactor(
                                IdentDesignator(
                                 i
                                ) [IdentDesignator]
                              ) [DesignatorEmptyFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [CondSingleExprFact]
                        RelopLS(
                        ) [RelopLS]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            DesignatorEmptyFactor(
                              IdentDesignator(
                               num
                              ) [IdentDesignator]
                            ) [DesignatorEmptyFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [CondMultiExprFact]
                    ) [CondSingleFactTerm]
                  ) [ConditionSingleTerm]
                ) [DoWhileStatement]
              ) [StatementSingle]
            ) [StatementListMultiple]
          ) [MethodDeclaration]
        ) [MethodDeclListMultiple]
        MethodDeclaration(
          MethodSignatureParams(
            MethodTypeType(
              Type(
               int
              ) [Type]
            ) [MethodTypeType]
            MethodName(
             inkrement
            ) [MethodName]
            FormParsMultiple(
              FormParsSingle(
                FormParSingle(
                  Type(
                   int
                  ) [Type]
                 a
                  NoArray(
                  ) [NoArray]
                ) [FormParSingle]
              ) [FormParsSingle]
              FormParSingle(
                Type(
                 int
                ) [Type]
               inc
                NoArray(
                ) [NoArray]
              ) [FormParSingle]
            ) [FormParsMultiple]
            FormParsEnd(
            ) [FormParsEnd]
          ) [MethodSignatureParams]
          VarDeclOptionTrue(
            NoVarDeclOption(
            ) [NoVarDeclOption]
            VarDeclarationExpr(
              Type(
               int
              ) [Type]
              VarDeclListSingle(
                VarDeclSingle(
                 pom
                  NoArray(
                  ) [NoArray]
                ) [VarDeclSingle]
              ) [VarDeclListSingle]
            ) [VarDeclarationExpr]
          ) [VarDeclOptionTrue]
          StatementListMultiple(
            StatementListMultiple(
              StatementListNo(
              ) [StatementListNo]
              StatementSingle(
                IfElseStatement(
                  IfConditionSingleTerm(
                    CondSingleFactTerm(
                      CondMultiExprFact(
                        CondSingleExprFact(
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              DesignatorEmptyFactor(
                                IdentDesignator(
                                 inc
                                ) [IdentDesignator]
                              ) [DesignatorEmptyFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [CondSingleExprFact]
                        RelopEQUAL(
                        ) [RelopEQUAL]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            DesignatorEmptyFactor(
                              IdentDesignator(
                               jedan
                              ) [IdentDesignator]
                            ) [DesignatorEmptyFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [CondMultiExprFact]
                    ) [CondSingleFactTerm]
                  ) [IfConditionSingleTerm]
                  StatementSingle(
                    SingleDesignatorStatement(
                      DesignatorStmtAssign(
                        DesignatorStmtAssignCorrect(
                          IdentDesignator(
                           pom
                          ) [IdentDesignator]
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              NumConstFactor(
                               1
                              ) [NumConstFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [DesignatorStmtAssignCorrect]
                      ) [DesignatorStmtAssign]
                    ) [SingleDesignatorStatement]
                  ) [StatementSingle]
                  StatementSingle(
                    IfStatement(
                      IfConditionSingleTerm(
                        CondSingleFactTerm(
                          CondMultiExprFact(
                            CondSingleExprFact(
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentDesignator(
                                     inc
                                    ) [IdentDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [CondSingleExprFact]
                            RelopEQUAL(
                            ) [RelopEQUAL]
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                NumConstFactor(
                                 2
                                ) [NumConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [CondMultiExprFact]
                        ) [CondSingleFactTerm]
                      ) [IfConditionSingleTerm]
                      StatementSingle(
                        SingleDesignatorStatement(
                          DesignatorStmtAssign(
                            DesignatorStmtAssignCorrect(
                              IdentDesignator(
                               pom
                              ) [IdentDesignator]
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentDesignator(
                                     a
                                    ) [IdentDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [DesignatorStmtAssignCorrect]
                          ) [DesignatorStmtAssign]
                        ) [SingleDesignatorStatement]
                      ) [StatementSingle]
                    ) [IfStatement]
                  ) [StatementSingle]
                ) [IfElseStatement]
              ) [StatementSingle]
            ) [StatementListMultiple]
            StatementSingle(
              SingleReturnExprStatement(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    MethodCallFactor(
                      MethodCall(
                        IdentDesignator(
                         sum
                        ) [IdentDesignator]
                        ActParsLeftParen(
                        ) [ActParsLeftParen]
                        ActParsYes(
                          ActParsMultiExpr(
                            ActParsSingleExpr(
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentDesignator(
                                     a
                                    ) [IdentDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [ActParsSingleExpr]
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                DesignatorEmptyFactor(
                                  IdentDesignator(
                                   pom
                                  ) [IdentDesignator]
                                ) [DesignatorEmptyFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [ActParsMultiExpr]
                        ) [ActParsYes]
                        ActParsRightParen(
                        ) [ActParsRightParen]
                      ) [MethodCall]
                    ) [MethodCallFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
              ) [SingleReturnExprStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
        ) [MethodDeclaration]
      ) [MethodDeclListMultiple]
      MethodDeclaration(
        MethodSignaturePlain(
          MethodTypeType(
            Type(
             bool
            ) [Type]
          ) [MethodTypeType]
          MethodName(
           verify
          ) [MethodName]
        ) [MethodSignaturePlain]
        NoVarDeclOption(
        ) [NoVarDeclOption]
        StatementListMultiple(
          StatementListMultiple(
            StatementListNo(
            ) [StatementListNo]
            StatementSingle(
              SinglePrintStatement(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    CharConstFactor(
                     v
                    ) [CharConstFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
                NumConstNo(
                ) [NumConstNo]
              ) [SinglePrintStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
          StatementSingle(
            SingleReturnExprStatement(
              SingleTermExprPositive(
                SingleFactorTerm(
                  BoolConstFactor(
                   false
                  ) [BoolConstFactor]
                ) [SingleFactorTerm]
              ) [SingleTermExprPositive]
            ) [SingleReturnExprStatement]
          ) [StatementSingle]
        ) [StatementListMultiple]
      ) [MethodDeclaration]
    ) [MethodDeclListMultiple]
    MethodDeclaration(
      MethodSignaturePlain(
        MethodTypeVoid(
        ) [MethodTypeVoid]
        MethodName(
         main
        ) [MethodName]
      ) [MethodSignaturePlain]
      NoVarDeclOption(
      ) [NoVarDeclOption]
      StatementListMultiple(
        StatementListMultiple(
          StatementListMultiple(
            StatementListMultiple(
              StatementListMultiple(
                StatementListMultiple(
                  StatementListMultiple(
                    StatementListMultiple(
                      StatementListMultiple(
                        StatementListMultiple(
                          StatementListMultiple(
                            StatementListMultiple(
                              StatementListMultiple(
                                StatementListMultiple(
                                  StatementListMultiple(
                                    StatementListMultiple(
                                      StatementListMultiple(
                                        StatementListMultiple(
                                          StatementListMultiple(
                                            StatementListMultiple(
                                              StatementListMultiple(
                                                StatementListMultiple(
                                                  StatementListMultiple(
                                                    StatementListMultiple(
                                                      StatementListMultiple(
                                                        StatementListMultiple(
                                                          StatementListMultiple(
                                                            StatementListMultiple(
                                                              StatementListMultiple(
                                                                StatementListMultiple(
                                                                  StatementListMultiple(
                                                                    StatementListMultiple(
                                                                      StatementListMultiple(
                                                                        StatementListMultiple(
                                                                          StatementListMultiple(
                                                                            StatementListNo(
                                                                            ) [StatementListNo]
                                                                            StatementSingle(
                                                                              IfElseStatement(
                                                                                IfConditionSingleTerm(
                                                                                  CondSingleFactTerm(
                                                                                    CondMultiExprFact(
                                                                                      CondSingleExprFact(
                                                                                        SingleTermExprPositive(
                                                                                          SingleFactorTerm(
                                                                                            NumConstFactor(
                                                                                             1
                                                                                            ) [NumConstFactor]
                                                                                          ) [SingleFactorTerm]
                                                                                        ) [SingleTermExprPositive]
                                                                                      ) [CondSingleExprFact]
                                                                                      RelopNOTEQUAL(
                                                                                      ) [RelopNOTEQUAL]
                                                                                      SingleTermExprPositive(
                                                                                        SingleFactorTerm(
                                                                                          NumConstFactor(
                                                                                           1
                                                                                          ) [NumConstFactor]
                                                                                        ) [SingleFactorTerm]
                                                                                      ) [SingleTermExprPositive]
                                                                                    ) [CondMultiExprFact]
                                                                                  ) [CondSingleFactTerm]
                                                                                ) [IfConditionSingleTerm]
                                                                                StatementSingle(
                                                                                  SinglePrintStatement(
                                                                                    SingleTermExprNegative(
                                                                                      SingleFactorTerm(
                                                                                        NumConstFactor(
                                                                                         6
                                                                                        ) [NumConstFactor]
                                                                                      ) [SingleFactorTerm]
                                                                                    ) [SingleTermExprNegative]
                                                                                    NumConstNo(
                                                                                    ) [NumConstNo]
                                                                                  ) [SinglePrintStatement]
                                                                                ) [StatementSingle]
                                                                                StatementSingle(
                                                                                  SinglePrintStatement(
                                                                                    SingleTermExprPositive(
                                                                                      SingleFactorTerm(
                                                                                        NumConstFactor(
                                                                                         0
                                                                                        ) [NumConstFactor]
                                                                                      ) [SingleFactorTerm]
                                                                                    ) [SingleTermExprPositive]
                                                                                    NumConstNo(
                                                                                    ) [NumConstNo]
                                                                                  ) [SinglePrintStatement]
                                                                                ) [StatementSingle]
                                                                              ) [IfElseStatement]
                                                                            ) [StatementSingle]
                                                                          ) [StatementListMultiple]
                                                                          StatementSingle(
                                                                            SingleDesignatorStatement(
                                                                              DesignatorStmtAssign(
                                                                                DesignatorStmtAssignCorrect(
                                                                                  IdentDesignator(
                                                                                   ibool
                                                                                  ) [IdentDesignator]
                                                                                  SingleTermExprPositive(
                                                                                    SingleFactorTerm(
                                                                                      BoolConstFactor(
                                                                                       false
                                                                                      ) [BoolConstFactor]
                                                                                    ) [SingleFactorTerm]
                                                                                  ) [SingleTermExprPositive]
                                                                                ) [DesignatorStmtAssignCorrect]
                                                                              ) [DesignatorStmtAssign]
                                                                            ) [SingleDesignatorStatement]
                                                                          ) [StatementSingle]
                                                                        ) [StatementListMultiple]
                                                                        StatementSingle(
                                                                          SingleDesignatorStatement(
                                                                            DesignatorStmtAssign(
                                                                              DesignatorStmtAssignCorrect(
                                                                                IdentDesignator(
                                                                                 i
                                                                                ) [IdentDesignator]
                                                                                SingleTermExprPositive(
                                                                                  SingleFactorTerm(
                                                                                    NumConstFactor(
                                                                                     0
                                                                                    ) [NumConstFactor]
                                                                                  ) [SingleFactorTerm]
                                                                                ) [SingleTermExprPositive]
                                                                              ) [DesignatorStmtAssignCorrect]
                                                                            ) [DesignatorStmtAssign]
                                                                          ) [SingleDesignatorStatement]
                                                                        ) [StatementSingle]
                                                                      ) [StatementListMultiple]
                                                                      StatementSingle(
                                                                        DoWhileStatement(
                                                                          DoEnter(
                                                                          ) [DoEnter]
                                                                          StatementListMultiple(
                                                                            StatementListNo(
                                                                            ) [StatementListNo]
                                                                            StatementMultiple(
                                                                              StatementsInBraces(
                                                                                StatementListMultiple(
                                                                                  StatementListMultiple(
                                                                                    StatementListNo(
                                                                                    ) [StatementListNo]
                                                                                    StatementSingle(
                                                                                      IfStatement(
                                                                                        IfConditionSingleTerm(
                                                                                          CondSingleFactTerm(
                                                                                            CondMultiExprFact(
                                                                                              CondSingleExprFact(
                                                                                                SingleTermExprPositive(
                                                                                                  SingleFactorTerm(
                                                                                                    DesignatorEmptyFactor(
                                                                                                      IdentDesignator(
                                                                                                       i
                                                                                                      ) [IdentDesignator]
                                                                                                    ) [DesignatorEmptyFactor]
                                                                                                  ) [SingleFactorTerm]
                                                                                                ) [SingleTermExprPositive]
                                                                                              ) [CondSingleExprFact]
                                                                                              RelopEQUAL(
                                                                                              ) [RelopEQUAL]
                                                                                              SingleTermExprPositive(
                                                                                                SingleFactorTerm(
                                                                                                  NumConstFactor(
                                                                                                   2
                                                                                                  ) [NumConstFactor]
                                                                                                ) [SingleFactorTerm]
                                                                                              ) [SingleTermExprPositive]
                                                                                            ) [CondMultiExprFact]
                                                                                          ) [CondSingleFactTerm]
                                                                                        ) [IfConditionSingleTerm]
                                                                                        StatementSingle(
                                                                                          SingleDesignatorStatement(
                                                                                            DesignatorStmtAssign(
                                                                                              DesignatorStmtAssignCorrect(
                                                                                                IdentDesignator(
                                                                                                 ibool
                                                                                                ) [IdentDesignator]
                                                                                                SingleTermExprPositive(
                                                                                                  SingleFactorTerm(
                                                                                                    BoolConstFactor(
                                                                                                     true
                                                                                                    ) [BoolConstFactor]
                                                                                                  ) [SingleFactorTerm]
                                                                                                ) [SingleTermExprPositive]
                                                                                              ) [DesignatorStmtAssignCorrect]
                                                                                            ) [DesignatorStmtAssign]
                                                                                          ) [SingleDesignatorStatement]
                                                                                        ) [StatementSingle]
                                                                                      ) [IfStatement]
                                                                                    ) [StatementSingle]
                                                                                  ) [StatementListMultiple]
                                                                                  StatementSingle(
                                                                                    SingleDesignatorStatement(
                                                                                      DesignatorStmtPlusPlus(
                                                                                        IdentDesignator(
                                                                                         i
                                                                                        ) [IdentDesignator]
                                                                                      ) [DesignatorStmtPlusPlus]
                                                                                    ) [SingleDesignatorStatement]
                                                                                  ) [StatementSingle]
                                                                                ) [StatementListMultiple]
                                                                              ) [StatementsInBraces]
                                                                            ) [StatementMultiple]
                                                                          ) [StatementListMultiple]
                                                                          ConditionSingleTerm(
                                                                            CondSingleFactTerm(
                                                                              CondMultiExprFact(
                                                                                CondSingleExprFact(
                                                                                  SingleTermExprPositive(
                                                                                    SingleFactorTerm(
                                                                                      DesignatorEmptyFactor(
                                                                                        IdentDesignator(
                                                                                         i
                                                                                        ) [IdentDesignator]
                                                                                      ) [DesignatorEmptyFactor]
                                                                                    ) [SingleFactorTerm]
                                                                                  ) [SingleTermExprPositive]
                                                                                ) [CondSingleExprFact]
                                                                                RelopLS(
                                                                                ) [RelopLS]
                                                                                SingleTermExprPositive(
                                                                                  SingleFactorTerm(
                                                                                    NumConstFactor(
                                                                                     5
                                                                                    ) [NumConstFactor]
                                                                                  ) [SingleFactorTerm]
                                                                                ) [SingleTermExprPositive]
                                                                              ) [CondMultiExprFact]
                                                                            ) [CondSingleFactTerm]
                                                                          ) [ConditionSingleTerm]
                                                                        ) [DoWhileStatement]
                                                                      ) [StatementSingle]
                                                                    ) [StatementListMultiple]
                                                                    StatementSingle(
                                                                      IfStatement(
                                                                        IfConditionSingleTerm(
                                                                          CondSingleFactTerm(
                                                                            CondSingleExprFact(
                                                                              SingleTermExprPositive(
                                                                                SingleFactorTerm(
                                                                                  DesignatorEmptyFactor(
                                                                                    IdentDesignator(
                                                                                     ibool
                                                                                    ) [IdentDesignator]
                                                                                  ) [DesignatorEmptyFactor]
                                                                                ) [SingleFactorTerm]
                                                                              ) [SingleTermExprPositive]
                                                                            ) [CondSingleExprFact]
                                                                          ) [CondSingleFactTerm]
                                                                        ) [IfConditionSingleTerm]
                                                                        StatementSingle(
                                                                          IfElseStatement(
                                                                            IfConditionSingleTerm(
                                                                              CondSingleFactTerm(
                                                                                CondMultiExprFact(
                                                                                  CondSingleExprFact(
                                                                                    SingleTermExprPositive(
                                                                                      SingleFactorTerm(
                                                                                        DesignatorEmptyFactor(
                                                                                          IdentDesignator(
                                                                                           i
                                                                                          ) [IdentDesignator]
                                                                                        ) [DesignatorEmptyFactor]
                                                                                      ) [SingleFactorTerm]
                                                                                    ) [SingleTermExprPositive]
                                                                                  ) [CondSingleExprFact]
                                                                                  RelopEQUAL(
                                                                                  ) [RelopEQUAL]
                                                                                  SingleTermExprPositive(
                                                                                    SingleFactorTerm(
                                                                                      NumConstFactor(
                                                                                       5
                                                                                      ) [NumConstFactor]
                                                                                    ) [SingleFactorTerm]
                                                                                  ) [SingleTermExprPositive]
                                                                                ) [CondMultiExprFact]
                                                                              ) [CondSingleFactTerm]
                                                                            ) [IfConditionSingleTerm]
                                                                            StatementSingle(
                                                                              SinglePrintStatement(
                                                                                SingleTermExprPositive(
                                                                                  SingleFactorTerm(
                                                                                    NumConstFactor(
                                                                                     1
                                                                                    ) [NumConstFactor]
                                                                                  ) [SingleFactorTerm]
                                                                                ) [SingleTermExprPositive]
                                                                                NumConstNo(
                                                                                ) [NumConstNo]
                                                                              ) [SinglePrintStatement]
                                                                            ) [StatementSingle]
                                                                            StatementSingle(
                                                                              SinglePrintStatement(
                                                                                SingleTermExprNegative(
                                                                                  SingleFactorTerm(
                                                                                    NumConstFactor(
                                                                                     1
                                                                                    ) [NumConstFactor]
                                                                                  ) [SingleFactorTerm]
                                                                                ) [SingleTermExprNegative]
                                                                                NumConstNo(
                                                                                ) [NumConstNo]
                                                                              ) [SinglePrintStatement]
                                                                            ) [StatementSingle]
                                                                          ) [IfElseStatement]
                                                                        ) [StatementSingle]
                                                                      ) [IfStatement]
                                                                    ) [StatementSingle]
                                                                  ) [StatementListMultiple]
                                                                  StatementSingle(
                                                                    SingleDesignatorStatement(
                                                                      DesignatorStmtAssign(
                                                                        DesignatorStmtAssignCorrect(
                                                                          IdentDesignator(
                                                                           a
                                                                          ) [IdentDesignator]
                                                                          SingleTermExprPositive(
                                                                            SingleFactorTerm(
                                                                              NumConstFactor(
                                                                               2
                                                                              ) [NumConstFactor]
                                                                            ) [SingleFactorTerm]
                                                                          ) [SingleTermExprPositive]
                                                                        ) [DesignatorStmtAssignCorrect]
                                                                      ) [DesignatorStmtAssign]
                                                                    ) [SingleDesignatorStatement]
                                                                  ) [StatementSingle]
                                                                ) [StatementListMultiple]
                                                                StatementSingle(
                                                                  SingleDesignatorStatement(
                                                                    DesignatorStmtAssign(
                                                                      DesignatorStmtAssignCorrect(
                                                                        IdentDesignator(
                                                                         niz
                                                                        ) [IdentDesignator]
                                                                        SingleTermExprPositive(
                                                                          SingleFactorTerm(
                                                                            NewTypeArrayFactor(
                                                                              Type(
                                                                               int
                                                                              ) [Type]
                                                                              SingleTermExprPositive(
                                                                                SingleFactorTerm(
                                                                                  NumConstFactor(
                                                                                   3
                                                                                  ) [NumConstFactor]
                                                                                ) [SingleFactorTerm]
                                                                              ) [SingleTermExprPositive]
                                                                            ) [NewTypeArrayFactor]
                                                                          ) [SingleFactorTerm]
                                                                        ) [SingleTermExprPositive]
                                                                      ) [DesignatorStmtAssignCorrect]
                                                                    ) [DesignatorStmtAssign]
                                                                  ) [SingleDesignatorStatement]
                                                                ) [StatementSingle]
                                                              ) [StatementListMultiple]
                                                              StatementSingle(
                                                                SingleDesignatorStatement(
                                                                  DesignatorStmtAssign(
                                                                    DesignatorStmtAssignCorrect(
                                                                      IdentArrayDesignator(
                                                                       niz
                                                                        SingleTermExprPositive(
                                                                          SingleFactorTerm(
                                                                            NumConstFactor(
                                                                             0
                                                                            ) [NumConstFactor]
                                                                          ) [SingleFactorTerm]
                                                                        ) [SingleTermExprPositive]
                                                                      ) [IdentArrayDesignator]
                                                                      SingleTermExprPositive(
                                                                        MultiFactorTerm(
                                                                          SingleFactorTerm(
                                                                            NumConstFactor(
                                                                             1
                                                                            ) [NumConstFactor]
                                                                          ) [SingleFactorTerm]
                                                                          MulopMul(
                                                                          ) [MulopMul]
                                                                          DesignatorEmptyFactor(
                                                                            IdentDesignator(
                                                                             a
                                                                            ) [IdentDesignator]
                                                                          ) [DesignatorEmptyFactor]
                                                                        ) [MultiFactorTerm]
                                                                      ) [SingleTermExprPositive]
                                                                    ) [DesignatorStmtAssignCorrect]
                                                                  ) [DesignatorStmtAssign]
                                                                ) [SingleDesignatorStatement]
                                                              ) [StatementSingle]
                                                            ) [StatementListMultiple]
                                                            StatementSingle(
                                                              SingleDesignatorStatement(
                                                                DesignatorStmtAssign(
                                                                  DesignatorStmtAssignCorrect(
                                                                    IdentArrayDesignator(
                                                                     niz
                                                                      SingleTermExprPositive(
                                                                        SingleFactorTerm(
                                                                          NumConstFactor(
                                                                           1
                                                                          ) [NumConstFactor]
                                                                        ) [SingleFactorTerm]
                                                                      ) [SingleTermExprPositive]
                                                                    ) [IdentArrayDesignator]
                                                                    SingleTermExprPositive(
                                                                      MultiFactorTerm(
                                                                        SingleFactorTerm(
                                                                          NumConstFactor(
                                                                           2
                                                                          ) [NumConstFactor]
                                                                        ) [SingleFactorTerm]
                                                                        MulopMul(
                                                                        ) [MulopMul]
                                                                        DesignatorEmptyFactor(
                                                                          IdentDesignator(
                                                                           a
                                                                          ) [IdentDesignator]
                                                                        ) [DesignatorEmptyFactor]
                                                                      ) [MultiFactorTerm]
                                                                    ) [SingleTermExprPositive]
                                                                  ) [DesignatorStmtAssignCorrect]
                                                                ) [DesignatorStmtAssign]
                                                              ) [SingleDesignatorStatement]
                                                            ) [StatementSingle]
                                                          ) [StatementListMultiple]
                                                          StatementSingle(
                                                            SingleDesignatorStatement(
                                                              DesignatorStmtAssign(
                                                                DesignatorStmtAssignCorrect(
                                                                  IdentArrayDesignator(
                                                                   niz
                                                                    SingleTermExprPositive(
                                                                      SingleFactorTerm(
                                                                        NumConstFactor(
                                                                         2
                                                                        ) [NumConstFactor]
                                                                      ) [SingleFactorTerm]
                                                                    ) [SingleTermExprPositive]
                                                                  ) [IdentArrayDesignator]
                                                                  MultiTermExpr(
                                                                    SingleTermExprPositive(
                                                                      MultiFactorTerm(
                                                                        SingleFactorTerm(
                                                                          MethodCallFactor(
                                                                            MethodCall(
                                                                              IdentDesignator(
                                                                               sum
                                                                              ) [IdentDesignator]
                                                                              ActParsLeftParen(
                                                                              ) [ActParsLeftParen]
                                                                              ActParsYes(
                                                                                ActParsMultiExpr(
                                                                                  ActParsSingleExpr(
                                                                                    SingleTermExprPositive(
                                                                                      SingleFactorTerm(
                                                                                        DesignatorEmptyFactor(
                                                                                          IdentArrayDesignator(
                                                                                           niz
                                                                                            SingleTermExprPositive(
                                                                                              SingleFactorTerm(
                                                                                                NumConstFactor(
                                                                                                 1
                                                                                                ) [NumConstFactor]
                                                                                              ) [SingleFactorTerm]
                                                                                            ) [SingleTermExprPositive]
                                                                                          ) [IdentArrayDesignator]
                                                                                        ) [DesignatorEmptyFactor]
                                                                                      ) [SingleFactorTerm]
                                                                                    ) [SingleTermExprPositive]
                                                                                  ) [ActParsSingleExpr]
                                                                                  SingleTermExprPositive(
                                                                                    SingleFactorTerm(
                                                                                      DesignatorEmptyFactor(
                                                                                        IdentArrayDesignator(
                                                                                         niz
                                                                                          SingleTermExprPositive(
                                                                                            SingleFactorTerm(
                                                                                              NumConstFactor(
                                                                                               0
                                                                                              ) [NumConstFactor]
                                                                                            ) [SingleFactorTerm]
                                                                                          ) [SingleTermExprPositive]
                                                                                        ) [IdentArrayDesignator]
                                                                                      ) [DesignatorEmptyFactor]
                                                                                    ) [SingleFactorTerm]
                                                                                  ) [SingleTermExprPositive]
                                                                                ) [ActParsMultiExpr]
                                                                              ) [ActParsYes]
                                                                              ActParsRightParen(
                                                                              ) [ActParsRightParen]
                                                                            ) [MethodCall]
                                                                          ) [MethodCallFactor]
                                                                        ) [SingleFactorTerm]
                                                                        MulopMul(
                                                                        ) [MulopMul]
                                                                        DesignatorEmptyFactor(
                                                                          IdentDesignator(
                                                                           a
                                                                          ) [IdentDesignator]
                                                                        ) [DesignatorEmptyFactor]
                                                                      ) [MultiFactorTerm]
                                                                    ) [SingleTermExprPositive]
                                                                    AddopPlus(
                                                                    ) [AddopPlus]
                                                                    SingleFactorTerm(
                                                                      NumConstFactor(
                                                                       1
                                                                      ) [NumConstFactor]
                                                                    ) [SingleFactorTerm]
                                                                  ) [MultiTermExpr]
                                                                ) [DesignatorStmtAssignCorrect]
                                                              ) [DesignatorStmtAssign]
                                                            ) [SingleDesignatorStatement]
                                                          ) [StatementSingle]
                                                        ) [StatementListMultiple]
                                                        StatementSingle(
                                                          IfElseStatement(
                                                            IfConditionMultiTerm(
                                                              ConditionSingleTerm(
                                                                CondSingleFactTerm(
                                                                  CondSingleExprFact(
                                                                    SingleTermExprPositive(
                                                                      SingleFactorTerm(
                                                                        MethodCallFactor(
                                                                          MethodCall(
                                                                            IdentDesignator(
                                                                             verify
                                                                            ) [IdentDesignator]
                                                                            ActParsLeftParen(
                                                                            ) [ActParsLeftParen]
                                                                            ActParsNo(
                                                                            ) [ActParsNo]
                                                                            ActParsRightParen(
                                                                            ) [ActParsRightParen]
                                                                          ) [MethodCall]
                                                                        ) [MethodCallFactor]
                                                                      ) [SingleFactorTerm]
                                                                    ) [SingleTermExprPositive]
                                                                  ) [CondSingleExprFact]
                                                                ) [CondSingleFactTerm]
                                                              ) [ConditionSingleTerm]
                                                              CondSingleFactTerm(
                                                                CondMultiExprFact(
                                                                  CondSingleExprFact(
                                                                    SingleTermExprPositive(
                                                                      SingleFactorTerm(
                                                                        DesignatorEmptyFactor(
                                                                          IdentArrayDesignator(
                                                                           niz
                                                                            SingleTermExprPositive(
                                                                              SingleFactorTerm(
                                                                                NumConstFactor(
                                                                                 2
                                                                                ) [NumConstFactor]
                                                                              ) [SingleFactorTerm]
                                                                            ) [SingleTermExprPositive]
                                                                          ) [IdentArrayDesignator]
                                                                        ) [DesignatorEmptyFactor]
                                                                      ) [SingleFactorTerm]
                                                                    ) [SingleTermExprPositive]
                                                                  ) [CondSingleExprFact]
                                                                  RelopEQUAL(
                                                                  ) [RelopEQUAL]
                                                                  SingleTermExprPositive(
                                                                    SingleFactorTerm(
                                                                      NumConstFactor(
                                                                       4
                                                                      ) [NumConstFactor]
                                                                    ) [SingleFactorTerm]
                                                                  ) [SingleTermExprPositive]
                                                                ) [CondMultiExprFact]
                                                              ) [CondSingleFactTerm]
                                                            ) [IfConditionMultiTerm]
                                                            StatementSingle(
                                                              SinglePrintStatement(
                                                                SingleTermExprPositive(
                                                                  SingleFactorTerm(
                                                                    MethodCallFactor(
                                                                      MethodCall(
                                                                        IdentDesignator(
                                                                         ord
                                                                        ) [IdentDesignator]
                                                                        ActParsLeftParen(
                                                                        ) [ActParsLeftParen]
                                                                        ActParsYes(
                                                                          ActParsSingleExpr(
                                                                            SingleTermExprPositive(
                                                                              SingleFactorTerm(
                                                                                CharConstFactor(
                                                                                 A
                                                                                ) [CharConstFactor]
                                                                              ) [SingleFactorTerm]
                                                                            ) [SingleTermExprPositive]
                                                                          ) [ActParsSingleExpr]
                                                                        ) [ActParsYes]
                                                                        ActParsRightParen(
                                                                        ) [ActParsRightParen]
                                                                      ) [MethodCall]
                                                                    ) [MethodCallFactor]
                                                                  ) [SingleFactorTerm]
                                                                ) [SingleTermExprPositive]
                                                                NumConstNo(
                                                                ) [NumConstNo]
                                                              ) [SinglePrintStatement]
                                                            ) [StatementSingle]
                                                            StatementSingle(
                                                              SinglePrintStatement(
                                                                SingleTermExprPositive(
                                                                  SingleFactorTerm(
                                                                    MethodCallFactor(
                                                                      MethodCall(
                                                                        IdentDesignator(
                                                                         ord
                                                                        ) [IdentDesignator]
                                                                        ActParsLeftParen(
                                                                        ) [ActParsLeftParen]
                                                                        ActParsYes(
                                                                          ActParsSingleExpr(
                                                                            SingleTermExprPositive(
                                                                              SingleFactorTerm(
                                                                                CharConstFactor(
                                                                                 a
                                                                                ) [CharConstFactor]
                                                                              ) [SingleFactorTerm]
                                                                            ) [SingleTermExprPositive]
                                                                          ) [ActParsSingleExpr]
                                                                        ) [ActParsYes]
                                                                        ActParsRightParen(
                                                                        ) [ActParsRightParen]
                                                                      ) [MethodCall]
                                                                    ) [MethodCallFactor]
                                                                  ) [SingleFactorTerm]
                                                                ) [SingleTermExprPositive]
                                                                NumConstNo(
                                                                ) [NumConstNo]
                                                              ) [SinglePrintStatement]
                                                            ) [StatementSingle]
                                                          ) [IfElseStatement]
                                                        ) [StatementSingle]
                                                      ) [StatementListMultiple]
                                                      StatementSingle(
                                                        SinglePrintStatement(
                                                          SingleTermExprPositive(
                                                            SingleFactorTerm(
                                                              DesignatorEmptyFactor(
                                                                IdentDesignator(
                                                                 eol
                                                                ) [IdentDesignator]
                                                              ) [DesignatorEmptyFactor]
                                                            ) [SingleFactorTerm]
                                                          ) [SingleTermExprPositive]
                                                          NumConstNo(
                                                          ) [NumConstNo]
                                                        ) [SinglePrintStatement]
                                                      ) [StatementSingle]
                                                    ) [StatementListMultiple]
                                                    StatementSingle(
                                                      SingleDesignatorStatement(
                                                        DesignatorStmtAssign(
                                                          DesignatorStmtAssignCorrect(
                                                            IdentDesignator(
                                                             i
                                                            ) [IdentDesignator]
                                                            SingleTermExprPositive(
                                                              SingleFactorTerm(
                                                                NumConstFactor(
                                                                 0
                                                                ) [NumConstFactor]
                                                              ) [SingleFactorTerm]
                                                            ) [SingleTermExprPositive]
                                                          ) [DesignatorStmtAssignCorrect]
                                                        ) [DesignatorStmtAssign]
                                                      ) [SingleDesignatorStatement]
                                                    ) [StatementSingle]
                                                  ) [StatementListMultiple]
                                                  StatementSingle(
                                                    DoWhileStatement(
                                                      DoEnter(
                                                      ) [DoEnter]
                                                      StatementListMultiple(
                                                        StatementListNo(
                                                        ) [StatementListNo]
                                                        StatementMultiple(
                                                          StatementsInBraces(
                                                            StatementListMultiple(
                                                              StatementListMultiple(
                                                                StatementListMultiple(
                                                                  StatementListNo(
                                                                  ) [StatementListNo]
                                                                  StatementSingle(
                                                                    IfStatement(
                                                                      IfConditionSingleTerm(
                                                                        CondSingleFactTerm(
                                                                          CondMultiExprFact(
                                                                            CondSingleExprFact(
                                                                              SingleTermExprPositive(
                                                                                SingleFactorTerm(
                                                                                  DesignatorEmptyFactor(
                                                                                    IdentDesignator(
                                                                                     i
                                                                                    ) [IdentDesignator]
                                                                                  ) [DesignatorEmptyFactor]
                                                                                ) [SingleFactorTerm]
                                                                              ) [SingleTermExprPositive]
                                                                            ) [CondSingleExprFact]
                                                                            RelopEQUAL(
                                                                            ) [RelopEQUAL]
                                                                            SingleTermExprPositive(
                                                                              SingleFactorTerm(
                                                                                NumConstFactor(
                                                                                 3
                                                                                ) [NumConstFactor]
                                                                              ) [SingleFactorTerm]
                                                                            ) [SingleTermExprPositive]
                                                                          ) [CondMultiExprFact]
                                                                        ) [CondSingleFactTerm]
                                                                      ) [IfConditionSingleTerm]
                                                                      StatementMultiple(
                                                                        StatementsInBraces(
                                                                          StatementListMultiple(
                                                                            StatementListMultiple(
                                                                              StatementListNo(
                                                                              ) [StatementListNo]
                                                                              StatementSingle(
                                                                                SingleDesignatorStatement(
                                                                                  DesignatorStmtPlusPlus(
                                                                                    IdentDesignator(
                                                                                     i
                                                                                    ) [IdentDesignator]
                                                                                  ) [DesignatorStmtPlusPlus]
                                                                                ) [SingleDesignatorStatement]
                                                                              ) [StatementSingle]
                                                                            ) [StatementListMultiple]
                                                                            StatementSingle(
                                                                              SingleContinueStatement(
                                                                              ) [SingleContinueStatement]
                                                                            ) [StatementSingle]
                                                                          ) [StatementListMultiple]
                                                                        ) [StatementsInBraces]
                                                                      ) [StatementMultiple]
                                                                    ) [IfStatement]
                                                                  ) [StatementSingle]
                                                                ) [StatementListMultiple]
                                                                StatementSingle(
                                                                  IfStatement(
                                                                    IfConditionSingleTerm(
                                                                      CondSingleFactTerm(
                                                                        CondMultiExprFact(
                                                                          CondSingleExprFact(
                                                                            SingleTermExprPositive(
                                                                              SingleFactorTerm(
                                                                                DesignatorEmptyFactor(
                                                                                  IdentDesignator(
                                                                                   i
                                                                                  ) [IdentDesignator]
                                                                                ) [DesignatorEmptyFactor]
                                                                              ) [SingleFactorTerm]
                                                                            ) [SingleTermExprPositive]
                                                                          ) [CondSingleExprFact]
                                                                          RelopEQUAL(
                                                                          ) [RelopEQUAL]
                                                                          SingleTermExprPositive(
                                                                            SingleFactorTerm(
                                                                              NumConstFactor(
                                                                               4
                                                                              ) [NumConstFactor]
                                                                            ) [SingleFactorTerm]
                                                                          ) [SingleTermExprPositive]
                                                                        ) [CondMultiExprFact]
                                                                      ) [CondSingleFactTerm]
                                                                    ) [IfConditionSingleTerm]
                                                                    StatementSingle(
                                                                      SingleBreakStatement(
                                                                      ) [SingleBreakStatement]
                                                                    ) [StatementSingle]
                                                                  ) [IfStatement]
                                                                ) [StatementSingle]
                                                              ) [StatementListMultiple]
                                                              StatementSingle(
                                                                SingleDesignatorStatement(
                                                                  DesignatorStmtAssign(
                                                                    DesignatorStmtAssignCorrect(
                                                                      IdentDesignator(
                                                                       i
                                                                      ) [IdentDesignator]
                                                                      SingleTermExprPositive(
                                                                        SingleFactorTerm(
                                                                          MethodCallFactor(
                                                                            MethodCall(
                                                                              IdentDesignator(
                                                                               inkrement
                                                                              ) [IdentDesignator]
                                                                              ActParsLeftParen(
                                                                              ) [ActParsLeftParen]
                                                                              ActParsYes(
                                                                                ActParsMultiExpr(
                                                                                  ActParsSingleExpr(
                                                                                    SingleTermExprPositive(
                                                                                      SingleFactorTerm(
                                                                                        DesignatorEmptyFactor(
                                                                                          IdentDesignator(
                                                                                           i
                                                                                          ) [IdentDesignator]
                                                                                        ) [DesignatorEmptyFactor]
                                                                                      ) [SingleFactorTerm]
                                                                                    ) [SingleTermExprPositive]
                                                                                  ) [ActParsSingleExpr]
                                                                                  SingleTermExprPositive(
                                                                                    SingleFactorTerm(
                                                                                      NumConstFactor(
                                                                                       1
                                                                                      ) [NumConstFactor]
                                                                                    ) [SingleFactorTerm]
                                                                                  ) [SingleTermExprPositive]
                                                                                ) [ActParsMultiExpr]
                                                                              ) [ActParsYes]
                                                                              ActParsRightParen(
                                                                              ) [ActParsRightParen]
                                                                            ) [MethodCall]
                                                                          ) [MethodCallFactor]
                                                                        ) [SingleFactorTerm]
                                                                      ) [SingleTermExprPositive]
                                                                    ) [DesignatorStmtAssignCorrect]
                                                                  ) [DesignatorStmtAssign]
                                                                ) [SingleDesignatorStatement]
                                                              ) [StatementSingle]
                                                            ) [StatementListMultiple]
                                                          ) [StatementsInBraces]
                                                        ) [StatementMultiple]
                                                      ) [StatementListMultiple]
                                                      ConditionSingleTerm(
                                                        CondSingleFactTerm(
                                                          CondMultiExprFact(
                                                            CondSingleExprFact(
                                                              SingleTermExprPositive(
                                                                SingleFactorTerm(
                                                                  DesignatorEmptyFactor(
                                                                    IdentDesignator(
                                                                     i
                                                                    ) [IdentDesignator]
                                                                  ) [DesignatorEmptyFactor]
                                                                ) [SingleFactorTerm]
                                                              ) [SingleTermExprPositive]
                                                            ) [CondSingleExprFact]
                                                            RelopLS(
                                                            ) [RelopLS]
                                                            SingleTermExprPositive(
                                                              SingleFactorTerm(
                                                                NumConstFactor(
                                                                 10
                                                                ) [NumConstFactor]
                                                              ) [SingleFactorTerm]
                                                            ) [SingleTermExprPositive]
                                                          ) [CondMultiExprFact]
                                                        ) [CondSingleFactTerm]
                                                      ) [ConditionSingleTerm]
                                                    ) [DoWhileStatement]
                                                  ) [StatementSingle]
                                                ) [StatementListMultiple]
                                                StatementSingle(
                                                  IfElseStatement(
                                                    IfConditionSingleTerm(
                                                      CondMultiFactTerm(
                                                        CondSingleFactTerm(
                                                          CondMultiExprFact(
                                                            CondSingleExprFact(
                                                              SingleTermExprPositive(
                                                                SingleFactorTerm(
                                                                  DesignatorEmptyFactor(
                                                                    IdentDesignator(
                                                                     i
                                                                    ) [IdentDesignator]
                                                                  ) [DesignatorEmptyFactor]
                                                                ) [SingleFactorTerm]
                                                              ) [SingleTermExprPositive]
                                                            ) [CondSingleExprFact]
                                                            RelopEQUAL(
                                                            ) [RelopEQUAL]
                                                            SingleTermExprPositive(
                                                              SingleFactorTerm(
                                                                NumConstFactor(
                                                                 3
                                                                ) [NumConstFactor]
                                                              ) [SingleFactorTerm]
                                                            ) [SingleTermExprPositive]
                                                          ) [CondMultiExprFact]
                                                        ) [CondSingleFactTerm]
                                                        CondSingleExprFact(
                                                          SingleTermExprPositive(
                                                            SingleFactorTerm(
                                                              MethodCallFactor(
                                                                MethodCall(
                                                                  IdentDesignator(
                                                                   verify
                                                                  ) [IdentDesignator]
                                                                  ActParsLeftParen(
                                                                  ) [ActParsLeftParen]
                                                                  ActParsNo(
                                                                  ) [ActParsNo]
                                                                  ActParsRightParen(
                                                                  ) [ActParsRightParen]
                                                                ) [MethodCall]
                                                              ) [MethodCallFactor]
                                                            ) [SingleFactorTerm]
                                                          ) [SingleTermExprPositive]
                                                        ) [CondSingleExprFact]
                                                      ) [CondMultiFactTerm]
                                                    ) [IfConditionSingleTerm]
                                                    StatementSingle(
                                                      SinglePrintStatement(
                                                        SingleTermExprNegative(
                                                          SingleFactorTerm(
                                                            NumConstFactor(
                                                             4
                                                            ) [NumConstFactor]
                                                          ) [SingleFactorTerm]
                                                        ) [SingleTermExprNegative]
                                                        NumConstNo(
                                                        ) [NumConstNo]
                                                      ) [SinglePrintStatement]
                                                    ) [StatementSingle]
                                                    StatementSingle(
                                                      SinglePrintStatement(
                                                        SingleTermExprPositive(
                                                          SingleFactorTerm(
                                                            NumConstFactor(
                                                             4
                                                            ) [NumConstFactor]
                                                          ) [SingleFactorTerm]
                                                        ) [SingleTermExprPositive]
                                                        NumConstNo(
                                                        ) [NumConstNo]
                                                      ) [SinglePrintStatement]
                                                    ) [StatementSingle]
                                                  ) [IfElseStatement]
                                                ) [StatementSingle]
                                              ) [StatementListMultiple]
                                              StatementSingle(
                                                SingleReadStatement(
                                                  IdentArrayDesignator(
                                                   niz
                                                    SingleTermExprPositive(
                                                      SingleFactorTerm(
                                                        NumConstFactor(
                                                         0
                                                        ) [NumConstFactor]
                                                      ) [SingleFactorTerm]
                                                    ) [SingleTermExprPositive]
                                                  ) [IdentArrayDesignator]
                                                ) [SingleReadStatement]
                                              ) [StatementSingle]
                                            ) [StatementListMultiple]
                                            StatementSingle(
                                              SingleReadStatement(
                                                IdentArrayDesignator(
                                                 niz
                                                  SingleTermExprPositive(
                                                    SingleFactorTerm(
                                                      NumConstFactor(
                                                       1
                                                      ) [NumConstFactor]
                                                    ) [SingleFactorTerm]
                                                  ) [SingleTermExprPositive]
                                                ) [IdentArrayDesignator]
                                              ) [SingleReadStatement]
                                            ) [StatementSingle]
                                          ) [StatementListMultiple]
                                          StatementSingle(
                                            SingleReadStatement(
                                              IdentArrayDesignator(
                                               niz
                                                SingleTermExprPositive(
                                                  SingleFactorTerm(
                                                    NumConstFactor(
                                                     2
                                                    ) [NumConstFactor]
                                                  ) [SingleFactorTerm]
                                                ) [SingleTermExprPositive]
                                              ) [IdentArrayDesignator]
                                            ) [SingleReadStatement]
                                          ) [StatementSingle]
                                        ) [StatementListMultiple]
                                        StatementSingle(
                                          SinglePrintStatement(
                                            SingleTermExprPositive(
                                              SingleFactorTerm(
                                                DesignatorEmptyFactor(
                                                  IdentDesignator(
                                                   eol
                                                  ) [IdentDesignator]
                                                ) [DesignatorEmptyFactor]
                                              ) [SingleFactorTerm]
                                            ) [SingleTermExprPositive]
                                            NumConstNo(
                                            ) [NumConstNo]
                                          ) [SinglePrintStatement]
                                        ) [StatementSingle]
                                      ) [StatementListMultiple]
                                      StatementSingle(
                                        SinglePrintStatement(
                                          SingleTermExprPositive(
                                            SingleFactorTerm(
                                              MethodCallFactor(
                                                MethodCall(
                                                  IdentDesignator(
                                                   sum
                                                  ) [IdentDesignator]
                                                  ActParsLeftParen(
                                                  ) [ActParsLeftParen]
                                                  ActParsYes(
                                                    ActParsMultiExpr(
                                                      ActParsSingleExpr(
                                                        SingleTermExprPositive(
                                                          SingleFactorTerm(
                                                            MethodCallFactor(
                                                              MethodCall(
                                                                IdentDesignator(
                                                                 sum
                                                                ) [IdentDesignator]
                                                                ActParsLeftParen(
                                                                ) [ActParsLeftParen]
                                                                ActParsYes(
                                                                  ActParsMultiExpr(
                                                                    ActParsSingleExpr(
                                                                      SingleTermExprPositive(
                                                                        SingleFactorTerm(
                                                                          DesignatorEmptyFactor(
                                                                            IdentArrayDesignator(
                                                                             niz
                                                                              SingleTermExprPositive(
                                                                                SingleFactorTerm(
                                                                                  NumConstFactor(
                                                                                   0
                                                                                  ) [NumConstFactor]
                                                                                ) [SingleFactorTerm]
                                                                              ) [SingleTermExprPositive]
                                                                            ) [IdentArrayDesignator]
                                                                          ) [DesignatorEmptyFactor]
                                                                        ) [SingleFactorTerm]
                                                                      ) [SingleTermExprPositive]
                                                                    ) [ActParsSingleExpr]
                                                                    SingleTermExprPositive(
                                                                      SingleFactorTerm(
                                                                        DesignatorEmptyFactor(
                                                                          IdentArrayDesignator(
                                                                           niz
                                                                            SingleTermExprPositive(
                                                                              SingleFactorTerm(
                                                                                NumConstFactor(
                                                                                 1
                                                                                ) [NumConstFactor]
                                                                              ) [SingleFactorTerm]
                                                                            ) [SingleTermExprPositive]
                                                                          ) [IdentArrayDesignator]
                                                                        ) [DesignatorEmptyFactor]
                                                                      ) [SingleFactorTerm]
                                                                    ) [SingleTermExprPositive]
                                                                  ) [ActParsMultiExpr]
                                                                ) [ActParsYes]
                                                                ActParsRightParen(
                                                                ) [ActParsRightParen]
                                                              ) [MethodCall]
                                                            ) [MethodCallFactor]
                                                          ) [SingleFactorTerm]
                                                        ) [SingleTermExprPositive]
                                                      ) [ActParsSingleExpr]
                                                      SingleTermExprPositive(
                                                        SingleFactorTerm(
                                                          DesignatorEmptyFactor(
                                                            IdentArrayDesignator(
                                                             niz
                                                              SingleTermExprPositive(
                                                                SingleFactorTerm(
                                                                  NumConstFactor(
                                                                   2
                                                                  ) [NumConstFactor]
                                                                ) [SingleFactorTerm]
                                                              ) [SingleTermExprPositive]
                                                            ) [IdentArrayDesignator]
                                                          ) [DesignatorEmptyFactor]
                                                        ) [SingleFactorTerm]
                                                      ) [SingleTermExprPositive]
                                                    ) [ActParsMultiExpr]
                                                  ) [ActParsYes]
                                                  ActParsRightParen(
                                                  ) [ActParsRightParen]
                                                ) [MethodCall]
                                              ) [MethodCallFactor]
                                            ) [SingleFactorTerm]
                                          ) [SingleTermExprPositive]
                                          NumConstNo(
                                          ) [NumConstNo]
                                        ) [SinglePrintStatement]
                                      ) [StatementSingle]
                                    ) [StatementListMultiple]
                                    StatementSingle(
                                      SinglePrintStatement(
                                        SingleTermExprPositive(
                                          SingleFactorTerm(
                                            DesignatorEmptyFactor(
                                              IdentDesignator(
                                               eol
                                              ) [IdentDesignator]
                                            ) [DesignatorEmptyFactor]
                                          ) [SingleFactorTerm]
                                        ) [SingleTermExprPositive]
                                        NumConstNo(
                                        ) [NumConstNo]
                                      ) [SinglePrintStatement]
                                    ) [StatementSingle]
                                  ) [StatementListMultiple]
                                  StatementSingle(
                                    SinglePrintStatement(
                                      SingleTermExprPositive(
                                        SingleFactorTerm(
                                          MethodCallFactor(
                                            MethodCall(
                                              IdentDesignator(
                                               inkrement
                                              ) [IdentDesignator]
                                              ActParsLeftParen(
                                              ) [ActParsLeftParen]
                                              ActParsYes(
                                                ActParsMultiExpr(
                                                  ActParsSingleExpr(
                                                    SingleTermExprPositive(
                                                      SingleFactorTerm(
                                                        DesignatorEmptyFactor(
                                                          IdentArrayDesignator(
                                                           niz
                                                            SingleTermExprPositive(
                                                              SingleFactorTerm(
                                                                NumConstFactor(
                                                                 2
                                                                ) [NumConstFactor]
                                                              ) [SingleFactorTerm]
                                                            ) [SingleTermExprPositive]
                                                          ) [IdentArrayDesignator]
                                                        ) [DesignatorEmptyFactor]
                                                      ) [SingleFactorTerm]
                                                    ) [SingleTermExprPositive]
                                                  ) [ActParsSingleExpr]
                                                  SingleTermExprPositive(
                                                    SingleFactorTerm(
                                                      NumConstFactor(
                                                       2
                                                      ) [NumConstFactor]
                                                    ) [SingleFactorTerm]
                                                  ) [SingleTermExprPositive]
                                                ) [ActParsMultiExpr]
                                              ) [ActParsYes]
                                              ActParsRightParen(
                                              ) [ActParsRightParen]
                                            ) [MethodCall]
                                          ) [MethodCallFactor]
                                        ) [SingleFactorTerm]
                                      ) [SingleTermExprPositive]
                                      NumConstNo(
                                      ) [NumConstNo]
                                    ) [SinglePrintStatement]
                                  ) [StatementSingle]
                                ) [StatementListMultiple]
                                StatementSingle(
                                  SingleDesignatorStatement(
                                    DesignatorStmtAssign(
                                      DesignatorStmtAssignCorrect(
                                        IdentDesignator(
                                         a
                                        ) [IdentDesignator]
                                        SingleTermExprPositive(
                                          SingleFactorTerm(
                                            NumConstFactor(
                                             3
                                            ) [NumConstFactor]
                                          ) [SingleFactorTerm]
                                        ) [SingleTermExprPositive]
                                      ) [DesignatorStmtAssignCorrect]
                                    ) [DesignatorStmtAssign]
                                  ) [SingleDesignatorStatement]
                                ) [StatementSingle]
                              ) [StatementListMultiple]
                              StatementSingle(
                                SingleDesignatorStatement(
                                  DesignatorStmtAssign(
                                    DesignatorStmtAssignCorrect(
                                      IdentDesignator(
                                       i
                                      ) [IdentDesignator]
                                      SingleTermExprPositive(
                                        SingleFactorTerm(
                                          NumConstFactor(
                                           0
                                          ) [NumConstFactor]
                                        ) [SingleFactorTerm]
                                      ) [SingleTermExprPositive]
                                    ) [DesignatorStmtAssignCorrect]
                                  ) [DesignatorStmtAssign]
                                ) [SingleDesignatorStatement]
                              ) [StatementSingle]
                            ) [StatementListMultiple]
                            StatementSingle(
                              DoWhileStatement(
                                DoEnter(
                                ) [DoEnter]
                                StatementListMultiple(
                                  StatementListNo(
                                  ) [StatementListNo]
                                  StatementMultiple(
                                    StatementsInBraces(
                                      StatementListMultiple(
                                        StatementListMultiple(
                                          StatementListNo(
                                          ) [StatementListNo]
                                          StatementSingle(
                                            SingleDesignatorStatement(
                                              DesignatorStmtAssign(
                                                DesignatorStmtAssignCorrect(
                                                  IdentArrayDesignator(
                                                   niz
                                                    SingleTermExprPositive(
                                                      SingleFactorTerm(
                                                        DesignatorEmptyFactor(
                                                          IdentDesignator(
                                                           i
                                                          ) [IdentDesignator]
                                                        ) [DesignatorEmptyFactor]
                                                      ) [SingleFactorTerm]
                                                    ) [SingleTermExprPositive]
                                                  ) [IdentArrayDesignator]
                                                  SingleTermExprPositive(
                                                    MultiFactorTerm(
                                                      MultiFactorTerm(
                                                        SingleFactorTerm(
                                                          DesignatorEmptyFactor(
                                                            IdentArrayDesignator(
                                                             niz
                                                              SingleTermExprPositive(
                                                                SingleFactorTerm(
                                                                  DesignatorEmptyFactor(
                                                                    IdentDesignator(
                                                                     i
                                                                    ) [IdentDesignator]
                                                                  ) [DesignatorEmptyFactor]
                                                                ) [SingleFactorTerm]
                                                              ) [SingleTermExprPositive]
                                                            ) [IdentArrayDesignator]
                                                          ) [DesignatorEmptyFactor]
                                                        ) [SingleFactorTerm]
                                                        MulopMul(
                                                        ) [MulopMul]
                                                        NumConstFactor(
                                                         2
                                                        ) [NumConstFactor]
                                                      ) [MultiFactorTerm]
                                                      MulopMul(
                                                      ) [MulopMul]
                                                      DesignatorEmptyFactor(
                                                        IdentDesignator(
                                                         a
                                                        ) [IdentDesignator]
                                                      ) [DesignatorEmptyFactor]
                                                    ) [MultiFactorTerm]
                                                  ) [SingleTermExprPositive]
                                                ) [DesignatorStmtAssignCorrect]
                                              ) [DesignatorStmtAssign]
                                            ) [SingleDesignatorStatement]
                                          ) [StatementSingle]
                                        ) [StatementListMultiple]
                                        StatementSingle(
                                          SingleDesignatorStatement(
                                            DesignatorStmtPlusPlus(
                                              IdentDesignator(
                                               i
                                              ) [IdentDesignator]
                                            ) [DesignatorStmtPlusPlus]
                                          ) [SingleDesignatorStatement]
                                        ) [StatementSingle]
                                      ) [StatementListMultiple]
                                    ) [StatementsInBraces]
                                  ) [StatementMultiple]
                                ) [StatementListMultiple]
                                ConditionSingleTerm(
                                  CondSingleFactTerm(
                                    CondMultiExprFact(
                                      CondSingleExprFact(
                                        SingleTermExprPositive(
                                          SingleFactorTerm(
                                            DesignatorEmptyFactor(
                                              IdentDesignator(
                                               i
                                              ) [IdentDesignator]
                                            ) [DesignatorEmptyFactor]
                                          ) [SingleFactorTerm]
                                        ) [SingleTermExprPositive]
                                      ) [CondSingleExprFact]
                                      RelopLS(
                                      ) [RelopLS]
                                      SingleTermExprPositive(
                                        SingleFactorTerm(
                                          NumConstFactor(
                                           3
                                          ) [NumConstFactor]
                                        ) [SingleFactorTerm]
                                      ) [SingleTermExprPositive]
                                    ) [CondMultiExprFact]
                                  ) [CondSingleFactTerm]
                                ) [ConditionSingleTerm]
                              ) [DoWhileStatement]
                            ) [StatementSingle]
                          ) [StatementListMultiple]
                          StatementSingle(
                            SinglePrintStatement(
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentArrayDesignator(
                                     niz
                                      SingleTermExprPositive(
                                        SingleFactorTerm(
                                          NumConstFactor(
                                           0
                                          ) [NumConstFactor]
                                        ) [SingleFactorTerm]
                                      ) [SingleTermExprPositive]
                                    ) [IdentArrayDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                              NumConstNo(
                              ) [NumConstNo]
                            ) [SinglePrintStatement]
                          ) [StatementSingle]
                        ) [StatementListMultiple]
                        StatementSingle(
                          SinglePrintStatement(
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                DesignatorEmptyFactor(
                                  IdentArrayDesignator(
                                   niz
                                    SingleTermExprPositive(
                                      SingleFactorTerm(
                                        NumConstFactor(
                                         1
                                        ) [NumConstFactor]
                                      ) [SingleFactorTerm]
                                    ) [SingleTermExprPositive]
                                  ) [IdentArrayDesignator]
                                ) [DesignatorEmptyFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                            NumConstNo(
                            ) [NumConstNo]
                          ) [SinglePrintStatement]
                        ) [StatementSingle]
                      ) [StatementListMultiple]
                      StatementSingle(
                        SinglePrintStatement(
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              DesignatorEmptyFactor(
                                IdentArrayDesignator(
                                 niz
                                  SingleTermExprPositive(
                                    SingleFactorTerm(
                                      NumConstFactor(
                                       2
                                      ) [NumConstFactor]
                                    ) [SingleFactorTerm]
                                  ) [SingleTermExprPositive]
                                ) [IdentArrayDesignator]
                              ) [DesignatorEmptyFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                          NumConstNo(
                          ) [NumConstNo]
                        ) [SinglePrintStatement]
                      ) [StatementSingle]
                    ) [StatementListMultiple]
                    StatementSingle(
                      SinglePrintStatement(
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            DesignatorEmptyFactor(
                              IdentDesignator(
                               eol
                              ) [IdentDesignator]
                            ) [DesignatorEmptyFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                        NumConstNo(
                        ) [NumConstNo]
                      ) [SinglePrintStatement]
                    ) [StatementSingle]
                  ) [StatementListMultiple]
                  StatementSingle(
                    SingleDesignatorStatement(
                      DesignatorStmtAssign(
                        DesignatorStmtAssignCorrect(
                          IdentDesignator(
                           i
                          ) [IdentDesignator]
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              NumConstFactor(
                               0
                              ) [NumConstFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [DesignatorStmtAssignCorrect]
                      ) [DesignatorStmtAssign]
                    ) [SingleDesignatorStatement]
                  ) [StatementSingle]
                ) [StatementListMultiple]
                StatementSingle(
                  SingleDesignatorStatement(
                    DesignatorStmtAssign(
                      DesignatorStmtAssignCorrect(
                        IdentDesignator(
                         niz2
                        ) [IdentDesignator]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            NumConstFactor(
                             0
                            ) [NumConstFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [DesignatorStmtAssignCorrect]
                    ) [DesignatorStmtAssign]
                  ) [SingleDesignatorStatement]
                ) [StatementSingle]
              ) [StatementListMultiple]
              StatementSingle(
                DoWhileStatement(
                  DoEnter(
                  ) [DoEnter]
                  StatementListMultiple(
                    StatementListNo(
                    ) [StatementListNo]
                    StatementMultiple(
                      StatementsInBraces(
                        StatementListMultiple(
                          StatementListMultiple(
                            StatementListNo(
                            ) [StatementListNo]
                            StatementSingle(
                              SingleDesignatorStatement(
                                DesignatorStmtAssign(
                                  DesignatorStmtAssignCorrect(
                                    IdentDesignator(
                                     niz2
                                    ) [IdentDesignator]
                                    MultiTermExpr(
                                      SingleTermExprPositive(
                                        SingleFactorTerm(
                                          DesignatorEmptyFactor(
                                            IdentDesignator(
                                             niz2
                                            ) [IdentDesignator]
                                          ) [DesignatorEmptyFactor]
                                        ) [SingleFactorTerm]
                                      ) [SingleTermExprPositive]
                                      AddopPlus(
                                      ) [AddopPlus]
                                      MultiFactorTerm(
                                        SingleFactorTerm(
                                          DesignatorEmptyFactor(
                                            IdentArrayDesignator(
                                             niz
                                              SingleTermExprPositive(
                                                SingleFactorTerm(
                                                  DesignatorEmptyFactor(
                                                    IdentDesignator(
                                                     i
                                                    ) [IdentDesignator]
                                                  ) [DesignatorEmptyFactor]
                                                ) [SingleFactorTerm]
                                              ) [SingleTermExprPositive]
                                            ) [IdentArrayDesignator]
                                          ) [DesignatorEmptyFactor]
                                        ) [SingleFactorTerm]
                                        MulopMul(
                                        ) [MulopMul]
                                        DesignatorEmptyFactor(
                                          IdentArrayDesignator(
                                           niz
                                            SingleTermExprPositive(
                                              SingleFactorTerm(
                                                DesignatorEmptyFactor(
                                                  IdentDesignator(
                                                   i
                                                  ) [IdentDesignator]
                                                ) [DesignatorEmptyFactor]
                                              ) [SingleFactorTerm]
                                            ) [SingleTermExprPositive]
                                          ) [IdentArrayDesignator]
                                        ) [DesignatorEmptyFactor]
                                      ) [MultiFactorTerm]
                                    ) [MultiTermExpr]
                                  ) [DesignatorStmtAssignCorrect]
                                ) [DesignatorStmtAssign]
                              ) [SingleDesignatorStatement]
                            ) [StatementSingle]
                          ) [StatementListMultiple]
                          StatementSingle(
                            SingleDesignatorStatement(
                              DesignatorStmtPlusPlus(
                                IdentDesignator(
                                 i
                                ) [IdentDesignator]
                              ) [DesignatorStmtPlusPlus]
                            ) [SingleDesignatorStatement]
                          ) [StatementSingle]
                        ) [StatementListMultiple]
                      ) [StatementsInBraces]
                    ) [StatementMultiple]
                  ) [StatementListMultiple]
                  ConditionSingleTerm(
                    CondSingleFactTerm(
                      CondMultiExprFact(
                        CondSingleExprFact(
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              DesignatorEmptyFactor(
                                IdentDesignator(
                                 i
                                ) [IdentDesignator]
                              ) [DesignatorEmptyFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [CondSingleExprFact]
                        RelopLS(
                        ) [RelopLS]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            NumConstFactor(
                             3
                            ) [NumConstFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [CondMultiExprFact]
                    ) [CondSingleFactTerm]
                  ) [ConditionSingleTerm]
                ) [DoWhileStatement]
              ) [StatementSingle]
            ) [StatementListMultiple]
            StatementSingle(
              SinglePrintStatement(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    DesignatorEmptyFactor(
                      IdentDesignator(
                       niz2
                      ) [IdentDesignator]
                    ) [DesignatorEmptyFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
                NumConstNo(
                ) [NumConstNo]
              ) [SinglePrintStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
          StatementSingle(
            SinglePrintStatement(
              SingleTermExprPositive(
                SingleFactorTerm(
                  DesignatorEmptyFactor(
                    IdentDesignator(
                     eol
                    ) [IdentDesignator]
                  ) [DesignatorEmptyFactor]
                ) [SingleFactorTerm]
              ) [SingleTermExprPositive]
              NumConstNo(
              ) [NumConstNo]
            ) [SinglePrintStatement]
          ) [StatementSingle]
        ) [StatementListMultiple]
        StatementSingle(
          SingleDesignatorStatement(
            DesignatorStmtMethodCall(
              MethodCall(
                IdentDesignator(
                 printArgs
                ) [IdentDesignator]
                ActParsLeftParen(
                ) [ActParsLeftParen]
                ActParsYes(
                  ActParsMultiExpr(
                    ActParsMultiExpr(
                      ActParsMultiExpr(
                        ActParsMultiExpr(
                          ActParsMultiExpr(
                            ActParsSingleExpr(
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  NumConstFactor(
                                   5
                                  ) [NumConstFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [ActParsSingleExpr]
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                CharConstFactor(
                                 t
                                ) [CharConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [ActParsMultiExpr]
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              CharConstFactor(
                               e
                              ) [CharConstFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [ActParsMultiExpr]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            CharConstFactor(
                             s
                            ) [CharConstFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [ActParsMultiExpr]
                      SingleTermExprPositive(
                        SingleFactorTerm(
                          CharConstFactor(
                           t
                          ) [CharConstFactor]
                        ) [SingleFactorTerm]
                      ) [SingleTermExprPositive]
                    ) [ActParsMultiExpr]
                    SingleTermExprPositive(
                      SingleFactorTerm(
                        CharConstFactor(
                         B
                        ) [CharConstFactor]
                      ) [SingleFactorTerm]
                    ) [SingleTermExprPositive]
                  ) [ActParsMultiExpr]
                ) [ActParsYes]
                ActParsRightParen(
                ) [ActParsRightParen]
              ) [MethodCall]
            ) [DesignatorStmtMethodCall]
          ) [SingleDesignatorStatement]
        ) [StatementSingle]
      ) [StatementListMultiple]
    ) [MethodDeclaration]
  ) [MethodDeclListMultiple]
) [Program]
INFO  21:19:25,951 - ===================================
ERROR 21:19:25,955 - Line 20: Symbol args is not defined.
ERROR 21:19:25,955 - Line 21: Symbol args is not defined.
INFO  21:19:25,955 - Line 30: Access to array element detected. Array name: args
INFO  21:19:25,955 - Line 40: Method Call detected. Method name: sum
ERROR 21:19:25,955 - Line 40: Invalid number of function parameters.
INFO  21:20:58,079 - Compiling source file: D:\source\repos\PP_Projekat\MicroJavaCompiler\test\program.mj
INFO  21:20:58,097 - #2 program
INFO  21:20:58,097 - #48 test302
INFO  21:20:58,097 - #7 const
INFO  21:20:58,097 - #48 int
INFO  21:20:58,097 - #48 jedan
INFO  21:20:58,098 - #27 =
INFO  21:20:58,098 - #51 1
INFO  21:20:58,098 - #38 ;
INFO  21:20:58,098 - #44 {
INFO  21:20:58,098 - #48 int
INFO  21:20:58,098 - #48 sum
INFO  21:20:58,099 - #40 (
INFO  21:20:58,099 - #48 int
INFO  21:20:58,099 - #47 .
ERROR 21:20:58,099 - 
Sintaksna greska na liniji 9
INFO  21:20:58,099 - #47 .
INFO  21:20:58,099 - #47 .
INFO  21:20:58,099 - #48 args
INFO  21:20:58,100 - #41 )
INFO  21:20:58,100 - #48 int
INFO  21:20:58,100 - #48 z
INFO  21:20:58,100 - #39 ,
ERROR 21:20:58,100 - Izvrsen oporovak prilikom greske u formalnom parametru do , ili ) u liniji 9
INFO  21:20:58,101 - #48 d
INFO  21:20:58,101 - #38 ;
INFO  21:20:58,101 - #44 {
INFO  21:20:58,101 - #48 z
INFO  21:20:58,101 - #27 =
INFO  21:20:58,102 - #48 args
INFO  21:20:58,102 - #42 [
INFO  21:20:58,102 - #51 0
INFO  21:20:58,102 - #43 ]
INFO  21:20:58,102 - #38 ;
INFO  21:20:58,102 - #48 d
INFO  21:20:58,102 - #27 =
INFO  21:20:58,102 - #48 args
INFO  21:20:58,102 - #42 [
INFO  21:20:58,102 - #51 1
INFO  21:20:58,102 - #43 ]
INFO  21:20:58,102 - #38 ;
INFO  21:20:58,102 - #15 return
INFO  21:20:58,102 - #48 z
INFO  21:20:58,102 - #22 +
INFO  21:20:58,102 - #48 d
INFO  21:20:58,103 - #38 ;
INFO  21:20:58,103 - #45 }
INFO  21:20:58,103 - #14 void
INFO  21:20:58,103 - #48 main
INFO  21:20:58,103 - #40 (
INFO  21:20:58,103 - #41 )
INFO  21:20:58,103 - #44 {
INFO  21:20:58,103 - #12 print
INFO  21:20:58,104 - #40 (
INFO  21:20:58,104 - #48 sum
INFO  21:20:58,104 - #40 (
INFO  21:20:58,104 - #51 1
INFO  21:20:58,104 - #39 ,
INFO  21:20:58,104 - #51 2
INFO  21:20:58,104 - #39 ,
INFO  21:20:58,104 - #51 3
INFO  21:20:58,104 - #41 )
INFO  21:20:58,105 - #41 )
INFO  21:20:58,105 - #38 ;
INFO  21:20:58,105 - #45 }
INFO  21:20:58,105 - #45 }
INFO  21:20:58,106 - Program(
  ProgramName(
   test302
  ) [ProgramName]
  AllDeclListMultiple(
    NoDecl(
    ) [NoDecl]
    ConstDeclaration(
      ConstDeclarationExpr(
        Type(
         int
        ) [Type]
        ConstAssignSingle(
          ConstAssign(
           jedan
            NumberConst(
             1
            ) [NumberConst]
          ) [ConstAssign]
        ) [ConstAssignSingle]
      ) [ConstDeclarationExpr]
    ) [ConstDeclaration]
  ) [AllDeclListMultiple]
  MethodDeclListMultiple(
    MethodDeclListMultiple(
      MethodDeclListNo(
      ) [MethodDeclListNo]
      MethodDeclaration(
        MethodSignatureParams(
          MethodTypeType(
            Type(
             int
            ) [Type]
          ) [MethodTypeType]
          MethodName(
           sum
          ) [MethodName]
          FormParsSingle(
            FormParError(
            ) [FormParError]
          ) [FormParsSingle]
          FormParsEnd(
          ) [FormParsEnd]
        ) [MethodSignatureParams]
        VarDeclOptionTrue(
          NoVarDeclOption(
          ) [NoVarDeclOption]
          VarDeclarationExpr(
            Type(
             int
            ) [Type]
            VarDeclListMultiple(
              VarDeclListSingle(
                VarDeclSingle(
                 z
                  NoArray(
                  ) [NoArray]
                ) [VarDeclSingle]
              ) [VarDeclListSingle]
              VarDeclSingle(
               d
                NoArray(
                ) [NoArray]
              ) [VarDeclSingle]
            ) [VarDeclListMultiple]
          ) [VarDeclarationExpr]
        ) [VarDeclOptionTrue]
        StatementListMultiple(
          StatementListMultiple(
            StatementListMultiple(
              StatementListNo(
              ) [StatementListNo]
              StatementSingle(
                SingleDesignatorStatement(
                  DesignatorStmtAssign(
                    DesignatorStmtAssignCorrect(
                      IdentDesignator(
                       z
                      ) [IdentDesignator]
                      SingleTermExprPositive(
                        SingleFactorTerm(
                          DesignatorEmptyFactor(
                            IdentArrayDesignator(
                             args
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  NumConstFactor(
                                   0
                                  ) [NumConstFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [IdentArrayDesignator]
                          ) [DesignatorEmptyFactor]
                        ) [SingleFactorTerm]
                      ) [SingleTermExprPositive]
                    ) [DesignatorStmtAssignCorrect]
                  ) [DesignatorStmtAssign]
                ) [SingleDesignatorStatement]
              ) [StatementSingle]
            ) [StatementListMultiple]
            StatementSingle(
              SingleDesignatorStatement(
                DesignatorStmtAssign(
                  DesignatorStmtAssignCorrect(
                    IdentDesignator(
                     d
                    ) [IdentDesignator]
                    SingleTermExprPositive(
                      SingleFactorTerm(
                        DesignatorEmptyFactor(
                          IdentArrayDesignator(
                           args
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                NumConstFactor(
                                 1
                                ) [NumConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [IdentArrayDesignator]
                        ) [DesignatorEmptyFactor]
                      ) [SingleFactorTerm]
                    ) [SingleTermExprPositive]
                  ) [DesignatorStmtAssignCorrect]
                ) [DesignatorStmtAssign]
              ) [SingleDesignatorStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
          StatementSingle(
            SingleReturnExprStatement(
              MultiTermExpr(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    DesignatorEmptyFactor(
                      IdentDesignator(
                       z
                      ) [IdentDesignator]
                    ) [DesignatorEmptyFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
                AddopPlus(
                ) [AddopPlus]
                SingleFactorTerm(
                  DesignatorEmptyFactor(
                    IdentDesignator(
                     d
                    ) [IdentDesignator]
                  ) [DesignatorEmptyFactor]
                ) [SingleFactorTerm]
              ) [MultiTermExpr]
            ) [SingleReturnExprStatement]
          ) [StatementSingle]
        ) [StatementListMultiple]
      ) [MethodDeclaration]
    ) [MethodDeclListMultiple]
    MethodDeclaration(
      MethodSignaturePlain(
        MethodTypeVoid(
        ) [MethodTypeVoid]
        MethodName(
         main
        ) [MethodName]
      ) [MethodSignaturePlain]
      NoVarDeclOption(
      ) [NoVarDeclOption]
      StatementListMultiple(
        StatementListNo(
        ) [StatementListNo]
        StatementSingle(
          SinglePrintStatement(
            SingleTermExprPositive(
              SingleFactorTerm(
                MethodCallFactor(
                  MethodCall(
                    IdentDesignator(
                     sum
                    ) [IdentDesignator]
                    ActParsLeftParen(
                    ) [ActParsLeftParen]
                    ActParsYes(
                      ActParsMultiExpr(
                        ActParsMultiExpr(
                          ActParsSingleExpr(
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                NumConstFactor(
                                 1
                                ) [NumConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [ActParsSingleExpr]
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              NumConstFactor(
                               2
                              ) [NumConstFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [ActParsMultiExpr]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            NumConstFactor(
                             3
                            ) [NumConstFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [ActParsMultiExpr]
                    ) [ActParsYes]
                    ActParsRightParen(
                    ) [ActParsRightParen]
                  ) [MethodCall]
                ) [MethodCallFactor]
              ) [SingleFactorTerm]
            ) [SingleTermExprPositive]
            NumConstNo(
            ) [NumConstNo]
          ) [SinglePrintStatement]
        ) [StatementSingle]
      ) [StatementListMultiple]
    ) [MethodDeclaration]
  ) [MethodDeclListMultiple]
) [Program]
INFO  21:20:58,106 - ===================================
ERROR 21:20:58,109 - Line 12: Symbol args is not defined.
ERROR 21:20:58,109 - Line 13: Symbol args is not defined.
INFO  21:20:58,109 - Line 20: Method Call detected. Method name: sum
ERROR 21:20:58,109 - Line 20: Invalid number of function parameters.
INFO  21:21:48,427 - Compiling source file: D:\source\repos\PP_Projekat\MicroJavaCompiler\test\program.mj
INFO  21:21:48,451 - #2 program
INFO  21:21:48,451 - #48 test302
INFO  21:21:48,451 - #7 const
INFO  21:21:48,452 - #48 int
INFO  21:21:48,452 - #48 jedan
INFO  21:21:48,452 - #27 =
INFO  21:21:48,452 - #51 1
INFO  21:21:48,452 - #38 ;
INFO  21:21:48,452 - #44 {
INFO  21:21:48,453 - #48 int
INFO  21:21:48,453 - #48 sum
INFO  21:21:48,453 - #40 (
INFO  21:21:48,453 - #48 int
INFO  21:21:48,453 - #47 .
ERROR 21:21:48,453 - 
Sintaksna greska na liniji 9
INFO  21:21:48,454 - #47 .
INFO  21:21:48,454 - #47 .
INFO  21:21:48,454 - #48 args
INFO  21:21:48,454 - #41 )
INFO  21:21:48,454 - #48 int
INFO  21:21:48,454 - #48 z
INFO  21:21:48,454 - #39 ,
ERROR 21:21:48,454 - Izvrsen oporovak prilikom greske u formalnom parametru do , ili ) u liniji 9
INFO  21:21:48,456 - #48 d
INFO  21:21:48,456 - #38 ;
INFO  21:21:48,456 - #44 {
INFO  21:21:48,456 - #48 z
INFO  21:21:48,456 - #27 =
INFO  21:21:48,456 - #48 args
INFO  21:21:48,456 - #42 [
INFO  21:21:48,456 - #51 0
INFO  21:21:48,456 - #43 ]
INFO  21:21:48,456 - #38 ;
INFO  21:21:48,457 - #48 d
INFO  21:21:48,457 - #27 =
INFO  21:21:48,457 - #48 args
INFO  21:21:48,457 - #42 [
INFO  21:21:48,457 - #51 1
INFO  21:21:48,457 - #43 ]
INFO  21:21:48,457 - #38 ;
INFO  21:21:48,457 - #15 return
INFO  21:21:48,457 - #48 z
INFO  21:21:48,457 - #22 +
INFO  21:21:48,457 - #48 d
INFO  21:21:48,458 - #38 ;
INFO  21:21:48,458 - #45 }
INFO  21:21:48,458 - #14 void
INFO  21:21:48,458 - #48 main
INFO  21:21:48,458 - #40 (
INFO  21:21:48,458 - #41 )
INFO  21:21:48,458 - #44 {
INFO  21:21:48,458 - #12 print
INFO  21:21:48,458 - #40 (
INFO  21:21:48,458 - #48 sum
INFO  21:21:48,458 - #40 (
INFO  21:21:48,458 - #51 1
INFO  21:21:48,459 - #39 ,
INFO  21:21:48,459 - #51 2
INFO  21:21:48,459 - #39 ,
INFO  21:21:48,459 - #51 3
INFO  21:21:48,459 - #41 )
INFO  21:21:48,459 - #41 )
INFO  21:21:48,460 - #38 ;
INFO  21:21:48,460 - #45 }
INFO  21:21:48,460 - #45 }
INFO  21:21:48,460 - Program(
  ProgramName(
   test302
  ) [ProgramName]
  AllDeclListMultiple(
    NoDecl(
    ) [NoDecl]
    ConstDeclaration(
      ConstDeclarationExpr(
        Type(
         int
        ) [Type]
        ConstAssignSingle(
          ConstAssign(
           jedan
            NumberConst(
             1
            ) [NumberConst]
          ) [ConstAssign]
        ) [ConstAssignSingle]
      ) [ConstDeclarationExpr]
    ) [ConstDeclaration]
  ) [AllDeclListMultiple]
  MethodDeclListMultiple(
    MethodDeclListMultiple(
      MethodDeclListNo(
      ) [MethodDeclListNo]
      MethodDeclaration(
        MethodSignatureParams(
          MethodTypeType(
            Type(
             int
            ) [Type]
          ) [MethodTypeType]
          MethodName(
           sum
          ) [MethodName]
          FormParsSingle(
            FormParError(
            ) [FormParError]
          ) [FormParsSingle]
          FormParsEnd(
          ) [FormParsEnd]
        ) [MethodSignatureParams]
        VarDeclOptionTrue(
          NoVarDeclOption(
          ) [NoVarDeclOption]
          VarDeclarationExpr(
            Type(
             int
            ) [Type]
            VarDeclListMultiple(
              VarDeclListSingle(
                VarDeclSingle(
                 z
                  NoArray(
                  ) [NoArray]
                ) [VarDeclSingle]
              ) [VarDeclListSingle]
              VarDeclSingle(
               d
                NoArray(
                ) [NoArray]
              ) [VarDeclSingle]
            ) [VarDeclListMultiple]
          ) [VarDeclarationExpr]
        ) [VarDeclOptionTrue]
        StatementListMultiple(
          StatementListMultiple(
            StatementListMultiple(
              StatementListNo(
              ) [StatementListNo]
              StatementSingle(
                SingleDesignatorStatement(
                  DesignatorStmtAssign(
                    DesignatorStmtAssignCorrect(
                      IdentDesignator(
                       z
                      ) [IdentDesignator]
                      SingleTermExprPositive(
                        SingleFactorTerm(
                          DesignatorEmptyFactor(
                            IdentArrayDesignator(
                             args
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  NumConstFactor(
                                   0
                                  ) [NumConstFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [IdentArrayDesignator]
                          ) [DesignatorEmptyFactor]
                        ) [SingleFactorTerm]
                      ) [SingleTermExprPositive]
                    ) [DesignatorStmtAssignCorrect]
                  ) [DesignatorStmtAssign]
                ) [SingleDesignatorStatement]
              ) [StatementSingle]
            ) [StatementListMultiple]
            StatementSingle(
              SingleDesignatorStatement(
                DesignatorStmtAssign(
                  DesignatorStmtAssignCorrect(
                    IdentDesignator(
                     d
                    ) [IdentDesignator]
                    SingleTermExprPositive(
                      SingleFactorTerm(
                        DesignatorEmptyFactor(
                          IdentArrayDesignator(
                           args
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                NumConstFactor(
                                 1
                                ) [NumConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [IdentArrayDesignator]
                        ) [DesignatorEmptyFactor]
                      ) [SingleFactorTerm]
                    ) [SingleTermExprPositive]
                  ) [DesignatorStmtAssignCorrect]
                ) [DesignatorStmtAssign]
              ) [SingleDesignatorStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
          StatementSingle(
            SingleReturnExprStatement(
              MultiTermExpr(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    DesignatorEmptyFactor(
                      IdentDesignator(
                       z
                      ) [IdentDesignator]
                    ) [DesignatorEmptyFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
                AddopPlus(
                ) [AddopPlus]
                SingleFactorTerm(
                  DesignatorEmptyFactor(
                    IdentDesignator(
                     d
                    ) [IdentDesignator]
                  ) [DesignatorEmptyFactor]
                ) [SingleFactorTerm]
              ) [MultiTermExpr]
            ) [SingleReturnExprStatement]
          ) [StatementSingle]
        ) [StatementListMultiple]
      ) [MethodDeclaration]
    ) [MethodDeclListMultiple]
    MethodDeclaration(
      MethodSignaturePlain(
        MethodTypeVoid(
        ) [MethodTypeVoid]
        MethodName(
         main
        ) [MethodName]
      ) [MethodSignaturePlain]
      NoVarDeclOption(
      ) [NoVarDeclOption]
      StatementListMultiple(
        StatementListNo(
        ) [StatementListNo]
        StatementSingle(
          SinglePrintStatement(
            SingleTermExprPositive(
              SingleFactorTerm(
                MethodCallFactor(
                  MethodCall(
                    IdentDesignator(
                     sum
                    ) [IdentDesignator]
                    ActParsLeftParen(
                    ) [ActParsLeftParen]
                    ActParsYes(
                      ActParsMultiExpr(
                        ActParsMultiExpr(
                          ActParsSingleExpr(
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                NumConstFactor(
                                 1
                                ) [NumConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [ActParsSingleExpr]
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              NumConstFactor(
                               2
                              ) [NumConstFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [ActParsMultiExpr]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            NumConstFactor(
                             3
                            ) [NumConstFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [ActParsMultiExpr]
                    ) [ActParsYes]
                    ActParsRightParen(
                    ) [ActParsRightParen]
                  ) [MethodCall]
                ) [MethodCallFactor]
              ) [SingleFactorTerm]
            ) [SingleTermExprPositive]
            NumConstNo(
            ) [NumConstNo]
          ) [SinglePrintStatement]
        ) [StatementSingle]
      ) [StatementListMultiple]
    ) [MethodDeclaration]
  ) [MethodDeclListMultiple]
) [Program]
INFO  21:21:48,461 - ===================================
ERROR 21:21:48,468 - Line 12: Symbol args is not defined.
ERROR 21:21:48,469 - Line 13: Symbol args is not defined.
INFO  21:21:52,428 - Line 20: Method Call detected. Method name: sum
INFO  21:22:50,469 - Compiling source file: D:\source\repos\PP_Projekat\MicroJavaCompiler\test\program.mj
INFO  21:22:50,493 - #2 program
INFO  21:22:50,493 - #48 test302
INFO  21:22:50,493 - #7 const
INFO  21:22:50,493 - #48 int
INFO  21:22:50,493 - #48 jedan
INFO  21:22:50,493 - #27 =
INFO  21:22:50,494 - #51 1
INFO  21:22:50,494 - #38 ;
INFO  21:22:50,494 - #44 {
INFO  21:22:50,494 - #48 int
INFO  21:22:50,494 - #48 sum
INFO  21:22:50,494 - #40 (
INFO  21:22:50,495 - #48 int
INFO  21:22:50,495 - #47 .
ERROR 21:22:50,495 - 
Sintaksna greska na liniji 9
INFO  21:22:50,495 - #47 .
INFO  21:22:50,495 - #47 .
INFO  21:22:50,495 - #48 args
INFO  21:22:50,495 - #41 )
INFO  21:22:50,495 - #48 int
INFO  21:22:50,495 - #48 z
INFO  21:22:50,495 - #39 ,
ERROR 21:22:50,495 - Izvrsen oporovak prilikom greske u formalnom parametru do , ili ) u liniji 9
INFO  21:22:50,497 - #48 d
INFO  21:22:50,497 - #38 ;
INFO  21:22:50,497 - #44 {
INFO  21:22:50,497 - #48 z
INFO  21:22:50,497 - #27 =
INFO  21:22:50,497 - #48 args
INFO  21:22:50,497 - #42 [
INFO  21:22:50,497 - #51 0
INFO  21:22:50,498 - #43 ]
INFO  21:22:50,498 - #38 ;
INFO  21:22:50,498 - #48 d
INFO  21:22:50,498 - #27 =
INFO  21:22:50,498 - #48 args
INFO  21:22:50,498 - #42 [
INFO  21:22:50,498 - #51 1
INFO  21:22:50,498 - #43 ]
INFO  21:22:50,498 - #38 ;
INFO  21:22:50,498 - #15 return
INFO  21:22:50,498 - #48 z
INFO  21:22:50,498 - #22 +
INFO  21:22:50,498 - #48 d
INFO  21:22:50,499 - #38 ;
INFO  21:22:50,499 - #45 }
INFO  21:22:50,499 - #14 void
INFO  21:22:50,499 - #48 main
INFO  21:22:50,499 - #40 (
INFO  21:22:50,499 - #41 )
INFO  21:22:50,499 - #44 {
INFO  21:22:50,500 - #12 print
INFO  21:22:50,500 - #40 (
INFO  21:22:50,500 - #48 sum
INFO  21:22:50,500 - #40 (
INFO  21:22:50,500 - #51 1
INFO  21:22:50,500 - #39 ,
INFO  21:22:50,500 - #51 2
INFO  21:22:50,500 - #39 ,
INFO  21:22:50,500 - #51 3
INFO  21:22:50,500 - #41 )
INFO  21:22:50,500 - #41 )
INFO  21:22:50,501 - #38 ;
INFO  21:22:50,501 - #45 }
INFO  21:22:50,501 - #45 }
INFO  21:22:50,502 - Program(
  ProgramName(
   test302
  ) [ProgramName]
  AllDeclListMultiple(
    NoDecl(
    ) [NoDecl]
    ConstDeclaration(
      ConstDeclarationExpr(
        Type(
         int
        ) [Type]
        ConstAssignSingle(
          ConstAssign(
           jedan
            NumberConst(
             1
            ) [NumberConst]
          ) [ConstAssign]
        ) [ConstAssignSingle]
      ) [ConstDeclarationExpr]
    ) [ConstDeclaration]
  ) [AllDeclListMultiple]
  MethodDeclListMultiple(
    MethodDeclListMultiple(
      MethodDeclListNo(
      ) [MethodDeclListNo]
      MethodDeclaration(
        MethodSignatureParams(
          MethodTypeType(
            Type(
             int
            ) [Type]
          ) [MethodTypeType]
          MethodName(
           sum
          ) [MethodName]
          FormParsSingle(
            FormParError(
            ) [FormParError]
          ) [FormParsSingle]
          FormParsEnd(
          ) [FormParsEnd]
        ) [MethodSignatureParams]
        VarDeclOptionTrue(
          NoVarDeclOption(
          ) [NoVarDeclOption]
          VarDeclarationExpr(
            Type(
             int
            ) [Type]
            VarDeclListMultiple(
              VarDeclListSingle(
                VarDeclSingle(
                 z
                  NoArray(
                  ) [NoArray]
                ) [VarDeclSingle]
              ) [VarDeclListSingle]
              VarDeclSingle(
               d
                NoArray(
                ) [NoArray]
              ) [VarDeclSingle]
            ) [VarDeclListMultiple]
          ) [VarDeclarationExpr]
        ) [VarDeclOptionTrue]
        StatementListMultiple(
          StatementListMultiple(
            StatementListMultiple(
              StatementListNo(
              ) [StatementListNo]
              StatementSingle(
                SingleDesignatorStatement(
                  DesignatorStmtAssign(
                    DesignatorStmtAssignCorrect(
                      IdentDesignator(
                       z
                      ) [IdentDesignator]
                      SingleTermExprPositive(
                        SingleFactorTerm(
                          DesignatorEmptyFactor(
                            IdentArrayDesignator(
                             args
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  NumConstFactor(
                                   0
                                  ) [NumConstFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [IdentArrayDesignator]
                          ) [DesignatorEmptyFactor]
                        ) [SingleFactorTerm]
                      ) [SingleTermExprPositive]
                    ) [DesignatorStmtAssignCorrect]
                  ) [DesignatorStmtAssign]
                ) [SingleDesignatorStatement]
              ) [StatementSingle]
            ) [StatementListMultiple]
            StatementSingle(
              SingleDesignatorStatement(
                DesignatorStmtAssign(
                  DesignatorStmtAssignCorrect(
                    IdentDesignator(
                     d
                    ) [IdentDesignator]
                    SingleTermExprPositive(
                      SingleFactorTerm(
                        DesignatorEmptyFactor(
                          IdentArrayDesignator(
                           args
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                NumConstFactor(
                                 1
                                ) [NumConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [IdentArrayDesignator]
                        ) [DesignatorEmptyFactor]
                      ) [SingleFactorTerm]
                    ) [SingleTermExprPositive]
                  ) [DesignatorStmtAssignCorrect]
                ) [DesignatorStmtAssign]
              ) [SingleDesignatorStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
          StatementSingle(
            SingleReturnExprStatement(
              MultiTermExpr(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    DesignatorEmptyFactor(
                      IdentDesignator(
                       z
                      ) [IdentDesignator]
                    ) [DesignatorEmptyFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
                AddopPlus(
                ) [AddopPlus]
                SingleFactorTerm(
                  DesignatorEmptyFactor(
                    IdentDesignator(
                     d
                    ) [IdentDesignator]
                  ) [DesignatorEmptyFactor]
                ) [SingleFactorTerm]
              ) [MultiTermExpr]
            ) [SingleReturnExprStatement]
          ) [StatementSingle]
        ) [StatementListMultiple]
      ) [MethodDeclaration]
    ) [MethodDeclListMultiple]
    MethodDeclaration(
      MethodSignaturePlain(
        MethodTypeVoid(
        ) [MethodTypeVoid]
        MethodName(
         main
        ) [MethodName]
      ) [MethodSignaturePlain]
      NoVarDeclOption(
      ) [NoVarDeclOption]
      StatementListMultiple(
        StatementListNo(
        ) [StatementListNo]
        StatementSingle(
          SinglePrintStatement(
            SingleTermExprPositive(
              SingleFactorTerm(
                MethodCallFactor(
                  MethodCall(
                    IdentDesignator(
                     sum
                    ) [IdentDesignator]
                    ActParsLeftParen(
                    ) [ActParsLeftParen]
                    ActParsYes(
                      ActParsMultiExpr(
                        ActParsMultiExpr(
                          ActParsSingleExpr(
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                NumConstFactor(
                                 1
                                ) [NumConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [ActParsSingleExpr]
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              NumConstFactor(
                               2
                              ) [NumConstFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [ActParsMultiExpr]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            NumConstFactor(
                             3
                            ) [NumConstFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [ActParsMultiExpr]
                    ) [ActParsYes]
                    ActParsRightParen(
                    ) [ActParsRightParen]
                  ) [MethodCall]
                ) [MethodCallFactor]
              ) [SingleFactorTerm]
            ) [SingleTermExprPositive]
            NumConstNo(
            ) [NumConstNo]
          ) [SinglePrintStatement]
        ) [StatementSingle]
      ) [StatementListMultiple]
    ) [MethodDeclaration]
  ) [MethodDeclListMultiple]
) [Program]
INFO  21:22:50,502 - ===================================
ERROR 21:22:50,510 - Line 12: Symbol args is not defined.
ERROR 21:22:50,510 - Line 13: Symbol args is not defined.
INFO  21:22:53,963 - Line 20: Method Call detected. Method name: sum
INFO  21:24:39,609 - Compiling source file: D:\source\repos\PP_Projekat\MicroJavaCompiler\test\program.mj
INFO  21:24:39,632 - #2 program
INFO  21:24:39,632 - #48 test302
INFO  21:24:39,632 - #7 const
INFO  21:24:39,633 - #48 int
INFO  21:24:39,633 - #48 jedan
INFO  21:24:39,633 - #27 =
INFO  21:24:39,633 - #51 1
INFO  21:24:39,633 - #38 ;
INFO  21:24:39,633 - #44 {
INFO  21:24:39,634 - #48 int
INFO  21:24:39,634 - #48 sum
INFO  21:24:39,634 - #40 (
INFO  21:24:39,634 - #48 int
INFO  21:24:39,634 - #47 .
ERROR 21:24:39,634 - 
Sintaksna greska na liniji 9
INFO  21:24:39,634 - #47 .
INFO  21:24:39,634 - #47 .
INFO  21:24:39,634 - #48 args
INFO  21:24:39,635 - #41 )
INFO  21:24:39,635 - #48 int
INFO  21:24:39,635 - #48 z
INFO  21:24:39,635 - #39 ,
ERROR 21:24:39,635 - Izvrsen oporovak prilikom greske u formalnom parametru do , ili ) u liniji 9
INFO  21:24:39,636 - #48 d
INFO  21:24:39,636 - #38 ;
INFO  21:24:39,636 - #44 {
INFO  21:24:39,636 - #48 z
INFO  21:24:39,637 - #27 =
INFO  21:24:39,637 - #48 args
INFO  21:24:39,637 - #42 [
INFO  21:24:39,637 - #51 0
INFO  21:24:39,637 - #43 ]
INFO  21:24:39,637 - #38 ;
INFO  21:24:39,637 - #48 d
INFO  21:24:39,637 - #27 =
INFO  21:24:39,637 - #48 args
INFO  21:24:39,637 - #42 [
INFO  21:24:39,637 - #51 1
INFO  21:24:39,637 - #43 ]
INFO  21:24:39,637 - #38 ;
INFO  21:24:39,637 - #15 return
INFO  21:24:39,637 - #48 z
INFO  21:24:39,638 - #22 +
INFO  21:24:39,638 - #48 d
INFO  21:24:39,638 - #38 ;
INFO  21:24:39,638 - #45 }
INFO  21:24:39,638 - #14 void
INFO  21:24:39,638 - #48 main
INFO  21:24:39,638 - #40 (
INFO  21:24:39,638 - #41 )
INFO  21:24:39,639 - #44 {
INFO  21:24:39,639 - #12 print
INFO  21:24:39,639 - #40 (
INFO  21:24:39,639 - #48 sum
INFO  21:24:39,639 - #40 (
INFO  21:24:39,639 - #51 1
INFO  21:24:39,639 - #39 ,
INFO  21:24:39,639 - #51 2
INFO  21:24:39,639 - #39 ,
INFO  21:24:39,639 - #51 3
INFO  21:24:39,639 - #41 )
INFO  21:24:39,639 - #41 )
INFO  21:24:39,640 - #38 ;
INFO  21:24:39,640 - #45 }
INFO  21:24:39,640 - #45 }
INFO  21:24:39,641 - Program(
  ProgramName(
   test302
  ) [ProgramName]
  AllDeclListMultiple(
    NoDecl(
    ) [NoDecl]
    ConstDeclaration(
      ConstDeclarationExpr(
        Type(
         int
        ) [Type]
        ConstAssignSingle(
          ConstAssign(
           jedan
            NumberConst(
             1
            ) [NumberConst]
          ) [ConstAssign]
        ) [ConstAssignSingle]
      ) [ConstDeclarationExpr]
    ) [ConstDeclaration]
  ) [AllDeclListMultiple]
  MethodDeclListMultiple(
    MethodDeclListMultiple(
      MethodDeclListNo(
      ) [MethodDeclListNo]
      MethodDeclaration(
        MethodSignatureParams(
          MethodTypeType(
            Type(
             int
            ) [Type]
          ) [MethodTypeType]
          MethodName(
           sum
          ) [MethodName]
          FormParsSingle(
            FormParError(
            ) [FormParError]
          ) [FormParsSingle]
          FormParsEnd(
          ) [FormParsEnd]
        ) [MethodSignatureParams]
        VarDeclOptionTrue(
          NoVarDeclOption(
          ) [NoVarDeclOption]
          VarDeclarationExpr(
            Type(
             int
            ) [Type]
            VarDeclListMultiple(
              VarDeclListSingle(
                VarDeclSingle(
                 z
                  NoArray(
                  ) [NoArray]
                ) [VarDeclSingle]
              ) [VarDeclListSingle]
              VarDeclSingle(
               d
                NoArray(
                ) [NoArray]
              ) [VarDeclSingle]
            ) [VarDeclListMultiple]
          ) [VarDeclarationExpr]
        ) [VarDeclOptionTrue]
        StatementListMultiple(
          StatementListMultiple(
            StatementListMultiple(
              StatementListNo(
              ) [StatementListNo]
              StatementSingle(
                SingleDesignatorStatement(
                  DesignatorStmtAssign(
                    DesignatorStmtAssignCorrect(
                      IdentDesignator(
                       z
                      ) [IdentDesignator]
                      SingleTermExprPositive(
                        SingleFactorTerm(
                          DesignatorEmptyFactor(
                            IdentArrayDesignator(
                             args
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  NumConstFactor(
                                   0
                                  ) [NumConstFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [IdentArrayDesignator]
                          ) [DesignatorEmptyFactor]
                        ) [SingleFactorTerm]
                      ) [SingleTermExprPositive]
                    ) [DesignatorStmtAssignCorrect]
                  ) [DesignatorStmtAssign]
                ) [SingleDesignatorStatement]
              ) [StatementSingle]
            ) [StatementListMultiple]
            StatementSingle(
              SingleDesignatorStatement(
                DesignatorStmtAssign(
                  DesignatorStmtAssignCorrect(
                    IdentDesignator(
                     d
                    ) [IdentDesignator]
                    SingleTermExprPositive(
                      SingleFactorTerm(
                        DesignatorEmptyFactor(
                          IdentArrayDesignator(
                           args
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                NumConstFactor(
                                 1
                                ) [NumConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [IdentArrayDesignator]
                        ) [DesignatorEmptyFactor]
                      ) [SingleFactorTerm]
                    ) [SingleTermExprPositive]
                  ) [DesignatorStmtAssignCorrect]
                ) [DesignatorStmtAssign]
              ) [SingleDesignatorStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
          StatementSingle(
            SingleReturnExprStatement(
              MultiTermExpr(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    DesignatorEmptyFactor(
                      IdentDesignator(
                       z
                      ) [IdentDesignator]
                    ) [DesignatorEmptyFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
                AddopPlus(
                ) [AddopPlus]
                SingleFactorTerm(
                  DesignatorEmptyFactor(
                    IdentDesignator(
                     d
                    ) [IdentDesignator]
                  ) [DesignatorEmptyFactor]
                ) [SingleFactorTerm]
              ) [MultiTermExpr]
            ) [SingleReturnExprStatement]
          ) [StatementSingle]
        ) [StatementListMultiple]
      ) [MethodDeclaration]
    ) [MethodDeclListMultiple]
    MethodDeclaration(
      MethodSignaturePlain(
        MethodTypeVoid(
        ) [MethodTypeVoid]
        MethodName(
         main
        ) [MethodName]
      ) [MethodSignaturePlain]
      NoVarDeclOption(
      ) [NoVarDeclOption]
      StatementListMultiple(
        StatementListNo(
        ) [StatementListNo]
        StatementSingle(
          SinglePrintStatement(
            SingleTermExprPositive(
              SingleFactorTerm(
                MethodCallFactor(
                  MethodCall(
                    IdentDesignator(
                     sum
                    ) [IdentDesignator]
                    ActParsLeftParen(
                    ) [ActParsLeftParen]
                    ActParsYes(
                      ActParsMultiExpr(
                        ActParsMultiExpr(
                          ActParsSingleExpr(
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                NumConstFactor(
                                 1
                                ) [NumConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [ActParsSingleExpr]
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              NumConstFactor(
                               2
                              ) [NumConstFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [ActParsMultiExpr]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            NumConstFactor(
                             3
                            ) [NumConstFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [ActParsMultiExpr]
                    ) [ActParsYes]
                    ActParsRightParen(
                    ) [ActParsRightParen]
                  ) [MethodCall]
                ) [MethodCallFactor]
              ) [SingleFactorTerm]
            ) [SingleTermExprPositive]
            NumConstNo(
            ) [NumConstNo]
          ) [SinglePrintStatement]
        ) [StatementSingle]
      ) [StatementListMultiple]
    ) [MethodDeclaration]
  ) [MethodDeclListMultiple]
) [Program]
INFO  21:24:39,641 - ===================================
ERROR 21:24:39,650 - Line 12: Symbol args is not defined.
ERROR 21:24:39,650 - Line 13: Symbol args is not defined.
INFO  21:27:37,896 - Compiling source file: D:\source\repos\PP_Projekat\MicroJavaCompiler\test\program.mj
INFO  21:27:37,918 - #2 program
INFO  21:27:37,918 - #48 test302
INFO  21:27:37,918 - #7 const
INFO  21:27:37,919 - #48 int
INFO  21:27:37,919 - #48 jedan
INFO  21:27:37,919 - #27 =
INFO  21:27:37,919 - #51 1
INFO  21:27:37,919 - #38 ;
INFO  21:27:37,920 - #44 {
INFO  21:27:37,920 - #48 int
INFO  21:27:37,920 - #48 sum
INFO  21:27:37,920 - #40 (
INFO  21:27:37,921 - #48 int
INFO  21:27:37,921 - #47 .
ERROR 21:27:37,921 - 
Sintaksna greska na liniji 9
INFO  21:27:37,921 - #47 .
INFO  21:27:37,921 - #47 .
INFO  21:27:37,921 - #48 args
INFO  21:27:37,921 - #41 )
INFO  21:27:37,921 - #48 int
INFO  21:27:37,921 - #48 z
INFO  21:27:37,921 - #39 ,
ERROR 21:27:37,921 - Izvrsen oporovak prilikom greske u formalnom parametru do , ili ) u liniji 9
INFO  21:27:37,923 - #48 d
INFO  21:27:37,923 - #38 ;
INFO  21:27:37,923 - #44 {
INFO  21:27:37,923 - #48 z
INFO  21:27:37,923 - #27 =
INFO  21:27:37,923 - #48 args
INFO  21:27:37,923 - #42 [
INFO  21:27:37,923 - #51 0
INFO  21:27:37,923 - #43 ]
INFO  21:27:37,924 - #38 ;
INFO  21:27:37,924 - #48 d
INFO  21:27:37,924 - #27 =
INFO  21:27:37,924 - #48 args
INFO  21:27:37,924 - #42 [
INFO  21:27:37,924 - #51 1
INFO  21:27:37,924 - #43 ]
INFO  21:27:37,924 - #38 ;
INFO  21:27:37,924 - #15 return
INFO  21:27:37,924 - #48 z
INFO  21:27:37,924 - #22 +
INFO  21:27:37,924 - #48 d
INFO  21:27:37,925 - #38 ;
INFO  21:27:37,925 - #45 }
INFO  21:27:37,925 - #14 void
INFO  21:27:37,925 - #48 main
INFO  21:27:37,925 - #40 (
INFO  21:27:37,925 - #41 )
INFO  21:27:37,925 - #44 {
INFO  21:27:37,925 - #12 print
INFO  21:27:37,925 - #40 (
INFO  21:27:37,925 - #48 sum
INFO  21:27:37,925 - #40 (
INFO  21:27:37,925 - #51 1
INFO  21:27:37,926 - #39 ,
INFO  21:27:37,926 - #51 2
INFO  21:27:37,926 - #39 ,
INFO  21:27:37,926 - #51 3
INFO  21:27:37,926 - #41 )
INFO  21:27:37,926 - #41 )
INFO  21:27:37,927 - #38 ;
INFO  21:27:37,927 - #45 }
INFO  21:27:37,927 - #45 }
INFO  21:27:37,927 - Program(
  ProgramName(
   test302
  ) [ProgramName]
  AllDeclListMultiple(
    NoDecl(
    ) [NoDecl]
    ConstDeclaration(
      ConstDeclarationExpr(
        Type(
         int
        ) [Type]
        ConstAssignSingle(
          ConstAssign(
           jedan
            NumberConst(
             1
            ) [NumberConst]
          ) [ConstAssign]
        ) [ConstAssignSingle]
      ) [ConstDeclarationExpr]
    ) [ConstDeclaration]
  ) [AllDeclListMultiple]
  MethodDeclListMultiple(
    MethodDeclListMultiple(
      MethodDeclListNo(
      ) [MethodDeclListNo]
      MethodDeclaration(
        MethodSignatureParams(
          MethodTypeType(
            Type(
             int
            ) [Type]
          ) [MethodTypeType]
          MethodName(
           sum
          ) [MethodName]
          FormParsSingle(
            FormParError(
            ) [FormParError]
          ) [FormParsSingle]
          FormParsEnd(
          ) [FormParsEnd]
        ) [MethodSignatureParams]
        VarDeclOptionTrue(
          NoVarDeclOption(
          ) [NoVarDeclOption]
          VarDeclarationExpr(
            Type(
             int
            ) [Type]
            VarDeclListMultiple(
              VarDeclListSingle(
                VarDeclSingle(
                 z
                  NoArray(
                  ) [NoArray]
                ) [VarDeclSingle]
              ) [VarDeclListSingle]
              VarDeclSingle(
               d
                NoArray(
                ) [NoArray]
              ) [VarDeclSingle]
            ) [VarDeclListMultiple]
          ) [VarDeclarationExpr]
        ) [VarDeclOptionTrue]
        StatementListMultiple(
          StatementListMultiple(
            StatementListMultiple(
              StatementListNo(
              ) [StatementListNo]
              StatementSingle(
                SingleDesignatorStatement(
                  DesignatorStmtAssign(
                    DesignatorStmtAssignCorrect(
                      IdentDesignator(
                       z
                      ) [IdentDesignator]
                      SingleTermExprPositive(
                        SingleFactorTerm(
                          DesignatorEmptyFactor(
                            IdentArrayDesignator(
                             args
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  NumConstFactor(
                                   0
                                  ) [NumConstFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [IdentArrayDesignator]
                          ) [DesignatorEmptyFactor]
                        ) [SingleFactorTerm]
                      ) [SingleTermExprPositive]
                    ) [DesignatorStmtAssignCorrect]
                  ) [DesignatorStmtAssign]
                ) [SingleDesignatorStatement]
              ) [StatementSingle]
            ) [StatementListMultiple]
            StatementSingle(
              SingleDesignatorStatement(
                DesignatorStmtAssign(
                  DesignatorStmtAssignCorrect(
                    IdentDesignator(
                     d
                    ) [IdentDesignator]
                    SingleTermExprPositive(
                      SingleFactorTerm(
                        DesignatorEmptyFactor(
                          IdentArrayDesignator(
                           args
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                NumConstFactor(
                                 1
                                ) [NumConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [IdentArrayDesignator]
                        ) [DesignatorEmptyFactor]
                      ) [SingleFactorTerm]
                    ) [SingleTermExprPositive]
                  ) [DesignatorStmtAssignCorrect]
                ) [DesignatorStmtAssign]
              ) [SingleDesignatorStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
          StatementSingle(
            SingleReturnExprStatement(
              MultiTermExpr(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    DesignatorEmptyFactor(
                      IdentDesignator(
                       z
                      ) [IdentDesignator]
                    ) [DesignatorEmptyFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
                AddopPlus(
                ) [AddopPlus]
                SingleFactorTerm(
                  DesignatorEmptyFactor(
                    IdentDesignator(
                     d
                    ) [IdentDesignator]
                  ) [DesignatorEmptyFactor]
                ) [SingleFactorTerm]
              ) [MultiTermExpr]
            ) [SingleReturnExprStatement]
          ) [StatementSingle]
        ) [StatementListMultiple]
      ) [MethodDeclaration]
    ) [MethodDeclListMultiple]
    MethodDeclaration(
      MethodSignaturePlain(
        MethodTypeVoid(
        ) [MethodTypeVoid]
        MethodName(
         main
        ) [MethodName]
      ) [MethodSignaturePlain]
      NoVarDeclOption(
      ) [NoVarDeclOption]
      StatementListMultiple(
        StatementListNo(
        ) [StatementListNo]
        StatementSingle(
          SinglePrintStatement(
            SingleTermExprPositive(
              SingleFactorTerm(
                MethodCallFactor(
                  MethodCall(
                    IdentDesignator(
                     sum
                    ) [IdentDesignator]
                    ActParsLeftParen(
                    ) [ActParsLeftParen]
                    ActParsYes(
                      ActParsMultiExpr(
                        ActParsMultiExpr(
                          ActParsSingleExpr(
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                NumConstFactor(
                                 1
                                ) [NumConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [ActParsSingleExpr]
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              NumConstFactor(
                               2
                              ) [NumConstFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [ActParsMultiExpr]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            NumConstFactor(
                             3
                            ) [NumConstFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [ActParsMultiExpr]
                    ) [ActParsYes]
                    ActParsRightParen(
                    ) [ActParsRightParen]
                  ) [MethodCall]
                ) [MethodCallFactor]
              ) [SingleFactorTerm]
            ) [SingleTermExprPositive]
            NumConstNo(
            ) [NumConstNo]
          ) [SinglePrintStatement]
        ) [StatementSingle]
      ) [StatementListMultiple]
    ) [MethodDeclaration]
  ) [MethodDeclListMultiple]
) [Program]
INFO  21:27:37,928 - ===================================
ERROR 21:27:37,936 - Line 12: Symbol args is not defined.
ERROR 21:27:37,936 - Line 13: Symbol args is not defined.
INFO  21:32:10,705 - Compiling source file: D:\source\repos\PP_Projekat\MicroJavaCompiler\test\program.mj
INFO  21:32:10,729 - #2 program
INFO  21:32:10,729 - #49 test302
INFO  21:32:10,729 - #7 const
INFO  21:32:10,730 - #49 int
INFO  21:32:10,730 - #49 jedan
INFO  21:32:10,730 - #27 =
INFO  21:32:10,730 - #52 1
INFO  21:32:10,730 - #38 ;
INFO  21:32:10,730 - #44 {
INFO  21:32:10,731 - #49 int
INFO  21:32:10,731 - #49 sum
INFO  21:32:10,731 - #40 (
INFO  21:32:10,731 - #49 int
INFO  21:32:10,731 - #47 .
ERROR 21:32:10,731 - 
Sintaksna greska na liniji 9
INFO  21:32:10,731 - #47 .
INFO  21:32:10,731 - #47 .
INFO  21:32:10,732 - #49 args
INFO  21:32:10,732 - #41 )
INFO  21:32:10,732 - #49 int
INFO  21:32:10,732 - #49 z
INFO  21:32:10,732 - #39 ,
ERROR 21:32:10,732 - Izvrsen oporovak prilikom greske u formalnom parametru do , ili ) u liniji 9
INFO  21:32:10,734 - #49 d
INFO  21:32:10,734 - #38 ;
INFO  21:32:10,734 - #44 {
INFO  21:32:10,734 - #49 z
INFO  21:32:10,734 - #27 =
INFO  21:32:10,734 - #49 args
INFO  21:32:10,735 - #42 [
INFO  21:32:10,735 - #52 0
INFO  21:32:10,735 - #43 ]
INFO  21:32:10,735 - #38 ;
INFO  21:32:10,735 - #49 d
INFO  21:32:10,735 - #27 =
INFO  21:32:10,735 - #49 args
INFO  21:32:10,735 - #42 [
INFO  21:32:10,735 - #52 1
INFO  21:32:10,735 - #43 ]
INFO  21:32:10,735 - #38 ;
INFO  21:32:10,735 - #15 return
INFO  21:32:10,735 - #49 z
INFO  21:32:10,735 - #22 +
INFO  21:32:10,735 - #49 d
INFO  21:32:10,736 - #38 ;
INFO  21:32:10,736 - #45 }
INFO  21:32:10,736 - #14 void
INFO  21:32:10,736 - #49 main
INFO  21:32:10,736 - #40 (
INFO  21:32:10,736 - #41 )
INFO  21:32:10,736 - #44 {
INFO  21:32:10,736 - #12 print
INFO  21:32:10,736 - #40 (
INFO  21:32:10,736 - #49 sum
INFO  21:32:10,736 - #40 (
INFO  21:32:10,736 - #52 1
INFO  21:32:10,736 - #39 ,
INFO  21:32:10,737 - #52 2
INFO  21:32:10,737 - #39 ,
INFO  21:32:10,737 - #52 3
INFO  21:32:10,737 - #41 )
INFO  21:32:10,737 - #41 )
INFO  21:32:10,737 - #38 ;
INFO  21:32:10,738 - #45 }
INFO  21:32:10,738 - #45 }
INFO  21:32:10,738 - Program(
  ProgramName(
   test302
  ) [ProgramName]
  AllDeclListMultiple(
    NoDecl(
    ) [NoDecl]
    ConstDeclaration(
      ConstDeclarationExpr(
        Type(
         int
        ) [Type]
        ConstAssignSingle(
          ConstAssign(
           jedan
            NumberConst(
             1
            ) [NumberConst]
          ) [ConstAssign]
        ) [ConstAssignSingle]
      ) [ConstDeclarationExpr]
    ) [ConstDeclaration]
  ) [AllDeclListMultiple]
  MethodDeclListMultiple(
    MethodDeclListMultiple(
      MethodDeclListNo(
      ) [MethodDeclListNo]
      MethodDeclaration(
        MethodSignatureParams(
          MethodTypeType(
            Type(
             int
            ) [Type]
          ) [MethodTypeType]
          MethodName(
           sum
          ) [MethodName]
          FormParsSingle(
            FormParError(
            ) [FormParError]
          ) [FormParsSingle]
          FormParsEnd(
          ) [FormParsEnd]
        ) [MethodSignatureParams]
        VarDeclOptionTrue(
          NoVarDeclOption(
          ) [NoVarDeclOption]
          VarDeclarationExpr(
            Type(
             int
            ) [Type]
            VarDeclListMultiple(
              VarDeclListSingle(
                VarDeclSingle(
                 z
                  NoArray(
                  ) [NoArray]
                ) [VarDeclSingle]
              ) [VarDeclListSingle]
              VarDeclSingle(
               d
                NoArray(
                ) [NoArray]
              ) [VarDeclSingle]
            ) [VarDeclListMultiple]
          ) [VarDeclarationExpr]
        ) [VarDeclOptionTrue]
        StatementListMultiple(
          StatementListMultiple(
            StatementListMultiple(
              StatementListNo(
              ) [StatementListNo]
              StatementSingle(
                SingleDesignatorStatement(
                  DesignatorStmtAssign(
                    DesignatorStmtAssignCorrect(
                      IdentDesignator(
                       z
                      ) [IdentDesignator]
                      SingleTermExprPositive(
                        SingleFactorTerm(
                          DesignatorEmptyFactor(
                            IdentArrayDesignator(
                             args
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  NumConstFactor(
                                   0
                                  ) [NumConstFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [IdentArrayDesignator]
                          ) [DesignatorEmptyFactor]
                        ) [SingleFactorTerm]
                      ) [SingleTermExprPositive]
                    ) [DesignatorStmtAssignCorrect]
                  ) [DesignatorStmtAssign]
                ) [SingleDesignatorStatement]
              ) [StatementSingle]
            ) [StatementListMultiple]
            StatementSingle(
              SingleDesignatorStatement(
                DesignatorStmtAssign(
                  DesignatorStmtAssignCorrect(
                    IdentDesignator(
                     d
                    ) [IdentDesignator]
                    SingleTermExprPositive(
                      SingleFactorTerm(
                        DesignatorEmptyFactor(
                          IdentArrayDesignator(
                           args
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                NumConstFactor(
                                 1
                                ) [NumConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [IdentArrayDesignator]
                        ) [DesignatorEmptyFactor]
                      ) [SingleFactorTerm]
                    ) [SingleTermExprPositive]
                  ) [DesignatorStmtAssignCorrect]
                ) [DesignatorStmtAssign]
              ) [SingleDesignatorStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
          StatementSingle(
            SingleReturnExprStatement(
              MultiTermExpr(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    DesignatorEmptyFactor(
                      IdentDesignator(
                       z
                      ) [IdentDesignator]
                    ) [DesignatorEmptyFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
                AddopPlus(
                ) [AddopPlus]
                SingleFactorTerm(
                  DesignatorEmptyFactor(
                    IdentDesignator(
                     d
                    ) [IdentDesignator]
                  ) [DesignatorEmptyFactor]
                ) [SingleFactorTerm]
              ) [MultiTermExpr]
            ) [SingleReturnExprStatement]
          ) [StatementSingle]
        ) [StatementListMultiple]
      ) [MethodDeclaration]
    ) [MethodDeclListMultiple]
    MethodDeclaration(
      MethodSignaturePlain(
        MethodTypeVoid(
        ) [MethodTypeVoid]
        MethodName(
         main
        ) [MethodName]
      ) [MethodSignaturePlain]
      NoVarDeclOption(
      ) [NoVarDeclOption]
      StatementListMultiple(
        StatementListNo(
        ) [StatementListNo]
        StatementSingle(
          SinglePrintStatement(
            SingleTermExprPositive(
              SingleFactorTerm(
                MethodCallFactor(
                  MethodCall(
                    IdentDesignator(
                     sum
                    ) [IdentDesignator]
                    ActParsLeftParen(
                    ) [ActParsLeftParen]
                    ActParsYes(
                      ActParsMultiExpr(
                        ActParsMultiExpr(
                          ActParsSingleExpr(
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                NumConstFactor(
                                 1
                                ) [NumConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [ActParsSingleExpr]
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              NumConstFactor(
                               2
                              ) [NumConstFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [ActParsMultiExpr]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            NumConstFactor(
                             3
                            ) [NumConstFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [ActParsMultiExpr]
                    ) [ActParsYes]
                    ActParsRightParen(
                    ) [ActParsRightParen]
                  ) [MethodCall]
                ) [MethodCallFactor]
              ) [SingleFactorTerm]
            ) [SingleTermExprPositive]
            NumConstNo(
            ) [NumConstNo]
          ) [SinglePrintStatement]
        ) [StatementSingle]
      ) [StatementListMultiple]
    ) [MethodDeclaration]
  ) [MethodDeclListMultiple]
) [Program]
INFO  21:32:10,738 - ===================================
ERROR 21:32:10,747 - Line 12: Symbol args is not defined.
ERROR 21:32:10,747 - Line 13: Symbol args is not defined.
INFO  21:34:03,817 - Compiling source file: D:\source\repos\PP_Projekat\MicroJavaCompiler\test\program.mj
INFO  21:34:03,841 - #2 program
INFO  21:34:03,841 - #49 test302
INFO  21:34:03,841 - #7 const
INFO  21:34:03,841 - #49 int
INFO  21:34:03,841 - #49 jedan
INFO  21:34:03,841 - #27 =
INFO  21:34:03,841 - #52 1
INFO  21:34:03,842 - #38 ;
INFO  21:34:03,842 - #44 {
INFO  21:34:03,842 - #49 int
INFO  21:34:03,842 - #49 sum
INFO  21:34:03,842 - #40 (
INFO  21:34:03,843 - #49 int
INFO  21:34:03,843 - #47 .
ERROR 21:34:03,843 - 
Sintaksna greska na liniji 9
INFO  21:34:03,843 - #47 .
INFO  21:34:03,843 - #47 .
INFO  21:34:03,843 - #49 args
INFO  21:34:03,843 - #41 )
INFO  21:34:03,843 - #49 int
INFO  21:34:03,843 - #49 z
INFO  21:34:03,843 - #39 ,
ERROR 21:34:03,843 - Izvrsen oporovak prilikom greske u formalnom parametru do , ili ) u liniji 9
INFO  21:34:03,845 - #49 d
INFO  21:34:03,845 - #38 ;
INFO  21:34:03,845 - #44 {
INFO  21:34:03,845 - #49 z
INFO  21:34:03,845 - #27 =
INFO  21:34:03,845 - #49 args
INFO  21:34:03,845 - #42 [
INFO  21:34:03,845 - #52 0
INFO  21:34:03,845 - #43 ]
INFO  21:34:03,845 - #38 ;
INFO  21:34:03,846 - #49 d
INFO  21:34:03,846 - #27 =
INFO  21:34:03,846 - #49 args
INFO  21:34:03,846 - #42 [
INFO  21:34:03,846 - #52 1
INFO  21:34:03,846 - #43 ]
INFO  21:34:03,846 - #38 ;
INFO  21:34:03,846 - #15 return
INFO  21:34:03,846 - #49 z
INFO  21:34:03,846 - #22 +
INFO  21:34:03,846 - #49 d
INFO  21:34:03,847 - #38 ;
INFO  21:34:03,847 - #45 }
INFO  21:34:03,847 - #14 void
INFO  21:34:03,847 - #49 main
INFO  21:34:03,847 - #40 (
INFO  21:34:03,847 - #41 )
INFO  21:34:03,847 - #44 {
INFO  21:34:03,847 - #12 print
INFO  21:34:03,847 - #40 (
INFO  21:34:03,847 - #49 sum
INFO  21:34:03,848 - #40 (
INFO  21:34:03,848 - #52 1
INFO  21:34:03,848 - #39 ,
INFO  21:34:03,848 - #52 2
INFO  21:34:03,848 - #39 ,
INFO  21:34:03,848 - #52 3
INFO  21:34:03,848 - #41 )
INFO  21:34:03,848 - #41 )
INFO  21:34:03,849 - #38 ;
INFO  21:34:03,849 - #45 }
INFO  21:34:03,849 - #45 }
INFO  21:34:03,850 - Program(
  ProgramName(
   test302
  ) [ProgramName]
  AllDeclListMultiple(
    NoDecl(
    ) [NoDecl]
    ConstDeclaration(
      ConstDeclarationExpr(
        Type(
         int
        ) [Type]
        ConstAssignSingle(
          ConstAssign(
           jedan
            NumberConst(
             1
            ) [NumberConst]
          ) [ConstAssign]
        ) [ConstAssignSingle]
      ) [ConstDeclarationExpr]
    ) [ConstDeclaration]
  ) [AllDeclListMultiple]
  MethodDeclListMultiple(
    MethodDeclListMultiple(
      MethodDeclListNo(
      ) [MethodDeclListNo]
      MethodDeclaration(
        MethodSignatureParams(
          MethodTypeType(
            Type(
             int
            ) [Type]
          ) [MethodTypeType]
          MethodName(
           sum
          ) [MethodName]
          FormParsSingle(
            FormParError(
            ) [FormParError]
          ) [FormParsSingle]
          FormParsEnd(
          ) [FormParsEnd]
        ) [MethodSignatureParams]
        VarDeclOptionTrue(
          NoVarDeclOption(
          ) [NoVarDeclOption]
          VarDeclarationExpr(
            Type(
             int
            ) [Type]
            VarDeclListMultiple(
              VarDeclListSingle(
                VarDeclSingle(
                 z
                  NoArray(
                  ) [NoArray]
                ) [VarDeclSingle]
              ) [VarDeclListSingle]
              VarDeclSingle(
               d
                NoArray(
                ) [NoArray]
              ) [VarDeclSingle]
            ) [VarDeclListMultiple]
          ) [VarDeclarationExpr]
        ) [VarDeclOptionTrue]
        StatementListMultiple(
          StatementListMultiple(
            StatementListMultiple(
              StatementListNo(
              ) [StatementListNo]
              StatementSingle(
                SingleDesignatorStatement(
                  DesignatorStmtAssign(
                    DesignatorStmtAssignCorrect(
                      IdentDesignator(
                       z
                      ) [IdentDesignator]
                      SingleTermExprPositive(
                        SingleFactorTerm(
                          DesignatorEmptyFactor(
                            IdentArrayDesignator(
                             args
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  NumConstFactor(
                                   0
                                  ) [NumConstFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [IdentArrayDesignator]
                          ) [DesignatorEmptyFactor]
                        ) [SingleFactorTerm]
                      ) [SingleTermExprPositive]
                    ) [DesignatorStmtAssignCorrect]
                  ) [DesignatorStmtAssign]
                ) [SingleDesignatorStatement]
              ) [StatementSingle]
            ) [StatementListMultiple]
            StatementSingle(
              SingleDesignatorStatement(
                DesignatorStmtAssign(
                  DesignatorStmtAssignCorrect(
                    IdentDesignator(
                     d
                    ) [IdentDesignator]
                    SingleTermExprPositive(
                      SingleFactorTerm(
                        DesignatorEmptyFactor(
                          IdentArrayDesignator(
                           args
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                NumConstFactor(
                                 1
                                ) [NumConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [IdentArrayDesignator]
                        ) [DesignatorEmptyFactor]
                      ) [SingleFactorTerm]
                    ) [SingleTermExprPositive]
                  ) [DesignatorStmtAssignCorrect]
                ) [DesignatorStmtAssign]
              ) [SingleDesignatorStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
          StatementSingle(
            SingleReturnExprStatement(
              MultiTermExpr(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    DesignatorEmptyFactor(
                      IdentDesignator(
                       z
                      ) [IdentDesignator]
                    ) [DesignatorEmptyFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
                AddopPlus(
                ) [AddopPlus]
                SingleFactorTerm(
                  DesignatorEmptyFactor(
                    IdentDesignator(
                     d
                    ) [IdentDesignator]
                  ) [DesignatorEmptyFactor]
                ) [SingleFactorTerm]
              ) [MultiTermExpr]
            ) [SingleReturnExprStatement]
          ) [StatementSingle]
        ) [StatementListMultiple]
      ) [MethodDeclaration]
    ) [MethodDeclListMultiple]
    MethodDeclaration(
      MethodSignaturePlain(
        MethodTypeVoid(
        ) [MethodTypeVoid]
        MethodName(
         main
        ) [MethodName]
      ) [MethodSignaturePlain]
      NoVarDeclOption(
      ) [NoVarDeclOption]
      StatementListMultiple(
        StatementListNo(
        ) [StatementListNo]
        StatementSingle(
          SinglePrintStatement(
            SingleTermExprPositive(
              SingleFactorTerm(
                MethodCallFactor(
                  MethodCall(
                    IdentDesignator(
                     sum
                    ) [IdentDesignator]
                    ActParsLeftParen(
                    ) [ActParsLeftParen]
                    ActParsYes(
                      ActParsMultiExpr(
                        ActParsMultiExpr(
                          ActParsSingleExpr(
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                NumConstFactor(
                                 1
                                ) [NumConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [ActParsSingleExpr]
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              NumConstFactor(
                               2
                              ) [NumConstFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [ActParsMultiExpr]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            NumConstFactor(
                             3
                            ) [NumConstFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [ActParsMultiExpr]
                    ) [ActParsYes]
                    ActParsRightParen(
                    ) [ActParsRightParen]
                  ) [MethodCall]
                ) [MethodCallFactor]
              ) [SingleFactorTerm]
            ) [SingleTermExprPositive]
            NumConstNo(
            ) [NumConstNo]
          ) [SinglePrintStatement]
        ) [StatementSingle]
      ) [StatementListMultiple]
    ) [MethodDeclaration]
  ) [MethodDeclListMultiple]
) [Program]
INFO  21:34:03,850 - ===================================
ERROR 21:34:03,859 - Line 12: Symbol args is not defined.
ERROR 21:34:03,859 - Line 13: Symbol args is not defined.
INFO  21:36:25,373 - Compiling source file: D:\source\repos\PP_Projekat\MicroJavaCompiler\test\program.mj
INFO  21:36:25,396 - #2 program
INFO  21:36:25,396 - #49 test302
INFO  21:36:25,396 - #7 const
INFO  21:36:25,396 - #49 int
INFO  21:36:25,396 - #49 jedan
INFO  21:36:25,396 - #27 =
INFO  21:36:25,397 - #52 1
INFO  21:36:25,397 - #38 ;
INFO  21:36:25,398 - #44 {
INFO  21:36:25,398 - #49 int
INFO  21:36:25,398 - #49 sum
INFO  21:36:25,398 - #40 (
INFO  21:36:25,398 - #49 int
INFO  21:36:25,398 - #47 .
ERROR 21:36:25,398 - 
Sintaksna greska na liniji 9
INFO  21:36:25,398 - #47 .
INFO  21:36:25,398 - #47 .
INFO  21:36:25,398 - #49 args
INFO  21:36:25,399 - #41 )
INFO  21:36:25,399 - #49 int
INFO  21:36:25,399 - #49 z
INFO  21:36:25,399 - #39 ,
ERROR 21:36:25,399 - Izvrsen oporovak prilikom greske u formalnom parametru do , ili ) u liniji 9
INFO  21:36:25,400 - #49 d
INFO  21:36:25,400 - #38 ;
INFO  21:36:25,400 - #44 {
INFO  21:36:25,400 - #49 z
INFO  21:36:25,400 - #27 =
INFO  21:36:25,400 - #49 args
INFO  21:36:25,401 - #42 [
INFO  21:36:25,401 - #52 0
INFO  21:36:25,401 - #43 ]
INFO  21:36:25,401 - #38 ;
INFO  21:36:25,401 - #49 d
INFO  21:36:25,401 - #27 =
INFO  21:36:25,401 - #49 args
INFO  21:36:25,401 - #42 [
INFO  21:36:25,401 - #52 1
INFO  21:36:25,401 - #43 ]
INFO  21:36:25,401 - #38 ;
INFO  21:36:25,401 - #15 return
INFO  21:36:25,401 - #49 z
INFO  21:36:25,401 - #22 +
INFO  21:36:25,401 - #49 d
INFO  21:36:25,402 - #38 ;
INFO  21:36:25,402 - #45 }
INFO  21:36:25,402 - #14 void
INFO  21:36:25,402 - #49 main
INFO  21:36:25,402 - #40 (
INFO  21:36:25,402 - #41 )
INFO  21:36:25,402 - #44 {
INFO  21:36:25,402 - #12 print
INFO  21:36:25,402 - #40 (
INFO  21:36:25,402 - #49 sum
INFO  21:36:25,402 - #40 (
INFO  21:36:25,402 - #52 1
INFO  21:36:25,403 - #39 ,
INFO  21:36:25,403 - #52 2
INFO  21:36:25,403 - #39 ,
INFO  21:36:25,403 - #52 3
INFO  21:36:25,403 - #41 )
INFO  21:36:25,403 - #41 )
INFO  21:36:25,404 - #38 ;
INFO  21:36:25,404 - #45 }
INFO  21:36:25,404 - #45 }
INFO  21:36:25,404 - Program(
  ProgramName(
   test302
  ) [ProgramName]
  AllDeclListMultiple(
    NoDecl(
    ) [NoDecl]
    ConstDeclaration(
      ConstDeclarationExpr(
        Type(
         int
        ) [Type]
        ConstAssignSingle(
          ConstAssign(
           jedan
            NumberConst(
             1
            ) [NumberConst]
          ) [ConstAssign]
        ) [ConstAssignSingle]
      ) [ConstDeclarationExpr]
    ) [ConstDeclaration]
  ) [AllDeclListMultiple]
  MethodDeclListMultiple(
    MethodDeclListMultiple(
      MethodDeclListNo(
      ) [MethodDeclListNo]
      MethodDeclaration(
        MethodSignatureParams(
          MethodTypeType(
            Type(
             int
            ) [Type]
          ) [MethodTypeType]
          MethodName(
           sum
          ) [MethodName]
          FormParsSingle(
            FormParError(
            ) [FormParError]
          ) [FormParsSingle]
          FormParsEnd(
          ) [FormParsEnd]
        ) [MethodSignatureParams]
        VarDeclOptionTrue(
          NoVarDeclOption(
          ) [NoVarDeclOption]
          VarDeclarationExpr(
            Type(
             int
            ) [Type]
            VarDeclListMultiple(
              VarDeclListSingle(
                VarDeclSingle(
                 z
                  NoArray(
                  ) [NoArray]
                ) [VarDeclSingle]
              ) [VarDeclListSingle]
              VarDeclSingle(
               d
                NoArray(
                ) [NoArray]
              ) [VarDeclSingle]
            ) [VarDeclListMultiple]
          ) [VarDeclarationExpr]
        ) [VarDeclOptionTrue]
        StatementListMultiple(
          StatementListMultiple(
            StatementListMultiple(
              StatementListNo(
              ) [StatementListNo]
              StatementSingle(
                SingleDesignatorStatement(
                  DesignatorStmtAssign(
                    DesignatorStmtAssignCorrect(
                      IdentDesignator(
                       z
                      ) [IdentDesignator]
                      SingleTermExprPositive(
                        SingleFactorTerm(
                          DesignatorEmptyFactor(
                            IdentArrayDesignator(
                             args
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  NumConstFactor(
                                   0
                                  ) [NumConstFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [IdentArrayDesignator]
                          ) [DesignatorEmptyFactor]
                        ) [SingleFactorTerm]
                      ) [SingleTermExprPositive]
                    ) [DesignatorStmtAssignCorrect]
                  ) [DesignatorStmtAssign]
                ) [SingleDesignatorStatement]
              ) [StatementSingle]
            ) [StatementListMultiple]
            StatementSingle(
              SingleDesignatorStatement(
                DesignatorStmtAssign(
                  DesignatorStmtAssignCorrect(
                    IdentDesignator(
                     d
                    ) [IdentDesignator]
                    SingleTermExprPositive(
                      SingleFactorTerm(
                        DesignatorEmptyFactor(
                          IdentArrayDesignator(
                           args
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                NumConstFactor(
                                 1
                                ) [NumConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [IdentArrayDesignator]
                        ) [DesignatorEmptyFactor]
                      ) [SingleFactorTerm]
                    ) [SingleTermExprPositive]
                  ) [DesignatorStmtAssignCorrect]
                ) [DesignatorStmtAssign]
              ) [SingleDesignatorStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
          StatementSingle(
            SingleReturnExprStatement(
              MultiTermExpr(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    DesignatorEmptyFactor(
                      IdentDesignator(
                       z
                      ) [IdentDesignator]
                    ) [DesignatorEmptyFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
                AddopPlus(
                ) [AddopPlus]
                SingleFactorTerm(
                  DesignatorEmptyFactor(
                    IdentDesignator(
                     d
                    ) [IdentDesignator]
                  ) [DesignatorEmptyFactor]
                ) [SingleFactorTerm]
              ) [MultiTermExpr]
            ) [SingleReturnExprStatement]
          ) [StatementSingle]
        ) [StatementListMultiple]
      ) [MethodDeclaration]
    ) [MethodDeclListMultiple]
    MethodDeclaration(
      MethodSignaturePlain(
        MethodTypeVoid(
        ) [MethodTypeVoid]
        MethodName(
         main
        ) [MethodName]
      ) [MethodSignaturePlain]
      NoVarDeclOption(
      ) [NoVarDeclOption]
      StatementListMultiple(
        StatementListNo(
        ) [StatementListNo]
        StatementSingle(
          SinglePrintStatement(
            SingleTermExprPositive(
              SingleFactorTerm(
                MethodCallFactor(
                  MethodCall(
                    IdentDesignator(
                     sum
                    ) [IdentDesignator]
                    ActParsLeftParen(
                    ) [ActParsLeftParen]
                    ActParsYes(
                      ActParsMultiExpr(
                        ActParsMultiExpr(
                          ActParsSingleExpr(
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                NumConstFactor(
                                 1
                                ) [NumConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [ActParsSingleExpr]
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              NumConstFactor(
                               2
                              ) [NumConstFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [ActParsMultiExpr]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            NumConstFactor(
                             3
                            ) [NumConstFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [ActParsMultiExpr]
                    ) [ActParsYes]
                    ActParsRightParen(
                    ) [ActParsRightParen]
                  ) [MethodCall]
                ) [MethodCallFactor]
              ) [SingleFactorTerm]
            ) [SingleTermExprPositive]
            NumConstNo(
            ) [NumConstNo]
          ) [SinglePrintStatement]
        ) [StatementSingle]
      ) [StatementListMultiple]
    ) [MethodDeclaration]
  ) [MethodDeclListMultiple]
) [Program]
INFO  21:36:25,404 - ===================================
ERROR 21:36:25,413 - Line 12: Symbol args is not defined.
ERROR 21:36:25,413 - Line 13: Symbol args is not defined.
INFO  21:37:42,798 - Compiling source file: D:\source\repos\PP_Projekat\MicroJavaCompiler\test\program.mj
INFO  21:37:42,822 - #2 program
INFO  21:37:42,822 - #49 test302
INFO  21:37:42,822 - #7 const
INFO  21:37:42,822 - #49 int
INFO  21:37:42,822 - #49 jedan
INFO  21:37:42,823 - #27 =
INFO  21:37:42,823 - #52 1
INFO  21:37:42,823 - #38 ;
INFO  21:37:42,823 - #44 {
INFO  21:37:42,823 - #49 int
INFO  21:37:42,823 - #49 sum
INFO  21:37:42,824 - #40 (
INFO  21:37:42,824 - #49 int
INFO  21:37:42,824 - #47 .
ERROR 21:37:42,824 - 
Sintaksna greska na liniji 9
INFO  21:37:42,824 - #47 .
INFO  21:37:42,824 - #47 .
INFO  21:37:42,824 - #49 args
INFO  21:37:42,824 - #41 )
INFO  21:37:42,824 - #49 int
INFO  21:37:42,824 - #49 z
INFO  21:37:42,824 - #39 ,
ERROR 21:37:42,825 - Izvrsen oporovak prilikom greske u formalnom parametru do , ili ) u liniji 9
INFO  21:37:42,826 - #49 d
INFO  21:37:42,826 - #38 ;
INFO  21:37:42,826 - #44 {
INFO  21:37:42,826 - #49 z
INFO  21:37:42,826 - #27 =
INFO  21:37:42,826 - #49 args
INFO  21:37:42,826 - #42 [
INFO  21:37:42,826 - #52 0
INFO  21:37:42,827 - #43 ]
INFO  21:37:42,827 - #38 ;
INFO  21:37:42,827 - #49 d
INFO  21:37:42,827 - #27 =
INFO  21:37:42,827 - #49 args
INFO  21:37:42,827 - #42 [
INFO  21:37:42,827 - #52 1
INFO  21:37:42,827 - #43 ]
INFO  21:37:42,827 - #38 ;
INFO  21:37:42,827 - #15 return
INFO  21:37:42,827 - #49 z
INFO  21:37:42,827 - #22 +
INFO  21:37:42,827 - #49 d
INFO  21:37:42,828 - #38 ;
INFO  21:37:42,828 - #45 }
INFO  21:37:42,828 - #14 void
INFO  21:37:42,828 - #49 main
INFO  21:37:42,828 - #40 (
INFO  21:37:42,828 - #41 )
INFO  21:37:42,828 - #44 {
INFO  21:37:42,829 - #12 print
INFO  21:37:42,829 - #40 (
INFO  21:37:42,829 - #49 sum
INFO  21:37:42,829 - #40 (
INFO  21:37:42,829 - #52 1
INFO  21:37:42,829 - #39 ,
INFO  21:37:42,829 - #52 2
INFO  21:37:42,829 - #39 ,
INFO  21:37:42,829 - #52 3
INFO  21:37:42,829 - #41 )
INFO  21:37:42,829 - #41 )
INFO  21:37:42,830 - #38 ;
INFO  21:37:42,830 - #45 }
INFO  21:37:42,830 - #45 }
INFO  21:37:42,831 - Program(
  ProgramName(
   test302
  ) [ProgramName]
  AllDeclListMultiple(
    NoDecl(
    ) [NoDecl]
    ConstDeclaration(
      ConstDeclarationExpr(
        Type(
         int
        ) [Type]
        ConstAssignSingle(
          ConstAssign(
           jedan
            NumberConst(
             1
            ) [NumberConst]
          ) [ConstAssign]
        ) [ConstAssignSingle]
      ) [ConstDeclarationExpr]
    ) [ConstDeclaration]
  ) [AllDeclListMultiple]
  MethodDeclListMultiple(
    MethodDeclListMultiple(
      MethodDeclListNo(
      ) [MethodDeclListNo]
      MethodDeclaration(
        MethodSignatureParams(
          MethodTypeType(
            Type(
             int
            ) [Type]
          ) [MethodTypeType]
          MethodName(
           sum
          ) [MethodName]
          FormParsSingle(
            FormParError(
            ) [FormParError]
          ) [FormParsSingle]
          FormParsEnd(
          ) [FormParsEnd]
        ) [MethodSignatureParams]
        VarDeclOptionTrue(
          NoVarDeclOption(
          ) [NoVarDeclOption]
          VarDeclarationExpr(
            Type(
             int
            ) [Type]
            VarDeclListMultiple(
              VarDeclListSingle(
                VarDeclSingle(
                 z
                  NoArray(
                  ) [NoArray]
                ) [VarDeclSingle]
              ) [VarDeclListSingle]
              VarDeclSingle(
               d
                NoArray(
                ) [NoArray]
              ) [VarDeclSingle]
            ) [VarDeclListMultiple]
          ) [VarDeclarationExpr]
        ) [VarDeclOptionTrue]
        StatementListMultiple(
          StatementListMultiple(
            StatementListMultiple(
              StatementListNo(
              ) [StatementListNo]
              StatementSingle(
                SingleDesignatorStatement(
                  DesignatorStmtAssign(
                    DesignatorStmtAssignCorrect(
                      IdentDesignator(
                       z
                      ) [IdentDesignator]
                      SingleTermExprPositive(
                        SingleFactorTerm(
                          DesignatorEmptyFactor(
                            IdentArrayDesignator(
                             args
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  NumConstFactor(
                                   0
                                  ) [NumConstFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [IdentArrayDesignator]
                          ) [DesignatorEmptyFactor]
                        ) [SingleFactorTerm]
                      ) [SingleTermExprPositive]
                    ) [DesignatorStmtAssignCorrect]
                  ) [DesignatorStmtAssign]
                ) [SingleDesignatorStatement]
              ) [StatementSingle]
            ) [StatementListMultiple]
            StatementSingle(
              SingleDesignatorStatement(
                DesignatorStmtAssign(
                  DesignatorStmtAssignCorrect(
                    IdentDesignator(
                     d
                    ) [IdentDesignator]
                    SingleTermExprPositive(
                      SingleFactorTerm(
                        DesignatorEmptyFactor(
                          IdentArrayDesignator(
                           args
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                NumConstFactor(
                                 1
                                ) [NumConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [IdentArrayDesignator]
                        ) [DesignatorEmptyFactor]
                      ) [SingleFactorTerm]
                    ) [SingleTermExprPositive]
                  ) [DesignatorStmtAssignCorrect]
                ) [DesignatorStmtAssign]
              ) [SingleDesignatorStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
          StatementSingle(
            SingleReturnExprStatement(
              MultiTermExpr(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    DesignatorEmptyFactor(
                      IdentDesignator(
                       z
                      ) [IdentDesignator]
                    ) [DesignatorEmptyFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
                AddopPlus(
                ) [AddopPlus]
                SingleFactorTerm(
                  DesignatorEmptyFactor(
                    IdentDesignator(
                     d
                    ) [IdentDesignator]
                  ) [DesignatorEmptyFactor]
                ) [SingleFactorTerm]
              ) [MultiTermExpr]
            ) [SingleReturnExprStatement]
          ) [StatementSingle]
        ) [StatementListMultiple]
      ) [MethodDeclaration]
    ) [MethodDeclListMultiple]
    MethodDeclaration(
      MethodSignaturePlain(
        MethodTypeVoid(
        ) [MethodTypeVoid]
        MethodName(
         main
        ) [MethodName]
      ) [MethodSignaturePlain]
      NoVarDeclOption(
      ) [NoVarDeclOption]
      StatementListMultiple(
        StatementListNo(
        ) [StatementListNo]
        StatementSingle(
          SinglePrintStatement(
            SingleTermExprPositive(
              SingleFactorTerm(
                MethodCallFactor(
                  MethodCall(
                    IdentDesignator(
                     sum
                    ) [IdentDesignator]
                    ActParsLeftParen(
                    ) [ActParsLeftParen]
                    ActParsYes(
                      ActParsMultiExpr(
                        ActParsMultiExpr(
                          ActParsSingleExpr(
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                NumConstFactor(
                                 1
                                ) [NumConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [ActParsSingleExpr]
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              NumConstFactor(
                               2
                              ) [NumConstFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [ActParsMultiExpr]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            NumConstFactor(
                             3
                            ) [NumConstFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [ActParsMultiExpr]
                    ) [ActParsYes]
                    ActParsRightParen(
                    ) [ActParsRightParen]
                  ) [MethodCall]
                ) [MethodCallFactor]
              ) [SingleFactorTerm]
            ) [SingleTermExprPositive]
            NumConstNo(
            ) [NumConstNo]
          ) [SinglePrintStatement]
        ) [StatementSingle]
      ) [StatementListMultiple]
    ) [MethodDeclaration]
  ) [MethodDeclListMultiple]
) [Program]
INFO  21:37:42,831 - ===================================
ERROR 21:37:42,839 - Line 12: Symbol args is not defined.
ERROR 21:37:42,839 - Line 13: Symbol args is not defined.
INFO  21:39:47,071 - Compiling source file: D:\source\repos\PP_Projekat\MicroJavaCompiler\test\program.mj
INFO  21:39:47,095 - #2 program
INFO  21:39:47,095 - #49 test302
INFO  21:39:47,095 - #7 const
INFO  21:39:47,096 - #49 int
INFO  21:39:47,096 - #49 jedan
INFO  21:39:47,096 - #27 =
INFO  21:39:47,096 - #52 1
INFO  21:39:47,096 - #38 ;
INFO  21:39:47,096 - #44 {
INFO  21:39:47,097 - #49 int
INFO  21:39:47,097 - #49 sum
INFO  21:39:47,097 - #40 (
INFO  21:39:47,097 - #49 int
INFO  21:39:47,097 - #47 .
ERROR 21:39:47,097 - 
Sintaksna greska na liniji 9
INFO  21:39:47,097 - #47 .
INFO  21:39:47,097 - #47 .
INFO  21:39:47,097 - #49 args
INFO  21:39:47,098 - #41 )
INFO  21:39:47,098 - #49 int
INFO  21:39:47,098 - #49 z
INFO  21:39:47,098 - #39 ,
ERROR 21:39:47,098 - Izvrsen oporovak prilikom greske u formalnom parametru do , ili ) u liniji 9
INFO  21:39:47,099 - #49 d
INFO  21:39:47,099 - #38 ;
INFO  21:39:47,099 - #44 {
INFO  21:39:47,099 - #49 z
INFO  21:39:47,100 - #27 =
INFO  21:39:47,100 - #49 args
INFO  21:39:47,100 - #42 [
INFO  21:39:47,100 - #52 0
INFO  21:39:47,100 - #43 ]
INFO  21:39:47,100 - #38 ;
INFO  21:39:47,100 - #49 d
INFO  21:39:47,100 - #27 =
INFO  21:39:47,100 - #49 args
INFO  21:39:47,100 - #42 [
INFO  21:39:47,100 - #52 1
INFO  21:39:47,100 - #43 ]
INFO  21:39:47,100 - #38 ;
INFO  21:39:47,101 - #15 return
INFO  21:39:47,101 - #49 z
INFO  21:39:47,101 - #22 +
INFO  21:39:47,101 - #49 d
INFO  21:39:47,101 - #38 ;
INFO  21:39:47,101 - #45 }
INFO  21:39:47,101 - #14 void
INFO  21:39:47,101 - #49 main
INFO  21:39:47,102 - #40 (
INFO  21:39:47,102 - #41 )
INFO  21:39:47,102 - #44 {
INFO  21:39:47,102 - #12 print
INFO  21:39:47,102 - #40 (
INFO  21:39:47,102 - #49 sum
INFO  21:39:47,102 - #40 (
INFO  21:39:47,102 - #52 1
INFO  21:39:47,102 - #39 ,
INFO  21:39:47,102 - #52 2
INFO  21:39:47,102 - #39 ,
INFO  21:39:47,102 - #52 3
INFO  21:39:47,102 - #41 )
INFO  21:39:47,102 - #41 )
INFO  21:39:47,103 - #38 ;
INFO  21:39:47,103 - #45 }
INFO  21:39:47,103 - #45 }
INFO  21:39:47,104 - Program(
  ProgramName(
   test302
  ) [ProgramName]
  AllDeclListMultiple(
    NoDecl(
    ) [NoDecl]
    ConstDeclaration(
      ConstDeclarationExpr(
        Type(
         int
        ) [Type]
        ConstAssignSingle(
          ConstAssign(
           jedan
            NumberConst(
             1
            ) [NumberConst]
          ) [ConstAssign]
        ) [ConstAssignSingle]
      ) [ConstDeclarationExpr]
    ) [ConstDeclaration]
  ) [AllDeclListMultiple]
  MethodDeclListMultiple(
    MethodDeclListMultiple(
      MethodDeclListNo(
      ) [MethodDeclListNo]
      MethodDeclaration(
        MethodSignatureParams(
          MethodTypeType(
            Type(
             int
            ) [Type]
          ) [MethodTypeType]
          MethodName(
           sum
          ) [MethodName]
          FormParsSingle(
            FormParError(
            ) [FormParError]
          ) [FormParsSingle]
          FormParsEnd(
          ) [FormParsEnd]
        ) [MethodSignatureParams]
        VarDeclOptionTrue(
          NoVarDeclOption(
          ) [NoVarDeclOption]
          VarDeclarationExpr(
            Type(
             int
            ) [Type]
            VarDeclListMultiple(
              VarDeclListSingle(
                VarDeclSingle(
                 z
                  NoArray(
                  ) [NoArray]
                ) [VarDeclSingle]
              ) [VarDeclListSingle]
              VarDeclSingle(
               d
                NoArray(
                ) [NoArray]
              ) [VarDeclSingle]
            ) [VarDeclListMultiple]
          ) [VarDeclarationExpr]
        ) [VarDeclOptionTrue]
        StatementListMultiple(
          StatementListMultiple(
            StatementListMultiple(
              StatementListNo(
              ) [StatementListNo]
              StatementSingle(
                SingleDesignatorStatement(
                  DesignatorStmtAssign(
                    DesignatorStmtAssignCorrect(
                      IdentDesignator(
                       z
                      ) [IdentDesignator]
                      SingleTermExprPositive(
                        SingleFactorTerm(
                          DesignatorEmptyFactor(
                            IdentArrayDesignator(
                             args
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  NumConstFactor(
                                   0
                                  ) [NumConstFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [IdentArrayDesignator]
                          ) [DesignatorEmptyFactor]
                        ) [SingleFactorTerm]
                      ) [SingleTermExprPositive]
                    ) [DesignatorStmtAssignCorrect]
                  ) [DesignatorStmtAssign]
                ) [SingleDesignatorStatement]
              ) [StatementSingle]
            ) [StatementListMultiple]
            StatementSingle(
              SingleDesignatorStatement(
                DesignatorStmtAssign(
                  DesignatorStmtAssignCorrect(
                    IdentDesignator(
                     d
                    ) [IdentDesignator]
                    SingleTermExprPositive(
                      SingleFactorTerm(
                        DesignatorEmptyFactor(
                          IdentArrayDesignator(
                           args
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                NumConstFactor(
                                 1
                                ) [NumConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [IdentArrayDesignator]
                        ) [DesignatorEmptyFactor]
                      ) [SingleFactorTerm]
                    ) [SingleTermExprPositive]
                  ) [DesignatorStmtAssignCorrect]
                ) [DesignatorStmtAssign]
              ) [SingleDesignatorStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
          StatementSingle(
            SingleReturnExprStatement(
              MultiTermExpr(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    DesignatorEmptyFactor(
                      IdentDesignator(
                       z
                      ) [IdentDesignator]
                    ) [DesignatorEmptyFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
                AddopPlus(
                ) [AddopPlus]
                SingleFactorTerm(
                  DesignatorEmptyFactor(
                    IdentDesignator(
                     d
                    ) [IdentDesignator]
                  ) [DesignatorEmptyFactor]
                ) [SingleFactorTerm]
              ) [MultiTermExpr]
            ) [SingleReturnExprStatement]
          ) [StatementSingle]
        ) [StatementListMultiple]
      ) [MethodDeclaration]
    ) [MethodDeclListMultiple]
    MethodDeclaration(
      MethodSignaturePlain(
        MethodTypeVoid(
        ) [MethodTypeVoid]
        MethodName(
         main
        ) [MethodName]
      ) [MethodSignaturePlain]
      NoVarDeclOption(
      ) [NoVarDeclOption]
      StatementListMultiple(
        StatementListNo(
        ) [StatementListNo]
        StatementSingle(
          SinglePrintStatement(
            SingleTermExprPositive(
              SingleFactorTerm(
                MethodCallFactor(
                  MethodCall(
                    IdentDesignator(
                     sum
                    ) [IdentDesignator]
                    ActParsLeftParen(
                    ) [ActParsLeftParen]
                    ActParsYes(
                      ActParsMultiExpr(
                        ActParsMultiExpr(
                          ActParsSingleExpr(
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                NumConstFactor(
                                 1
                                ) [NumConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [ActParsSingleExpr]
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              NumConstFactor(
                               2
                              ) [NumConstFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [ActParsMultiExpr]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            NumConstFactor(
                             3
                            ) [NumConstFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [ActParsMultiExpr]
                    ) [ActParsYes]
                    ActParsRightParen(
                    ) [ActParsRightParen]
                  ) [MethodCall]
                ) [MethodCallFactor]
              ) [SingleFactorTerm]
            ) [SingleTermExprPositive]
            NumConstNo(
            ) [NumConstNo]
          ) [SinglePrintStatement]
        ) [StatementSingle]
      ) [StatementListMultiple]
    ) [MethodDeclaration]
  ) [MethodDeclListMultiple]
) [Program]
INFO  21:39:47,104 - ===================================
ERROR 21:39:47,112 - Line 12: Symbol args is not defined.
ERROR 21:39:47,112 - Line 13: Symbol args is not defined.
INFO  21:40:22,056 - Compiling source file: D:\source\repos\PP_Projekat\MicroJavaCompiler\test\program.mj
INFO  21:40:22,079 - #2 program
INFO  21:40:22,080 - #49 test302
INFO  21:40:22,080 - #7 const
INFO  21:40:22,080 - #49 int
INFO  21:40:22,080 - #49 jedan
INFO  21:40:22,080 - #27 =
INFO  21:40:22,080 - #52 1
INFO  21:40:22,080 - #38 ;
INFO  21:40:22,081 - #44 {
INFO  21:40:22,081 - #49 int
INFO  21:40:22,081 - #49 sum
INFO  21:40:22,081 - #40 (
INFO  21:40:22,081 - #49 int
INFO  21:40:22,082 - #47 .
ERROR 21:40:22,082 - 
Sintaksna greska na liniji 9
INFO  21:40:22,082 - #47 .
INFO  21:40:22,082 - #47 .
INFO  21:40:22,082 - #49 args
INFO  21:40:22,082 - #41 )
INFO  21:40:22,082 - #49 int
INFO  21:40:22,082 - #49 z
INFO  21:40:22,082 - #39 ,
ERROR 21:40:22,082 - Izvrsen oporovak prilikom greske u formalnom parametru do , ili ) u liniji 9
INFO  21:40:22,083 - #49 d
INFO  21:40:22,083 - #38 ;
INFO  21:40:22,083 - #44 {
INFO  21:40:22,084 - #49 z
INFO  21:40:22,084 - #27 =
INFO  21:40:22,084 - #49 args
INFO  21:40:22,084 - #42 [
INFO  21:40:22,084 - #52 0
INFO  21:40:22,084 - #43 ]
INFO  21:40:22,084 - #38 ;
INFO  21:40:22,084 - #49 d
INFO  21:40:22,084 - #27 =
INFO  21:40:22,084 - #49 args
INFO  21:40:22,085 - #42 [
INFO  21:40:22,085 - #52 1
INFO  21:40:22,085 - #43 ]
INFO  21:40:22,085 - #38 ;
INFO  21:40:22,085 - #15 return
INFO  21:40:22,085 - #49 z
INFO  21:40:22,085 - #22 +
INFO  21:40:22,085 - #49 d
INFO  21:40:22,085 - #38 ;
INFO  21:40:22,085 - #45 }
INFO  21:40:22,085 - #14 void
INFO  21:40:22,085 - #49 main
INFO  21:40:22,086 - #40 (
INFO  21:40:22,086 - #41 )
INFO  21:40:22,086 - #44 {
INFO  21:40:22,086 - #12 print
INFO  21:40:22,086 - #40 (
INFO  21:40:22,086 - #49 sum
INFO  21:40:22,086 - #40 (
INFO  21:40:22,086 - #52 1
INFO  21:40:22,086 - #39 ,
INFO  21:40:22,086 - #52 2
INFO  21:40:22,086 - #39 ,
INFO  21:40:22,086 - #52 3
INFO  21:40:22,086 - #41 )
INFO  21:40:22,086 - #41 )
INFO  21:40:22,087 - #38 ;
INFO  21:40:22,087 - #45 }
INFO  21:40:22,087 - #45 }
INFO  21:40:22,088 - Program(
  ProgramName(
   test302
  ) [ProgramName]
  AllDeclListMultiple(
    NoDecl(
    ) [NoDecl]
    ConstDeclaration(
      ConstDeclarationExpr(
        Type(
         int
        ) [Type]
        ConstAssignSingle(
          ConstAssign(
           jedan
            NumberConst(
             1
            ) [NumberConst]
          ) [ConstAssign]
        ) [ConstAssignSingle]
      ) [ConstDeclarationExpr]
    ) [ConstDeclaration]
  ) [AllDeclListMultiple]
  MethodDeclListMultiple(
    MethodDeclListMultiple(
      MethodDeclListNo(
      ) [MethodDeclListNo]
      MethodDeclaration(
        MethodSignatureParams(
          MethodTypeType(
            Type(
             int
            ) [Type]
          ) [MethodTypeType]
          MethodName(
           sum
          ) [MethodName]
          FormParsSingle(
            FormParError(
            ) [FormParError]
          ) [FormParsSingle]
          FormParsEnd(
          ) [FormParsEnd]
        ) [MethodSignatureParams]
        VarDeclOptionTrue(
          NoVarDeclOption(
          ) [NoVarDeclOption]
          VarDeclarationExpr(
            Type(
             int
            ) [Type]
            VarDeclListMultiple(
              VarDeclListSingle(
                VarDeclSingle(
                 z
                  NoArray(
                  ) [NoArray]
                ) [VarDeclSingle]
              ) [VarDeclListSingle]
              VarDeclSingle(
               d
                NoArray(
                ) [NoArray]
              ) [VarDeclSingle]
            ) [VarDeclListMultiple]
          ) [VarDeclarationExpr]
        ) [VarDeclOptionTrue]
        StatementListMultiple(
          StatementListMultiple(
            StatementListMultiple(
              StatementListNo(
              ) [StatementListNo]
              StatementSingle(
                SingleDesignatorStatement(
                  DesignatorStmtAssign(
                    DesignatorStmtAssignCorrect(
                      IdentDesignator(
                       z
                      ) [IdentDesignator]
                      SingleTermExprPositive(
                        SingleFactorTerm(
                          DesignatorEmptyFactor(
                            IdentArrayDesignator(
                             args
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  NumConstFactor(
                                   0
                                  ) [NumConstFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [IdentArrayDesignator]
                          ) [DesignatorEmptyFactor]
                        ) [SingleFactorTerm]
                      ) [SingleTermExprPositive]
                    ) [DesignatorStmtAssignCorrect]
                  ) [DesignatorStmtAssign]
                ) [SingleDesignatorStatement]
              ) [StatementSingle]
            ) [StatementListMultiple]
            StatementSingle(
              SingleDesignatorStatement(
                DesignatorStmtAssign(
                  DesignatorStmtAssignCorrect(
                    IdentDesignator(
                     d
                    ) [IdentDesignator]
                    SingleTermExprPositive(
                      SingleFactorTerm(
                        DesignatorEmptyFactor(
                          IdentArrayDesignator(
                           args
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                NumConstFactor(
                                 1
                                ) [NumConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [IdentArrayDesignator]
                        ) [DesignatorEmptyFactor]
                      ) [SingleFactorTerm]
                    ) [SingleTermExprPositive]
                  ) [DesignatorStmtAssignCorrect]
                ) [DesignatorStmtAssign]
              ) [SingleDesignatorStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
          StatementSingle(
            SingleReturnExprStatement(
              MultiTermExpr(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    DesignatorEmptyFactor(
                      IdentDesignator(
                       z
                      ) [IdentDesignator]
                    ) [DesignatorEmptyFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
                AddopPlus(
                ) [AddopPlus]
                SingleFactorTerm(
                  DesignatorEmptyFactor(
                    IdentDesignator(
                     d
                    ) [IdentDesignator]
                  ) [DesignatorEmptyFactor]
                ) [SingleFactorTerm]
              ) [MultiTermExpr]
            ) [SingleReturnExprStatement]
          ) [StatementSingle]
        ) [StatementListMultiple]
      ) [MethodDeclaration]
    ) [MethodDeclListMultiple]
    MethodDeclaration(
      MethodSignaturePlain(
        MethodTypeVoid(
        ) [MethodTypeVoid]
        MethodName(
         main
        ) [MethodName]
      ) [MethodSignaturePlain]
      NoVarDeclOption(
      ) [NoVarDeclOption]
      StatementListMultiple(
        StatementListNo(
        ) [StatementListNo]
        StatementSingle(
          SinglePrintStatement(
            SingleTermExprPositive(
              SingleFactorTerm(
                MethodCallFactor(
                  MethodCall(
                    IdentDesignator(
                     sum
                    ) [IdentDesignator]
                    ActParsLeftParen(
                    ) [ActParsLeftParen]
                    ActParsYes(
                      ActParsMultiExpr(
                        ActParsMultiExpr(
                          ActParsSingleExpr(
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                NumConstFactor(
                                 1
                                ) [NumConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [ActParsSingleExpr]
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              NumConstFactor(
                               2
                              ) [NumConstFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [ActParsMultiExpr]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            NumConstFactor(
                             3
                            ) [NumConstFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [ActParsMultiExpr]
                    ) [ActParsYes]
                    ActParsRightParen(
                    ) [ActParsRightParen]
                  ) [MethodCall]
                ) [MethodCallFactor]
              ) [SingleFactorTerm]
            ) [SingleTermExprPositive]
            NumConstNo(
            ) [NumConstNo]
          ) [SinglePrintStatement]
        ) [StatementSingle]
      ) [StatementListMultiple]
    ) [MethodDeclaration]
  ) [MethodDeclListMultiple]
) [Program]
INFO  21:40:22,088 - ===================================
ERROR 21:40:22,096 - Line 12: Symbol args is not defined.
ERROR 21:40:22,097 - Line 13: Symbol args is not defined.
INFO  21:43:20,683 - Compiling source file: D:\source\repos\PP_Projekat\MicroJavaCompiler\test\program.mj
INFO  21:43:20,699 - #2 program
INFO  21:43:20,699 - #49 test302
INFO  21:43:20,699 - #7 const
INFO  21:43:20,700 - #49 int
INFO  21:43:20,700 - #49 jedan
INFO  21:43:20,700 - #27 =
INFO  21:43:20,700 - #52 1
INFO  21:43:20,700 - #38 ;
INFO  21:43:20,700 - #44 {
INFO  21:43:20,700 - #49 int
INFO  21:43:20,701 - #49 sum
INFO  21:43:20,701 - #40 (
INFO  21:43:20,701 - #49 int
INFO  21:43:20,701 - #47 .
ERROR 21:43:20,701 - 
Sintaksna greska na liniji 9
ERROR 21:43:20,701 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 9
INFO  21:46:43,127 - Compiling source file: D:\source\repos\PP_Projekat\MicroJavaCompiler\test\program.mj
INFO  21:46:43,145 - #2 program
INFO  21:46:43,145 - #49 test302
INFO  21:46:43,145 - #7 const
INFO  21:46:43,146 - #49 int
INFO  21:46:43,146 - #49 jedan
INFO  21:46:43,146 - #27 =
INFO  21:46:43,146 - #52 1
INFO  21:46:43,146 - #38 ;
INFO  21:46:43,146 - #44 {
INFO  21:46:43,147 - #49 int
INFO  21:46:43,147 - #49 sum
INFO  21:46:43,147 - #40 (
INFO  21:46:43,147 - #49 int
INFO  21:46:43,147 - #47 .
ERROR 21:46:43,147 - 
Sintaksna greska na liniji 9
ERROR 21:46:43,147 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 9
INFO  21:48:30,600 - Compiling source file: D:\source\repos\PP_Projekat\MicroJavaCompiler\test\program.mj
INFO  21:48:30,618 - #2 program
INFO  21:48:30,618 - #49 test302
INFO  21:48:30,618 - #7 const
INFO  21:48:30,619 - #49 int
INFO  21:48:30,619 - #49 jedan
INFO  21:48:30,619 - #27 =
INFO  21:48:30,619 - #52 1
INFO  21:48:30,619 - #38 ;
INFO  21:48:30,619 - #44 {
INFO  21:48:30,620 - #49 int
INFO  21:48:30,620 - #49 sum
INFO  21:48:30,620 - #40 (
INFO  21:48:30,620 - #49 int
INFO  21:48:30,620 - #49 a
INFO  21:48:30,620 - #39 ,
INFO  21:48:30,621 - #49 int
INFO  21:48:30,621 - #47 .
ERROR 21:48:30,621 - 
Sintaksna greska na liniji 9
ERROR 21:48:30,621 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 9
INFO  21:48:49,042 - Compiling source file: D:\source\repos\PP_Projekat\MicroJavaCompiler\test\program.mj
INFO  21:48:49,060 - #2 program
INFO  21:48:49,060 - #49 test302
INFO  21:48:49,060 - #7 const
INFO  21:48:49,060 - #49 int
INFO  21:48:49,060 - #49 jedan
INFO  21:48:49,060 - #27 =
INFO  21:48:49,060 - #52 1
INFO  21:48:49,061 - #38 ;
INFO  21:48:49,061 - #44 {
INFO  21:48:49,061 - #49 int
INFO  21:48:49,061 - #49 sum
INFO  21:48:49,061 - #40 (
INFO  21:48:49,062 - #49 int
INFO  21:48:49,062 - #49 a
INFO  21:48:49,062 - #39 ,
INFO  21:48:49,063 - #49 int
INFO  21:48:49,063 - #47 .
ERROR 21:48:49,063 - 
Sintaksna greska na liniji 9
ERROR 21:48:49,063 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 9
INFO  21:49:25,800 - Compiling source file: D:\source\repos\PP_Projekat\MicroJavaCompiler\test\program.mj
INFO  21:49:25,819 - #2 program
INFO  21:49:25,819 - #49 test302
INFO  21:49:25,819 - #7 const
INFO  21:49:25,819 - #49 int
INFO  21:49:25,819 - #49 jedan
INFO  21:49:25,819 - #27 =
INFO  21:49:25,819 - #52 1
INFO  21:49:25,820 - #38 ;
INFO  21:49:25,820 - #44 {
INFO  21:49:25,820 - #49 int
INFO  21:49:25,820 - #49 sum
INFO  21:49:25,820 - #40 (
INFO  21:49:25,821 - #49 int
INFO  21:49:25,821 - #49 a
INFO  21:49:25,821 - #39 ,
INFO  21:49:25,821 - #49 int
INFO  21:49:25,821 - #49 b
INFO  21:49:25,821 - #39 ,
INFO  21:49:25,821 - #49 int
INFO  21:49:25,821 - #49 c
INFO  21:49:25,821 - #41 )
INFO  21:49:25,821 - #49 int
INFO  21:49:25,822 - #49 z
INFO  21:49:25,822 - #39 ,
INFO  21:49:25,822 - #49 d
INFO  21:49:25,822 - #38 ;
INFO  21:49:25,822 - #44 {
INFO  21:49:25,823 - #49 z
INFO  21:49:25,823 - #27 =
INFO  21:49:25,823 - #49 args
INFO  21:49:25,823 - #42 [
INFO  21:49:25,823 - #52 0
INFO  21:49:25,823 - #43 ]
INFO  21:49:25,823 - #38 ;
INFO  21:49:25,823 - #49 d
INFO  21:49:25,823 - #27 =
INFO  21:49:25,823 - #49 args
INFO  21:49:25,823 - #42 [
INFO  21:49:25,823 - #52 1
INFO  21:49:25,823 - #43 ]
INFO  21:49:25,824 - #38 ;
INFO  21:49:25,824 - #15 return
INFO  21:49:25,824 - #49 z
INFO  21:49:25,824 - #22 +
INFO  21:49:25,824 - #49 d
INFO  21:49:25,824 - #38 ;
INFO  21:49:25,824 - #45 }
INFO  21:49:25,825 - #14 void
INFO  21:49:25,825 - #49 main
INFO  21:49:25,825 - #40 (
INFO  21:49:25,825 - #41 )
INFO  21:49:25,825 - #44 {
INFO  21:49:25,825 - #12 print
INFO  21:49:25,825 - #40 (
INFO  21:49:25,825 - #49 sum
INFO  21:49:25,825 - #40 (
INFO  21:49:25,825 - #52 1
INFO  21:49:25,825 - #39 ,
INFO  21:49:25,825 - #52 2
INFO  21:49:25,825 - #39 ,
INFO  21:49:25,825 - #52 3
INFO  21:49:25,825 - #41 )
INFO  21:49:25,826 - #41 )
INFO  21:49:25,826 - #38 ;
INFO  21:49:25,826 - #45 }
INFO  21:49:25,826 - #45 }
INFO  21:49:25,827 - Program(
  ProgramName(
   test302
  ) [ProgramName]
  AllDeclListMultiple(
    NoDecl(
    ) [NoDecl]
    ConstDeclaration(
      ConstDeclarationExpr(
        Type(
         int
        ) [Type]
        ConstAssignSingle(
          ConstAssign(
           jedan
            NumberConst(
             1
            ) [NumberConst]
          ) [ConstAssign]
        ) [ConstAssignSingle]
      ) [ConstDeclarationExpr]
    ) [ConstDeclaration]
  ) [AllDeclListMultiple]
  MethodDeclListMultiple(
    MethodDeclListMultiple(
      MethodDeclListNo(
      ) [MethodDeclListNo]
      MethodDeclaration(
        MethodSignatureParams(
          MethodTypeType(
            Type(
             int
            ) [Type]
          ) [MethodTypeType]
          MethodName(
           sum
          ) [MethodName]
          FormParsMultiple(
            FormParsMultiple(
              FormParsSingle(
                FormParSingle(
                  Type(
                   int
                  ) [Type]
                 a
                  NoArray(
                  ) [NoArray]
                ) [FormParSingle]
              ) [FormParsSingle]
              FormParSingle(
                Type(
                 int
                ) [Type]
               b
                NoArray(
                ) [NoArray]
              ) [FormParSingle]
            ) [FormParsMultiple]
            FormParSingle(
              Type(
               int
              ) [Type]
             c
              NoArray(
              ) [NoArray]
            ) [FormParSingle]
          ) [FormParsMultiple]
          FormParsEnd(
          ) [FormParsEnd]
        ) [MethodSignatureParams]
        VarDeclOptionTrue(
          NoVarDeclOption(
          ) [NoVarDeclOption]
          VarDeclarationExpr(
            Type(
             int
            ) [Type]
            VarDeclListMultiple(
              VarDeclListSingle(
                VarDeclSingle(
                 z
                  NoArray(
                  ) [NoArray]
                ) [VarDeclSingle]
              ) [VarDeclListSingle]
              VarDeclSingle(
               d
                NoArray(
                ) [NoArray]
              ) [VarDeclSingle]
            ) [VarDeclListMultiple]
          ) [VarDeclarationExpr]
        ) [VarDeclOptionTrue]
        StatementListMultiple(
          StatementListMultiple(
            StatementListMultiple(
              StatementListNo(
              ) [StatementListNo]
              StatementSingle(
                SingleDesignatorStatement(
                  DesignatorStmtAssign(
                    DesignatorStmtAssignCorrect(
                      IdentDesignator(
                       z
                      ) [IdentDesignator]
                      SingleTermExprPositive(
                        SingleFactorTerm(
                          DesignatorEmptyFactor(
                            IdentArrayDesignator(
                             args
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  NumConstFactor(
                                   0
                                  ) [NumConstFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [IdentArrayDesignator]
                          ) [DesignatorEmptyFactor]
                        ) [SingleFactorTerm]
                      ) [SingleTermExprPositive]
                    ) [DesignatorStmtAssignCorrect]
                  ) [DesignatorStmtAssign]
                ) [SingleDesignatorStatement]
              ) [StatementSingle]
            ) [StatementListMultiple]
            StatementSingle(
              SingleDesignatorStatement(
                DesignatorStmtAssign(
                  DesignatorStmtAssignCorrect(
                    IdentDesignator(
                     d
                    ) [IdentDesignator]
                    SingleTermExprPositive(
                      SingleFactorTerm(
                        DesignatorEmptyFactor(
                          IdentArrayDesignator(
                           args
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                NumConstFactor(
                                 1
                                ) [NumConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [IdentArrayDesignator]
                        ) [DesignatorEmptyFactor]
                      ) [SingleFactorTerm]
                    ) [SingleTermExprPositive]
                  ) [DesignatorStmtAssignCorrect]
                ) [DesignatorStmtAssign]
              ) [SingleDesignatorStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
          StatementSingle(
            SingleReturnExprStatement(
              MultiTermExpr(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    DesignatorEmptyFactor(
                      IdentDesignator(
                       z
                      ) [IdentDesignator]
                    ) [DesignatorEmptyFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
                AddopPlus(
                ) [AddopPlus]
                SingleFactorTerm(
                  DesignatorEmptyFactor(
                    IdentDesignator(
                     d
                    ) [IdentDesignator]
                  ) [DesignatorEmptyFactor]
                ) [SingleFactorTerm]
              ) [MultiTermExpr]
            ) [SingleReturnExprStatement]
          ) [StatementSingle]
        ) [StatementListMultiple]
      ) [MethodDeclaration]
    ) [MethodDeclListMultiple]
    MethodDeclaration(
      MethodSignaturePlain(
        MethodTypeVoid(
        ) [MethodTypeVoid]
        MethodName(
         main
        ) [MethodName]
      ) [MethodSignaturePlain]
      NoVarDeclOption(
      ) [NoVarDeclOption]
      StatementListMultiple(
        StatementListNo(
        ) [StatementListNo]
        StatementSingle(
          SinglePrintStatement(
            SingleTermExprPositive(
              SingleFactorTerm(
                MethodCallFactor(
                  MethodCall(
                    IdentDesignator(
                     sum
                    ) [IdentDesignator]
                    ActParsLeftParen(
                    ) [ActParsLeftParen]
                    ActParsYes(
                      ActParsMultiExpr(
                        ActParsMultiExpr(
                          ActParsSingleExpr(
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                NumConstFactor(
                                 1
                                ) [NumConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [ActParsSingleExpr]
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              NumConstFactor(
                               2
                              ) [NumConstFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [ActParsMultiExpr]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            NumConstFactor(
                             3
                            ) [NumConstFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [ActParsMultiExpr]
                    ) [ActParsYes]
                    ActParsRightParen(
                    ) [ActParsRightParen]
                  ) [MethodCall]
                ) [MethodCallFactor]
              ) [SingleFactorTerm]
            ) [SingleTermExprPositive]
            NumConstNo(
            ) [NumConstNo]
          ) [SinglePrintStatement]
        ) [StatementSingle]
      ) [StatementListMultiple]
    ) [MethodDeclaration]
  ) [MethodDeclListMultiple]
) [Program]
INFO  21:49:25,827 - ===================================
ERROR 21:49:25,831 - Line 12: Symbol args is not defined.
ERROR 21:49:25,831 - Line 13: Symbol args is not defined.
INFO  21:49:25,831 - Line 20: Method Call detected. Method name: sum
INFO  21:49:25,831 - One or more errors found!
INFO  21:50:54,820 - Compiling source file: D:\source\repos\PP_Projekat\MicroJavaCompiler\test\program.mj
INFO  21:50:54,839 - #2 program
INFO  21:50:54,839 - #49 test302
INFO  21:50:54,839 - #7 const
INFO  21:50:54,839 - #49 int
INFO  21:50:54,839 - #49 jedan
INFO  21:50:54,839 - #27 =
INFO  21:50:54,839 - #52 1
INFO  21:50:54,839 - #38 ;
INFO  21:50:54,840 - #44 {
INFO  21:50:54,840 - #49 int
INFO  21:50:54,840 - #49 sum
INFO  21:50:54,840 - #40 (
INFO  21:50:54,840 - #49 int
INFO  21:50:54,840 - #49 a
INFO  21:50:54,841 - #39 ,
INFO  21:50:54,841 - #49 int
INFO  21:50:54,841 - #47 .
ERROR 21:50:54,841 - 
Sintaksna greska na liniji 9
ERROR 21:50:54,841 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 9
INFO  21:52:50,291 - Compiling source file: D:\source\repos\PP_Projekat\MicroJavaCompiler\test\program.mj
INFO  21:52:50,308 - #2 program
INFO  21:52:50,308 - #49 test302
INFO  21:52:50,308 - #7 const
INFO  21:52:50,308 - #49 int
INFO  21:52:50,308 - #49 jedan
INFO  21:52:50,309 - #27 =
INFO  21:52:50,309 - #52 1
INFO  21:52:50,309 - #38 ;
INFO  21:52:50,309 - #44 {
INFO  21:52:50,309 - #49 int
INFO  21:52:50,309 - #49 sum
INFO  21:52:50,309 - #40 (
INFO  21:52:50,310 - #49 int
INFO  21:52:50,310 - #49 a
INFO  21:52:50,310 - #39 ,
INFO  21:52:50,310 - #49 int
INFO  21:52:50,310 - #47 .
ERROR 21:52:50,310 - 
Sintaksna greska na liniji 9
ERROR 21:52:50,310 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 9
INFO  21:54:22,009 - Compiling source file: D:\source\repos\PP_Projekat\MicroJavaCompiler\test\program.mj
INFO  21:54:22,026 - #2 program
INFO  21:54:22,026 - #49 test302
INFO  21:54:22,026 - #7 const
INFO  21:54:22,026 - #49 int
INFO  21:54:22,026 - #49 jedan
INFO  21:54:22,027 - #27 =
INFO  21:54:22,027 - #52 1
INFO  21:54:22,027 - #38 ;
INFO  21:54:22,027 - #44 {
INFO  21:54:22,027 - #49 int
INFO  21:54:22,027 - #49 sum
INFO  21:54:22,027 - #40 (
INFO  21:54:22,028 - #49 int
INFO  21:54:22,028 - #49 a
INFO  21:54:22,028 - #39 ,
INFO  21:54:22,028 - #49 int
INFO  21:54:22,028 - #47 .
INFO  21:54:22,028 - #47 .
INFO  21:54:22,028 - #47 .
INFO  21:54:22,028 - #49 b
INFO  21:54:22,028 - #27 =
ERROR 21:54:22,028 - 
Sintaksna greska na liniji 9
ERROR 21:54:22,028 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 9
INFO  21:54:42,770 - Compiling source file: D:\source\repos\PP_Projekat\MicroJavaCompiler\test\program.mj
INFO  21:54:42,788 - #2 program
INFO  21:54:42,788 - #49 test302
INFO  21:54:42,788 - #7 const
INFO  21:54:42,788 - #49 int
INFO  21:54:42,788 - #49 jedan
INFO  21:54:42,788 - #27 =
INFO  21:54:42,788 - #52 1
INFO  21:54:42,788 - #38 ;
INFO  21:54:42,789 - #44 {
INFO  21:54:42,789 - #49 int
INFO  21:54:42,789 - #49 sum
INFO  21:54:42,789 - #40 (
INFO  21:54:42,789 - #49 int
INFO  21:54:42,789 - #49 a
INFO  21:54:42,790 - #39 ,
INFO  21:54:42,790 - #49 int
INFO  21:54:42,790 - #47 .
INFO  21:54:42,790 - #47 .
INFO  21:54:42,790 - #47 .
INFO  21:54:42,790 - #49 b
INFO  21:54:42,790 - #41 )
INFO  21:54:42,790 - #49 int
INFO  21:54:42,791 - #49 z
INFO  21:54:42,791 - #39 ,
INFO  21:54:42,791 - #49 d
INFO  21:54:42,791 - #38 ;
INFO  21:54:42,791 - #44 {
INFO  21:54:42,791 - #49 z
INFO  21:54:42,792 - #27 =
INFO  21:54:42,792 - #49 args
INFO  21:54:42,792 - #42 [
INFO  21:54:42,792 - #52 0
INFO  21:54:42,792 - #43 ]
INFO  21:54:42,792 - #38 ;
INFO  21:54:42,792 - #49 d
INFO  21:54:42,792 - #27 =
INFO  21:54:42,792 - #49 args
INFO  21:54:42,792 - #42 [
INFO  21:54:42,792 - #52 1
INFO  21:54:42,792 - #43 ]
INFO  21:54:42,792 - #38 ;
INFO  21:54:42,792 - #15 return
INFO  21:54:42,792 - #49 z
INFO  21:54:42,793 - #22 +
INFO  21:54:42,793 - #49 d
INFO  21:54:42,793 - #38 ;
INFO  21:54:42,793 - #45 }
INFO  21:54:42,793 - #14 void
INFO  21:54:42,793 - #49 main
INFO  21:54:42,793 - #40 (
INFO  21:54:42,793 - #41 )
INFO  21:54:42,793 - #44 {
INFO  21:54:42,794 - #12 print
INFO  21:54:42,794 - #40 (
INFO  21:54:42,794 - #49 sum
INFO  21:54:42,794 - #40 (
INFO  21:54:42,794 - #52 1
INFO  21:54:42,794 - #39 ,
INFO  21:54:42,794 - #52 2
INFO  21:54:42,794 - #39 ,
INFO  21:54:42,794 - #52 3
INFO  21:54:42,794 - #41 )
INFO  21:54:42,794 - #41 )
INFO  21:54:42,795 - #38 ;
INFO  21:54:42,795 - #45 }
INFO  21:54:42,795 - #45 }
INFO  21:54:42,795 - Program(
  ProgramName(
   test302
  ) [ProgramName]
  AllDeclListMultiple(
    NoDecl(
    ) [NoDecl]
    ConstDeclaration(
      ConstDeclarationExpr(
        Type(
         int
        ) [Type]
        ConstAssignSingle(
          ConstAssign(
           jedan
            NumberConst(
             1
            ) [NumberConst]
          ) [ConstAssign]
        ) [ConstAssignSingle]
      ) [ConstDeclarationExpr]
    ) [ConstDeclaration]
  ) [AllDeclListMultiple]
  MethodDeclListMultiple(
    MethodDeclListMultiple(
      MethodDeclListNo(
      ) [MethodDeclListNo]
      MethodDeclaration(
        MethodSignatureVarArgs(
          MethodTypeType(
            Type(
             int
            ) [Type]
          ) [MethodTypeType]
          MethodName(
           sum
          ) [MethodName]
          FormParsSingle(
            FormParSingle(
              Type(
               int
              ) [Type]
             a
              NoArray(
              ) [NoArray]
            ) [FormParSingle]
          ) [FormParsSingle]
          Type(
           int
          ) [Type]
          VarArgsDeclaration(
           b
          ) [VarArgsDeclaration]
          FormParsEnd(
          ) [FormParsEnd]
        ) [MethodSignatureVarArgs]
        VarDeclOptionTrue(
          NoVarDeclOption(
          ) [NoVarDeclOption]
          VarDeclarationExpr(
            Type(
             int
            ) [Type]
            VarDeclListMultiple(
              VarDeclListSingle(
                VarDeclSingle(
                 z
                  NoArray(
                  ) [NoArray]
                ) [VarDeclSingle]
              ) [VarDeclListSingle]
              VarDeclSingle(
               d
                NoArray(
                ) [NoArray]
              ) [VarDeclSingle]
            ) [VarDeclListMultiple]
          ) [VarDeclarationExpr]
        ) [VarDeclOptionTrue]
        StatementListMultiple(
          StatementListMultiple(
            StatementListMultiple(
              StatementListNo(
              ) [StatementListNo]
              StatementSingle(
                SingleDesignatorStatement(
                  DesignatorStmtAssign(
                    DesignatorStmtAssignCorrect(
                      IdentDesignator(
                       z
                      ) [IdentDesignator]
                      SingleTermExprPositive(
                        SingleFactorTerm(
                          DesignatorEmptyFactor(
                            IdentArrayDesignator(
                             args
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  NumConstFactor(
                                   0
                                  ) [NumConstFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [IdentArrayDesignator]
                          ) [DesignatorEmptyFactor]
                        ) [SingleFactorTerm]
                      ) [SingleTermExprPositive]
                    ) [DesignatorStmtAssignCorrect]
                  ) [DesignatorStmtAssign]
                ) [SingleDesignatorStatement]
              ) [StatementSingle]
            ) [StatementListMultiple]
            StatementSingle(
              SingleDesignatorStatement(
                DesignatorStmtAssign(
                  DesignatorStmtAssignCorrect(
                    IdentDesignator(
                     d
                    ) [IdentDesignator]
                    SingleTermExprPositive(
                      SingleFactorTerm(
                        DesignatorEmptyFactor(
                          IdentArrayDesignator(
                           args
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                NumConstFactor(
                                 1
                                ) [NumConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [IdentArrayDesignator]
                        ) [DesignatorEmptyFactor]
                      ) [SingleFactorTerm]
                    ) [SingleTermExprPositive]
                  ) [DesignatorStmtAssignCorrect]
                ) [DesignatorStmtAssign]
              ) [SingleDesignatorStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
          StatementSingle(
            SingleReturnExprStatement(
              MultiTermExpr(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    DesignatorEmptyFactor(
                      IdentDesignator(
                       z
                      ) [IdentDesignator]
                    ) [DesignatorEmptyFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
                AddopPlus(
                ) [AddopPlus]
                SingleFactorTerm(
                  DesignatorEmptyFactor(
                    IdentDesignator(
                     d
                    ) [IdentDesignator]
                  ) [DesignatorEmptyFactor]
                ) [SingleFactorTerm]
              ) [MultiTermExpr]
            ) [SingleReturnExprStatement]
          ) [StatementSingle]
        ) [StatementListMultiple]
      ) [MethodDeclaration]
    ) [MethodDeclListMultiple]
    MethodDeclaration(
      MethodSignaturePlain(
        MethodTypeVoid(
        ) [MethodTypeVoid]
        MethodName(
         main
        ) [MethodName]
      ) [MethodSignaturePlain]
      NoVarDeclOption(
      ) [NoVarDeclOption]
      StatementListMultiple(
        StatementListNo(
        ) [StatementListNo]
        StatementSingle(
          SinglePrintStatement(
            SingleTermExprPositive(
              SingleFactorTerm(
                MethodCallFactor(
                  MethodCall(
                    IdentDesignator(
                     sum
                    ) [IdentDesignator]
                    ActParsLeftParen(
                    ) [ActParsLeftParen]
                    ActParsYes(
                      ActParsMultiExpr(
                        ActParsMultiExpr(
                          ActParsSingleExpr(
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                NumConstFactor(
                                 1
                                ) [NumConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [ActParsSingleExpr]
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              NumConstFactor(
                               2
                              ) [NumConstFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [ActParsMultiExpr]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            NumConstFactor(
                             3
                            ) [NumConstFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [ActParsMultiExpr]
                    ) [ActParsYes]
                    ActParsRightParen(
                    ) [ActParsRightParen]
                  ) [MethodCall]
                ) [MethodCallFactor]
              ) [SingleFactorTerm]
            ) [SingleTermExprPositive]
            NumConstNo(
            ) [NumConstNo]
          ) [SinglePrintStatement]
        ) [StatementSingle]
      ) [StatementListMultiple]
    ) [MethodDeclaration]
  ) [MethodDeclListMultiple]
) [Program]
INFO  21:54:42,795 - ===================================
ERROR 21:54:42,799 - Line 12: Symbol args is not defined.
ERROR 21:54:42,799 - Line 13: Symbol args is not defined.
INFO  21:54:42,799 - Line 20: Method Call detected. Method name: sum
INFO  21:54:42,799 - Method sum has varArgs with 2 args
INFO  21:54:42,799 - One or more errors found!
INFO  21:54:47,661 - Compiling source file: D:\source\repos\PP_Projekat\MicroJavaCompiler\test\program.mj
INFO  21:54:47,684 - #2 program
INFO  21:54:47,684 - #49 test302
INFO  21:54:47,685 - #7 const
INFO  21:54:47,685 - #49 int
INFO  21:54:47,685 - #49 jedan
INFO  21:54:47,685 - #27 =
INFO  21:54:47,685 - #52 1
INFO  21:54:47,685 - #38 ;
INFO  21:54:47,686 - #44 {
INFO  21:54:47,686 - #49 int
INFO  21:54:47,686 - #49 sum
INFO  21:54:47,686 - #40 (
INFO  21:54:47,686 - #49 int
INFO  21:54:47,687 - #49 a
INFO  21:54:47,687 - #39 ,
INFO  21:54:47,687 - #49 int
INFO  21:54:47,687 - #47 .
INFO  21:54:47,687 - #47 .
INFO  21:54:47,687 - #47 .
INFO  21:54:47,687 - #49 b
INFO  21:54:47,687 - #41 )
INFO  21:54:47,687 - #49 int
INFO  21:54:47,688 - #49 z
INFO  21:54:47,688 - #39 ,
INFO  21:54:47,688 - #49 d
INFO  21:54:47,688 - #38 ;
INFO  21:54:47,688 - #44 {
INFO  21:54:47,688 - #49 z
INFO  21:54:47,688 - #27 =
INFO  21:54:47,688 - #49 args
INFO  21:54:47,689 - #42 [
INFO  21:54:47,689 - #52 0
INFO  21:54:47,689 - #43 ]
INFO  21:54:47,689 - #38 ;
INFO  21:54:47,689 - #49 d
INFO  21:54:47,689 - #27 =
INFO  21:54:47,689 - #49 args
INFO  21:54:47,689 - #42 [
INFO  21:54:47,689 - #52 1
INFO  21:54:47,689 - #43 ]
INFO  21:54:47,689 - #38 ;
INFO  21:54:47,689 - #15 return
INFO  21:54:47,689 - #49 z
INFO  21:54:47,689 - #22 +
INFO  21:54:47,689 - #49 d
INFO  21:54:47,690 - #38 ;
INFO  21:54:47,690 - #45 }
INFO  21:54:47,690 - #14 void
INFO  21:54:47,690 - #49 main
INFO  21:54:47,690 - #40 (
INFO  21:54:47,690 - #41 )
INFO  21:54:47,691 - #44 {
INFO  21:54:47,691 - #12 print
INFO  21:54:47,691 - #40 (
INFO  21:54:47,691 - #49 sum
INFO  21:54:47,691 - #40 (
INFO  21:54:47,691 - #52 1
INFO  21:54:47,691 - #39 ,
INFO  21:54:47,691 - #52 2
INFO  21:54:47,691 - #39 ,
INFO  21:54:47,691 - #52 3
INFO  21:54:47,691 - #41 )
INFO  21:54:47,691 - #41 )
INFO  21:54:47,692 - #38 ;
INFO  21:54:47,692 - #45 }
INFO  21:54:47,692 - #45 }
INFO  21:54:47,693 - Program(
  ProgramName(
   test302
  ) [ProgramName]
  AllDeclListMultiple(
    NoDecl(
    ) [NoDecl]
    ConstDeclaration(
      ConstDeclarationExpr(
        Type(
         int
        ) [Type]
        ConstAssignSingle(
          ConstAssign(
           jedan
            NumberConst(
             1
            ) [NumberConst]
          ) [ConstAssign]
        ) [ConstAssignSingle]
      ) [ConstDeclarationExpr]
    ) [ConstDeclaration]
  ) [AllDeclListMultiple]
  MethodDeclListMultiple(
    MethodDeclListMultiple(
      MethodDeclListNo(
      ) [MethodDeclListNo]
      MethodDeclaration(
        MethodSignatureVarArgs(
          MethodTypeType(
            Type(
             int
            ) [Type]
          ) [MethodTypeType]
          MethodName(
           sum
          ) [MethodName]
          FormParsSingle(
            FormParSingle(
              Type(
               int
              ) [Type]
             a
              NoArray(
              ) [NoArray]
            ) [FormParSingle]
          ) [FormParsSingle]
          Type(
           int
          ) [Type]
          VarArgsDeclaration(
           b
          ) [VarArgsDeclaration]
          FormParsEnd(
          ) [FormParsEnd]
        ) [MethodSignatureVarArgs]
        VarDeclOptionTrue(
          NoVarDeclOption(
          ) [NoVarDeclOption]
          VarDeclarationExpr(
            Type(
             int
            ) [Type]
            VarDeclListMultiple(
              VarDeclListSingle(
                VarDeclSingle(
                 z
                  NoArray(
                  ) [NoArray]
                ) [VarDeclSingle]
              ) [VarDeclListSingle]
              VarDeclSingle(
               d
                NoArray(
                ) [NoArray]
              ) [VarDeclSingle]
            ) [VarDeclListMultiple]
          ) [VarDeclarationExpr]
        ) [VarDeclOptionTrue]
        StatementListMultiple(
          StatementListMultiple(
            StatementListMultiple(
              StatementListNo(
              ) [StatementListNo]
              StatementSingle(
                SingleDesignatorStatement(
                  DesignatorStmtAssign(
                    DesignatorStmtAssignCorrect(
                      IdentDesignator(
                       z
                      ) [IdentDesignator]
                      SingleTermExprPositive(
                        SingleFactorTerm(
                          DesignatorEmptyFactor(
                            IdentArrayDesignator(
                             args
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  NumConstFactor(
                                   0
                                  ) [NumConstFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [IdentArrayDesignator]
                          ) [DesignatorEmptyFactor]
                        ) [SingleFactorTerm]
                      ) [SingleTermExprPositive]
                    ) [DesignatorStmtAssignCorrect]
                  ) [DesignatorStmtAssign]
                ) [SingleDesignatorStatement]
              ) [StatementSingle]
            ) [StatementListMultiple]
            StatementSingle(
              SingleDesignatorStatement(
                DesignatorStmtAssign(
                  DesignatorStmtAssignCorrect(
                    IdentDesignator(
                     d
                    ) [IdentDesignator]
                    SingleTermExprPositive(
                      SingleFactorTerm(
                        DesignatorEmptyFactor(
                          IdentArrayDesignator(
                           args
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                NumConstFactor(
                                 1
                                ) [NumConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [IdentArrayDesignator]
                        ) [DesignatorEmptyFactor]
                      ) [SingleFactorTerm]
                    ) [SingleTermExprPositive]
                  ) [DesignatorStmtAssignCorrect]
                ) [DesignatorStmtAssign]
              ) [SingleDesignatorStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
          StatementSingle(
            SingleReturnExprStatement(
              MultiTermExpr(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    DesignatorEmptyFactor(
                      IdentDesignator(
                       z
                      ) [IdentDesignator]
                    ) [DesignatorEmptyFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
                AddopPlus(
                ) [AddopPlus]
                SingleFactorTerm(
                  DesignatorEmptyFactor(
                    IdentDesignator(
                     d
                    ) [IdentDesignator]
                  ) [DesignatorEmptyFactor]
                ) [SingleFactorTerm]
              ) [MultiTermExpr]
            ) [SingleReturnExprStatement]
          ) [StatementSingle]
        ) [StatementListMultiple]
      ) [MethodDeclaration]
    ) [MethodDeclListMultiple]
    MethodDeclaration(
      MethodSignaturePlain(
        MethodTypeVoid(
        ) [MethodTypeVoid]
        MethodName(
         main
        ) [MethodName]
      ) [MethodSignaturePlain]
      NoVarDeclOption(
      ) [NoVarDeclOption]
      StatementListMultiple(
        StatementListNo(
        ) [StatementListNo]
        StatementSingle(
          SinglePrintStatement(
            SingleTermExprPositive(
              SingleFactorTerm(
                MethodCallFactor(
                  MethodCall(
                    IdentDesignator(
                     sum
                    ) [IdentDesignator]
                    ActParsLeftParen(
                    ) [ActParsLeftParen]
                    ActParsYes(
                      ActParsMultiExpr(
                        ActParsMultiExpr(
                          ActParsSingleExpr(
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                NumConstFactor(
                                 1
                                ) [NumConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [ActParsSingleExpr]
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              NumConstFactor(
                               2
                              ) [NumConstFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [ActParsMultiExpr]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            NumConstFactor(
                             3
                            ) [NumConstFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [ActParsMultiExpr]
                    ) [ActParsYes]
                    ActParsRightParen(
                    ) [ActParsRightParen]
                  ) [MethodCall]
                ) [MethodCallFactor]
              ) [SingleFactorTerm]
            ) [SingleTermExprPositive]
            NumConstNo(
            ) [NumConstNo]
          ) [SinglePrintStatement]
        ) [StatementSingle]
      ) [StatementListMultiple]
    ) [MethodDeclaration]
  ) [MethodDeclListMultiple]
) [Program]
INFO  21:54:47,693 - ===================================
INFO  21:55:33,140 - Compiling source file: D:\source\repos\PP_Projekat\MicroJavaCompiler\test\program.mj
INFO  21:55:33,158 - #2 program
INFO  21:55:33,158 - #49 test302
INFO  21:55:33,158 - #7 const
INFO  21:55:33,159 - #49 int
INFO  21:55:33,159 - #49 jedan
INFO  21:55:33,159 - #27 =
INFO  21:55:33,159 - #52 1
INFO  21:55:33,159 - #38 ;
INFO  21:55:33,159 - #44 {
INFO  21:55:33,159 - #49 int
INFO  21:55:33,160 - #49 sum
INFO  21:55:33,160 - #40 (
INFO  21:55:33,160 - #49 int
INFO  21:55:33,160 - #49 a
INFO  21:55:33,160 - #39 ,
INFO  21:55:33,160 - #49 int
INFO  21:55:33,160 - #47 .
INFO  21:55:33,160 - #47 .
INFO  21:55:33,160 - #47 .
INFO  21:55:33,160 - #49 args
INFO  21:55:33,161 - #41 )
INFO  21:55:33,161 - #49 int
INFO  21:55:33,161 - #49 z
INFO  21:55:33,161 - #39 ,
INFO  21:55:33,161 - #49 d
INFO  21:55:33,161 - #38 ;
INFO  21:55:33,161 - #44 {
INFO  21:55:33,162 - #49 z
INFO  21:55:33,162 - #27 =
INFO  21:55:33,162 - #49 args
INFO  21:55:33,162 - #42 [
INFO  21:55:33,162 - #52 0
INFO  21:55:33,162 - #43 ]
INFO  21:55:33,162 - #38 ;
INFO  21:55:33,162 - #49 d
INFO  21:55:33,162 - #27 =
INFO  21:55:33,162 - #49 args
INFO  21:55:33,162 - #42 [
INFO  21:55:33,163 - #52 1
INFO  21:55:33,163 - #43 ]
INFO  21:55:33,163 - #38 ;
INFO  21:55:33,163 - #15 return
INFO  21:55:33,163 - #49 z
INFO  21:55:33,163 - #22 +
INFO  21:55:33,163 - #49 d
INFO  21:55:33,164 - #38 ;
INFO  21:55:33,164 - #45 }
INFO  21:55:33,164 - #14 void
INFO  21:55:33,164 - #49 main
INFO  21:55:33,164 - #40 (
INFO  21:55:33,164 - #41 )
INFO  21:55:33,164 - #44 {
INFO  21:55:33,164 - #12 print
INFO  21:55:33,164 - #40 (
INFO  21:55:33,164 - #49 sum
INFO  21:55:33,164 - #40 (
INFO  21:55:33,164 - #52 1
INFO  21:55:33,165 - #39 ,
INFO  21:55:33,165 - #52 2
INFO  21:55:33,165 - #39 ,
INFO  21:55:33,165 - #52 3
INFO  21:55:33,165 - #41 )
INFO  21:55:33,165 - #41 )
INFO  21:55:33,165 - #38 ;
INFO  21:55:33,165 - #45 }
INFO  21:55:33,166 - #45 }
INFO  21:55:33,166 - Program(
  ProgramName(
   test302
  ) [ProgramName]
  AllDeclListMultiple(
    NoDecl(
    ) [NoDecl]
    ConstDeclaration(
      ConstDeclarationExpr(
        Type(
         int
        ) [Type]
        ConstAssignSingle(
          ConstAssign(
           jedan
            NumberConst(
             1
            ) [NumberConst]
          ) [ConstAssign]
        ) [ConstAssignSingle]
      ) [ConstDeclarationExpr]
    ) [ConstDeclaration]
  ) [AllDeclListMultiple]
  MethodDeclListMultiple(
    MethodDeclListMultiple(
      MethodDeclListNo(
      ) [MethodDeclListNo]
      MethodDeclaration(
        MethodSignatureVarArgs(
          MethodTypeType(
            Type(
             int
            ) [Type]
          ) [MethodTypeType]
          MethodName(
           sum
          ) [MethodName]
          FormParsSingle(
            FormParSingle(
              Type(
               int
              ) [Type]
             a
              NoArray(
              ) [NoArray]
            ) [FormParSingle]
          ) [FormParsSingle]
          Type(
           int
          ) [Type]
          VarArgsDeclaration(
           args
          ) [VarArgsDeclaration]
          FormParsEnd(
          ) [FormParsEnd]
        ) [MethodSignatureVarArgs]
        VarDeclOptionTrue(
          NoVarDeclOption(
          ) [NoVarDeclOption]
          VarDeclarationExpr(
            Type(
             int
            ) [Type]
            VarDeclListMultiple(
              VarDeclListSingle(
                VarDeclSingle(
                 z
                  NoArray(
                  ) [NoArray]
                ) [VarDeclSingle]
              ) [VarDeclListSingle]
              VarDeclSingle(
               d
                NoArray(
                ) [NoArray]
              ) [VarDeclSingle]
            ) [VarDeclListMultiple]
          ) [VarDeclarationExpr]
        ) [VarDeclOptionTrue]
        StatementListMultiple(
          StatementListMultiple(
            StatementListMultiple(
              StatementListNo(
              ) [StatementListNo]
              StatementSingle(
                SingleDesignatorStatement(
                  DesignatorStmtAssign(
                    DesignatorStmtAssignCorrect(
                      IdentDesignator(
                       z
                      ) [IdentDesignator]
                      SingleTermExprPositive(
                        SingleFactorTerm(
                          DesignatorEmptyFactor(
                            IdentArrayDesignator(
                             args
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  NumConstFactor(
                                   0
                                  ) [NumConstFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [IdentArrayDesignator]
                          ) [DesignatorEmptyFactor]
                        ) [SingleFactorTerm]
                      ) [SingleTermExprPositive]
                    ) [DesignatorStmtAssignCorrect]
                  ) [DesignatorStmtAssign]
                ) [SingleDesignatorStatement]
              ) [StatementSingle]
            ) [StatementListMultiple]
            StatementSingle(
              SingleDesignatorStatement(
                DesignatorStmtAssign(
                  DesignatorStmtAssignCorrect(
                    IdentDesignator(
                     d
                    ) [IdentDesignator]
                    SingleTermExprPositive(
                      SingleFactorTerm(
                        DesignatorEmptyFactor(
                          IdentArrayDesignator(
                           args
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                NumConstFactor(
                                 1
                                ) [NumConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [IdentArrayDesignator]
                        ) [DesignatorEmptyFactor]
                      ) [SingleFactorTerm]
                    ) [SingleTermExprPositive]
                  ) [DesignatorStmtAssignCorrect]
                ) [DesignatorStmtAssign]
              ) [SingleDesignatorStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
          StatementSingle(
            SingleReturnExprStatement(
              MultiTermExpr(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    DesignatorEmptyFactor(
                      IdentDesignator(
                       z
                      ) [IdentDesignator]
                    ) [DesignatorEmptyFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
                AddopPlus(
                ) [AddopPlus]
                SingleFactorTerm(
                  DesignatorEmptyFactor(
                    IdentDesignator(
                     d
                    ) [IdentDesignator]
                  ) [DesignatorEmptyFactor]
                ) [SingleFactorTerm]
              ) [MultiTermExpr]
            ) [SingleReturnExprStatement]
          ) [StatementSingle]
        ) [StatementListMultiple]
      ) [MethodDeclaration]
    ) [MethodDeclListMultiple]
    MethodDeclaration(
      MethodSignaturePlain(
        MethodTypeVoid(
        ) [MethodTypeVoid]
        MethodName(
         main
        ) [MethodName]
      ) [MethodSignaturePlain]
      NoVarDeclOption(
      ) [NoVarDeclOption]
      StatementListMultiple(
        StatementListNo(
        ) [StatementListNo]
        StatementSingle(
          SinglePrintStatement(
            SingleTermExprPositive(
              SingleFactorTerm(
                MethodCallFactor(
                  MethodCall(
                    IdentDesignator(
                     sum
                    ) [IdentDesignator]
                    ActParsLeftParen(
                    ) [ActParsLeftParen]
                    ActParsYes(
                      ActParsMultiExpr(
                        ActParsMultiExpr(
                          ActParsSingleExpr(
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                NumConstFactor(
                                 1
                                ) [NumConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [ActParsSingleExpr]
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              NumConstFactor(
                               2
                              ) [NumConstFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [ActParsMultiExpr]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            NumConstFactor(
                             3
                            ) [NumConstFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [ActParsMultiExpr]
                    ) [ActParsYes]
                    ActParsRightParen(
                    ) [ActParsRightParen]
                  ) [MethodCall]
                ) [MethodCallFactor]
              ) [SingleFactorTerm]
            ) [SingleTermExprPositive]
            NumConstNo(
            ) [NumConstNo]
          ) [SinglePrintStatement]
        ) [StatementSingle]
      ) [StatementListMultiple]
    ) [MethodDeclaration]
  ) [MethodDeclListMultiple]
) [Program]
INFO  21:55:33,166 - ===================================
INFO  21:55:33,170 - Line 12: Access to array element detected. Array name: args
INFO  21:55:33,170 - Line 13: Access to array element detected. Array name: args
INFO  21:55:33,170 - Line 20: Method Call detected. Method name: sum
INFO  21:55:33,170 - Method sum has varArgs with 2 args
INFO  21:55:33,170 - Compile successful!
INFO  21:55:51,944 - Compiling source file: D:\source\repos\PP_Projekat\MicroJavaCompiler\test\program.mj
INFO  21:55:51,962 - #2 program
INFO  21:55:51,962 - #49 test302
INFO  21:55:51,962 - #7 const
INFO  21:55:51,962 - #49 int
INFO  21:55:51,962 - #49 jedan
INFO  21:55:51,962 - #27 =
INFO  21:55:51,962 - #52 1
INFO  21:55:51,962 - #38 ;
INFO  21:55:51,963 - #44 {
INFO  21:55:51,963 - #49 int
INFO  21:55:51,963 - #49 sum
INFO  21:55:51,963 - #40 (
INFO  21:55:51,963 - #49 int
INFO  21:55:51,963 - #47 .
INFO  21:55:51,963 - #47 .
INFO  21:55:51,963 - #47 .
INFO  21:55:51,963 - #49 args
INFO  21:55:51,963 - #41 )
INFO  21:55:51,963 - #49 int
INFO  21:55:51,964 - #49 z
INFO  21:55:51,964 - #39 ,
INFO  21:55:51,964 - #49 d
INFO  21:55:51,964 - #38 ;
INFO  21:55:51,964 - #44 {
INFO  21:55:51,965 - #49 z
INFO  21:55:51,965 - #27 =
INFO  21:55:51,965 - #49 args
INFO  21:55:51,965 - #42 [
INFO  21:55:51,965 - #52 0
INFO  21:55:51,965 - #43 ]
INFO  21:55:51,965 - #38 ;
INFO  21:55:51,965 - #49 d
INFO  21:55:51,965 - #27 =
INFO  21:55:51,965 - #49 args
INFO  21:55:51,965 - #42 [
INFO  21:55:51,965 - #52 1
INFO  21:55:51,965 - #43 ]
INFO  21:55:51,965 - #38 ;
INFO  21:55:51,965 - #15 return
INFO  21:55:51,966 - #49 z
INFO  21:55:51,966 - #22 +
INFO  21:55:51,966 - #49 d
INFO  21:55:51,966 - #38 ;
INFO  21:55:51,966 - #45 }
INFO  21:55:51,966 - #14 void
INFO  21:55:51,966 - #49 main
INFO  21:55:51,967 - #40 (
INFO  21:55:51,967 - #41 )
INFO  21:55:51,967 - #44 {
INFO  21:55:51,967 - #12 print
INFO  21:55:51,967 - #40 (
INFO  21:55:51,967 - #49 sum
INFO  21:55:51,967 - #40 (
INFO  21:55:51,967 - #52 1
INFO  21:55:51,967 - #39 ,
INFO  21:55:51,967 - #52 2
INFO  21:55:51,967 - #39 ,
INFO  21:55:51,967 - #52 3
INFO  21:55:51,967 - #41 )
INFO  21:55:51,967 - #41 )
INFO  21:55:51,967 - #38 ;
INFO  21:55:51,967 - #45 }
INFO  21:55:51,967 - #45 }
INFO  21:55:51,968 - Program(
  ProgramName(
   test302
  ) [ProgramName]
  AllDeclListMultiple(
    NoDecl(
    ) [NoDecl]
    ConstDeclaration(
      ConstDeclarationExpr(
        Type(
         int
        ) [Type]
        ConstAssignSingle(
          ConstAssign(
           jedan
            NumberConst(
             1
            ) [NumberConst]
          ) [ConstAssign]
        ) [ConstAssignSingle]
      ) [ConstDeclarationExpr]
    ) [ConstDeclaration]
  ) [AllDeclListMultiple]
  MethodDeclListMultiple(
    MethodDeclListMultiple(
      MethodDeclListNo(
      ) [MethodDeclListNo]
      MethodDeclaration(
        MethodSignatureVarArgsOnly(
          MethodTypeType(
            Type(
             int
            ) [Type]
          ) [MethodTypeType]
          MethodName(
           sum
          ) [MethodName]
          Type(
           int
          ) [Type]
          VarArgsDeclaration(
           args
          ) [VarArgsDeclaration]
          FormParsEnd(
          ) [FormParsEnd]
        ) [MethodSignatureVarArgsOnly]
        VarDeclOptionTrue(
          NoVarDeclOption(
          ) [NoVarDeclOption]
          VarDeclarationExpr(
            Type(
             int
            ) [Type]
            VarDeclListMultiple(
              VarDeclListSingle(
                VarDeclSingle(
                 z
                  NoArray(
                  ) [NoArray]
                ) [VarDeclSingle]
              ) [VarDeclListSingle]
              VarDeclSingle(
               d
                NoArray(
                ) [NoArray]
              ) [VarDeclSingle]
            ) [VarDeclListMultiple]
          ) [VarDeclarationExpr]
        ) [VarDeclOptionTrue]
        StatementListMultiple(
          StatementListMultiple(
            StatementListMultiple(
              StatementListNo(
              ) [StatementListNo]
              StatementSingle(
                SingleDesignatorStatement(
                  DesignatorStmtAssign(
                    DesignatorStmtAssignCorrect(
                      IdentDesignator(
                       z
                      ) [IdentDesignator]
                      SingleTermExprPositive(
                        SingleFactorTerm(
                          DesignatorEmptyFactor(
                            IdentArrayDesignator(
                             args
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  NumConstFactor(
                                   0
                                  ) [NumConstFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [IdentArrayDesignator]
                          ) [DesignatorEmptyFactor]
                        ) [SingleFactorTerm]
                      ) [SingleTermExprPositive]
                    ) [DesignatorStmtAssignCorrect]
                  ) [DesignatorStmtAssign]
                ) [SingleDesignatorStatement]
              ) [StatementSingle]
            ) [StatementListMultiple]
            StatementSingle(
              SingleDesignatorStatement(
                DesignatorStmtAssign(
                  DesignatorStmtAssignCorrect(
                    IdentDesignator(
                     d
                    ) [IdentDesignator]
                    SingleTermExprPositive(
                      SingleFactorTerm(
                        DesignatorEmptyFactor(
                          IdentArrayDesignator(
                           args
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                NumConstFactor(
                                 1
                                ) [NumConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [IdentArrayDesignator]
                        ) [DesignatorEmptyFactor]
                      ) [SingleFactorTerm]
                    ) [SingleTermExprPositive]
                  ) [DesignatorStmtAssignCorrect]
                ) [DesignatorStmtAssign]
              ) [SingleDesignatorStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
          StatementSingle(
            SingleReturnExprStatement(
              MultiTermExpr(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    DesignatorEmptyFactor(
                      IdentDesignator(
                       z
                      ) [IdentDesignator]
                    ) [DesignatorEmptyFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
                AddopPlus(
                ) [AddopPlus]
                SingleFactorTerm(
                  DesignatorEmptyFactor(
                    IdentDesignator(
                     d
                    ) [IdentDesignator]
                  ) [DesignatorEmptyFactor]
                ) [SingleFactorTerm]
              ) [MultiTermExpr]
            ) [SingleReturnExprStatement]
          ) [StatementSingle]
        ) [StatementListMultiple]
      ) [MethodDeclaration]
    ) [MethodDeclListMultiple]
    MethodDeclaration(
      MethodSignaturePlain(
        MethodTypeVoid(
        ) [MethodTypeVoid]
        MethodName(
         main
        ) [MethodName]
      ) [MethodSignaturePlain]
      NoVarDeclOption(
      ) [NoVarDeclOption]
      StatementListMultiple(
        StatementListNo(
        ) [StatementListNo]
        StatementSingle(
          SinglePrintStatement(
            SingleTermExprPositive(
              SingleFactorTerm(
                MethodCallFactor(
                  MethodCall(
                    IdentDesignator(
                     sum
                    ) [IdentDesignator]
                    ActParsLeftParen(
                    ) [ActParsLeftParen]
                    ActParsYes(
                      ActParsMultiExpr(
                        ActParsMultiExpr(
                          ActParsSingleExpr(
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                NumConstFactor(
                                 1
                                ) [NumConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [ActParsSingleExpr]
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              NumConstFactor(
                               2
                              ) [NumConstFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [ActParsMultiExpr]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            NumConstFactor(
                             3
                            ) [NumConstFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [ActParsMultiExpr]
                    ) [ActParsYes]
                    ActParsRightParen(
                    ) [ActParsRightParen]
                  ) [MethodCall]
                ) [MethodCallFactor]
              ) [SingleFactorTerm]
            ) [SingleTermExprPositive]
            NumConstNo(
            ) [NumConstNo]
          ) [SinglePrintStatement]
        ) [StatementSingle]
      ) [StatementListMultiple]
    ) [MethodDeclaration]
  ) [MethodDeclListMultiple]
) [Program]
INFO  21:55:51,968 - ===================================
INFO  21:55:51,971 - Line 12: Access to array element detected. Array name: args
INFO  21:55:51,971 - Line 13: Access to array element detected. Array name: args
INFO  21:55:51,971 - Line 20: Method Call detected. Method name: sum
INFO  21:55:51,971 - Method sum has varArgs with 3 args
INFO  21:55:51,971 - Compile successful!
INFO  21:56:11,829 - Compiling source file: D:\source\repos\PP_Projekat\MicroJavaCompiler\test\program.mj
INFO  21:56:11,846 - #2 program
INFO  21:56:11,846 - #49 test302
INFO  21:56:11,846 - #7 const
INFO  21:56:11,847 - #49 int
INFO  21:56:11,847 - #49 jedan
INFO  21:56:11,847 - #27 =
INFO  21:56:11,847 - #52 1
INFO  21:56:11,847 - #38 ;
INFO  21:56:11,847 - #49 int
INFO  21:56:11,847 - #49 i
INFO  21:56:11,847 - #38 ;
INFO  21:56:11,848 - #49 bool
INFO  21:56:11,848 - #49 ibool
INFO  21:56:11,848 - #38 ;
INFO  21:56:11,848 - #49 int
INFO  21:56:11,848 - #49 niz2
INFO  21:56:11,848 - #38 ;
INFO  21:56:11,848 - #49 int
INFO  21:56:11,848 - #49 niz
INFO  21:56:11,848 - #42 [
INFO  21:56:11,848 - #43 ]
INFO  21:56:11,848 - #38 ;
INFO  21:56:11,848 - #49 int
INFO  21:56:11,849 - #49 a
INFO  21:56:11,849 - #38 ;
INFO  21:56:11,849 - #44 {
INFO  21:56:11,849 - #49 int
INFO  21:56:11,849 - #49 sum
INFO  21:56:11,849 - #40 (
INFO  21:56:11,849 - #49 int
INFO  21:56:11,849 - #47 .
INFO  21:56:11,849 - #47 .
INFO  21:56:11,849 - #47 .
INFO  21:56:11,849 - #49 args
INFO  21:56:11,849 - #41 )
INFO  21:56:11,849 - #49 int
INFO  21:56:11,850 - #49 z
INFO  21:56:11,850 - #39 ,
INFO  21:56:11,850 - #49 d
INFO  21:56:11,850 - #38 ;
INFO  21:56:11,850 - #44 {
INFO  21:56:11,850 - #49 z
INFO  21:56:11,851 - #27 =
INFO  21:56:11,851 - #49 args
INFO  21:56:11,851 - #42 [
INFO  21:56:11,851 - #52 0
INFO  21:56:11,851 - #43 ]
INFO  21:56:11,851 - #38 ;
INFO  21:56:11,851 - #49 d
INFO  21:56:11,851 - #27 =
INFO  21:56:11,851 - #49 args
INFO  21:56:11,851 - #42 [
INFO  21:56:11,851 - #52 1
INFO  21:56:11,851 - #43 ]
INFO  21:56:11,851 - #38 ;
INFO  21:56:11,852 - #15 return
INFO  21:56:11,852 - #49 z
INFO  21:56:11,852 - #22 +
INFO  21:56:11,852 - #49 d
INFO  21:56:11,852 - #38 ;
INFO  21:56:11,852 - #45 }
INFO  21:56:11,852 - #14 void
INFO  21:56:11,852 - #49 printArgs
INFO  21:56:11,853 - #40 (
INFO  21:56:11,853 - #49 int
INFO  21:56:11,853 - #49 num
INFO  21:56:11,853 - #39 ,
INFO  21:56:11,853 - #49 char
INFO  21:56:11,853 - #47 .
INFO  21:56:11,853 - #47 .
INFO  21:56:11,853 - #47 .
INFO  21:56:11,853 - #49 args
INFO  21:56:11,853 - #41 )
INFO  21:56:11,853 - #49 int
INFO  21:56:11,853 - #49 i
INFO  21:56:11,853 - #38 ;
INFO  21:56:11,853 - #44 {
INFO  21:56:11,853 - #49 i
INFO  21:56:11,853 - #27 =
INFO  21:56:11,853 - #52 0
INFO  21:56:11,853 - #38 ;
INFO  21:56:11,853 - #9 do
INFO  21:56:11,853 - #44 {
INFO  21:56:11,853 - #12 print
INFO  21:56:11,853 - #40 (
INFO  21:56:11,854 - #49 args
INFO  21:56:11,854 - #42 [
INFO  21:56:11,854 - #49 i
INFO  21:56:11,854 - #43 ]
INFO  21:56:11,854 - #41 )
INFO  21:56:11,854 - #38 ;
INFO  21:56:11,854 - #49 i
INFO  21:56:11,854 - #36 ++
INFO  21:56:11,854 - #38 ;
INFO  21:56:11,854 - #45 }
INFO  21:56:11,854 - #10 while
INFO  21:56:11,854 - #40 (
INFO  21:56:11,854 - #49 i
INFO  21:56:11,854 - #32 <
INFO  21:56:11,854 - #49 num
INFO  21:56:11,855 - #41 )
INFO  21:56:11,855 - #38 ;
INFO  21:56:11,855 - #45 }
INFO  21:56:11,855 - #49 int
INFO  21:56:11,855 - #49 inkrement
INFO  21:56:11,855 - #40 (
INFO  21:56:11,855 - #49 int
INFO  21:56:11,855 - #49 a
INFO  21:56:11,855 - #39 ,
INFO  21:56:11,855 - #49 int
INFO  21:56:11,855 - #49 inc
INFO  21:56:11,855 - #41 )
INFO  21:56:11,855 - #49 int
INFO  21:56:11,855 - #49 pom
INFO  21:56:11,855 - #38 ;
INFO  21:56:11,855 - #44 {
INFO  21:56:11,855 - #5 if
INFO  21:56:11,855 - #40 (
INFO  21:56:11,855 - #49 inc
INFO  21:56:11,856 - #28 ==
INFO  21:56:11,856 - #49 jedan
INFO  21:56:11,856 - #41 )
INFO  21:56:11,856 - #49 pom
INFO  21:56:11,856 - #27 =
INFO  21:56:11,856 - #52 1
INFO  21:56:11,856 - #38 ;
INFO  21:56:11,856 - #6 else
INFO  21:56:11,856 - #5 if
INFO  21:56:11,856 - #40 (
INFO  21:56:11,856 - #49 inc
INFO  21:56:11,856 - #28 ==
INFO  21:56:11,856 - #52 2
INFO  21:56:11,856 - #41 )
INFO  21:56:11,856 - #49 pom
INFO  21:56:11,856 - #27 =
INFO  21:56:11,856 - #49 a
INFO  21:56:11,856 - #38 ;
INFO  21:56:11,856 - #15 return
INFO  21:56:11,857 - #49 sum
INFO  21:56:11,857 - #40 (
INFO  21:56:11,857 - #49 a
INFO  21:56:11,857 - #39 ,
INFO  21:56:11,857 - #49 pom
INFO  21:56:11,857 - #41 )
INFO  21:56:11,857 - #38 ;
INFO  21:56:11,857 - #45 }
INFO  21:56:11,857 - #49 bool
INFO  21:56:11,857 - #49 verify
INFO  21:56:11,857 - #40 (
INFO  21:56:11,857 - #41 )
INFO  21:56:11,857 - #44 {
INFO  21:56:11,857 - #12 print
INFO  21:56:11,858 - #40 (
INFO  21:56:11,858 - #51 v
INFO  21:56:11,858 - #41 )
INFO  21:56:11,858 - #38 ;
INFO  21:56:11,858 - #15 return
INFO  21:56:11,858 - #50 false
INFO  21:56:11,858 - #38 ;
INFO  21:56:11,858 - #45 }
INFO  21:56:11,858 - #14 void
INFO  21:56:11,858 - #49 main
INFO  21:56:11,858 - #40 (
INFO  21:56:11,858 - #41 )
INFO  21:56:11,858 - #44 {
INFO  21:56:11,858 - #5 if
INFO  21:56:11,858 - #40 (
INFO  21:56:11,858 - #52 1
INFO  21:56:11,858 - #29 !=
INFO  21:56:11,858 - #52 1
INFO  21:56:11,858 - #41 )
INFO  21:56:11,858 - #12 print
INFO  21:56:11,858 - #40 (
INFO  21:56:11,858 - #23 -
INFO  21:56:11,858 - #52 6
INFO  21:56:11,858 - #41 )
INFO  21:56:11,858 - #38 ;
INFO  21:56:11,858 - #6 else
INFO  21:56:11,858 - #12 print
INFO  21:56:11,858 - #40 (
INFO  21:56:11,858 - #52 0
INFO  21:56:11,858 - #41 )
INFO  21:56:11,858 - #38 ;
INFO  21:56:11,858 - #49 ibool
INFO  21:56:11,858 - #27 =
INFO  21:56:11,858 - #50 false
INFO  21:56:11,858 - #38 ;
INFO  21:56:11,858 - #49 i
INFO  21:56:11,859 - #27 =
INFO  21:56:11,859 - #52 0
INFO  21:56:11,859 - #38 ;
INFO  21:56:11,859 - #9 do
INFO  21:56:11,859 - #44 {
INFO  21:56:11,859 - #5 if
INFO  21:56:11,859 - #40 (
INFO  21:56:11,859 - #49 i
INFO  21:56:11,859 - #28 ==
INFO  21:56:11,859 - #52 2
INFO  21:56:11,859 - #41 )
INFO  21:56:11,859 - #49 ibool
INFO  21:56:11,859 - #27 =
INFO  21:56:11,859 - #50 true
INFO  21:56:11,859 - #38 ;
INFO  21:56:11,859 - #49 i
INFO  21:56:11,859 - #36 ++
INFO  21:56:11,859 - #38 ;
INFO  21:56:11,859 - #45 }
INFO  21:56:11,859 - #10 while
INFO  21:56:11,859 - #40 (
INFO  21:56:11,859 - #49 i
INFO  21:56:11,859 - #32 <
INFO  21:56:11,859 - #52 5
INFO  21:56:11,859 - #41 )
INFO  21:56:11,859 - #38 ;
INFO  21:56:11,859 - #5 if
INFO  21:56:11,859 - #40 (
INFO  21:56:11,859 - #49 ibool
INFO  21:56:11,859 - #41 )
INFO  21:56:11,859 - #5 if
INFO  21:56:11,859 - #40 (
INFO  21:56:11,859 - #49 i
INFO  21:56:11,859 - #28 ==
INFO  21:56:11,859 - #52 5
INFO  21:56:11,859 - #41 )
INFO  21:56:11,859 - #12 print
INFO  21:56:11,859 - #40 (
INFO  21:56:11,860 - #52 1
INFO  21:56:11,860 - #41 )
INFO  21:56:11,860 - #38 ;
INFO  21:56:11,860 - #6 else
INFO  21:56:11,860 - #12 print
INFO  21:56:11,860 - #40 (
INFO  21:56:11,860 - #23 -
INFO  21:56:11,860 - #52 1
INFO  21:56:11,860 - #41 )
INFO  21:56:11,860 - #38 ;
INFO  21:56:11,860 - #49 a
INFO  21:56:11,860 - #27 =
INFO  21:56:11,860 - #52 2
INFO  21:56:11,860 - #38 ;
INFO  21:56:11,860 - #49 niz
INFO  21:56:11,860 - #27 =
INFO  21:56:11,860 - #11 new
INFO  21:56:11,860 - #49 int
INFO  21:56:11,860 - #42 [
INFO  21:56:11,860 - #52 3
INFO  21:56:11,860 - #43 ]
INFO  21:56:11,860 - #38 ;
INFO  21:56:11,860 - #49 niz
INFO  21:56:11,860 - #42 [
INFO  21:56:11,860 - #52 0
INFO  21:56:11,860 - #43 ]
INFO  21:56:11,860 - #27 =
INFO  21:56:11,860 - #52 1
INFO  21:56:11,860 - #24 *
INFO  21:56:11,860 - #49 a
INFO  21:56:11,861 - #38 ;
INFO  21:56:11,861 - #49 niz
INFO  21:56:11,861 - #42 [
INFO  21:56:11,861 - #52 1
INFO  21:56:11,861 - #43 ]
INFO  21:56:11,861 - #27 =
INFO  21:56:11,861 - #52 2
INFO  21:56:11,861 - #24 *
INFO  21:56:11,861 - #49 a
INFO  21:56:11,861 - #38 ;
INFO  21:56:11,861 - #49 niz
INFO  21:56:11,861 - #42 [
INFO  21:56:11,861 - #52 2
INFO  21:56:11,861 - #43 ]
INFO  21:56:11,861 - #27 =
INFO  21:56:11,861 - #49 sum
INFO  21:56:11,861 - #40 (
INFO  21:56:11,861 - #49 niz
INFO  21:56:11,861 - #42 [
INFO  21:56:11,861 - #52 1
INFO  21:56:11,861 - #43 ]
INFO  21:56:11,861 - #39 ,
INFO  21:56:11,861 - #49 niz
INFO  21:56:11,861 - #42 [
INFO  21:56:11,861 - #52 0
INFO  21:56:11,861 - #43 ]
INFO  21:56:11,861 - #41 )
INFO  21:56:11,861 - #24 *
INFO  21:56:11,861 - #49 a
INFO  21:56:11,861 - #22 +
INFO  21:56:11,861 - #52 1
INFO  21:56:11,861 - #38 ;
INFO  21:56:11,861 - #5 if
INFO  21:56:11,861 - #40 (
INFO  21:56:11,861 - #49 verify
INFO  21:56:11,861 - #40 (
INFO  21:56:11,861 - #41 )
INFO  21:56:11,861 - #35 ||
INFO  21:56:11,862 - #49 niz
INFO  21:56:11,862 - #42 [
INFO  21:56:11,862 - #52 2
INFO  21:56:11,862 - #43 ]
INFO  21:56:11,862 - #28 ==
INFO  21:56:11,862 - #52 4
INFO  21:56:11,862 - #41 )
INFO  21:56:11,862 - #12 print
INFO  21:56:11,862 - #40 (
INFO  21:56:11,862 - #49 ord
INFO  21:56:11,862 - #40 (
INFO  21:56:11,862 - #51 A
INFO  21:56:11,862 - #41 )
INFO  21:56:11,862 - #41 )
INFO  21:56:11,862 - #38 ;
INFO  21:56:11,862 - #6 else
INFO  21:56:11,862 - #12 print
INFO  21:56:11,862 - #40 (
INFO  21:56:11,862 - #49 ord
INFO  21:56:11,862 - #40 (
INFO  21:56:11,862 - #51 a
INFO  21:56:11,862 - #41 )
INFO  21:56:11,862 - #41 )
INFO  21:56:11,862 - #38 ;
INFO  21:56:11,862 - #12 print
INFO  21:56:11,862 - #40 (
INFO  21:56:11,862 - #49 eol
INFO  21:56:11,862 - #41 )
INFO  21:56:11,862 - #38 ;
INFO  21:56:11,862 - #49 i
INFO  21:56:11,862 - #27 =
INFO  21:56:11,862 - #52 0
INFO  21:56:11,862 - #38 ;
INFO  21:56:11,862 - #9 do
INFO  21:56:11,862 - #44 {
INFO  21:56:11,862 - #5 if
INFO  21:56:11,862 - #40 (
INFO  21:56:11,862 - #49 i
INFO  21:56:11,862 - #28 ==
INFO  21:56:11,862 - #52 3
INFO  21:56:11,862 - #41 )
INFO  21:56:11,862 - #44 {
INFO  21:56:11,862 - #49 i
INFO  21:56:11,862 - #36 ++
INFO  21:56:11,862 - #38 ;
INFO  21:56:11,862 - #4 continue
INFO  21:56:11,862 - #38 ;
INFO  21:56:11,862 - #45 }
INFO  21:56:11,862 - #5 if
INFO  21:56:11,862 - #40 (
INFO  21:56:11,862 - #49 i
INFO  21:56:11,862 - #28 ==
INFO  21:56:11,862 - #52 4
INFO  21:56:11,862 - #41 )
INFO  21:56:11,862 - #3 break
INFO  21:56:11,862 - #38 ;
INFO  21:56:11,862 - #49 i
INFO  21:56:11,862 - #27 =
INFO  21:56:11,862 - #49 inkrement
INFO  21:56:11,862 - #40 (
INFO  21:56:11,862 - #49 i
INFO  21:56:11,862 - #39 ,
INFO  21:56:11,862 - #52 1
INFO  21:56:11,862 - #41 )
INFO  21:56:11,862 - #38 ;
INFO  21:56:11,863 - #45 }
INFO  21:56:11,863 - #10 while
INFO  21:56:11,863 - #40 (
INFO  21:56:11,863 - #49 i
INFO  21:56:11,863 - #32 <
INFO  21:56:11,863 - #52 10
INFO  21:56:11,863 - #41 )
INFO  21:56:11,863 - #38 ;
INFO  21:56:11,863 - #5 if
INFO  21:56:11,863 - #40 (
INFO  21:56:11,863 - #49 i
INFO  21:56:11,863 - #28 ==
INFO  21:56:11,863 - #52 3
INFO  21:56:11,863 - #34 &&
INFO  21:56:11,863 - #49 verify
INFO  21:56:11,863 - #40 (
INFO  21:56:11,863 - #41 )
INFO  21:56:11,863 - #41 )
INFO  21:56:11,863 - #12 print
INFO  21:56:11,863 - #40 (
INFO  21:56:11,863 - #23 -
INFO  21:56:11,863 - #52 4
INFO  21:56:11,863 - #41 )
INFO  21:56:11,863 - #38 ;
INFO  21:56:11,863 - #6 else
INFO  21:56:11,863 - #12 print
INFO  21:56:11,863 - #40 (
INFO  21:56:11,863 - #52 4
INFO  21:56:11,863 - #41 )
INFO  21:56:11,863 - #38 ;
INFO  21:56:11,863 - #13 read
INFO  21:56:11,863 - #40 (
INFO  21:56:11,863 - #49 niz
INFO  21:56:11,863 - #42 [
INFO  21:56:11,863 - #52 0
INFO  21:56:11,863 - #43 ]
INFO  21:56:11,863 - #41 )
INFO  21:56:11,863 - #38 ;
INFO  21:56:11,863 - #13 read
INFO  21:56:11,863 - #40 (
INFO  21:56:11,863 - #49 niz
INFO  21:56:11,863 - #42 [
INFO  21:56:11,863 - #52 1
INFO  21:56:11,863 - #43 ]
INFO  21:56:11,863 - #41 )
INFO  21:56:11,863 - #38 ;
INFO  21:56:11,863 - #13 read
INFO  21:56:11,863 - #40 (
INFO  21:56:11,863 - #49 niz
INFO  21:56:11,863 - #42 [
INFO  21:56:11,863 - #52 2
INFO  21:56:11,863 - #43 ]
INFO  21:56:11,863 - #41 )
INFO  21:56:11,863 - #38 ;
INFO  21:56:11,863 - #12 print
INFO  21:56:11,863 - #40 (
INFO  21:56:11,863 - #49 eol
INFO  21:56:11,863 - #41 )
INFO  21:56:11,863 - #38 ;
INFO  21:56:11,863 - #12 print
INFO  21:56:11,863 - #40 (
INFO  21:56:11,863 - #49 sum
INFO  21:56:11,863 - #40 (
INFO  21:56:11,863 - #49 sum
INFO  21:56:11,863 - #40 (
INFO  21:56:11,863 - #49 niz
INFO  21:56:11,863 - #42 [
INFO  21:56:11,863 - #52 0
INFO  21:56:11,863 - #43 ]
INFO  21:56:11,863 - #39 ,
INFO  21:56:11,863 - #49 niz
INFO  21:56:11,863 - #42 [
INFO  21:56:11,863 - #52 1
INFO  21:56:11,863 - #43 ]
INFO  21:56:11,863 - #41 )
INFO  21:56:11,863 - #39 ,
INFO  21:56:11,863 - #49 niz
INFO  21:56:11,863 - #42 [
INFO  21:56:11,863 - #52 2
INFO  21:56:11,863 - #43 ]
INFO  21:56:11,863 - #41 )
INFO  21:56:11,863 - #41 )
INFO  21:56:11,863 - #38 ;
INFO  21:56:11,863 - #12 print
INFO  21:56:11,863 - #40 (
INFO  21:56:11,863 - #49 eol
INFO  21:56:11,863 - #41 )
INFO  21:56:11,863 - #38 ;
INFO  21:56:11,863 - #12 print
INFO  21:56:11,863 - #40 (
INFO  21:56:11,863 - #49 inkrement
INFO  21:56:11,863 - #40 (
INFO  21:56:11,863 - #49 niz
INFO  21:56:11,863 - #42 [
INFO  21:56:11,863 - #52 2
INFO  21:56:11,863 - #43 ]
INFO  21:56:11,863 - #39 ,
INFO  21:56:11,863 - #52 2
INFO  21:56:11,863 - #41 )
INFO  21:56:11,863 - #41 )
INFO  21:56:11,863 - #38 ;
INFO  21:56:11,864 - #49 a
INFO  21:56:11,864 - #27 =
INFO  21:56:11,864 - #52 3
INFO  21:56:11,864 - #38 ;
INFO  21:56:11,864 - #49 i
INFO  21:56:11,864 - #27 =
INFO  21:56:11,864 - #52 0
INFO  21:56:11,864 - #38 ;
INFO  21:56:11,864 - #9 do
INFO  21:56:11,864 - #44 {
INFO  21:56:11,864 - #49 niz
INFO  21:56:11,864 - #42 [
INFO  21:56:11,864 - #49 i
INFO  21:56:11,864 - #43 ]
INFO  21:56:11,864 - #27 =
INFO  21:56:11,864 - #49 niz
INFO  21:56:11,864 - #42 [
INFO  21:56:11,864 - #49 i
INFO  21:56:11,864 - #43 ]
INFO  21:56:11,864 - #24 *
INFO  21:56:11,864 - #52 2
INFO  21:56:11,864 - #24 *
INFO  21:56:11,864 - #49 a
INFO  21:56:11,864 - #38 ;
INFO  21:56:11,864 - #49 i
INFO  21:56:11,864 - #36 ++
INFO  21:56:11,864 - #38 ;
INFO  21:56:11,864 - #45 }
INFO  21:56:11,864 - #10 while
INFO  21:56:11,864 - #40 (
INFO  21:56:11,864 - #49 i
INFO  21:56:11,864 - #32 <
INFO  21:56:11,864 - #52 3
INFO  21:56:11,864 - #41 )
INFO  21:56:11,864 - #38 ;
INFO  21:56:11,864 - #12 print
INFO  21:56:11,864 - #40 (
INFO  21:56:11,864 - #49 niz
INFO  21:56:11,864 - #42 [
INFO  21:56:11,864 - #52 0
INFO  21:56:11,864 - #43 ]
INFO  21:56:11,864 - #41 )
INFO  21:56:11,864 - #38 ;
INFO  21:56:11,864 - #12 print
INFO  21:56:11,864 - #40 (
INFO  21:56:11,864 - #49 niz
INFO  21:56:11,864 - #42 [
INFO  21:56:11,864 - #52 1
INFO  21:56:11,864 - #43 ]
INFO  21:56:11,864 - #41 )
INFO  21:56:11,864 - #38 ;
INFO  21:56:11,864 - #12 print
INFO  21:56:11,864 - #40 (
INFO  21:56:11,864 - #49 niz
INFO  21:56:11,864 - #42 [
INFO  21:56:11,864 - #52 2
INFO  21:56:11,864 - #43 ]
INFO  21:56:11,864 - #41 )
INFO  21:56:11,864 - #38 ;
INFO  21:56:11,864 - #12 print
INFO  21:56:11,864 - #40 (
INFO  21:56:11,864 - #49 eol
INFO  21:56:11,864 - #41 )
INFO  21:56:11,864 - #38 ;
INFO  21:56:11,864 - #49 i
INFO  21:56:11,864 - #27 =
INFO  21:56:11,864 - #52 0
INFO  21:56:11,864 - #38 ;
INFO  21:56:11,864 - #49 niz2
INFO  21:56:11,864 - #27 =
INFO  21:56:11,864 - #52 0
INFO  21:56:11,864 - #38 ;
INFO  21:56:11,864 - #9 do
INFO  21:56:11,864 - #44 {
INFO  21:56:11,864 - #49 niz2
INFO  21:56:11,864 - #27 =
INFO  21:56:11,864 - #49 niz2
INFO  21:56:11,864 - #22 +
INFO  21:56:11,864 - #49 niz
INFO  21:56:11,864 - #42 [
INFO  21:56:11,864 - #49 i
INFO  21:56:11,864 - #43 ]
INFO  21:56:11,864 - #24 *
INFO  21:56:11,864 - #49 niz
INFO  21:56:11,864 - #42 [
INFO  21:56:11,864 - #49 i
INFO  21:56:11,864 - #43 ]
INFO  21:56:11,864 - #38 ;
INFO  21:56:11,864 - #49 i
INFO  21:56:11,864 - #36 ++
INFO  21:56:11,864 - #38 ;
INFO  21:56:11,864 - #45 }
INFO  21:56:11,864 - #10 while
INFO  21:56:11,864 - #40 (
INFO  21:56:11,864 - #49 i
INFO  21:56:11,864 - #32 <
INFO  21:56:11,864 - #52 3
INFO  21:56:11,864 - #41 )
INFO  21:56:11,864 - #38 ;
INFO  21:56:11,864 - #12 print
INFO  21:56:11,864 - #40 (
INFO  21:56:11,864 - #49 niz2
INFO  21:56:11,864 - #41 )
INFO  21:56:11,864 - #38 ;
INFO  21:56:11,864 - #12 print
INFO  21:56:11,864 - #40 (
INFO  21:56:11,864 - #49 eol
INFO  21:56:11,864 - #41 )
INFO  21:56:11,864 - #38 ;
INFO  21:56:11,864 - #49 printArgs
INFO  21:56:11,864 - #40 (
INFO  21:56:11,864 - #52 5
INFO  21:56:11,864 - #39 ,
INFO  21:56:11,864 - #51 t
INFO  21:56:11,864 - #39 ,
INFO  21:56:11,864 - #51 e
INFO  21:56:11,864 - #39 ,
INFO  21:56:11,864 - #51 s
INFO  21:56:11,864 - #39 ,
INFO  21:56:11,864 - #51 t
INFO  21:56:11,865 - #39 ,
INFO  21:56:11,865 - #51 B
INFO  21:56:11,865 - #41 )
INFO  21:56:11,865 - #38 ;
INFO  21:56:11,865 - #45 }
INFO  21:56:11,865 - #45 }
INFO  21:56:11,870 - Program(
  ProgramName(
   test302
  ) [ProgramName]
  AllDeclListMultiple(
    AllDeclListMultiple(
      AllDeclListMultiple(
        AllDeclListMultiple(
          AllDeclListMultiple(
            AllDeclListMultiple(
              NoDecl(
              ) [NoDecl]
              ConstDeclaration(
                ConstDeclarationExpr(
                  Type(
                   int
                  ) [Type]
                  ConstAssignSingle(
                    ConstAssign(
                     jedan
                      NumberConst(
                       1
                      ) [NumberConst]
                    ) [ConstAssign]
                  ) [ConstAssignSingle]
                ) [ConstDeclarationExpr]
              ) [ConstDeclaration]
            ) [AllDeclListMultiple]
            GlobalVarDeclaration(
              GlobalVarDeclarationExpr(
                Type(
                 int
                ) [Type]
                GlobalVarDeclListSingle(
                  GlobalVarDeclarationSingle(
                   i
                    NoArray(
                    ) [NoArray]
                  ) [GlobalVarDeclarationSingle]
                ) [GlobalVarDeclListSingle]
              ) [GlobalVarDeclarationExpr]
            ) [GlobalVarDeclaration]
          ) [AllDeclListMultiple]
          GlobalVarDeclaration(
            GlobalVarDeclarationExpr(
              Type(
               bool
              ) [Type]
              GlobalVarDeclListSingle(
                GlobalVarDeclarationSingle(
                 ibool
                  NoArray(
                  ) [NoArray]
                ) [GlobalVarDeclarationSingle]
              ) [GlobalVarDeclListSingle]
            ) [GlobalVarDeclarationExpr]
          ) [GlobalVarDeclaration]
        ) [AllDeclListMultiple]
        GlobalVarDeclaration(
          GlobalVarDeclarationExpr(
            Type(
             int
            ) [Type]
            GlobalVarDeclListSingle(
              GlobalVarDeclarationSingle(
               niz2
                NoArray(
                ) [NoArray]
              ) [GlobalVarDeclarationSingle]
            ) [GlobalVarDeclListSingle]
          ) [GlobalVarDeclarationExpr]
        ) [GlobalVarDeclaration]
      ) [AllDeclListMultiple]
      GlobalVarDeclaration(
        GlobalVarDeclarationExpr(
          Type(
           int
          ) [Type]
          GlobalVarDeclListSingle(
            GlobalVarDeclarationSingle(
             niz
              ArrayBrackets(
              ) [ArrayBrackets]
            ) [GlobalVarDeclarationSingle]
          ) [GlobalVarDeclListSingle]
        ) [GlobalVarDeclarationExpr]
      ) [GlobalVarDeclaration]
    ) [AllDeclListMultiple]
    GlobalVarDeclaration(
      GlobalVarDeclarationExpr(
        Type(
         int
        ) [Type]
        GlobalVarDeclListSingle(
          GlobalVarDeclarationSingle(
           a
            NoArray(
            ) [NoArray]
          ) [GlobalVarDeclarationSingle]
        ) [GlobalVarDeclListSingle]
      ) [GlobalVarDeclarationExpr]
    ) [GlobalVarDeclaration]
  ) [AllDeclListMultiple]
  MethodDeclListMultiple(
    MethodDeclListMultiple(
      MethodDeclListMultiple(
        MethodDeclListMultiple(
          MethodDeclListMultiple(
            MethodDeclListNo(
            ) [MethodDeclListNo]
            MethodDeclaration(
              MethodSignatureVarArgsOnly(
                MethodTypeType(
                  Type(
                   int
                  ) [Type]
                ) [MethodTypeType]
                MethodName(
                 sum
                ) [MethodName]
                Type(
                 int
                ) [Type]
                VarArgsDeclaration(
                 args
                ) [VarArgsDeclaration]
                FormParsEnd(
                ) [FormParsEnd]
              ) [MethodSignatureVarArgsOnly]
              VarDeclOptionTrue(
                NoVarDeclOption(
                ) [NoVarDeclOption]
                VarDeclarationExpr(
                  Type(
                   int
                  ) [Type]
                  VarDeclListMultiple(
                    VarDeclListSingle(
                      VarDeclSingle(
                       z
                        NoArray(
                        ) [NoArray]
                      ) [VarDeclSingle]
                    ) [VarDeclListSingle]
                    VarDeclSingle(
                     d
                      NoArray(
                      ) [NoArray]
                    ) [VarDeclSingle]
                  ) [VarDeclListMultiple]
                ) [VarDeclarationExpr]
              ) [VarDeclOptionTrue]
              StatementListMultiple(
                StatementListMultiple(
                  StatementListMultiple(
                    StatementListNo(
                    ) [StatementListNo]
                    StatementSingle(
                      SingleDesignatorStatement(
                        DesignatorStmtAssign(
                          DesignatorStmtAssignCorrect(
                            IdentDesignator(
                             z
                            ) [IdentDesignator]
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                DesignatorEmptyFactor(
                                  IdentArrayDesignator(
                                   args
                                    SingleTermExprPositive(
                                      SingleFactorTerm(
                                        NumConstFactor(
                                         0
                                        ) [NumConstFactor]
                                      ) [SingleFactorTerm]
                                    ) [SingleTermExprPositive]
                                  ) [IdentArrayDesignator]
                                ) [DesignatorEmptyFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [DesignatorStmtAssignCorrect]
                        ) [DesignatorStmtAssign]
                      ) [SingleDesignatorStatement]
                    ) [StatementSingle]
                  ) [StatementListMultiple]
                  StatementSingle(
                    SingleDesignatorStatement(
                      DesignatorStmtAssign(
                        DesignatorStmtAssignCorrect(
                          IdentDesignator(
                           d
                          ) [IdentDesignator]
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              DesignatorEmptyFactor(
                                IdentArrayDesignator(
                                 args
                                  SingleTermExprPositive(
                                    SingleFactorTerm(
                                      NumConstFactor(
                                       1
                                      ) [NumConstFactor]
                                    ) [SingleFactorTerm]
                                  ) [SingleTermExprPositive]
                                ) [IdentArrayDesignator]
                              ) [DesignatorEmptyFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [DesignatorStmtAssignCorrect]
                      ) [DesignatorStmtAssign]
                    ) [SingleDesignatorStatement]
                  ) [StatementSingle]
                ) [StatementListMultiple]
                StatementSingle(
                  SingleReturnExprStatement(
                    MultiTermExpr(
                      SingleTermExprPositive(
                        SingleFactorTerm(
                          DesignatorEmptyFactor(
                            IdentDesignator(
                             z
                            ) [IdentDesignator]
                          ) [DesignatorEmptyFactor]
                        ) [SingleFactorTerm]
                      ) [SingleTermExprPositive]
                      AddopPlus(
                      ) [AddopPlus]
                      SingleFactorTerm(
                        DesignatorEmptyFactor(
                          IdentDesignator(
                           d
                          ) [IdentDesignator]
                        ) [DesignatorEmptyFactor]
                      ) [SingleFactorTerm]
                    ) [MultiTermExpr]
                  ) [SingleReturnExprStatement]
                ) [StatementSingle]
              ) [StatementListMultiple]
            ) [MethodDeclaration]
          ) [MethodDeclListMultiple]
          MethodDeclaration(
            MethodSignatureVarArgs(
              MethodTypeVoid(
              ) [MethodTypeVoid]
              MethodName(
               printArgs
              ) [MethodName]
              FormParsSingle(
                FormParSingle(
                  Type(
                   int
                  ) [Type]
                 num
                  NoArray(
                  ) [NoArray]
                ) [FormParSingle]
              ) [FormParsSingle]
              Type(
               char
              ) [Type]
              VarArgsDeclaration(
               args
              ) [VarArgsDeclaration]
              FormParsEnd(
              ) [FormParsEnd]
            ) [MethodSignatureVarArgs]
            VarDeclOptionTrue(
              NoVarDeclOption(
              ) [NoVarDeclOption]
              VarDeclarationExpr(
                Type(
                 int
                ) [Type]
                VarDeclListSingle(
                  VarDeclSingle(
                   i
                    NoArray(
                    ) [NoArray]
                  ) [VarDeclSingle]
                ) [VarDeclListSingle]
              ) [VarDeclarationExpr]
            ) [VarDeclOptionTrue]
            StatementListMultiple(
              StatementListMultiple(
                StatementListNo(
                ) [StatementListNo]
                StatementSingle(
                  SingleDesignatorStatement(
                    DesignatorStmtAssign(
                      DesignatorStmtAssignCorrect(
                        IdentDesignator(
                         i
                        ) [IdentDesignator]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            NumConstFactor(
                             0
                            ) [NumConstFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [DesignatorStmtAssignCorrect]
                    ) [DesignatorStmtAssign]
                  ) [SingleDesignatorStatement]
                ) [StatementSingle]
              ) [StatementListMultiple]
              StatementSingle(
                DoWhileStatement(
                  DoEnter(
                  ) [DoEnter]
                  StatementListMultiple(
                    StatementListNo(
                    ) [StatementListNo]
                    StatementMultiple(
                      StatementsInBraces(
                        StatementListMultiple(
                          StatementListMultiple(
                            StatementListNo(
                            ) [StatementListNo]
                            StatementSingle(
                              SinglePrintStatement(
                                SingleTermExprPositive(
                                  SingleFactorTerm(
                                    DesignatorEmptyFactor(
                                      IdentArrayDesignator(
                                       args
                                        SingleTermExprPositive(
                                          SingleFactorTerm(
                                            DesignatorEmptyFactor(
                                              IdentDesignator(
                                               i
                                              ) [IdentDesignator]
                                            ) [DesignatorEmptyFactor]
                                          ) [SingleFactorTerm]
                                        ) [SingleTermExprPositive]
                                      ) [IdentArrayDesignator]
                                    ) [DesignatorEmptyFactor]
                                  ) [SingleFactorTerm]
                                ) [SingleTermExprPositive]
                                NumConstNo(
                                ) [NumConstNo]
                              ) [SinglePrintStatement]
                            ) [StatementSingle]
                          ) [StatementListMultiple]
                          StatementSingle(
                            SingleDesignatorStatement(
                              DesignatorStmtPlusPlus(
                                IdentDesignator(
                                 i
                                ) [IdentDesignator]
                              ) [DesignatorStmtPlusPlus]
                            ) [SingleDesignatorStatement]
                          ) [StatementSingle]
                        ) [StatementListMultiple]
                      ) [StatementsInBraces]
                    ) [StatementMultiple]
                  ) [StatementListMultiple]
                  ConditionSingleTerm(
                    CondSingleFactTerm(
                      CondMultiExprFact(
                        CondSingleExprFact(
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              DesignatorEmptyFactor(
                                IdentDesignator(
                                 i
                                ) [IdentDesignator]
                              ) [DesignatorEmptyFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [CondSingleExprFact]
                        RelopLS(
                        ) [RelopLS]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            DesignatorEmptyFactor(
                              IdentDesignator(
                               num
                              ) [IdentDesignator]
                            ) [DesignatorEmptyFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [CondMultiExprFact]
                    ) [CondSingleFactTerm]
                  ) [ConditionSingleTerm]
                ) [DoWhileStatement]
              ) [StatementSingle]
            ) [StatementListMultiple]
          ) [MethodDeclaration]
        ) [MethodDeclListMultiple]
        MethodDeclaration(
          MethodSignatureParams(
            MethodTypeType(
              Type(
               int
              ) [Type]
            ) [MethodTypeType]
            MethodName(
             inkrement
            ) [MethodName]
            FormParsMultiple(
              FormParsSingle(
                FormParSingle(
                  Type(
                   int
                  ) [Type]
                 a
                  NoArray(
                  ) [NoArray]
                ) [FormParSingle]
              ) [FormParsSingle]
              FormParSingle(
                Type(
                 int
                ) [Type]
               inc
                NoArray(
                ) [NoArray]
              ) [FormParSingle]
            ) [FormParsMultiple]
            FormParsEnd(
            ) [FormParsEnd]
          ) [MethodSignatureParams]
          VarDeclOptionTrue(
            NoVarDeclOption(
            ) [NoVarDeclOption]
            VarDeclarationExpr(
              Type(
               int
              ) [Type]
              VarDeclListSingle(
                VarDeclSingle(
                 pom
                  NoArray(
                  ) [NoArray]
                ) [VarDeclSingle]
              ) [VarDeclListSingle]
            ) [VarDeclarationExpr]
          ) [VarDeclOptionTrue]
          StatementListMultiple(
            StatementListMultiple(
              StatementListNo(
              ) [StatementListNo]
              StatementSingle(
                IfElseStatement(
                  IfConditionSingleTerm(
                    CondSingleFactTerm(
                      CondMultiExprFact(
                        CondSingleExprFact(
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              DesignatorEmptyFactor(
                                IdentDesignator(
                                 inc
                                ) [IdentDesignator]
                              ) [DesignatorEmptyFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [CondSingleExprFact]
                        RelopEQUAL(
                        ) [RelopEQUAL]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            DesignatorEmptyFactor(
                              IdentDesignator(
                               jedan
                              ) [IdentDesignator]
                            ) [DesignatorEmptyFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [CondMultiExprFact]
                    ) [CondSingleFactTerm]
                  ) [IfConditionSingleTerm]
                  StatementSingle(
                    SingleDesignatorStatement(
                      DesignatorStmtAssign(
                        DesignatorStmtAssignCorrect(
                          IdentDesignator(
                           pom
                          ) [IdentDesignator]
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              NumConstFactor(
                               1
                              ) [NumConstFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [DesignatorStmtAssignCorrect]
                      ) [DesignatorStmtAssign]
                    ) [SingleDesignatorStatement]
                  ) [StatementSingle]
                  StatementSingle(
                    IfStatement(
                      IfConditionSingleTerm(
                        CondSingleFactTerm(
                          CondMultiExprFact(
                            CondSingleExprFact(
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentDesignator(
                                     inc
                                    ) [IdentDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [CondSingleExprFact]
                            RelopEQUAL(
                            ) [RelopEQUAL]
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                NumConstFactor(
                                 2
                                ) [NumConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [CondMultiExprFact]
                        ) [CondSingleFactTerm]
                      ) [IfConditionSingleTerm]
                      StatementSingle(
                        SingleDesignatorStatement(
                          DesignatorStmtAssign(
                            DesignatorStmtAssignCorrect(
                              IdentDesignator(
                               pom
                              ) [IdentDesignator]
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentDesignator(
                                     a
                                    ) [IdentDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [DesignatorStmtAssignCorrect]
                          ) [DesignatorStmtAssign]
                        ) [SingleDesignatorStatement]
                      ) [StatementSingle]
                    ) [IfStatement]
                  ) [StatementSingle]
                ) [IfElseStatement]
              ) [StatementSingle]
            ) [StatementListMultiple]
            StatementSingle(
              SingleReturnExprStatement(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    MethodCallFactor(
                      MethodCall(
                        IdentDesignator(
                         sum
                        ) [IdentDesignator]
                        ActParsLeftParen(
                        ) [ActParsLeftParen]
                        ActParsYes(
                          ActParsMultiExpr(
                            ActParsSingleExpr(
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentDesignator(
                                     a
                                    ) [IdentDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [ActParsSingleExpr]
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                DesignatorEmptyFactor(
                                  IdentDesignator(
                                   pom
                                  ) [IdentDesignator]
                                ) [DesignatorEmptyFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [ActParsMultiExpr]
                        ) [ActParsYes]
                        ActParsRightParen(
                        ) [ActParsRightParen]
                      ) [MethodCall]
                    ) [MethodCallFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
              ) [SingleReturnExprStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
        ) [MethodDeclaration]
      ) [MethodDeclListMultiple]
      MethodDeclaration(
        MethodSignaturePlain(
          MethodTypeType(
            Type(
             bool
            ) [Type]
          ) [MethodTypeType]
          MethodName(
           verify
          ) [MethodName]
        ) [MethodSignaturePlain]
        NoVarDeclOption(
        ) [NoVarDeclOption]
        StatementListMultiple(
          StatementListMultiple(
            StatementListNo(
            ) [StatementListNo]
            StatementSingle(
              SinglePrintStatement(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    CharConstFactor(
                     v
                    ) [CharConstFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
                NumConstNo(
                ) [NumConstNo]
              ) [SinglePrintStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
          StatementSingle(
            SingleReturnExprStatement(
              SingleTermExprPositive(
                SingleFactorTerm(
                  BoolConstFactor(
                   false
                  ) [BoolConstFactor]
                ) [SingleFactorTerm]
              ) [SingleTermExprPositive]
            ) [SingleReturnExprStatement]
          ) [StatementSingle]
        ) [StatementListMultiple]
      ) [MethodDeclaration]
    ) [MethodDeclListMultiple]
    MethodDeclaration(
      MethodSignaturePlain(
        MethodTypeVoid(
        ) [MethodTypeVoid]
        MethodName(
         main
        ) [MethodName]
      ) [MethodSignaturePlain]
      NoVarDeclOption(
      ) [NoVarDeclOption]
      StatementListMultiple(
        StatementListMultiple(
          StatementListMultiple(
            StatementListMultiple(
              StatementListMultiple(
                StatementListMultiple(
                  StatementListMultiple(
                    StatementListMultiple(
                      StatementListMultiple(
                        StatementListMultiple(
                          StatementListMultiple(
                            StatementListMultiple(
                              StatementListMultiple(
                                StatementListMultiple(
                                  StatementListMultiple(
                                    StatementListMultiple(
                                      StatementListMultiple(
                                        StatementListMultiple(
                                          StatementListMultiple(
                                            StatementListMultiple(
                                              StatementListMultiple(
                                                StatementListMultiple(
                                                  StatementListMultiple(
                                                    StatementListMultiple(
                                                      StatementListMultiple(
                                                        StatementListMultiple(
                                                          StatementListMultiple(
                                                            StatementListMultiple(
                                                              StatementListMultiple(
                                                                StatementListMultiple(
                                                                  StatementListMultiple(
                                                                    StatementListMultiple(
                                                                      StatementListMultiple(
                                                                        StatementListMultiple(
                                                                          StatementListMultiple(
                                                                            StatementListNo(
                                                                            ) [StatementListNo]
                                                                            StatementSingle(
                                                                              IfElseStatement(
                                                                                IfConditionSingleTerm(
                                                                                  CondSingleFactTerm(
                                                                                    CondMultiExprFact(
                                                                                      CondSingleExprFact(
                                                                                        SingleTermExprPositive(
                                                                                          SingleFactorTerm(
                                                                                            NumConstFactor(
                                                                                             1
                                                                                            ) [NumConstFactor]
                                                                                          ) [SingleFactorTerm]
                                                                                        ) [SingleTermExprPositive]
                                                                                      ) [CondSingleExprFact]
                                                                                      RelopNOTEQUAL(
                                                                                      ) [RelopNOTEQUAL]
                                                                                      SingleTermExprPositive(
                                                                                        SingleFactorTerm(
                                                                                          NumConstFactor(
                                                                                           1
                                                                                          ) [NumConstFactor]
                                                                                        ) [SingleFactorTerm]
                                                                                      ) [SingleTermExprPositive]
                                                                                    ) [CondMultiExprFact]
                                                                                  ) [CondSingleFactTerm]
                                                                                ) [IfConditionSingleTerm]
                                                                                StatementSingle(
                                                                                  SinglePrintStatement(
                                                                                    SingleTermExprNegative(
                                                                                      SingleFactorTerm(
                                                                                        NumConstFactor(
                                                                                         6
                                                                                        ) [NumConstFactor]
                                                                                      ) [SingleFactorTerm]
                                                                                    ) [SingleTermExprNegative]
                                                                                    NumConstNo(
                                                                                    ) [NumConstNo]
                                                                                  ) [SinglePrintStatement]
                                                                                ) [StatementSingle]
                                                                                StatementSingle(
                                                                                  SinglePrintStatement(
                                                                                    SingleTermExprPositive(
                                                                                      SingleFactorTerm(
                                                                                        NumConstFactor(
                                                                                         0
                                                                                        ) [NumConstFactor]
                                                                                      ) [SingleFactorTerm]
                                                                                    ) [SingleTermExprPositive]
                                                                                    NumConstNo(
                                                                                    ) [NumConstNo]
                                                                                  ) [SinglePrintStatement]
                                                                                ) [StatementSingle]
                                                                              ) [IfElseStatement]
                                                                            ) [StatementSingle]
                                                                          ) [StatementListMultiple]
                                                                          StatementSingle(
                                                                            SingleDesignatorStatement(
                                                                              DesignatorStmtAssign(
                                                                                DesignatorStmtAssignCorrect(
                                                                                  IdentDesignator(
                                                                                   ibool
                                                                                  ) [IdentDesignator]
                                                                                  SingleTermExprPositive(
                                                                                    SingleFactorTerm(
                                                                                      BoolConstFactor(
                                                                                       false
                                                                                      ) [BoolConstFactor]
                                                                                    ) [SingleFactorTerm]
                                                                                  ) [SingleTermExprPositive]
                                                                                ) [DesignatorStmtAssignCorrect]
                                                                              ) [DesignatorStmtAssign]
                                                                            ) [SingleDesignatorStatement]
                                                                          ) [StatementSingle]
                                                                        ) [StatementListMultiple]
                                                                        StatementSingle(
                                                                          SingleDesignatorStatement(
                                                                            DesignatorStmtAssign(
                                                                              DesignatorStmtAssignCorrect(
                                                                                IdentDesignator(
                                                                                 i
                                                                                ) [IdentDesignator]
                                                                                SingleTermExprPositive(
                                                                                  SingleFactorTerm(
                                                                                    NumConstFactor(
                                                                                     0
                                                                                    ) [NumConstFactor]
                                                                                  ) [SingleFactorTerm]
                                                                                ) [SingleTermExprPositive]
                                                                              ) [DesignatorStmtAssignCorrect]
                                                                            ) [DesignatorStmtAssign]
                                                                          ) [SingleDesignatorStatement]
                                                                        ) [StatementSingle]
                                                                      ) [StatementListMultiple]
                                                                      StatementSingle(
                                                                        DoWhileStatement(
                                                                          DoEnter(
                                                                          ) [DoEnter]
                                                                          StatementListMultiple(
                                                                            StatementListNo(
                                                                            ) [StatementListNo]
                                                                            StatementMultiple(
                                                                              StatementsInBraces(
                                                                                StatementListMultiple(
                                                                                  StatementListMultiple(
                                                                                    StatementListNo(
                                                                                    ) [StatementListNo]
                                                                                    StatementSingle(
                                                                                      IfStatement(
                                                                                        IfConditionSingleTerm(
                                                                                          CondSingleFactTerm(
                                                                                            CondMultiExprFact(
                                                                                              CondSingleExprFact(
                                                                                                SingleTermExprPositive(
                                                                                                  SingleFactorTerm(
                                                                                                    DesignatorEmptyFactor(
                                                                                                      IdentDesignator(
                                                                                                       i
                                                                                                      ) [IdentDesignator]
                                                                                                    ) [DesignatorEmptyFactor]
                                                                                                  ) [SingleFactorTerm]
                                                                                                ) [SingleTermExprPositive]
                                                                                              ) [CondSingleExprFact]
                                                                                              RelopEQUAL(
                                                                                              ) [RelopEQUAL]
                                                                                              SingleTermExprPositive(
                                                                                                SingleFactorTerm(
                                                                                                  NumConstFactor(
                                                                                                   2
                                                                                                  ) [NumConstFactor]
                                                                                                ) [SingleFactorTerm]
                                                                                              ) [SingleTermExprPositive]
                                                                                            ) [CondMultiExprFact]
                                                                                          ) [CondSingleFactTerm]
                                                                                        ) [IfConditionSingleTerm]
                                                                                        StatementSingle(
                                                                                          SingleDesignatorStatement(
                                                                                            DesignatorStmtAssign(
                                                                                              DesignatorStmtAssignCorrect(
                                                                                                IdentDesignator(
                                                                                                 ibool
                                                                                                ) [IdentDesignator]
                                                                                                SingleTermExprPositive(
                                                                                                  SingleFactorTerm(
                                                                                                    BoolConstFactor(
                                                                                                     true
                                                                                                    ) [BoolConstFactor]
                                                                                                  ) [SingleFactorTerm]
                                                                                                ) [SingleTermExprPositive]
                                                                                              ) [DesignatorStmtAssignCorrect]
                                                                                            ) [DesignatorStmtAssign]
                                                                                          ) [SingleDesignatorStatement]
                                                                                        ) [StatementSingle]
                                                                                      ) [IfStatement]
                                                                                    ) [StatementSingle]
                                                                                  ) [StatementListMultiple]
                                                                                  StatementSingle(
                                                                                    SingleDesignatorStatement(
                                                                                      DesignatorStmtPlusPlus(
                                                                                        IdentDesignator(
                                                                                         i
                                                                                        ) [IdentDesignator]
                                                                                      ) [DesignatorStmtPlusPlus]
                                                                                    ) [SingleDesignatorStatement]
                                                                                  ) [StatementSingle]
                                                                                ) [StatementListMultiple]
                                                                              ) [StatementsInBraces]
                                                                            ) [StatementMultiple]
                                                                          ) [StatementListMultiple]
                                                                          ConditionSingleTerm(
                                                                            CondSingleFactTerm(
                                                                              CondMultiExprFact(
                                                                                CondSingleExprFact(
                                                                                  SingleTermExprPositive(
                                                                                    SingleFactorTerm(
                                                                                      DesignatorEmptyFactor(
                                                                                        IdentDesignator(
                                                                                         i
                                                                                        ) [IdentDesignator]
                                                                                      ) [DesignatorEmptyFactor]
                                                                                    ) [SingleFactorTerm]
                                                                                  ) [SingleTermExprPositive]
                                                                                ) [CondSingleExprFact]
                                                                                RelopLS(
                                                                                ) [RelopLS]
                                                                                SingleTermExprPositive(
                                                                                  SingleFactorTerm(
                                                                                    NumConstFactor(
                                                                                     5
                                                                                    ) [NumConstFactor]
                                                                                  ) [SingleFactorTerm]
                                                                                ) [SingleTermExprPositive]
                                                                              ) [CondMultiExprFact]
                                                                            ) [CondSingleFactTerm]
                                                                          ) [ConditionSingleTerm]
                                                                        ) [DoWhileStatement]
                                                                      ) [StatementSingle]
                                                                    ) [StatementListMultiple]
                                                                    StatementSingle(
                                                                      IfStatement(
                                                                        IfConditionSingleTerm(
                                                                          CondSingleFactTerm(
                                                                            CondSingleExprFact(
                                                                              SingleTermExprPositive(
                                                                                SingleFactorTerm(
                                                                                  DesignatorEmptyFactor(
                                                                                    IdentDesignator(
                                                                                     ibool
                                                                                    ) [IdentDesignator]
                                                                                  ) [DesignatorEmptyFactor]
                                                                                ) [SingleFactorTerm]
                                                                              ) [SingleTermExprPositive]
                                                                            ) [CondSingleExprFact]
                                                                          ) [CondSingleFactTerm]
                                                                        ) [IfConditionSingleTerm]
                                                                        StatementSingle(
                                                                          IfElseStatement(
                                                                            IfConditionSingleTerm(
                                                                              CondSingleFactTerm(
                                                                                CondMultiExprFact(
                                                                                  CondSingleExprFact(
                                                                                    SingleTermExprPositive(
                                                                                      SingleFactorTerm(
                                                                                        DesignatorEmptyFactor(
                                                                                          IdentDesignator(
                                                                                           i
                                                                                          ) [IdentDesignator]
                                                                                        ) [DesignatorEmptyFactor]
                                                                                      ) [SingleFactorTerm]
                                                                                    ) [SingleTermExprPositive]
                                                                                  ) [CondSingleExprFact]
                                                                                  RelopEQUAL(
                                                                                  ) [RelopEQUAL]
                                                                                  SingleTermExprPositive(
                                                                                    SingleFactorTerm(
                                                                                      NumConstFactor(
                                                                                       5
                                                                                      ) [NumConstFactor]
                                                                                    ) [SingleFactorTerm]
                                                                                  ) [SingleTermExprPositive]
                                                                                ) [CondMultiExprFact]
                                                                              ) [CondSingleFactTerm]
                                                                            ) [IfConditionSingleTerm]
                                                                            StatementSingle(
                                                                              SinglePrintStatement(
                                                                                SingleTermExprPositive(
                                                                                  SingleFactorTerm(
                                                                                    NumConstFactor(
                                                                                     1
                                                                                    ) [NumConstFactor]
                                                                                  ) [SingleFactorTerm]
                                                                                ) [SingleTermExprPositive]
                                                                                NumConstNo(
                                                                                ) [NumConstNo]
                                                                              ) [SinglePrintStatement]
                                                                            ) [StatementSingle]
                                                                            StatementSingle(
                                                                              SinglePrintStatement(
                                                                                SingleTermExprNegative(
                                                                                  SingleFactorTerm(
                                                                                    NumConstFactor(
                                                                                     1
                                                                                    ) [NumConstFactor]
                                                                                  ) [SingleFactorTerm]
                                                                                ) [SingleTermExprNegative]
                                                                                NumConstNo(
                                                                                ) [NumConstNo]
                                                                              ) [SinglePrintStatement]
                                                                            ) [StatementSingle]
                                                                          ) [IfElseStatement]
                                                                        ) [StatementSingle]
                                                                      ) [IfStatement]
                                                                    ) [StatementSingle]
                                                                  ) [StatementListMultiple]
                                                                  StatementSingle(
                                                                    SingleDesignatorStatement(
                                                                      DesignatorStmtAssign(
                                                                        DesignatorStmtAssignCorrect(
                                                                          IdentDesignator(
                                                                           a
                                                                          ) [IdentDesignator]
                                                                          SingleTermExprPositive(
                                                                            SingleFactorTerm(
                                                                              NumConstFactor(
                                                                               2
                                                                              ) [NumConstFactor]
                                                                            ) [SingleFactorTerm]
                                                                          ) [SingleTermExprPositive]
                                                                        ) [DesignatorStmtAssignCorrect]
                                                                      ) [DesignatorStmtAssign]
                                                                    ) [SingleDesignatorStatement]
                                                                  ) [StatementSingle]
                                                                ) [StatementListMultiple]
                                                                StatementSingle(
                                                                  SingleDesignatorStatement(
                                                                    DesignatorStmtAssign(
                                                                      DesignatorStmtAssignCorrect(
                                                                        IdentDesignator(
                                                                         niz
                                                                        ) [IdentDesignator]
                                                                        SingleTermExprPositive(
                                                                          SingleFactorTerm(
                                                                            NewTypeArrayFactor(
                                                                              Type(
                                                                               int
                                                                              ) [Type]
                                                                              SingleTermExprPositive(
                                                                                SingleFactorTerm(
                                                                                  NumConstFactor(
                                                                                   3
                                                                                  ) [NumConstFactor]
                                                                                ) [SingleFactorTerm]
                                                                              ) [SingleTermExprPositive]
                                                                            ) [NewTypeArrayFactor]
                                                                          ) [SingleFactorTerm]
                                                                        ) [SingleTermExprPositive]
                                                                      ) [DesignatorStmtAssignCorrect]
                                                                    ) [DesignatorStmtAssign]
                                                                  ) [SingleDesignatorStatement]
                                                                ) [StatementSingle]
                                                              ) [StatementListMultiple]
                                                              StatementSingle(
                                                                SingleDesignatorStatement(
                                                                  DesignatorStmtAssign(
                                                                    DesignatorStmtAssignCorrect(
                                                                      IdentArrayDesignator(
                                                                       niz
                                                                        SingleTermExprPositive(
                                                                          SingleFactorTerm(
                                                                            NumConstFactor(
                                                                             0
                                                                            ) [NumConstFactor]
                                                                          ) [SingleFactorTerm]
                                                                        ) [SingleTermExprPositive]
                                                                      ) [IdentArrayDesignator]
                                                                      SingleTermExprPositive(
                                                                        MultiFactorTerm(
                                                                          SingleFactorTerm(
                                                                            NumConstFactor(
                                                                             1
                                                                            ) [NumConstFactor]
                                                                          ) [SingleFactorTerm]
                                                                          MulopMul(
                                                                          ) [MulopMul]
                                                                          DesignatorEmptyFactor(
                                                                            IdentDesignator(
                                                                             a
                                                                            ) [IdentDesignator]
                                                                          ) [DesignatorEmptyFactor]
                                                                        ) [MultiFactorTerm]
                                                                      ) [SingleTermExprPositive]
                                                                    ) [DesignatorStmtAssignCorrect]
                                                                  ) [DesignatorStmtAssign]
                                                                ) [SingleDesignatorStatement]
                                                              ) [StatementSingle]
                                                            ) [StatementListMultiple]
                                                            StatementSingle(
                                                              SingleDesignatorStatement(
                                                                DesignatorStmtAssign(
                                                                  DesignatorStmtAssignCorrect(
                                                                    IdentArrayDesignator(
                                                                     niz
                                                                      SingleTermExprPositive(
                                                                        SingleFactorTerm(
                                                                          NumConstFactor(
                                                                           1
                                                                          ) [NumConstFactor]
                                                                        ) [SingleFactorTerm]
                                                                      ) [SingleTermExprPositive]
                                                                    ) [IdentArrayDesignator]
                                                                    SingleTermExprPositive(
                                                                      MultiFactorTerm(
                                                                        SingleFactorTerm(
                                                                          NumConstFactor(
                                                                           2
                                                                          ) [NumConstFactor]
                                                                        ) [SingleFactorTerm]
                                                                        MulopMul(
                                                                        ) [MulopMul]
                                                                        DesignatorEmptyFactor(
                                                                          IdentDesignator(
                                                                           a
                                                                          ) [IdentDesignator]
                                                                        ) [DesignatorEmptyFactor]
                                                                      ) [MultiFactorTerm]
                                                                    ) [SingleTermExprPositive]
                                                                  ) [DesignatorStmtAssignCorrect]
                                                                ) [DesignatorStmtAssign]
                                                              ) [SingleDesignatorStatement]
                                                            ) [StatementSingle]
                                                          ) [StatementListMultiple]
                                                          StatementSingle(
                                                            SingleDesignatorStatement(
                                                              DesignatorStmtAssign(
                                                                DesignatorStmtAssignCorrect(
                                                                  IdentArrayDesignator(
                                                                   niz
                                                                    SingleTermExprPositive(
                                                                      SingleFactorTerm(
                                                                        NumConstFactor(
                                                                         2
                                                                        ) [NumConstFactor]
                                                                      ) [SingleFactorTerm]
                                                                    ) [SingleTermExprPositive]
                                                                  ) [IdentArrayDesignator]
                                                                  MultiTermExpr(
                                                                    SingleTermExprPositive(
                                                                      MultiFactorTerm(
                                                                        SingleFactorTerm(
                                                                          MethodCallFactor(
                                                                            MethodCall(
                                                                              IdentDesignator(
                                                                               sum
                                                                              ) [IdentDesignator]
                                                                              ActParsLeftParen(
                                                                              ) [ActParsLeftParen]
                                                                              ActParsYes(
                                                                                ActParsMultiExpr(
                                                                                  ActParsSingleExpr(
                                                                                    SingleTermExprPositive(
                                                                                      SingleFactorTerm(
                                                                                        DesignatorEmptyFactor(
                                                                                          IdentArrayDesignator(
                                                                                           niz
                                                                                            SingleTermExprPositive(
                                                                                              SingleFactorTerm(
                                                                                                NumConstFactor(
                                                                                                 1
                                                                                                ) [NumConstFactor]
                                                                                              ) [SingleFactorTerm]
                                                                                            ) [SingleTermExprPositive]
                                                                                          ) [IdentArrayDesignator]
                                                                                        ) [DesignatorEmptyFactor]
                                                                                      ) [SingleFactorTerm]
                                                                                    ) [SingleTermExprPositive]
                                                                                  ) [ActParsSingleExpr]
                                                                                  SingleTermExprPositive(
                                                                                    SingleFactorTerm(
                                                                                      DesignatorEmptyFactor(
                                                                                        IdentArrayDesignator(
                                                                                         niz
                                                                                          SingleTermExprPositive(
                                                                                            SingleFactorTerm(
                                                                                              NumConstFactor(
                                                                                               0
                                                                                              ) [NumConstFactor]
                                                                                            ) [SingleFactorTerm]
                                                                                          ) [SingleTermExprPositive]
                                                                                        ) [IdentArrayDesignator]
                                                                                      ) [DesignatorEmptyFactor]
                                                                                    ) [SingleFactorTerm]
                                                                                  ) [SingleTermExprPositive]
                                                                                ) [ActParsMultiExpr]
                                                                              ) [ActParsYes]
                                                                              ActParsRightParen(
                                                                              ) [ActParsRightParen]
                                                                            ) [MethodCall]
                                                                          ) [MethodCallFactor]
                                                                        ) [SingleFactorTerm]
                                                                        MulopMul(
                                                                        ) [MulopMul]
                                                                        DesignatorEmptyFactor(
                                                                          IdentDesignator(
                                                                           a
                                                                          ) [IdentDesignator]
                                                                        ) [DesignatorEmptyFactor]
                                                                      ) [MultiFactorTerm]
                                                                    ) [SingleTermExprPositive]
                                                                    AddopPlus(
                                                                    ) [AddopPlus]
                                                                    SingleFactorTerm(
                                                                      NumConstFactor(
                                                                       1
                                                                      ) [NumConstFactor]
                                                                    ) [SingleFactorTerm]
                                                                  ) [MultiTermExpr]
                                                                ) [DesignatorStmtAssignCorrect]
                                                              ) [DesignatorStmtAssign]
                                                            ) [SingleDesignatorStatement]
                                                          ) [StatementSingle]
                                                        ) [StatementListMultiple]
                                                        StatementSingle(
                                                          IfElseStatement(
                                                            IfConditionMultiTerm(
                                                              ConditionSingleTerm(
                                                                CondSingleFactTerm(
                                                                  CondSingleExprFact(
                                                                    SingleTermExprPositive(
                                                                      SingleFactorTerm(
                                                                        MethodCallFactor(
                                                                          MethodCall(
                                                                            IdentDesignator(
                                                                             verify
                                                                            ) [IdentDesignator]
                                                                            ActParsLeftParen(
                                                                            ) [ActParsLeftParen]
                                                                            ActParsNo(
                                                                            ) [ActParsNo]
                                                                            ActParsRightParen(
                                                                            ) [ActParsRightParen]
                                                                          ) [MethodCall]
                                                                        ) [MethodCallFactor]
                                                                      ) [SingleFactorTerm]
                                                                    ) [SingleTermExprPositive]
                                                                  ) [CondSingleExprFact]
                                                                ) [CondSingleFactTerm]
                                                              ) [ConditionSingleTerm]
                                                              CondSingleFactTerm(
                                                                CondMultiExprFact(
                                                                  CondSingleExprFact(
                                                                    SingleTermExprPositive(
                                                                      SingleFactorTerm(
                                                                        DesignatorEmptyFactor(
                                                                          IdentArrayDesignator(
                                                                           niz
                                                                            SingleTermExprPositive(
                                                                              SingleFactorTerm(
                                                                                NumConstFactor(
                                                                                 2
                                                                                ) [NumConstFactor]
                                                                              ) [SingleFactorTerm]
                                                                            ) [SingleTermExprPositive]
                                                                          ) [IdentArrayDesignator]
                                                                        ) [DesignatorEmptyFactor]
                                                                      ) [SingleFactorTerm]
                                                                    ) [SingleTermExprPositive]
                                                                  ) [CondSingleExprFact]
                                                                  RelopEQUAL(
                                                                  ) [RelopEQUAL]
                                                                  SingleTermExprPositive(
                                                                    SingleFactorTerm(
                                                                      NumConstFactor(
                                                                       4
                                                                      ) [NumConstFactor]
                                                                    ) [SingleFactorTerm]
                                                                  ) [SingleTermExprPositive]
                                                                ) [CondMultiExprFact]
                                                              ) [CondSingleFactTerm]
                                                            ) [IfConditionMultiTerm]
                                                            StatementSingle(
                                                              SinglePrintStatement(
                                                                SingleTermExprPositive(
                                                                  SingleFactorTerm(
                                                                    MethodCallFactor(
                                                                      MethodCall(
                                                                        IdentDesignator(
                                                                         ord
                                                                        ) [IdentDesignator]
                                                                        ActParsLeftParen(
                                                                        ) [ActParsLeftParen]
                                                                        ActParsYes(
                                                                          ActParsSingleExpr(
                                                                            SingleTermExprPositive(
                                                                              SingleFactorTerm(
                                                                                CharConstFactor(
                                                                                 A
                                                                                ) [CharConstFactor]
                                                                              ) [SingleFactorTerm]
                                                                            ) [SingleTermExprPositive]
                                                                          ) [ActParsSingleExpr]
                                                                        ) [ActParsYes]
                                                                        ActParsRightParen(
                                                                        ) [ActParsRightParen]
                                                                      ) [MethodCall]
                                                                    ) [MethodCallFactor]
                                                                  ) [SingleFactorTerm]
                                                                ) [SingleTermExprPositive]
                                                                NumConstNo(
                                                                ) [NumConstNo]
                                                              ) [SinglePrintStatement]
                                                            ) [StatementSingle]
                                                            StatementSingle(
                                                              SinglePrintStatement(
                                                                SingleTermExprPositive(
                                                                  SingleFactorTerm(
                                                                    MethodCallFactor(
                                                                      MethodCall(
                                                                        IdentDesignator(
                                                                         ord
                                                                        ) [IdentDesignator]
                                                                        ActParsLeftParen(
                                                                        ) [ActParsLeftParen]
                                                                        ActParsYes(
                                                                          ActParsSingleExpr(
                                                                            SingleTermExprPositive(
                                                                              SingleFactorTerm(
                                                                                CharConstFactor(
                                                                                 a
                                                                                ) [CharConstFactor]
                                                                              ) [SingleFactorTerm]
                                                                            ) [SingleTermExprPositive]
                                                                          ) [ActParsSingleExpr]
                                                                        ) [ActParsYes]
                                                                        ActParsRightParen(
                                                                        ) [ActParsRightParen]
                                                                      ) [MethodCall]
                                                                    ) [MethodCallFactor]
                                                                  ) [SingleFactorTerm]
                                                                ) [SingleTermExprPositive]
                                                                NumConstNo(
                                                                ) [NumConstNo]
                                                              ) [SinglePrintStatement]
                                                            ) [StatementSingle]
                                                          ) [IfElseStatement]
                                                        ) [StatementSingle]
                                                      ) [StatementListMultiple]
                                                      StatementSingle(
                                                        SinglePrintStatement(
                                                          SingleTermExprPositive(
                                                            SingleFactorTerm(
                                                              DesignatorEmptyFactor(
                                                                IdentDesignator(
                                                                 eol
                                                                ) [IdentDesignator]
                                                              ) [DesignatorEmptyFactor]
                                                            ) [SingleFactorTerm]
                                                          ) [SingleTermExprPositive]
                                                          NumConstNo(
                                                          ) [NumConstNo]
                                                        ) [SinglePrintStatement]
                                                      ) [StatementSingle]
                                                    ) [StatementListMultiple]
                                                    StatementSingle(
                                                      SingleDesignatorStatement(
                                                        DesignatorStmtAssign(
                                                          DesignatorStmtAssignCorrect(
                                                            IdentDesignator(
                                                             i
                                                            ) [IdentDesignator]
                                                            SingleTermExprPositive(
                                                              SingleFactorTerm(
                                                                NumConstFactor(
                                                                 0
                                                                ) [NumConstFactor]
                                                              ) [SingleFactorTerm]
                                                            ) [SingleTermExprPositive]
                                                          ) [DesignatorStmtAssignCorrect]
                                                        ) [DesignatorStmtAssign]
                                                      ) [SingleDesignatorStatement]
                                                    ) [StatementSingle]
                                                  ) [StatementListMultiple]
                                                  StatementSingle(
                                                    DoWhileStatement(
                                                      DoEnter(
                                                      ) [DoEnter]
                                                      StatementListMultiple(
                                                        StatementListNo(
                                                        ) [StatementListNo]
                                                        StatementMultiple(
                                                          StatementsInBraces(
                                                            StatementListMultiple(
                                                              StatementListMultiple(
                                                                StatementListMultiple(
                                                                  StatementListNo(
                                                                  ) [StatementListNo]
                                                                  StatementSingle(
                                                                    IfStatement(
                                                                      IfConditionSingleTerm(
                                                                        CondSingleFactTerm(
                                                                          CondMultiExprFact(
                                                                            CondSingleExprFact(
                                                                              SingleTermExprPositive(
                                                                                SingleFactorTerm(
                                                                                  DesignatorEmptyFactor(
                                                                                    IdentDesignator(
                                                                                     i
                                                                                    ) [IdentDesignator]
                                                                                  ) [DesignatorEmptyFactor]
                                                                                ) [SingleFactorTerm]
                                                                              ) [SingleTermExprPositive]
                                                                            ) [CondSingleExprFact]
                                                                            RelopEQUAL(
                                                                            ) [RelopEQUAL]
                                                                            SingleTermExprPositive(
                                                                              SingleFactorTerm(
                                                                                NumConstFactor(
                                                                                 3
                                                                                ) [NumConstFactor]
                                                                              ) [SingleFactorTerm]
                                                                            ) [SingleTermExprPositive]
                                                                          ) [CondMultiExprFact]
                                                                        ) [CondSingleFactTerm]
                                                                      ) [IfConditionSingleTerm]
                                                                      StatementMultiple(
                                                                        StatementsInBraces(
                                                                          StatementListMultiple(
                                                                            StatementListMultiple(
                                                                              StatementListNo(
                                                                              ) [StatementListNo]
                                                                              StatementSingle(
                                                                                SingleDesignatorStatement(
                                                                                  DesignatorStmtPlusPlus(
                                                                                    IdentDesignator(
                                                                                     i
                                                                                    ) [IdentDesignator]
                                                                                  ) [DesignatorStmtPlusPlus]
                                                                                ) [SingleDesignatorStatement]
                                                                              ) [StatementSingle]
                                                                            ) [StatementListMultiple]
                                                                            StatementSingle(
                                                                              SingleContinueStatement(
                                                                              ) [SingleContinueStatement]
                                                                            ) [StatementSingle]
                                                                          ) [StatementListMultiple]
                                                                        ) [StatementsInBraces]
                                                                      ) [StatementMultiple]
                                                                    ) [IfStatement]
                                                                  ) [StatementSingle]
                                                                ) [StatementListMultiple]
                                                                StatementSingle(
                                                                  IfStatement(
                                                                    IfConditionSingleTerm(
                                                                      CondSingleFactTerm(
                                                                        CondMultiExprFact(
                                                                          CondSingleExprFact(
                                                                            SingleTermExprPositive(
                                                                              SingleFactorTerm(
                                                                                DesignatorEmptyFactor(
                                                                                  IdentDesignator(
                                                                                   i
                                                                                  ) [IdentDesignator]
                                                                                ) [DesignatorEmptyFactor]
                                                                              ) [SingleFactorTerm]
                                                                            ) [SingleTermExprPositive]
                                                                          ) [CondSingleExprFact]
                                                                          RelopEQUAL(
                                                                          ) [RelopEQUAL]
                                                                          SingleTermExprPositive(
                                                                            SingleFactorTerm(
                                                                              NumConstFactor(
                                                                               4
                                                                              ) [NumConstFactor]
                                                                            ) [SingleFactorTerm]
                                                                          ) [SingleTermExprPositive]
                                                                        ) [CondMultiExprFact]
                                                                      ) [CondSingleFactTerm]
                                                                    ) [IfConditionSingleTerm]
                                                                    StatementSingle(
                                                                      SingleBreakStatement(
                                                                      ) [SingleBreakStatement]
                                                                    ) [StatementSingle]
                                                                  ) [IfStatement]
                                                                ) [StatementSingle]
                                                              ) [StatementListMultiple]
                                                              StatementSingle(
                                                                SingleDesignatorStatement(
                                                                  DesignatorStmtAssign(
                                                                    DesignatorStmtAssignCorrect(
                                                                      IdentDesignator(
                                                                       i
                                                                      ) [IdentDesignator]
                                                                      SingleTermExprPositive(
                                                                        SingleFactorTerm(
                                                                          MethodCallFactor(
                                                                            MethodCall(
                                                                              IdentDesignator(
                                                                               inkrement
                                                                              ) [IdentDesignator]
                                                                              ActParsLeftParen(
                                                                              ) [ActParsLeftParen]
                                                                              ActParsYes(
                                                                                ActParsMultiExpr(
                                                                                  ActParsSingleExpr(
                                                                                    SingleTermExprPositive(
                                                                                      SingleFactorTerm(
                                                                                        DesignatorEmptyFactor(
                                                                                          IdentDesignator(
                                                                                           i
                                                                                          ) [IdentDesignator]
                                                                                        ) [DesignatorEmptyFactor]
                                                                                      ) [SingleFactorTerm]
                                                                                    ) [SingleTermExprPositive]
                                                                                  ) [ActParsSingleExpr]
                                                                                  SingleTermExprPositive(
                                                                                    SingleFactorTerm(
                                                                                      NumConstFactor(
                                                                                       1
                                                                                      ) [NumConstFactor]
                                                                                    ) [SingleFactorTerm]
                                                                                  ) [SingleTermExprPositive]
                                                                                ) [ActParsMultiExpr]
                                                                              ) [ActParsYes]
                                                                              ActParsRightParen(
                                                                              ) [ActParsRightParen]
                                                                            ) [MethodCall]
                                                                          ) [MethodCallFactor]
                                                                        ) [SingleFactorTerm]
                                                                      ) [SingleTermExprPositive]
                                                                    ) [DesignatorStmtAssignCorrect]
                                                                  ) [DesignatorStmtAssign]
                                                                ) [SingleDesignatorStatement]
                                                              ) [StatementSingle]
                                                            ) [StatementListMultiple]
                                                          ) [StatementsInBraces]
                                                        ) [StatementMultiple]
                                                      ) [StatementListMultiple]
                                                      ConditionSingleTerm(
                                                        CondSingleFactTerm(
                                                          CondMultiExprFact(
                                                            CondSingleExprFact(
                                                              SingleTermExprPositive(
                                                                SingleFactorTerm(
                                                                  DesignatorEmptyFactor(
                                                                    IdentDesignator(
                                                                     i
                                                                    ) [IdentDesignator]
                                                                  ) [DesignatorEmptyFactor]
                                                                ) [SingleFactorTerm]
                                                              ) [SingleTermExprPositive]
                                                            ) [CondSingleExprFact]
                                                            RelopLS(
                                                            ) [RelopLS]
                                                            SingleTermExprPositive(
                                                              SingleFactorTerm(
                                                                NumConstFactor(
                                                                 10
                                                                ) [NumConstFactor]
                                                              ) [SingleFactorTerm]
                                                            ) [SingleTermExprPositive]
                                                          ) [CondMultiExprFact]
                                                        ) [CondSingleFactTerm]
                                                      ) [ConditionSingleTerm]
                                                    ) [DoWhileStatement]
                                                  ) [StatementSingle]
                                                ) [StatementListMultiple]
                                                StatementSingle(
                                                  IfElseStatement(
                                                    IfConditionSingleTerm(
                                                      CondMultiFactTerm(
                                                        CondSingleFactTerm(
                                                          CondMultiExprFact(
                                                            CondSingleExprFact(
                                                              SingleTermExprPositive(
                                                                SingleFactorTerm(
                                                                  DesignatorEmptyFactor(
                                                                    IdentDesignator(
                                                                     i
                                                                    ) [IdentDesignator]
                                                                  ) [DesignatorEmptyFactor]
                                                                ) [SingleFactorTerm]
                                                              ) [SingleTermExprPositive]
                                                            ) [CondSingleExprFact]
                                                            RelopEQUAL(
                                                            ) [RelopEQUAL]
                                                            SingleTermExprPositive(
                                                              SingleFactorTerm(
                                                                NumConstFactor(
                                                                 3
                                                                ) [NumConstFactor]
                                                              ) [SingleFactorTerm]
                                                            ) [SingleTermExprPositive]
                                                          ) [CondMultiExprFact]
                                                        ) [CondSingleFactTerm]
                                                        CondSingleExprFact(
                                                          SingleTermExprPositive(
                                                            SingleFactorTerm(
                                                              MethodCallFactor(
                                                                MethodCall(
                                                                  IdentDesignator(
                                                                   verify
                                                                  ) [IdentDesignator]
                                                                  ActParsLeftParen(
                                                                  ) [ActParsLeftParen]
                                                                  ActParsNo(
                                                                  ) [ActParsNo]
                                                                  ActParsRightParen(
                                                                  ) [ActParsRightParen]
                                                                ) [MethodCall]
                                                              ) [MethodCallFactor]
                                                            ) [SingleFactorTerm]
                                                          ) [SingleTermExprPositive]
                                                        ) [CondSingleExprFact]
                                                      ) [CondMultiFactTerm]
                                                    ) [IfConditionSingleTerm]
                                                    StatementSingle(
                                                      SinglePrintStatement(
                                                        SingleTermExprNegative(
                                                          SingleFactorTerm(
                                                            NumConstFactor(
                                                             4
                                                            ) [NumConstFactor]
                                                          ) [SingleFactorTerm]
                                                        ) [SingleTermExprNegative]
                                                        NumConstNo(
                                                        ) [NumConstNo]
                                                      ) [SinglePrintStatement]
                                                    ) [StatementSingle]
                                                    StatementSingle(
                                                      SinglePrintStatement(
                                                        SingleTermExprPositive(
                                                          SingleFactorTerm(
                                                            NumConstFactor(
                                                             4
                                                            ) [NumConstFactor]
                                                          ) [SingleFactorTerm]
                                                        ) [SingleTermExprPositive]
                                                        NumConstNo(
                                                        ) [NumConstNo]
                                                      ) [SinglePrintStatement]
                                                    ) [StatementSingle]
                                                  ) [IfElseStatement]
                                                ) [StatementSingle]
                                              ) [StatementListMultiple]
                                              StatementSingle(
                                                SingleReadStatement(
                                                  IdentArrayDesignator(
                                                   niz
                                                    SingleTermExprPositive(
                                                      SingleFactorTerm(
                                                        NumConstFactor(
                                                         0
                                                        ) [NumConstFactor]
                                                      ) [SingleFactorTerm]
                                                    ) [SingleTermExprPositive]
                                                  ) [IdentArrayDesignator]
                                                ) [SingleReadStatement]
                                              ) [StatementSingle]
                                            ) [StatementListMultiple]
                                            StatementSingle(
                                              SingleReadStatement(
                                                IdentArrayDesignator(
                                                 niz
                                                  SingleTermExprPositive(
                                                    SingleFactorTerm(
                                                      NumConstFactor(
                                                       1
                                                      ) [NumConstFactor]
                                                    ) [SingleFactorTerm]
                                                  ) [SingleTermExprPositive]
                                                ) [IdentArrayDesignator]
                                              ) [SingleReadStatement]
                                            ) [StatementSingle]
                                          ) [StatementListMultiple]
                                          StatementSingle(
                                            SingleReadStatement(
                                              IdentArrayDesignator(
                                               niz
                                                SingleTermExprPositive(
                                                  SingleFactorTerm(
                                                    NumConstFactor(
                                                     2
                                                    ) [NumConstFactor]
                                                  ) [SingleFactorTerm]
                                                ) [SingleTermExprPositive]
                                              ) [IdentArrayDesignator]
                                            ) [SingleReadStatement]
                                          ) [StatementSingle]
                                        ) [StatementListMultiple]
                                        StatementSingle(
                                          SinglePrintStatement(
                                            SingleTermExprPositive(
                                              SingleFactorTerm(
                                                DesignatorEmptyFactor(
                                                  IdentDesignator(
                                                   eol
                                                  ) [IdentDesignator]
                                                ) [DesignatorEmptyFactor]
                                              ) [SingleFactorTerm]
                                            ) [SingleTermExprPositive]
                                            NumConstNo(
                                            ) [NumConstNo]
                                          ) [SinglePrintStatement]
                                        ) [StatementSingle]
                                      ) [StatementListMultiple]
                                      StatementSingle(
                                        SinglePrintStatement(
                                          SingleTermExprPositive(
                                            SingleFactorTerm(
                                              MethodCallFactor(
                                                MethodCall(
                                                  IdentDesignator(
                                                   sum
                                                  ) [IdentDesignator]
                                                  ActParsLeftParen(
                                                  ) [ActParsLeftParen]
                                                  ActParsYes(
                                                    ActParsMultiExpr(
                                                      ActParsSingleExpr(
                                                        SingleTermExprPositive(
                                                          SingleFactorTerm(
                                                            MethodCallFactor(
                                                              MethodCall(
                                                                IdentDesignator(
                                                                 sum
                                                                ) [IdentDesignator]
                                                                ActParsLeftParen(
                                                                ) [ActParsLeftParen]
                                                                ActParsYes(
                                                                  ActParsMultiExpr(
                                                                    ActParsSingleExpr(
                                                                      SingleTermExprPositive(
                                                                        SingleFactorTerm(
                                                                          DesignatorEmptyFactor(
                                                                            IdentArrayDesignator(
                                                                             niz
                                                                              SingleTermExprPositive(
                                                                                SingleFactorTerm(
                                                                                  NumConstFactor(
                                                                                   0
                                                                                  ) [NumConstFactor]
                                                                                ) [SingleFactorTerm]
                                                                              ) [SingleTermExprPositive]
                                                                            ) [IdentArrayDesignator]
                                                                          ) [DesignatorEmptyFactor]
                                                                        ) [SingleFactorTerm]
                                                                      ) [SingleTermExprPositive]
                                                                    ) [ActParsSingleExpr]
                                                                    SingleTermExprPositive(
                                                                      SingleFactorTerm(
                                                                        DesignatorEmptyFactor(
                                                                          IdentArrayDesignator(
                                                                           niz
                                                                            SingleTermExprPositive(
                                                                              SingleFactorTerm(
                                                                                NumConstFactor(
                                                                                 1
                                                                                ) [NumConstFactor]
                                                                              ) [SingleFactorTerm]
                                                                            ) [SingleTermExprPositive]
                                                                          ) [IdentArrayDesignator]
                                                                        ) [DesignatorEmptyFactor]
                                                                      ) [SingleFactorTerm]
                                                                    ) [SingleTermExprPositive]
                                                                  ) [ActParsMultiExpr]
                                                                ) [ActParsYes]
                                                                ActParsRightParen(
                                                                ) [ActParsRightParen]
                                                              ) [MethodCall]
                                                            ) [MethodCallFactor]
                                                          ) [SingleFactorTerm]
                                                        ) [SingleTermExprPositive]
                                                      ) [ActParsSingleExpr]
                                                      SingleTermExprPositive(
                                                        SingleFactorTerm(
                                                          DesignatorEmptyFactor(
                                                            IdentArrayDesignator(
                                                             niz
                                                              SingleTermExprPositive(
                                                                SingleFactorTerm(
                                                                  NumConstFactor(
                                                                   2
                                                                  ) [NumConstFactor]
                                                                ) [SingleFactorTerm]
                                                              ) [SingleTermExprPositive]
                                                            ) [IdentArrayDesignator]
                                                          ) [DesignatorEmptyFactor]
                                                        ) [SingleFactorTerm]
                                                      ) [SingleTermExprPositive]
                                                    ) [ActParsMultiExpr]
                                                  ) [ActParsYes]
                                                  ActParsRightParen(
                                                  ) [ActParsRightParen]
                                                ) [MethodCall]
                                              ) [MethodCallFactor]
                                            ) [SingleFactorTerm]
                                          ) [SingleTermExprPositive]
                                          NumConstNo(
                                          ) [NumConstNo]
                                        ) [SinglePrintStatement]
                                      ) [StatementSingle]
                                    ) [StatementListMultiple]
                                    StatementSingle(
                                      SinglePrintStatement(
                                        SingleTermExprPositive(
                                          SingleFactorTerm(
                                            DesignatorEmptyFactor(
                                              IdentDesignator(
                                               eol
                                              ) [IdentDesignator]
                                            ) [DesignatorEmptyFactor]
                                          ) [SingleFactorTerm]
                                        ) [SingleTermExprPositive]
                                        NumConstNo(
                                        ) [NumConstNo]
                                      ) [SinglePrintStatement]
                                    ) [StatementSingle]
                                  ) [StatementListMultiple]
                                  StatementSingle(
                                    SinglePrintStatement(
                                      SingleTermExprPositive(
                                        SingleFactorTerm(
                                          MethodCallFactor(
                                            MethodCall(
                                              IdentDesignator(
                                               inkrement
                                              ) [IdentDesignator]
                                              ActParsLeftParen(
                                              ) [ActParsLeftParen]
                                              ActParsYes(
                                                ActParsMultiExpr(
                                                  ActParsSingleExpr(
                                                    SingleTermExprPositive(
                                                      SingleFactorTerm(
                                                        DesignatorEmptyFactor(
                                                          IdentArrayDesignator(
                                                           niz
                                                            SingleTermExprPositive(
                                                              SingleFactorTerm(
                                                                NumConstFactor(
                                                                 2
                                                                ) [NumConstFactor]
                                                              ) [SingleFactorTerm]
                                                            ) [SingleTermExprPositive]
                                                          ) [IdentArrayDesignator]
                                                        ) [DesignatorEmptyFactor]
                                                      ) [SingleFactorTerm]
                                                    ) [SingleTermExprPositive]
                                                  ) [ActParsSingleExpr]
                                                  SingleTermExprPositive(
                                                    SingleFactorTerm(
                                                      NumConstFactor(
                                                       2
                                                      ) [NumConstFactor]
                                                    ) [SingleFactorTerm]
                                                  ) [SingleTermExprPositive]
                                                ) [ActParsMultiExpr]
                                              ) [ActParsYes]
                                              ActParsRightParen(
                                              ) [ActParsRightParen]
                                            ) [MethodCall]
                                          ) [MethodCallFactor]
                                        ) [SingleFactorTerm]
                                      ) [SingleTermExprPositive]
                                      NumConstNo(
                                      ) [NumConstNo]
                                    ) [SinglePrintStatement]
                                  ) [StatementSingle]
                                ) [StatementListMultiple]
                                StatementSingle(
                                  SingleDesignatorStatement(
                                    DesignatorStmtAssign(
                                      DesignatorStmtAssignCorrect(
                                        IdentDesignator(
                                         a
                                        ) [IdentDesignator]
                                        SingleTermExprPositive(
                                          SingleFactorTerm(
                                            NumConstFactor(
                                             3
                                            ) [NumConstFactor]
                                          ) [SingleFactorTerm]
                                        ) [SingleTermExprPositive]
                                      ) [DesignatorStmtAssignCorrect]
                                    ) [DesignatorStmtAssign]
                                  ) [SingleDesignatorStatement]
                                ) [StatementSingle]
                              ) [StatementListMultiple]
                              StatementSingle(
                                SingleDesignatorStatement(
                                  DesignatorStmtAssign(
                                    DesignatorStmtAssignCorrect(
                                      IdentDesignator(
                                       i
                                      ) [IdentDesignator]
                                      SingleTermExprPositive(
                                        SingleFactorTerm(
                                          NumConstFactor(
                                           0
                                          ) [NumConstFactor]
                                        ) [SingleFactorTerm]
                                      ) [SingleTermExprPositive]
                                    ) [DesignatorStmtAssignCorrect]
                                  ) [DesignatorStmtAssign]
                                ) [SingleDesignatorStatement]
                              ) [StatementSingle]
                            ) [StatementListMultiple]
                            StatementSingle(
                              DoWhileStatement(
                                DoEnter(
                                ) [DoEnter]
                                StatementListMultiple(
                                  StatementListNo(
                                  ) [StatementListNo]
                                  StatementMultiple(
                                    StatementsInBraces(
                                      StatementListMultiple(
                                        StatementListMultiple(
                                          StatementListNo(
                                          ) [StatementListNo]
                                          StatementSingle(
                                            SingleDesignatorStatement(
                                              DesignatorStmtAssign(
                                                DesignatorStmtAssignCorrect(
                                                  IdentArrayDesignator(
                                                   niz
                                                    SingleTermExprPositive(
                                                      SingleFactorTerm(
                                                        DesignatorEmptyFactor(
                                                          IdentDesignator(
                                                           i
                                                          ) [IdentDesignator]
                                                        ) [DesignatorEmptyFactor]
                                                      ) [SingleFactorTerm]
                                                    ) [SingleTermExprPositive]
                                                  ) [IdentArrayDesignator]
                                                  SingleTermExprPositive(
                                                    MultiFactorTerm(
                                                      MultiFactorTerm(
                                                        SingleFactorTerm(
                                                          DesignatorEmptyFactor(
                                                            IdentArrayDesignator(
                                                             niz
                                                              SingleTermExprPositive(
                                                                SingleFactorTerm(
                                                                  DesignatorEmptyFactor(
                                                                    IdentDesignator(
                                                                     i
                                                                    ) [IdentDesignator]
                                                                  ) [DesignatorEmptyFactor]
                                                                ) [SingleFactorTerm]
                                                              ) [SingleTermExprPositive]
                                                            ) [IdentArrayDesignator]
                                                          ) [DesignatorEmptyFactor]
                                                        ) [SingleFactorTerm]
                                                        MulopMul(
                                                        ) [MulopMul]
                                                        NumConstFactor(
                                                         2
                                                        ) [NumConstFactor]
                                                      ) [MultiFactorTerm]
                                                      MulopMul(
                                                      ) [MulopMul]
                                                      DesignatorEmptyFactor(
                                                        IdentDesignator(
                                                         a
                                                        ) [IdentDesignator]
                                                      ) [DesignatorEmptyFactor]
                                                    ) [MultiFactorTerm]
                                                  ) [SingleTermExprPositive]
                                                ) [DesignatorStmtAssignCorrect]
                                              ) [DesignatorStmtAssign]
                                            ) [SingleDesignatorStatement]
                                          ) [StatementSingle]
                                        ) [StatementListMultiple]
                                        StatementSingle(
                                          SingleDesignatorStatement(
                                            DesignatorStmtPlusPlus(
                                              IdentDesignator(
                                               i
                                              ) [IdentDesignator]
                                            ) [DesignatorStmtPlusPlus]
                                          ) [SingleDesignatorStatement]
                                        ) [StatementSingle]
                                      ) [StatementListMultiple]
                                    ) [StatementsInBraces]
                                  ) [StatementMultiple]
                                ) [StatementListMultiple]
                                ConditionSingleTerm(
                                  CondSingleFactTerm(
                                    CondMultiExprFact(
                                      CondSingleExprFact(
                                        SingleTermExprPositive(
                                          SingleFactorTerm(
                                            DesignatorEmptyFactor(
                                              IdentDesignator(
                                               i
                                              ) [IdentDesignator]
                                            ) [DesignatorEmptyFactor]
                                          ) [SingleFactorTerm]
                                        ) [SingleTermExprPositive]
                                      ) [CondSingleExprFact]
                                      RelopLS(
                                      ) [RelopLS]
                                      SingleTermExprPositive(
                                        SingleFactorTerm(
                                          NumConstFactor(
                                           3
                                          ) [NumConstFactor]
                                        ) [SingleFactorTerm]
                                      ) [SingleTermExprPositive]
                                    ) [CondMultiExprFact]
                                  ) [CondSingleFactTerm]
                                ) [ConditionSingleTerm]
                              ) [DoWhileStatement]
                            ) [StatementSingle]
                          ) [StatementListMultiple]
                          StatementSingle(
                            SinglePrintStatement(
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentArrayDesignator(
                                     niz
                                      SingleTermExprPositive(
                                        SingleFactorTerm(
                                          NumConstFactor(
                                           0
                                          ) [NumConstFactor]
                                        ) [SingleFactorTerm]
                                      ) [SingleTermExprPositive]
                                    ) [IdentArrayDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                              NumConstNo(
                              ) [NumConstNo]
                            ) [SinglePrintStatement]
                          ) [StatementSingle]
                        ) [StatementListMultiple]
                        StatementSingle(
                          SinglePrintStatement(
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                DesignatorEmptyFactor(
                                  IdentArrayDesignator(
                                   niz
                                    SingleTermExprPositive(
                                      SingleFactorTerm(
                                        NumConstFactor(
                                         1
                                        ) [NumConstFactor]
                                      ) [SingleFactorTerm]
                                    ) [SingleTermExprPositive]
                                  ) [IdentArrayDesignator]
                                ) [DesignatorEmptyFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                            NumConstNo(
                            ) [NumConstNo]
                          ) [SinglePrintStatement]
                        ) [StatementSingle]
                      ) [StatementListMultiple]
                      StatementSingle(
                        SinglePrintStatement(
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              DesignatorEmptyFactor(
                                IdentArrayDesignator(
                                 niz
                                  SingleTermExprPositive(
                                    SingleFactorTerm(
                                      NumConstFactor(
                                       2
                                      ) [NumConstFactor]
                                    ) [SingleFactorTerm]
                                  ) [SingleTermExprPositive]
                                ) [IdentArrayDesignator]
                              ) [DesignatorEmptyFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                          NumConstNo(
                          ) [NumConstNo]
                        ) [SinglePrintStatement]
                      ) [StatementSingle]
                    ) [StatementListMultiple]
                    StatementSingle(
                      SinglePrintStatement(
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            DesignatorEmptyFactor(
                              IdentDesignator(
                               eol
                              ) [IdentDesignator]
                            ) [DesignatorEmptyFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                        NumConstNo(
                        ) [NumConstNo]
                      ) [SinglePrintStatement]
                    ) [StatementSingle]
                  ) [StatementListMultiple]
                  StatementSingle(
                    SingleDesignatorStatement(
                      DesignatorStmtAssign(
                        DesignatorStmtAssignCorrect(
                          IdentDesignator(
                           i
                          ) [IdentDesignator]
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              NumConstFactor(
                               0
                              ) [NumConstFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [DesignatorStmtAssignCorrect]
                      ) [DesignatorStmtAssign]
                    ) [SingleDesignatorStatement]
                  ) [StatementSingle]
                ) [StatementListMultiple]
                StatementSingle(
                  SingleDesignatorStatement(
                    DesignatorStmtAssign(
                      DesignatorStmtAssignCorrect(
                        IdentDesignator(
                         niz2
                        ) [IdentDesignator]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            NumConstFactor(
                             0
                            ) [NumConstFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [DesignatorStmtAssignCorrect]
                    ) [DesignatorStmtAssign]
                  ) [SingleDesignatorStatement]
                ) [StatementSingle]
              ) [StatementListMultiple]
              StatementSingle(
                DoWhileStatement(
                  DoEnter(
                  ) [DoEnter]
                  StatementListMultiple(
                    StatementListNo(
                    ) [StatementListNo]
                    StatementMultiple(
                      StatementsInBraces(
                        StatementListMultiple(
                          StatementListMultiple(
                            StatementListNo(
                            ) [StatementListNo]
                            StatementSingle(
                              SingleDesignatorStatement(
                                DesignatorStmtAssign(
                                  DesignatorStmtAssignCorrect(
                                    IdentDesignator(
                                     niz2
                                    ) [IdentDesignator]
                                    MultiTermExpr(
                                      SingleTermExprPositive(
                                        SingleFactorTerm(
                                          DesignatorEmptyFactor(
                                            IdentDesignator(
                                             niz2
                                            ) [IdentDesignator]
                                          ) [DesignatorEmptyFactor]
                                        ) [SingleFactorTerm]
                                      ) [SingleTermExprPositive]
                                      AddopPlus(
                                      ) [AddopPlus]
                                      MultiFactorTerm(
                                        SingleFactorTerm(
                                          DesignatorEmptyFactor(
                                            IdentArrayDesignator(
                                             niz
                                              SingleTermExprPositive(
                                                SingleFactorTerm(
                                                  DesignatorEmptyFactor(
                                                    IdentDesignator(
                                                     i
                                                    ) [IdentDesignator]
                                                  ) [DesignatorEmptyFactor]
                                                ) [SingleFactorTerm]
                                              ) [SingleTermExprPositive]
                                            ) [IdentArrayDesignator]
                                          ) [DesignatorEmptyFactor]
                                        ) [SingleFactorTerm]
                                        MulopMul(
                                        ) [MulopMul]
                                        DesignatorEmptyFactor(
                                          IdentArrayDesignator(
                                           niz
                                            SingleTermExprPositive(
                                              SingleFactorTerm(
                                                DesignatorEmptyFactor(
                                                  IdentDesignator(
                                                   i
                                                  ) [IdentDesignator]
                                                ) [DesignatorEmptyFactor]
                                              ) [SingleFactorTerm]
                                            ) [SingleTermExprPositive]
                                          ) [IdentArrayDesignator]
                                        ) [DesignatorEmptyFactor]
                                      ) [MultiFactorTerm]
                                    ) [MultiTermExpr]
                                  ) [DesignatorStmtAssignCorrect]
                                ) [DesignatorStmtAssign]
                              ) [SingleDesignatorStatement]
                            ) [StatementSingle]
                          ) [StatementListMultiple]
                          StatementSingle(
                            SingleDesignatorStatement(
                              DesignatorStmtPlusPlus(
                                IdentDesignator(
                                 i
                                ) [IdentDesignator]
                              ) [DesignatorStmtPlusPlus]
                            ) [SingleDesignatorStatement]
                          ) [StatementSingle]
                        ) [StatementListMultiple]
                      ) [StatementsInBraces]
                    ) [StatementMultiple]
                  ) [StatementListMultiple]
                  ConditionSingleTerm(
                    CondSingleFactTerm(
                      CondMultiExprFact(
                        CondSingleExprFact(
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              DesignatorEmptyFactor(
                                IdentDesignator(
                                 i
                                ) [IdentDesignator]
                              ) [DesignatorEmptyFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [CondSingleExprFact]
                        RelopLS(
                        ) [RelopLS]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            NumConstFactor(
                             3
                            ) [NumConstFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [CondMultiExprFact]
                    ) [CondSingleFactTerm]
                  ) [ConditionSingleTerm]
                ) [DoWhileStatement]
              ) [StatementSingle]
            ) [StatementListMultiple]
            StatementSingle(
              SinglePrintStatement(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    DesignatorEmptyFactor(
                      IdentDesignator(
                       niz2
                      ) [IdentDesignator]
                    ) [DesignatorEmptyFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
                NumConstNo(
                ) [NumConstNo]
              ) [SinglePrintStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
          StatementSingle(
            SinglePrintStatement(
              SingleTermExprPositive(
                SingleFactorTerm(
                  DesignatorEmptyFactor(
                    IdentDesignator(
                     eol
                    ) [IdentDesignator]
                  ) [DesignatorEmptyFactor]
                ) [SingleFactorTerm]
              ) [SingleTermExprPositive]
              NumConstNo(
              ) [NumConstNo]
            ) [SinglePrintStatement]
          ) [StatementSingle]
        ) [StatementListMultiple]
        StatementSingle(
          SingleDesignatorStatement(
            DesignatorStmtMethodCall(
              MethodCall(
                IdentDesignator(
                 printArgs
                ) [IdentDesignator]
                ActParsLeftParen(
                ) [ActParsLeftParen]
                ActParsYes(
                  ActParsMultiExpr(
                    ActParsMultiExpr(
                      ActParsMultiExpr(
                        ActParsMultiExpr(
                          ActParsMultiExpr(
                            ActParsSingleExpr(
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  NumConstFactor(
                                   5
                                  ) [NumConstFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [ActParsSingleExpr]
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                CharConstFactor(
                                 t
                                ) [CharConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [ActParsMultiExpr]
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              CharConstFactor(
                               e
                              ) [CharConstFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [ActParsMultiExpr]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            CharConstFactor(
                             s
                            ) [CharConstFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [ActParsMultiExpr]
                      SingleTermExprPositive(
                        SingleFactorTerm(
                          CharConstFactor(
                           t
                          ) [CharConstFactor]
                        ) [SingleFactorTerm]
                      ) [SingleTermExprPositive]
                    ) [ActParsMultiExpr]
                    SingleTermExprPositive(
                      SingleFactorTerm(
                        CharConstFactor(
                         B
                        ) [CharConstFactor]
                      ) [SingleFactorTerm]
                    ) [SingleTermExprPositive]
                  ) [ActParsMultiExpr]
                ) [ActParsYes]
                ActParsRightParen(
                ) [ActParsRightParen]
              ) [MethodCall]
            ) [DesignatorStmtMethodCall]
          ) [SingleDesignatorStatement]
        ) [StatementSingle]
      ) [StatementListMultiple]
    ) [MethodDeclaration]
  ) [MethodDeclListMultiple]
) [Program]
INFO  21:56:11,871 - ===================================
INFO  21:56:11,875 - Line 20: Access to array element detected. Array name: args
INFO  21:56:11,875 - Line 21: Access to array element detected. Array name: args
INFO  21:56:11,875 - Line 30: Access to array element detected. Array name: args
INFO  21:56:11,875 - Line 40: Method Call detected. Method name: sum
INFO  21:56:11,875 - Method sum has varArgs with 2 args
INFO  21:56:11,875 - Line 65: Access to array element detected. Array name: niz
INFO  21:56:11,875 - Line 66: Access to array element detected. Array name: niz
INFO  21:56:11,875 - Line 67: Access to array element detected. Array name: niz
INFO  21:56:11,875 - Line 67: Access to array element detected. Array name: niz
INFO  21:56:11,875 - Line 67: Access to array element detected. Array name: niz
INFO  21:56:11,875 - Line 67: Method Call detected. Method name: sum
INFO  21:56:11,875 - Method sum has varArgs with 2 args
INFO  21:56:11,875 - Line 68: Method Call detected. Method name: verify
INFO  21:56:11,875 - Line 68: Access to array element detected. Array name: niz
INFO  21:56:11,875 - Line 68: Method Call detected. Method name: ord
INFO  21:56:11,875 - Line 69: Method Call detected. Method name: ord
INFO  21:56:11,875 - Line 80: Method Call detected. Method name: inkrement
INFO  21:56:11,875 - Line 83: Method Call detected. Method name: verify
INFO  21:56:11,875 - Line 86: Access to array element detected. Array name: niz
INFO  21:56:11,875 - Line 87: Access to array element detected. Array name: niz
INFO  21:56:11,875 - Line 88: Access to array element detected. Array name: niz
INFO  21:56:11,875 - Line 91: Access to array element detected. Array name: niz
INFO  21:56:11,875 - Line 91: Access to array element detected. Array name: niz
INFO  21:56:11,875 - Line 91: Method Call detected. Method name: sum
INFO  21:56:11,875 - Method sum has varArgs with 2 args
INFO  21:56:11,875 - Line 91: Access to array element detected. Array name: niz
INFO  21:56:11,875 - Line 91: Method Call detected. Method name: sum
INFO  21:56:11,875 - Method sum has varArgs with 2 args
INFO  21:56:11,875 - Line 94: Access to array element detected. Array name: niz
INFO  21:56:11,875 - Line 94: Method Call detected. Method name: inkrement
INFO  21:56:11,875 - Line 99: Access to array element detected. Array name: niz
INFO  21:56:11,875 - Line 99: Access to array element detected. Array name: niz
INFO  21:56:11,875 - Line 102: Access to array element detected. Array name: niz
INFO  21:56:11,875 - Line 103: Access to array element detected. Array name: niz
INFO  21:56:11,875 - Line 104: Access to array element detected. Array name: niz
INFO  21:56:11,875 - Line 110: Access to array element detected. Array name: niz
INFO  21:56:11,875 - Line 110: Access to array element detected. Array name: niz
INFO  21:56:11,875 - Line 115: Method Call detected. Method name: printArgs
INFO  21:56:11,875 - Method printArgs has varArgs with 5 args
INFO  21:56:11,875 - Compile successful!
INFO  16:29:55,041 - Compiling source file: D:\source\repos\PP_Projekat\MicroJavaCompiler\test\program.mj
INFO  16:29:55,076 - #2 program
INFO  16:29:55,076 - #49 test302
INFO  16:29:55,076 - #7 const
INFO  16:29:55,076 - #49 int
INFO  16:29:55,076 - #49 jedan
INFO  16:29:55,077 - #27 =
INFO  16:29:55,077 - #52 1
INFO  16:29:55,077 - #38 ;
INFO  16:29:55,077 - #49 int
INFO  16:29:55,077 - #49 i
INFO  16:29:55,077 - #38 ;
INFO  16:29:55,078 - #49 bool
INFO  16:29:55,078 - #49 ibool
INFO  16:29:55,078 - #38 ;
INFO  16:29:55,078 - #49 int
INFO  16:29:55,078 - #49 niz2
INFO  16:29:55,078 - #38 ;
INFO  16:29:55,078 - #49 int
INFO  16:29:55,078 - #49 niz
INFO  16:29:55,078 - #42 [
INFO  16:29:55,078 - #43 ]
INFO  16:29:55,078 - #38 ;
INFO  16:29:55,079 - #49 int
INFO  16:29:55,079 - #49 a
INFO  16:29:55,079 - #38 ;
INFO  16:29:55,079 - #44 {
INFO  16:29:55,079 - #49 int
INFO  16:29:55,079 - #49 sum
INFO  16:29:55,079 - #40 (
INFO  16:29:55,079 - #49 int
INFO  16:29:55,079 - #47 .
INFO  16:29:55,079 - #47 .
INFO  16:29:55,079 - #47 .
INFO  16:29:55,079 - #49 args
INFO  16:29:55,079 - #41 )
INFO  16:29:55,079 - #49 int
INFO  16:29:55,080 - #49 z
INFO  16:29:55,080 - #39 ,
INFO  16:29:55,080 - #49 d
INFO  16:29:55,080 - #38 ;
INFO  16:29:55,080 - #44 {
INFO  16:29:55,080 - #49 z
INFO  16:29:55,081 - #27 =
INFO  16:29:55,081 - #49 args
INFO  16:29:55,081 - #42 [
INFO  16:29:55,081 - #52 0
INFO  16:29:55,081 - #43 ]
INFO  16:29:55,081 - #38 ;
INFO  16:29:55,081 - #49 d
INFO  16:29:55,081 - #27 =
INFO  16:29:55,081 - #49 args
INFO  16:29:55,081 - #42 [
INFO  16:29:55,081 - #52 1
INFO  16:29:55,081 - #43 ]
INFO  16:29:55,081 - #38 ;
INFO  16:29:55,081 - #15 return
INFO  16:29:55,081 - #49 z
INFO  16:29:55,082 - #22 +
INFO  16:29:55,082 - #49 d
INFO  16:29:55,082 - #38 ;
INFO  16:29:55,082 - #45 }
INFO  16:29:55,082 - #14 void
INFO  16:29:55,082 - #49 printArgs
INFO  16:29:55,082 - #40 (
INFO  16:29:55,082 - #49 int
INFO  16:29:55,082 - #49 num
INFO  16:29:55,083 - #39 ,
INFO  16:29:55,083 - #49 char
INFO  16:29:55,083 - #47 .
INFO  16:29:55,083 - #47 .
INFO  16:29:55,083 - #47 .
INFO  16:29:55,083 - #49 args
INFO  16:29:55,083 - #41 )
INFO  16:29:55,083 - #49 int
INFO  16:29:55,083 - #49 i
INFO  16:29:55,083 - #38 ;
INFO  16:29:55,083 - #44 {
INFO  16:29:55,083 - #49 i
INFO  16:29:55,083 - #27 =
INFO  16:29:55,083 - #52 0
INFO  16:29:55,083 - #38 ;
INFO  16:29:55,083 - #9 do
INFO  16:29:55,083 - #44 {
INFO  16:29:55,083 - #12 print
INFO  16:29:55,083 - #40 (
INFO  16:29:55,083 - #49 args
INFO  16:29:55,083 - #42 [
INFO  16:29:55,083 - #49 i
INFO  16:29:55,083 - #43 ]
INFO  16:29:55,083 - #41 )
INFO  16:29:55,084 - #38 ;
INFO  16:29:55,084 - #49 i
INFO  16:29:55,084 - #36 ++
INFO  16:29:55,084 - #38 ;
INFO  16:29:55,084 - #45 }
INFO  16:29:55,084 - #10 while
INFO  16:29:55,084 - #40 (
INFO  16:29:55,084 - #49 i
INFO  16:29:55,084 - #32 <
INFO  16:29:55,084 - #49 num
INFO  16:29:55,084 - #41 )
INFO  16:29:55,085 - #38 ;
INFO  16:29:55,085 - #45 }
INFO  16:29:55,085 - #49 int
INFO  16:29:55,085 - #49 inkrement
INFO  16:29:55,085 - #40 (
INFO  16:29:55,085 - #49 int
INFO  16:29:55,085 - #49 a
INFO  16:29:55,085 - #39 ,
INFO  16:29:55,085 - #49 int
INFO  16:29:55,086 - #49 inc
INFO  16:29:55,086 - #41 )
INFO  16:29:55,086 - #49 int
INFO  16:29:55,086 - #49 pom
INFO  16:29:55,086 - #38 ;
INFO  16:29:55,086 - #44 {
INFO  16:29:55,086 - #5 if
INFO  16:29:55,086 - #40 (
INFO  16:29:55,086 - #49 inc
INFO  16:29:55,086 - #28 ==
INFO  16:29:55,086 - #49 jedan
INFO  16:29:55,086 - #41 )
INFO  16:29:55,086 - #49 pom
INFO  16:29:55,086 - #27 =
INFO  16:29:55,086 - #52 1
INFO  16:29:55,086 - #38 ;
INFO  16:29:55,086 - #6 else
INFO  16:29:55,086 - #5 if
INFO  16:29:55,086 - #40 (
INFO  16:29:55,086 - #49 inc
INFO  16:29:55,086 - #28 ==
INFO  16:29:55,086 - #52 2
INFO  16:29:55,087 - #41 )
INFO  16:29:55,087 - #49 pom
INFO  16:29:55,087 - #27 =
INFO  16:29:55,087 - #49 a
INFO  16:29:55,087 - #38 ;
INFO  16:29:55,087 - #15 return
INFO  16:29:55,087 - #49 sum
INFO  16:29:55,087 - #40 (
INFO  16:29:55,087 - #49 a
INFO  16:29:55,087 - #39 ,
INFO  16:29:55,087 - #49 pom
INFO  16:29:55,087 - #41 )
INFO  16:29:55,087 - #38 ;
INFO  16:29:55,088 - #45 }
INFO  16:29:55,088 - #49 bool
INFO  16:29:55,088 - #49 verify
INFO  16:29:55,088 - #40 (
INFO  16:29:55,088 - #41 )
INFO  16:29:55,088 - #44 {
INFO  16:29:55,088 - #12 print
INFO  16:29:55,088 - #40 (
INFO  16:29:55,088 - #51 v
INFO  16:29:55,088 - #41 )
INFO  16:29:55,088 - #38 ;
INFO  16:29:55,088 - #15 return
INFO  16:29:55,088 - #50 false
INFO  16:29:55,088 - #38 ;
INFO  16:29:55,088 - #45 }
INFO  16:29:55,088 - #14 void
INFO  16:29:55,088 - #49 main
INFO  16:29:55,088 - #40 (
INFO  16:29:55,088 - #41 )
INFO  16:29:55,088 - #44 {
INFO  16:29:55,088 - #5 if
INFO  16:29:55,088 - #40 (
INFO  16:29:55,088 - #52 1
INFO  16:29:55,088 - #29 !=
INFO  16:29:55,088 - #52 1
INFO  16:29:55,088 - #41 )
INFO  16:29:55,088 - #12 print
INFO  16:29:55,088 - #40 (
INFO  16:29:55,089 - #23 -
INFO  16:29:55,089 - #52 6
INFO  16:29:55,089 - #41 )
INFO  16:29:55,089 - #38 ;
INFO  16:29:55,089 - #6 else
INFO  16:29:55,089 - #12 print
INFO  16:29:55,089 - #40 (
INFO  16:29:55,089 - #52 0
INFO  16:29:55,089 - #41 )
INFO  16:29:55,089 - #38 ;
INFO  16:29:55,089 - #49 ibool
INFO  16:29:55,089 - #27 =
INFO  16:29:55,089 - #50 false
INFO  16:29:55,089 - #38 ;
INFO  16:29:55,089 - #49 i
INFO  16:29:55,089 - #27 =
INFO  16:29:55,089 - #52 0
INFO  16:29:55,089 - #38 ;
INFO  16:29:55,089 - #9 do
INFO  16:29:55,089 - #44 {
INFO  16:29:55,089 - #5 if
INFO  16:29:55,089 - #40 (
INFO  16:29:55,089 - #49 i
INFO  16:29:55,089 - #28 ==
INFO  16:29:55,089 - #52 2
INFO  16:29:55,089 - #41 )
INFO  16:29:55,089 - #49 ibool
INFO  16:29:55,089 - #27 =
INFO  16:29:55,089 - #50 true
INFO  16:29:55,089 - #38 ;
INFO  16:29:55,089 - #49 i
INFO  16:29:55,089 - #36 ++
INFO  16:29:55,089 - #38 ;
INFO  16:29:55,089 - #45 }
INFO  16:29:55,089 - #10 while
INFO  16:29:55,089 - #40 (
INFO  16:29:55,089 - #49 i
INFO  16:29:55,089 - #32 <
INFO  16:29:55,089 - #52 5
INFO  16:29:55,089 - #41 )
INFO  16:29:55,089 - #38 ;
INFO  16:29:55,089 - #5 if
INFO  16:29:55,089 - #40 (
INFO  16:29:55,089 - #49 ibool
INFO  16:29:55,089 - #41 )
INFO  16:29:55,089 - #5 if
INFO  16:29:55,090 - #40 (
INFO  16:29:55,090 - #49 i
INFO  16:29:55,090 - #28 ==
INFO  16:29:55,090 - #52 5
INFO  16:29:55,090 - #41 )
INFO  16:29:55,090 - #12 print
INFO  16:29:55,090 - #40 (
INFO  16:29:55,090 - #52 1
INFO  16:29:55,090 - #41 )
INFO  16:29:55,090 - #38 ;
INFO  16:29:55,090 - #6 else
INFO  16:29:55,090 - #12 print
INFO  16:29:55,090 - #40 (
INFO  16:29:55,090 - #23 -
INFO  16:29:55,090 - #52 1
INFO  16:29:55,090 - #41 )
INFO  16:29:55,090 - #38 ;
INFO  16:29:55,090 - #49 a
INFO  16:29:55,090 - #27 =
INFO  16:29:55,090 - #52 2
INFO  16:29:55,090 - #38 ;
INFO  16:29:55,090 - #49 niz
INFO  16:29:55,090 - #27 =
INFO  16:29:55,090 - #11 new
INFO  16:29:55,090 - #49 int
INFO  16:29:55,090 - #42 [
INFO  16:29:55,090 - #52 3
INFO  16:29:55,090 - #43 ]
INFO  16:29:55,090 - #38 ;
INFO  16:29:55,090 - #49 niz
INFO  16:29:55,090 - #42 [
INFO  16:29:55,090 - #52 0
INFO  16:29:55,090 - #43 ]
INFO  16:29:55,090 - #27 =
INFO  16:29:55,090 - #52 1
INFO  16:29:55,090 - #24 *
INFO  16:29:55,090 - #49 a
INFO  16:29:55,091 - #38 ;
INFO  16:29:55,091 - #49 niz
INFO  16:29:55,091 - #42 [
INFO  16:29:55,091 - #52 1
INFO  16:29:55,091 - #43 ]
INFO  16:29:55,091 - #27 =
INFO  16:29:55,091 - #52 2
INFO  16:29:55,091 - #24 *
INFO  16:29:55,091 - #49 a
INFO  16:29:55,091 - #38 ;
INFO  16:29:55,091 - #49 niz
INFO  16:29:55,091 - #42 [
INFO  16:29:55,091 - #52 2
INFO  16:29:55,091 - #43 ]
INFO  16:29:55,091 - #27 =
INFO  16:29:55,091 - #49 sum
INFO  16:29:55,091 - #40 (
INFO  16:29:55,091 - #49 niz
INFO  16:29:55,091 - #42 [
INFO  16:29:55,091 - #52 1
INFO  16:29:55,091 - #43 ]
INFO  16:29:55,091 - #39 ,
INFO  16:29:55,091 - #49 niz
INFO  16:29:55,091 - #42 [
INFO  16:29:55,091 - #52 0
INFO  16:29:55,091 - #43 ]
INFO  16:29:55,091 - #41 )
INFO  16:29:55,091 - #24 *
INFO  16:29:55,091 - #49 a
INFO  16:29:55,091 - #22 +
INFO  16:29:55,091 - #52 1
INFO  16:29:55,091 - #38 ;
INFO  16:29:55,091 - #5 if
INFO  16:29:55,091 - #40 (
INFO  16:29:55,091 - #49 verify
INFO  16:29:55,091 - #40 (
INFO  16:29:55,091 - #41 )
INFO  16:29:55,091 - #35 ||
INFO  16:29:55,091 - #49 niz
INFO  16:29:55,091 - #42 [
INFO  16:29:55,091 - #52 2
INFO  16:29:55,091 - #43 ]
INFO  16:29:55,091 - #28 ==
INFO  16:29:55,091 - #52 4
INFO  16:29:55,091 - #41 )
INFO  16:29:55,091 - #12 print
INFO  16:29:55,091 - #40 (
INFO  16:29:55,091 - #49 ord
INFO  16:29:55,091 - #40 (
INFO  16:29:55,091 - #51 A
INFO  16:29:55,091 - #41 )
INFO  16:29:55,091 - #41 )
INFO  16:29:55,091 - #38 ;
INFO  16:29:55,091 - #6 else
INFO  16:29:55,091 - #12 print
INFO  16:29:55,091 - #40 (
INFO  16:29:55,091 - #49 ord
INFO  16:29:55,091 - #40 (
INFO  16:29:55,091 - #51 a
INFO  16:29:55,091 - #41 )
INFO  16:29:55,091 - #41 )
INFO  16:29:55,092 - #38 ;
INFO  16:29:55,092 - #12 print
INFO  16:29:55,092 - #40 (
INFO  16:29:55,092 - #49 eol
INFO  16:29:55,092 - #41 )
INFO  16:29:55,092 - #38 ;
INFO  16:29:55,092 - #49 i
INFO  16:29:55,092 - #27 =
INFO  16:29:55,092 - #52 0
INFO  16:29:55,092 - #38 ;
INFO  16:29:55,092 - #9 do
INFO  16:29:55,092 - #44 {
INFO  16:29:55,092 - #5 if
INFO  16:29:55,092 - #40 (
INFO  16:29:55,092 - #49 i
INFO  16:29:55,092 - #28 ==
INFO  16:29:55,092 - #52 3
INFO  16:29:55,092 - #41 )
INFO  16:29:55,092 - #44 {
INFO  16:29:55,092 - #49 i
INFO  16:29:55,092 - #36 ++
INFO  16:29:55,092 - #38 ;
INFO  16:29:55,092 - #4 continue
INFO  16:29:55,092 - #38 ;
INFO  16:29:55,092 - #45 }
INFO  16:29:55,092 - #5 if
INFO  16:29:55,092 - #40 (
INFO  16:29:55,092 - #49 i
INFO  16:29:55,092 - #28 ==
INFO  16:29:55,092 - #52 4
INFO  16:29:55,092 - #41 )
INFO  16:29:55,092 - #3 break
INFO  16:29:55,092 - #38 ;
INFO  16:29:55,092 - #49 i
INFO  16:29:55,092 - #27 =
INFO  16:29:55,092 - #49 inkrement
INFO  16:29:55,092 - #40 (
INFO  16:29:55,092 - #49 i
INFO  16:29:55,092 - #39 ,
INFO  16:29:55,092 - #52 1
INFO  16:29:55,092 - #41 )
INFO  16:29:55,092 - #38 ;
INFO  16:29:55,092 - #45 }
INFO  16:29:55,092 - #10 while
INFO  16:29:55,092 - #40 (
INFO  16:29:55,092 - #49 i
INFO  16:29:55,092 - #32 <
INFO  16:29:55,092 - #52 10
INFO  16:29:55,092 - #41 )
INFO  16:29:55,092 - #38 ;
INFO  16:29:55,092 - #5 if
INFO  16:29:55,092 - #40 (
INFO  16:29:55,092 - #49 i
INFO  16:29:55,092 - #28 ==
INFO  16:29:55,092 - #52 3
INFO  16:29:55,092 - #34 &&
INFO  16:29:55,092 - #49 verify
INFO  16:29:55,092 - #40 (
INFO  16:29:55,092 - #41 )
INFO  16:29:55,092 - #41 )
INFO  16:29:55,092 - #12 print
INFO  16:29:55,092 - #40 (
INFO  16:29:55,092 - #23 -
INFO  16:29:55,092 - #52 4
INFO  16:29:55,092 - #41 )
INFO  16:29:55,092 - #38 ;
INFO  16:29:55,092 - #6 else
INFO  16:29:55,092 - #12 print
INFO  16:29:55,092 - #40 (
INFO  16:29:55,093 - #52 4
INFO  16:29:55,093 - #41 )
INFO  16:29:55,093 - #38 ;
INFO  16:29:55,093 - #13 read
INFO  16:29:55,093 - #40 (
INFO  16:29:55,093 - #49 niz
INFO  16:29:55,093 - #42 [
INFO  16:29:55,093 - #52 0
INFO  16:29:55,093 - #43 ]
INFO  16:29:55,093 - #41 )
INFO  16:29:55,093 - #38 ;
INFO  16:29:55,093 - #13 read
INFO  16:29:55,093 - #40 (
INFO  16:29:55,093 - #49 niz
INFO  16:29:55,093 - #42 [
INFO  16:29:55,093 - #52 1
INFO  16:29:55,093 - #43 ]
INFO  16:29:55,093 - #41 )
INFO  16:29:55,093 - #38 ;
INFO  16:29:55,093 - #13 read
INFO  16:29:55,093 - #40 (
INFO  16:29:55,093 - #49 niz
INFO  16:29:55,093 - #42 [
INFO  16:29:55,093 - #52 2
INFO  16:29:55,093 - #43 ]
INFO  16:29:55,093 - #41 )
INFO  16:29:55,093 - #38 ;
INFO  16:29:55,093 - #12 print
INFO  16:29:55,093 - #40 (
INFO  16:29:55,093 - #49 eol
INFO  16:29:55,093 - #41 )
INFO  16:29:55,093 - #38 ;
INFO  16:29:55,093 - #12 print
INFO  16:29:55,093 - #40 (
INFO  16:29:55,093 - #49 sum
INFO  16:29:55,093 - #40 (
INFO  16:29:55,093 - #49 sum
INFO  16:29:55,093 - #40 (
INFO  16:29:55,093 - #49 niz
INFO  16:29:55,093 - #42 [
INFO  16:29:55,093 - #52 0
INFO  16:29:55,093 - #43 ]
INFO  16:29:55,093 - #39 ,
INFO  16:29:55,093 - #49 niz
INFO  16:29:55,093 - #42 [
INFO  16:29:55,093 - #52 1
INFO  16:29:55,093 - #43 ]
INFO  16:29:55,093 - #41 )
INFO  16:29:55,093 - #39 ,
INFO  16:29:55,093 - #49 niz
INFO  16:29:55,093 - #42 [
INFO  16:29:55,093 - #52 2
INFO  16:29:55,093 - #43 ]
INFO  16:29:55,093 - #41 )
INFO  16:29:55,093 - #41 )
INFO  16:29:55,093 - #38 ;
INFO  16:29:55,093 - #12 print
INFO  16:29:55,093 - #40 (
INFO  16:29:55,093 - #49 eol
INFO  16:29:55,093 - #41 )
INFO  16:29:55,093 - #38 ;
INFO  16:29:55,093 - #12 print
INFO  16:29:55,093 - #40 (
INFO  16:29:55,093 - #49 inkrement
INFO  16:29:55,093 - #40 (
INFO  16:29:55,093 - #49 niz
INFO  16:29:55,093 - #42 [
INFO  16:29:55,093 - #52 2
INFO  16:29:55,093 - #43 ]
INFO  16:29:55,093 - #39 ,
INFO  16:29:55,093 - #52 2
INFO  16:29:55,093 - #41 )
INFO  16:29:55,093 - #41 )
INFO  16:29:55,093 - #38 ;
INFO  16:29:55,093 - #49 a
INFO  16:29:55,093 - #27 =
INFO  16:29:55,093 - #52 3
INFO  16:29:55,093 - #38 ;
INFO  16:29:55,093 - #49 i
INFO  16:29:55,093 - #27 =
INFO  16:29:55,093 - #52 0
INFO  16:29:55,093 - #38 ;
INFO  16:29:55,093 - #9 do
INFO  16:29:55,093 - #44 {
INFO  16:29:55,093 - #49 niz
INFO  16:29:55,093 - #42 [
INFO  16:29:55,093 - #49 i
INFO  16:29:55,093 - #43 ]
INFO  16:29:55,093 - #27 =
INFO  16:29:55,093 - #49 niz
INFO  16:29:55,093 - #42 [
INFO  16:29:55,093 - #49 i
INFO  16:29:55,093 - #43 ]
INFO  16:29:55,093 - #24 *
INFO  16:29:55,093 - #52 2
INFO  16:29:55,093 - #24 *
INFO  16:29:55,093 - #49 a
INFO  16:29:55,093 - #38 ;
INFO  16:29:55,093 - #49 i
INFO  16:29:55,093 - #36 ++
INFO  16:29:55,093 - #38 ;
INFO  16:29:55,093 - #45 }
INFO  16:29:55,093 - #10 while
INFO  16:29:55,093 - #40 (
INFO  16:29:55,093 - #49 i
INFO  16:29:55,093 - #32 <
INFO  16:29:55,093 - #52 3
INFO  16:29:55,093 - #41 )
INFO  16:29:55,093 - #38 ;
INFO  16:29:55,093 - #12 print
INFO  16:29:55,093 - #40 (
INFO  16:29:55,093 - #49 niz
INFO  16:29:55,093 - #42 [
INFO  16:29:55,093 - #52 0
INFO  16:29:55,093 - #43 ]
INFO  16:29:55,094 - #41 )
INFO  16:29:55,094 - #38 ;
INFO  16:29:55,094 - #12 print
INFO  16:29:55,094 - #40 (
INFO  16:29:55,094 - #49 niz
INFO  16:29:55,094 - #42 [
INFO  16:29:55,094 - #52 1
INFO  16:29:55,094 - #43 ]
INFO  16:29:55,094 - #41 )
INFO  16:29:55,094 - #38 ;
INFO  16:29:55,094 - #12 print
INFO  16:29:55,094 - #40 (
INFO  16:29:55,094 - #49 niz
INFO  16:29:55,094 - #42 [
INFO  16:29:55,094 - #52 2
INFO  16:29:55,094 - #43 ]
INFO  16:29:55,094 - #41 )
INFO  16:29:55,094 - #38 ;
INFO  16:29:55,094 - #12 print
INFO  16:29:55,094 - #40 (
INFO  16:29:55,094 - #49 eol
INFO  16:29:55,094 - #41 )
INFO  16:29:55,094 - #38 ;
INFO  16:29:55,094 - #49 i
INFO  16:29:55,094 - #27 =
INFO  16:29:55,094 - #52 0
INFO  16:29:55,094 - #38 ;
INFO  16:29:55,094 - #49 niz2
INFO  16:29:55,094 - #27 =
INFO  16:29:55,094 - #52 0
INFO  16:29:55,094 - #38 ;
INFO  16:29:55,094 - #9 do
INFO  16:29:55,094 - #44 {
INFO  16:29:55,094 - #49 niz2
INFO  16:29:55,094 - #27 =
INFO  16:29:55,094 - #49 niz2
INFO  16:29:55,094 - #22 +
INFO  16:29:55,094 - #49 niz
INFO  16:29:55,094 - #42 [
INFO  16:29:55,094 - #49 i
INFO  16:29:55,094 - #43 ]
INFO  16:29:55,094 - #24 *
INFO  16:29:55,094 - #49 niz
INFO  16:29:55,094 - #42 [
INFO  16:29:55,094 - #49 i
INFO  16:29:55,094 - #43 ]
INFO  16:29:55,094 - #38 ;
INFO  16:29:55,094 - #49 i
INFO  16:29:55,094 - #36 ++
INFO  16:29:55,094 - #38 ;
INFO  16:29:55,094 - #45 }
INFO  16:29:55,094 - #10 while
INFO  16:29:55,094 - #40 (
INFO  16:29:55,094 - #49 i
INFO  16:29:55,094 - #32 <
INFO  16:29:55,094 - #52 3
INFO  16:29:55,094 - #41 )
INFO  16:29:55,094 - #38 ;
INFO  16:29:55,094 - #12 print
INFO  16:29:55,094 - #40 (
INFO  16:29:55,094 - #49 niz2
INFO  16:29:55,094 - #41 )
INFO  16:29:55,094 - #38 ;
INFO  16:29:55,094 - #12 print
INFO  16:29:55,094 - #40 (
INFO  16:29:55,094 - #49 eol
INFO  16:29:55,094 - #41 )
INFO  16:29:55,094 - #38 ;
INFO  16:29:55,094 - #49 printArgs
INFO  16:29:55,094 - #40 (
INFO  16:29:55,094 - #52 5
INFO  16:29:55,094 - #39 ,
INFO  16:29:55,094 - #51 t
INFO  16:29:55,094 - #39 ,
INFO  16:29:55,094 - #51 e
INFO  16:29:55,094 - #39 ,
INFO  16:29:55,094 - #51 s
INFO  16:29:55,094 - #39 ,
INFO  16:29:55,094 - #51 t
INFO  16:29:55,094 - #39 ,
INFO  16:29:55,094 - #51 B
INFO  16:29:55,094 - #41 )
INFO  16:29:55,094 - #38 ;
INFO  16:29:55,094 - #45 }
INFO  16:29:55,094 - #45 }
INFO  16:29:55,099 - Program(
  ProgramName(
   test302
  ) [ProgramName]
  AllDeclListMultiple(
    AllDeclListMultiple(
      AllDeclListMultiple(
        AllDeclListMultiple(
          AllDeclListMultiple(
            AllDeclListMultiple(
              NoDecl(
              ) [NoDecl]
              ConstDeclaration(
                ConstDeclarationExpr(
                  Type(
                   int
                  ) [Type]
                  ConstAssignSingle(
                    ConstAssign(
                     jedan
                      NumberConst(
                       1
                      ) [NumberConst]
                    ) [ConstAssign]
                  ) [ConstAssignSingle]
                ) [ConstDeclarationExpr]
              ) [ConstDeclaration]
            ) [AllDeclListMultiple]
            GlobalVarDeclaration(
              GlobalVarDeclarationExpr(
                Type(
                 int
                ) [Type]
                GlobalVarDeclListSingle(
                  GlobalVarDeclarationSingle(
                   i
                    NoArray(
                    ) [NoArray]
                  ) [GlobalVarDeclarationSingle]
                ) [GlobalVarDeclListSingle]
              ) [GlobalVarDeclarationExpr]
            ) [GlobalVarDeclaration]
          ) [AllDeclListMultiple]
          GlobalVarDeclaration(
            GlobalVarDeclarationExpr(
              Type(
               bool
              ) [Type]
              GlobalVarDeclListSingle(
                GlobalVarDeclarationSingle(
                 ibool
                  NoArray(
                  ) [NoArray]
                ) [GlobalVarDeclarationSingle]
              ) [GlobalVarDeclListSingle]
            ) [GlobalVarDeclarationExpr]
          ) [GlobalVarDeclaration]
        ) [AllDeclListMultiple]
        GlobalVarDeclaration(
          GlobalVarDeclarationExpr(
            Type(
             int
            ) [Type]
            GlobalVarDeclListSingle(
              GlobalVarDeclarationSingle(
               niz2
                NoArray(
                ) [NoArray]
              ) [GlobalVarDeclarationSingle]
            ) [GlobalVarDeclListSingle]
          ) [GlobalVarDeclarationExpr]
        ) [GlobalVarDeclaration]
      ) [AllDeclListMultiple]
      GlobalVarDeclaration(
        GlobalVarDeclarationExpr(
          Type(
           int
          ) [Type]
          GlobalVarDeclListSingle(
            GlobalVarDeclarationSingle(
             niz
              ArrayBrackets(
              ) [ArrayBrackets]
            ) [GlobalVarDeclarationSingle]
          ) [GlobalVarDeclListSingle]
        ) [GlobalVarDeclarationExpr]
      ) [GlobalVarDeclaration]
    ) [AllDeclListMultiple]
    GlobalVarDeclaration(
      GlobalVarDeclarationExpr(
        Type(
         int
        ) [Type]
        GlobalVarDeclListSingle(
          GlobalVarDeclarationSingle(
           a
            NoArray(
            ) [NoArray]
          ) [GlobalVarDeclarationSingle]
        ) [GlobalVarDeclListSingle]
      ) [GlobalVarDeclarationExpr]
    ) [GlobalVarDeclaration]
  ) [AllDeclListMultiple]
  MethodDeclListMultiple(
    MethodDeclListMultiple(
      MethodDeclListMultiple(
        MethodDeclListMultiple(
          MethodDeclListMultiple(
            MethodDeclListNo(
            ) [MethodDeclListNo]
            MethodDeclaration(
              MethodSignatureVarArgsOnly(
                MethodTypeType(
                  Type(
                   int
                  ) [Type]
                ) [MethodTypeType]
                MethodName(
                 sum
                ) [MethodName]
                Type(
                 int
                ) [Type]
                VarArgsDeclaration(
                 args
                ) [VarArgsDeclaration]
                FormParsEnd(
                ) [FormParsEnd]
              ) [MethodSignatureVarArgsOnly]
              VarDeclOptionTrue(
                NoVarDeclOption(
                ) [NoVarDeclOption]
                VarDeclarationExpr(
                  Type(
                   int
                  ) [Type]
                  VarDeclListMultiple(
                    VarDeclListSingle(
                      VarDeclSingle(
                       z
                        NoArray(
                        ) [NoArray]
                      ) [VarDeclSingle]
                    ) [VarDeclListSingle]
                    VarDeclSingle(
                     d
                      NoArray(
                      ) [NoArray]
                    ) [VarDeclSingle]
                  ) [VarDeclListMultiple]
                ) [VarDeclarationExpr]
              ) [VarDeclOptionTrue]
              StatementListMultiple(
                StatementListMultiple(
                  StatementListMultiple(
                    StatementListNo(
                    ) [StatementListNo]
                    StatementSingle(
                      SingleDesignatorStatement(
                        DesignatorStmtAssign(
                          DesignatorStmtAssignCorrect(
                            IdentDesignator(
                             z
                            ) [IdentDesignator]
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                DesignatorEmptyFactor(
                                  IdentArrayDesignator(
                                   args
                                    SingleTermExprPositive(
                                      SingleFactorTerm(
                                        NumConstFactor(
                                         0
                                        ) [NumConstFactor]
                                      ) [SingleFactorTerm]
                                    ) [SingleTermExprPositive]
                                  ) [IdentArrayDesignator]
                                ) [DesignatorEmptyFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [DesignatorStmtAssignCorrect]
                        ) [DesignatorStmtAssign]
                      ) [SingleDesignatorStatement]
                    ) [StatementSingle]
                  ) [StatementListMultiple]
                  StatementSingle(
                    SingleDesignatorStatement(
                      DesignatorStmtAssign(
                        DesignatorStmtAssignCorrect(
                          IdentDesignator(
                           d
                          ) [IdentDesignator]
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              DesignatorEmptyFactor(
                                IdentArrayDesignator(
                                 args
                                  SingleTermExprPositive(
                                    SingleFactorTerm(
                                      NumConstFactor(
                                       1
                                      ) [NumConstFactor]
                                    ) [SingleFactorTerm]
                                  ) [SingleTermExprPositive]
                                ) [IdentArrayDesignator]
                              ) [DesignatorEmptyFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [DesignatorStmtAssignCorrect]
                      ) [DesignatorStmtAssign]
                    ) [SingleDesignatorStatement]
                  ) [StatementSingle]
                ) [StatementListMultiple]
                StatementSingle(
                  SingleReturnExprStatement(
                    MultiTermExpr(
                      SingleTermExprPositive(
                        SingleFactorTerm(
                          DesignatorEmptyFactor(
                            IdentDesignator(
                             z
                            ) [IdentDesignator]
                          ) [DesignatorEmptyFactor]
                        ) [SingleFactorTerm]
                      ) [SingleTermExprPositive]
                      AddopPlus(
                      ) [AddopPlus]
                      SingleFactorTerm(
                        DesignatorEmptyFactor(
                          IdentDesignator(
                           d
                          ) [IdentDesignator]
                        ) [DesignatorEmptyFactor]
                      ) [SingleFactorTerm]
                    ) [MultiTermExpr]
                  ) [SingleReturnExprStatement]
                ) [StatementSingle]
              ) [StatementListMultiple]
            ) [MethodDeclaration]
          ) [MethodDeclListMultiple]
          MethodDeclaration(
            MethodSignatureVarArgs(
              MethodTypeVoid(
              ) [MethodTypeVoid]
              MethodName(
               printArgs
              ) [MethodName]
              FormParsSingle(
                FormParSingle(
                  Type(
                   int
                  ) [Type]
                 num
                  NoArray(
                  ) [NoArray]
                ) [FormParSingle]
              ) [FormParsSingle]
              Type(
               char
              ) [Type]
              VarArgsDeclaration(
               args
              ) [VarArgsDeclaration]
              FormParsEnd(
              ) [FormParsEnd]
            ) [MethodSignatureVarArgs]
            VarDeclOptionTrue(
              NoVarDeclOption(
              ) [NoVarDeclOption]
              VarDeclarationExpr(
                Type(
                 int
                ) [Type]
                VarDeclListSingle(
                  VarDeclSingle(
                   i
                    NoArray(
                    ) [NoArray]
                  ) [VarDeclSingle]
                ) [VarDeclListSingle]
              ) [VarDeclarationExpr]
            ) [VarDeclOptionTrue]
            StatementListMultiple(
              StatementListMultiple(
                StatementListNo(
                ) [StatementListNo]
                StatementSingle(
                  SingleDesignatorStatement(
                    DesignatorStmtAssign(
                      DesignatorStmtAssignCorrect(
                        IdentDesignator(
                         i
                        ) [IdentDesignator]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            NumConstFactor(
                             0
                            ) [NumConstFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [DesignatorStmtAssignCorrect]
                    ) [DesignatorStmtAssign]
                  ) [SingleDesignatorStatement]
                ) [StatementSingle]
              ) [StatementListMultiple]
              StatementSingle(
                DoWhileStatement(
                  DoEnter(
                  ) [DoEnter]
                  StatementListMultiple(
                    StatementListNo(
                    ) [StatementListNo]
                    StatementMultiple(
                      StatementsInBraces(
                        StatementListMultiple(
                          StatementListMultiple(
                            StatementListNo(
                            ) [StatementListNo]
                            StatementSingle(
                              SinglePrintStatement(
                                SingleTermExprPositive(
                                  SingleFactorTerm(
                                    DesignatorEmptyFactor(
                                      IdentArrayDesignator(
                                       args
                                        SingleTermExprPositive(
                                          SingleFactorTerm(
                                            DesignatorEmptyFactor(
                                              IdentDesignator(
                                               i
                                              ) [IdentDesignator]
                                            ) [DesignatorEmptyFactor]
                                          ) [SingleFactorTerm]
                                        ) [SingleTermExprPositive]
                                      ) [IdentArrayDesignator]
                                    ) [DesignatorEmptyFactor]
                                  ) [SingleFactorTerm]
                                ) [SingleTermExprPositive]
                                NumConstNo(
                                ) [NumConstNo]
                              ) [SinglePrintStatement]
                            ) [StatementSingle]
                          ) [StatementListMultiple]
                          StatementSingle(
                            SingleDesignatorStatement(
                              DesignatorStmtPlusPlus(
                                IdentDesignator(
                                 i
                                ) [IdentDesignator]
                              ) [DesignatorStmtPlusPlus]
                            ) [SingleDesignatorStatement]
                          ) [StatementSingle]
                        ) [StatementListMultiple]
                      ) [StatementsInBraces]
                    ) [StatementMultiple]
                  ) [StatementListMultiple]
                  ConditionSingleTerm(
                    CondSingleFactTerm(
                      CondMultiExprFact(
                        CondSingleExprFact(
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              DesignatorEmptyFactor(
                                IdentDesignator(
                                 i
                                ) [IdentDesignator]
                              ) [DesignatorEmptyFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [CondSingleExprFact]
                        RelopLS(
                        ) [RelopLS]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            DesignatorEmptyFactor(
                              IdentDesignator(
                               num
                              ) [IdentDesignator]
                            ) [DesignatorEmptyFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [CondMultiExprFact]
                    ) [CondSingleFactTerm]
                  ) [ConditionSingleTerm]
                ) [DoWhileStatement]
              ) [StatementSingle]
            ) [StatementListMultiple]
          ) [MethodDeclaration]
        ) [MethodDeclListMultiple]
        MethodDeclaration(
          MethodSignatureParams(
            MethodTypeType(
              Type(
               int
              ) [Type]
            ) [MethodTypeType]
            MethodName(
             inkrement
            ) [MethodName]
            FormParsMultiple(
              FormParsSingle(
                FormParSingle(
                  Type(
                   int
                  ) [Type]
                 a
                  NoArray(
                  ) [NoArray]
                ) [FormParSingle]
              ) [FormParsSingle]
              FormParSingle(
                Type(
                 int
                ) [Type]
               inc
                NoArray(
                ) [NoArray]
              ) [FormParSingle]
            ) [FormParsMultiple]
            FormParsEnd(
            ) [FormParsEnd]
          ) [MethodSignatureParams]
          VarDeclOptionTrue(
            NoVarDeclOption(
            ) [NoVarDeclOption]
            VarDeclarationExpr(
              Type(
               int
              ) [Type]
              VarDeclListSingle(
                VarDeclSingle(
                 pom
                  NoArray(
                  ) [NoArray]
                ) [VarDeclSingle]
              ) [VarDeclListSingle]
            ) [VarDeclarationExpr]
          ) [VarDeclOptionTrue]
          StatementListMultiple(
            StatementListMultiple(
              StatementListNo(
              ) [StatementListNo]
              StatementSingle(
                IfElseStatement(
                  IfConditionSingleTerm(
                    CondSingleFactTerm(
                      CondMultiExprFact(
                        CondSingleExprFact(
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              DesignatorEmptyFactor(
                                IdentDesignator(
                                 inc
                                ) [IdentDesignator]
                              ) [DesignatorEmptyFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [CondSingleExprFact]
                        RelopEQUAL(
                        ) [RelopEQUAL]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            DesignatorEmptyFactor(
                              IdentDesignator(
                               jedan
                              ) [IdentDesignator]
                            ) [DesignatorEmptyFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [CondMultiExprFact]
                    ) [CondSingleFactTerm]
                  ) [IfConditionSingleTerm]
                  StatementSingle(
                    SingleDesignatorStatement(
                      DesignatorStmtAssign(
                        DesignatorStmtAssignCorrect(
                          IdentDesignator(
                           pom
                          ) [IdentDesignator]
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              NumConstFactor(
                               1
                              ) [NumConstFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [DesignatorStmtAssignCorrect]
                      ) [DesignatorStmtAssign]
                    ) [SingleDesignatorStatement]
                  ) [StatementSingle]
                  StatementSingle(
                    IfStatement(
                      IfConditionSingleTerm(
                        CondSingleFactTerm(
                          CondMultiExprFact(
                            CondSingleExprFact(
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentDesignator(
                                     inc
                                    ) [IdentDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [CondSingleExprFact]
                            RelopEQUAL(
                            ) [RelopEQUAL]
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                NumConstFactor(
                                 2
                                ) [NumConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [CondMultiExprFact]
                        ) [CondSingleFactTerm]
                      ) [IfConditionSingleTerm]
                      StatementSingle(
                        SingleDesignatorStatement(
                          DesignatorStmtAssign(
                            DesignatorStmtAssignCorrect(
                              IdentDesignator(
                               pom
                              ) [IdentDesignator]
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentDesignator(
                                     a
                                    ) [IdentDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [DesignatorStmtAssignCorrect]
                          ) [DesignatorStmtAssign]
                        ) [SingleDesignatorStatement]
                      ) [StatementSingle]
                    ) [IfStatement]
                  ) [StatementSingle]
                ) [IfElseStatement]
              ) [StatementSingle]
            ) [StatementListMultiple]
            StatementSingle(
              SingleReturnExprStatement(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    MethodCallFactor(
                      MethodCall(
                        IdentDesignator(
                         sum
                        ) [IdentDesignator]
                        ActParsLeftParen(
                        ) [ActParsLeftParen]
                        ActParsYes(
                          ActParsMultiExpr(
                            ActParsSingleExpr(
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentDesignator(
                                     a
                                    ) [IdentDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [ActParsSingleExpr]
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                DesignatorEmptyFactor(
                                  IdentDesignator(
                                   pom
                                  ) [IdentDesignator]
                                ) [DesignatorEmptyFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [ActParsMultiExpr]
                        ) [ActParsYes]
                        ActParsRightParen(
                        ) [ActParsRightParen]
                      ) [MethodCall]
                    ) [MethodCallFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
              ) [SingleReturnExprStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
        ) [MethodDeclaration]
      ) [MethodDeclListMultiple]
      MethodDeclaration(
        MethodSignaturePlain(
          MethodTypeType(
            Type(
             bool
            ) [Type]
          ) [MethodTypeType]
          MethodName(
           verify
          ) [MethodName]
        ) [MethodSignaturePlain]
        NoVarDeclOption(
        ) [NoVarDeclOption]
        StatementListMultiple(
          StatementListMultiple(
            StatementListNo(
            ) [StatementListNo]
            StatementSingle(
              SinglePrintStatement(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    CharConstFactor(
                     v
                    ) [CharConstFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
                NumConstNo(
                ) [NumConstNo]
              ) [SinglePrintStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
          StatementSingle(
            SingleReturnExprStatement(
              SingleTermExprPositive(
                SingleFactorTerm(
                  BoolConstFactor(
                   false
                  ) [BoolConstFactor]
                ) [SingleFactorTerm]
              ) [SingleTermExprPositive]
            ) [SingleReturnExprStatement]
          ) [StatementSingle]
        ) [StatementListMultiple]
      ) [MethodDeclaration]
    ) [MethodDeclListMultiple]
    MethodDeclaration(
      MethodSignaturePlain(
        MethodTypeVoid(
        ) [MethodTypeVoid]
        MethodName(
         main
        ) [MethodName]
      ) [MethodSignaturePlain]
      NoVarDeclOption(
      ) [NoVarDeclOption]
      StatementListMultiple(
        StatementListMultiple(
          StatementListMultiple(
            StatementListMultiple(
              StatementListMultiple(
                StatementListMultiple(
                  StatementListMultiple(
                    StatementListMultiple(
                      StatementListMultiple(
                        StatementListMultiple(
                          StatementListMultiple(
                            StatementListMultiple(
                              StatementListMultiple(
                                StatementListMultiple(
                                  StatementListMultiple(
                                    StatementListMultiple(
                                      StatementListMultiple(
                                        StatementListMultiple(
                                          StatementListMultiple(
                                            StatementListMultiple(
                                              StatementListMultiple(
                                                StatementListMultiple(
                                                  StatementListMultiple(
                                                    StatementListMultiple(
                                                      StatementListMultiple(
                                                        StatementListMultiple(
                                                          StatementListMultiple(
                                                            StatementListMultiple(
                                                              StatementListMultiple(
                                                                StatementListMultiple(
                                                                  StatementListMultiple(
                                                                    StatementListMultiple(
                                                                      StatementListMultiple(
                                                                        StatementListMultiple(
                                                                          StatementListMultiple(
                                                                            StatementListNo(
                                                                            ) [StatementListNo]
                                                                            StatementSingle(
                                                                              IfElseStatement(
                                                                                IfConditionSingleTerm(
                                                                                  CondSingleFactTerm(
                                                                                    CondMultiExprFact(
                                                                                      CondSingleExprFact(
                                                                                        SingleTermExprPositive(
                                                                                          SingleFactorTerm(
                                                                                            NumConstFactor(
                                                                                             1
                                                                                            ) [NumConstFactor]
                                                                                          ) [SingleFactorTerm]
                                                                                        ) [SingleTermExprPositive]
                                                                                      ) [CondSingleExprFact]
                                                                                      RelopNOTEQUAL(
                                                                                      ) [RelopNOTEQUAL]
                                                                                      SingleTermExprPositive(
                                                                                        SingleFactorTerm(
                                                                                          NumConstFactor(
                                                                                           1
                                                                                          ) [NumConstFactor]
                                                                                        ) [SingleFactorTerm]
                                                                                      ) [SingleTermExprPositive]
                                                                                    ) [CondMultiExprFact]
                                                                                  ) [CondSingleFactTerm]
                                                                                ) [IfConditionSingleTerm]
                                                                                StatementSingle(
                                                                                  SinglePrintStatement(
                                                                                    SingleTermExprNegative(
                                                                                      SingleFactorTerm(
                                                                                        NumConstFactor(
                                                                                         6
                                                                                        ) [NumConstFactor]
                                                                                      ) [SingleFactorTerm]
                                                                                    ) [SingleTermExprNegative]
                                                                                    NumConstNo(
                                                                                    ) [NumConstNo]
                                                                                  ) [SinglePrintStatement]
                                                                                ) [StatementSingle]
                                                                                StatementSingle(
                                                                                  SinglePrintStatement(
                                                                                    SingleTermExprPositive(
                                                                                      SingleFactorTerm(
                                                                                        NumConstFactor(
                                                                                         0
                                                                                        ) [NumConstFactor]
                                                                                      ) [SingleFactorTerm]
                                                                                    ) [SingleTermExprPositive]
                                                                                    NumConstNo(
                                                                                    ) [NumConstNo]
                                                                                  ) [SinglePrintStatement]
                                                                                ) [StatementSingle]
                                                                              ) [IfElseStatement]
                                                                            ) [StatementSingle]
                                                                          ) [StatementListMultiple]
                                                                          StatementSingle(
                                                                            SingleDesignatorStatement(
                                                                              DesignatorStmtAssign(
                                                                                DesignatorStmtAssignCorrect(
                                                                                  IdentDesignator(
                                                                                   ibool
                                                                                  ) [IdentDesignator]
                                                                                  SingleTermExprPositive(
                                                                                    SingleFactorTerm(
                                                                                      BoolConstFactor(
                                                                                       false
                                                                                      ) [BoolConstFactor]
                                                                                    ) [SingleFactorTerm]
                                                                                  ) [SingleTermExprPositive]
                                                                                ) [DesignatorStmtAssignCorrect]
                                                                              ) [DesignatorStmtAssign]
                                                                            ) [SingleDesignatorStatement]
                                                                          ) [StatementSingle]
                                                                        ) [StatementListMultiple]
                                                                        StatementSingle(
                                                                          SingleDesignatorStatement(
                                                                            DesignatorStmtAssign(
                                                                              DesignatorStmtAssignCorrect(
                                                                                IdentDesignator(
                                                                                 i
                                                                                ) [IdentDesignator]
                                                                                SingleTermExprPositive(
                                                                                  SingleFactorTerm(
                                                                                    NumConstFactor(
                                                                                     0
                                                                                    ) [NumConstFactor]
                                                                                  ) [SingleFactorTerm]
                                                                                ) [SingleTermExprPositive]
                                                                              ) [DesignatorStmtAssignCorrect]
                                                                            ) [DesignatorStmtAssign]
                                                                          ) [SingleDesignatorStatement]
                                                                        ) [StatementSingle]
                                                                      ) [StatementListMultiple]
                                                                      StatementSingle(
                                                                        DoWhileStatement(
                                                                          DoEnter(
                                                                          ) [DoEnter]
                                                                          StatementListMultiple(
                                                                            StatementListNo(
                                                                            ) [StatementListNo]
                                                                            StatementMultiple(
                                                                              StatementsInBraces(
                                                                                StatementListMultiple(
                                                                                  StatementListMultiple(
                                                                                    StatementListNo(
                                                                                    ) [StatementListNo]
                                                                                    StatementSingle(
                                                                                      IfStatement(
                                                                                        IfConditionSingleTerm(
                                                                                          CondSingleFactTerm(
                                                                                            CondMultiExprFact(
                                                                                              CondSingleExprFact(
                                                                                                SingleTermExprPositive(
                                                                                                  SingleFactorTerm(
                                                                                                    DesignatorEmptyFactor(
                                                                                                      IdentDesignator(
                                                                                                       i
                                                                                                      ) [IdentDesignator]
                                                                                                    ) [DesignatorEmptyFactor]
                                                                                                  ) [SingleFactorTerm]
                                                                                                ) [SingleTermExprPositive]
                                                                                              ) [CondSingleExprFact]
                                                                                              RelopEQUAL(
                                                                                              ) [RelopEQUAL]
                                                                                              SingleTermExprPositive(
                                                                                                SingleFactorTerm(
                                                                                                  NumConstFactor(
                                                                                                   2
                                                                                                  ) [NumConstFactor]
                                                                                                ) [SingleFactorTerm]
                                                                                              ) [SingleTermExprPositive]
                                                                                            ) [CondMultiExprFact]
                                                                                          ) [CondSingleFactTerm]
                                                                                        ) [IfConditionSingleTerm]
                                                                                        StatementSingle(
                                                                                          SingleDesignatorStatement(
                                                                                            DesignatorStmtAssign(
                                                                                              DesignatorStmtAssignCorrect(
                                                                                                IdentDesignator(
                                                                                                 ibool
                                                                                                ) [IdentDesignator]
                                                                                                SingleTermExprPositive(
                                                                                                  SingleFactorTerm(
                                                                                                    BoolConstFactor(
                                                                                                     true
                                                                                                    ) [BoolConstFactor]
                                                                                                  ) [SingleFactorTerm]
                                                                                                ) [SingleTermExprPositive]
                                                                                              ) [DesignatorStmtAssignCorrect]
                                                                                            ) [DesignatorStmtAssign]
                                                                                          ) [SingleDesignatorStatement]
                                                                                        ) [StatementSingle]
                                                                                      ) [IfStatement]
                                                                                    ) [StatementSingle]
                                                                                  ) [StatementListMultiple]
                                                                                  StatementSingle(
                                                                                    SingleDesignatorStatement(
                                                                                      DesignatorStmtPlusPlus(
                                                                                        IdentDesignator(
                                                                                         i
                                                                                        ) [IdentDesignator]
                                                                                      ) [DesignatorStmtPlusPlus]
                                                                                    ) [SingleDesignatorStatement]
                                                                                  ) [StatementSingle]
                                                                                ) [StatementListMultiple]
                                                                              ) [StatementsInBraces]
                                                                            ) [StatementMultiple]
                                                                          ) [StatementListMultiple]
                                                                          ConditionSingleTerm(
                                                                            CondSingleFactTerm(
                                                                              CondMultiExprFact(
                                                                                CondSingleExprFact(
                                                                                  SingleTermExprPositive(
                                                                                    SingleFactorTerm(
                                                                                      DesignatorEmptyFactor(
                                                                                        IdentDesignator(
                                                                                         i
                                                                                        ) [IdentDesignator]
                                                                                      ) [DesignatorEmptyFactor]
                                                                                    ) [SingleFactorTerm]
                                                                                  ) [SingleTermExprPositive]
                                                                                ) [CondSingleExprFact]
                                                                                RelopLS(
                                                                                ) [RelopLS]
                                                                                SingleTermExprPositive(
                                                                                  SingleFactorTerm(
                                                                                    NumConstFactor(
                                                                                     5
                                                                                    ) [NumConstFactor]
                                                                                  ) [SingleFactorTerm]
                                                                                ) [SingleTermExprPositive]
                                                                              ) [CondMultiExprFact]
                                                                            ) [CondSingleFactTerm]
                                                                          ) [ConditionSingleTerm]
                                                                        ) [DoWhileStatement]
                                                                      ) [StatementSingle]
                                                                    ) [StatementListMultiple]
                                                                    StatementSingle(
                                                                      IfStatement(
                                                                        IfConditionSingleTerm(
                                                                          CondSingleFactTerm(
                                                                            CondSingleExprFact(
                                                                              SingleTermExprPositive(
                                                                                SingleFactorTerm(
                                                                                  DesignatorEmptyFactor(
                                                                                    IdentDesignator(
                                                                                     ibool
                                                                                    ) [IdentDesignator]
                                                                                  ) [DesignatorEmptyFactor]
                                                                                ) [SingleFactorTerm]
                                                                              ) [SingleTermExprPositive]
                                                                            ) [CondSingleExprFact]
                                                                          ) [CondSingleFactTerm]
                                                                        ) [IfConditionSingleTerm]
                                                                        StatementSingle(
                                                                          IfElseStatement(
                                                                            IfConditionSingleTerm(
                                                                              CondSingleFactTerm(
                                                                                CondMultiExprFact(
                                                                                  CondSingleExprFact(
                                                                                    SingleTermExprPositive(
                                                                                      SingleFactorTerm(
                                                                                        DesignatorEmptyFactor(
                                                                                          IdentDesignator(
                                                                                           i
                                                                                          ) [IdentDesignator]
                                                                                        ) [DesignatorEmptyFactor]
                                                                                      ) [SingleFactorTerm]
                                                                                    ) [SingleTermExprPositive]
                                                                                  ) [CondSingleExprFact]
                                                                                  RelopEQUAL(
                                                                                  ) [RelopEQUAL]
                                                                                  SingleTermExprPositive(
                                                                                    SingleFactorTerm(
                                                                                      NumConstFactor(
                                                                                       5
                                                                                      ) [NumConstFactor]
                                                                                    ) [SingleFactorTerm]
                                                                                  ) [SingleTermExprPositive]
                                                                                ) [CondMultiExprFact]
                                                                              ) [CondSingleFactTerm]
                                                                            ) [IfConditionSingleTerm]
                                                                            StatementSingle(
                                                                              SinglePrintStatement(
                                                                                SingleTermExprPositive(
                                                                                  SingleFactorTerm(
                                                                                    NumConstFactor(
                                                                                     1
                                                                                    ) [NumConstFactor]
                                                                                  ) [SingleFactorTerm]
                                                                                ) [SingleTermExprPositive]
                                                                                NumConstNo(
                                                                                ) [NumConstNo]
                                                                              ) [SinglePrintStatement]
                                                                            ) [StatementSingle]
                                                                            StatementSingle(
                                                                              SinglePrintStatement(
                                                                                SingleTermExprNegative(
                                                                                  SingleFactorTerm(
                                                                                    NumConstFactor(
                                                                                     1
                                                                                    ) [NumConstFactor]
                                                                                  ) [SingleFactorTerm]
                                                                                ) [SingleTermExprNegative]
                                                                                NumConstNo(
                                                                                ) [NumConstNo]
                                                                              ) [SinglePrintStatement]
                                                                            ) [StatementSingle]
                                                                          ) [IfElseStatement]
                                                                        ) [StatementSingle]
                                                                      ) [IfStatement]
                                                                    ) [StatementSingle]
                                                                  ) [StatementListMultiple]
                                                                  StatementSingle(
                                                                    SingleDesignatorStatement(
                                                                      DesignatorStmtAssign(
                                                                        DesignatorStmtAssignCorrect(
                                                                          IdentDesignator(
                                                                           a
                                                                          ) [IdentDesignator]
                                                                          SingleTermExprPositive(
                                                                            SingleFactorTerm(
                                                                              NumConstFactor(
                                                                               2
                                                                              ) [NumConstFactor]
                                                                            ) [SingleFactorTerm]
                                                                          ) [SingleTermExprPositive]
                                                                        ) [DesignatorStmtAssignCorrect]
                                                                      ) [DesignatorStmtAssign]
                                                                    ) [SingleDesignatorStatement]
                                                                  ) [StatementSingle]
                                                                ) [StatementListMultiple]
                                                                StatementSingle(
                                                                  SingleDesignatorStatement(
                                                                    DesignatorStmtAssign(
                                                                      DesignatorStmtAssignCorrect(
                                                                        IdentDesignator(
                                                                         niz
                                                                        ) [IdentDesignator]
                                                                        SingleTermExprPositive(
                                                                          SingleFactorTerm(
                                                                            NewTypeArrayFactor(
                                                                              Type(
                                                                               int
                                                                              ) [Type]
                                                                              SingleTermExprPositive(
                                                                                SingleFactorTerm(
                                                                                  NumConstFactor(
                                                                                   3
                                                                                  ) [NumConstFactor]
                                                                                ) [SingleFactorTerm]
                                                                              ) [SingleTermExprPositive]
                                                                            ) [NewTypeArrayFactor]
                                                                          ) [SingleFactorTerm]
                                                                        ) [SingleTermExprPositive]
                                                                      ) [DesignatorStmtAssignCorrect]
                                                                    ) [DesignatorStmtAssign]
                                                                  ) [SingleDesignatorStatement]
                                                                ) [StatementSingle]
                                                              ) [StatementListMultiple]
                                                              StatementSingle(
                                                                SingleDesignatorStatement(
                                                                  DesignatorStmtAssign(
                                                                    DesignatorStmtAssignCorrect(
                                                                      IdentArrayDesignator(
                                                                       niz
                                                                        SingleTermExprPositive(
                                                                          SingleFactorTerm(
                                                                            NumConstFactor(
                                                                             0
                                                                            ) [NumConstFactor]
                                                                          ) [SingleFactorTerm]
                                                                        ) [SingleTermExprPositive]
                                                                      ) [IdentArrayDesignator]
                                                                      SingleTermExprPositive(
                                                                        MultiFactorTerm(
                                                                          SingleFactorTerm(
                                                                            NumConstFactor(
                                                                             1
                                                                            ) [NumConstFactor]
                                                                          ) [SingleFactorTerm]
                                                                          MulopMul(
                                                                          ) [MulopMul]
                                                                          DesignatorEmptyFactor(
                                                                            IdentDesignator(
                                                                             a
                                                                            ) [IdentDesignator]
                                                                          ) [DesignatorEmptyFactor]
                                                                        ) [MultiFactorTerm]
                                                                      ) [SingleTermExprPositive]
                                                                    ) [DesignatorStmtAssignCorrect]
                                                                  ) [DesignatorStmtAssign]
                                                                ) [SingleDesignatorStatement]
                                                              ) [StatementSingle]
                                                            ) [StatementListMultiple]
                                                            StatementSingle(
                                                              SingleDesignatorStatement(
                                                                DesignatorStmtAssign(
                                                                  DesignatorStmtAssignCorrect(
                                                                    IdentArrayDesignator(
                                                                     niz
                                                                      SingleTermExprPositive(
                                                                        SingleFactorTerm(
                                                                          NumConstFactor(
                                                                           1
                                                                          ) [NumConstFactor]
                                                                        ) [SingleFactorTerm]
                                                                      ) [SingleTermExprPositive]
                                                                    ) [IdentArrayDesignator]
                                                                    SingleTermExprPositive(
                                                                      MultiFactorTerm(
                                                                        SingleFactorTerm(
                                                                          NumConstFactor(
                                                                           2
                                                                          ) [NumConstFactor]
                                                                        ) [SingleFactorTerm]
                                                                        MulopMul(
                                                                        ) [MulopMul]
                                                                        DesignatorEmptyFactor(
                                                                          IdentDesignator(
                                                                           a
                                                                          ) [IdentDesignator]
                                                                        ) [DesignatorEmptyFactor]
                                                                      ) [MultiFactorTerm]
                                                                    ) [SingleTermExprPositive]
                                                                  ) [DesignatorStmtAssignCorrect]
                                                                ) [DesignatorStmtAssign]
                                                              ) [SingleDesignatorStatement]
                                                            ) [StatementSingle]
                                                          ) [StatementListMultiple]
                                                          StatementSingle(
                                                            SingleDesignatorStatement(
                                                              DesignatorStmtAssign(
                                                                DesignatorStmtAssignCorrect(
                                                                  IdentArrayDesignator(
                                                                   niz
                                                                    SingleTermExprPositive(
                                                                      SingleFactorTerm(
                                                                        NumConstFactor(
                                                                         2
                                                                        ) [NumConstFactor]
                                                                      ) [SingleFactorTerm]
                                                                    ) [SingleTermExprPositive]
                                                                  ) [IdentArrayDesignator]
                                                                  MultiTermExpr(
                                                                    SingleTermExprPositive(
                                                                      MultiFactorTerm(
                                                                        SingleFactorTerm(
                                                                          MethodCallFactor(
                                                                            MethodCall(
                                                                              IdentDesignator(
                                                                               sum
                                                                              ) [IdentDesignator]
                                                                              ActParsLeftParen(
                                                                              ) [ActParsLeftParen]
                                                                              ActParsYes(
                                                                                ActParsMultiExpr(
                                                                                  ActParsSingleExpr(
                                                                                    SingleTermExprPositive(
                                                                                      SingleFactorTerm(
                                                                                        DesignatorEmptyFactor(
                                                                                          IdentArrayDesignator(
                                                                                           niz
                                                                                            SingleTermExprPositive(
                                                                                              SingleFactorTerm(
                                                                                                NumConstFactor(
                                                                                                 1
                                                                                                ) [NumConstFactor]
                                                                                              ) [SingleFactorTerm]
                                                                                            ) [SingleTermExprPositive]
                                                                                          ) [IdentArrayDesignator]
                                                                                        ) [DesignatorEmptyFactor]
                                                                                      ) [SingleFactorTerm]
                                                                                    ) [SingleTermExprPositive]
                                                                                  ) [ActParsSingleExpr]
                                                                                  SingleTermExprPositive(
                                                                                    SingleFactorTerm(
                                                                                      DesignatorEmptyFactor(
                                                                                        IdentArrayDesignator(
                                                                                         niz
                                                                                          SingleTermExprPositive(
                                                                                            SingleFactorTerm(
                                                                                              NumConstFactor(
                                                                                               0
                                                                                              ) [NumConstFactor]
                                                                                            ) [SingleFactorTerm]
                                                                                          ) [SingleTermExprPositive]
                                                                                        ) [IdentArrayDesignator]
                                                                                      ) [DesignatorEmptyFactor]
                                                                                    ) [SingleFactorTerm]
                                                                                  ) [SingleTermExprPositive]
                                                                                ) [ActParsMultiExpr]
                                                                              ) [ActParsYes]
                                                                              ActParsRightParen(
                                                                              ) [ActParsRightParen]
                                                                            ) [MethodCall]
                                                                          ) [MethodCallFactor]
                                                                        ) [SingleFactorTerm]
                                                                        MulopMul(
                                                                        ) [MulopMul]
                                                                        DesignatorEmptyFactor(
                                                                          IdentDesignator(
                                                                           a
                                                                          ) [IdentDesignator]
                                                                        ) [DesignatorEmptyFactor]
                                                                      ) [MultiFactorTerm]
                                                                    ) [SingleTermExprPositive]
                                                                    AddopPlus(
                                                                    ) [AddopPlus]
                                                                    SingleFactorTerm(
                                                                      NumConstFactor(
                                                                       1
                                                                      ) [NumConstFactor]
                                                                    ) [SingleFactorTerm]
                                                                  ) [MultiTermExpr]
                                                                ) [DesignatorStmtAssignCorrect]
                                                              ) [DesignatorStmtAssign]
                                                            ) [SingleDesignatorStatement]
                                                          ) [StatementSingle]
                                                        ) [StatementListMultiple]
                                                        StatementSingle(
                                                          IfElseStatement(
                                                            IfConditionMultiTerm(
                                                              ConditionSingleTerm(
                                                                CondSingleFactTerm(
                                                                  CondSingleExprFact(
                                                                    SingleTermExprPositive(
                                                                      SingleFactorTerm(
                                                                        MethodCallFactor(
                                                                          MethodCall(
                                                                            IdentDesignator(
                                                                             verify
                                                                            ) [IdentDesignator]
                                                                            ActParsLeftParen(
                                                                            ) [ActParsLeftParen]
                                                                            ActParsNo(
                                                                            ) [ActParsNo]
                                                                            ActParsRightParen(
                                                                            ) [ActParsRightParen]
                                                                          ) [MethodCall]
                                                                        ) [MethodCallFactor]
                                                                      ) [SingleFactorTerm]
                                                                    ) [SingleTermExprPositive]
                                                                  ) [CondSingleExprFact]
                                                                ) [CondSingleFactTerm]
                                                              ) [ConditionSingleTerm]
                                                              CondSingleFactTerm(
                                                                CondMultiExprFact(
                                                                  CondSingleExprFact(
                                                                    SingleTermExprPositive(
                                                                      SingleFactorTerm(
                                                                        DesignatorEmptyFactor(
                                                                          IdentArrayDesignator(
                                                                           niz
                                                                            SingleTermExprPositive(
                                                                              SingleFactorTerm(
                                                                                NumConstFactor(
                                                                                 2
                                                                                ) [NumConstFactor]
                                                                              ) [SingleFactorTerm]
                                                                            ) [SingleTermExprPositive]
                                                                          ) [IdentArrayDesignator]
                                                                        ) [DesignatorEmptyFactor]
                                                                      ) [SingleFactorTerm]
                                                                    ) [SingleTermExprPositive]
                                                                  ) [CondSingleExprFact]
                                                                  RelopEQUAL(
                                                                  ) [RelopEQUAL]
                                                                  SingleTermExprPositive(
                                                                    SingleFactorTerm(
                                                                      NumConstFactor(
                                                                       4
                                                                      ) [NumConstFactor]
                                                                    ) [SingleFactorTerm]
                                                                  ) [SingleTermExprPositive]
                                                                ) [CondMultiExprFact]
                                                              ) [CondSingleFactTerm]
                                                            ) [IfConditionMultiTerm]
                                                            StatementSingle(
                                                              SinglePrintStatement(
                                                                SingleTermExprPositive(
                                                                  SingleFactorTerm(
                                                                    MethodCallFactor(
                                                                      MethodCall(
                                                                        IdentDesignator(
                                                                         ord
                                                                        ) [IdentDesignator]
                                                                        ActParsLeftParen(
                                                                        ) [ActParsLeftParen]
                                                                        ActParsYes(
                                                                          ActParsSingleExpr(
                                                                            SingleTermExprPositive(
                                                                              SingleFactorTerm(
                                                                                CharConstFactor(
                                                                                 A
                                                                                ) [CharConstFactor]
                                                                              ) [SingleFactorTerm]
                                                                            ) [SingleTermExprPositive]
                                                                          ) [ActParsSingleExpr]
                                                                        ) [ActParsYes]
                                                                        ActParsRightParen(
                                                                        ) [ActParsRightParen]
                                                                      ) [MethodCall]
                                                                    ) [MethodCallFactor]
                                                                  ) [SingleFactorTerm]
                                                                ) [SingleTermExprPositive]
                                                                NumConstNo(
                                                                ) [NumConstNo]
                                                              ) [SinglePrintStatement]
                                                            ) [StatementSingle]
                                                            StatementSingle(
                                                              SinglePrintStatement(
                                                                SingleTermExprPositive(
                                                                  SingleFactorTerm(
                                                                    MethodCallFactor(
                                                                      MethodCall(
                                                                        IdentDesignator(
                                                                         ord
                                                                        ) [IdentDesignator]
                                                                        ActParsLeftParen(
                                                                        ) [ActParsLeftParen]
                                                                        ActParsYes(
                                                                          ActParsSingleExpr(
                                                                            SingleTermExprPositive(
                                                                              SingleFactorTerm(
                                                                                CharConstFactor(
                                                                                 a
                                                                                ) [CharConstFactor]
                                                                              ) [SingleFactorTerm]
                                                                            ) [SingleTermExprPositive]
                                                                          ) [ActParsSingleExpr]
                                                                        ) [ActParsYes]
                                                                        ActParsRightParen(
                                                                        ) [ActParsRightParen]
                                                                      ) [MethodCall]
                                                                    ) [MethodCallFactor]
                                                                  ) [SingleFactorTerm]
                                                                ) [SingleTermExprPositive]
                                                                NumConstNo(
                                                                ) [NumConstNo]
                                                              ) [SinglePrintStatement]
                                                            ) [StatementSingle]
                                                          ) [IfElseStatement]
                                                        ) [StatementSingle]
                                                      ) [StatementListMultiple]
                                                      StatementSingle(
                                                        SinglePrintStatement(
                                                          SingleTermExprPositive(
                                                            SingleFactorTerm(
                                                              DesignatorEmptyFactor(
                                                                IdentDesignator(
                                                                 eol
                                                                ) [IdentDesignator]
                                                              ) [DesignatorEmptyFactor]
                                                            ) [SingleFactorTerm]
                                                          ) [SingleTermExprPositive]
                                                          NumConstNo(
                                                          ) [NumConstNo]
                                                        ) [SinglePrintStatement]
                                                      ) [StatementSingle]
                                                    ) [StatementListMultiple]
                                                    StatementSingle(
                                                      SingleDesignatorStatement(
                                                        DesignatorStmtAssign(
                                                          DesignatorStmtAssignCorrect(
                                                            IdentDesignator(
                                                             i
                                                            ) [IdentDesignator]
                                                            SingleTermExprPositive(
                                                              SingleFactorTerm(
                                                                NumConstFactor(
                                                                 0
                                                                ) [NumConstFactor]
                                                              ) [SingleFactorTerm]
                                                            ) [SingleTermExprPositive]
                                                          ) [DesignatorStmtAssignCorrect]
                                                        ) [DesignatorStmtAssign]
                                                      ) [SingleDesignatorStatement]
                                                    ) [StatementSingle]
                                                  ) [StatementListMultiple]
                                                  StatementSingle(
                                                    DoWhileStatement(
                                                      DoEnter(
                                                      ) [DoEnter]
                                                      StatementListMultiple(
                                                        StatementListNo(
                                                        ) [StatementListNo]
                                                        StatementMultiple(
                                                          StatementsInBraces(
                                                            StatementListMultiple(
                                                              StatementListMultiple(
                                                                StatementListMultiple(
                                                                  StatementListNo(
                                                                  ) [StatementListNo]
                                                                  StatementSingle(
                                                                    IfStatement(
                                                                      IfConditionSingleTerm(
                                                                        CondSingleFactTerm(
                                                                          CondMultiExprFact(
                                                                            CondSingleExprFact(
                                                                              SingleTermExprPositive(
                                                                                SingleFactorTerm(
                                                                                  DesignatorEmptyFactor(
                                                                                    IdentDesignator(
                                                                                     i
                                                                                    ) [IdentDesignator]
                                                                                  ) [DesignatorEmptyFactor]
                                                                                ) [SingleFactorTerm]
                                                                              ) [SingleTermExprPositive]
                                                                            ) [CondSingleExprFact]
                                                                            RelopEQUAL(
                                                                            ) [RelopEQUAL]
                                                                            SingleTermExprPositive(
                                                                              SingleFactorTerm(
                                                                                NumConstFactor(
                                                                                 3
                                                                                ) [NumConstFactor]
                                                                              ) [SingleFactorTerm]
                                                                            ) [SingleTermExprPositive]
                                                                          ) [CondMultiExprFact]
                                                                        ) [CondSingleFactTerm]
                                                                      ) [IfConditionSingleTerm]
                                                                      StatementMultiple(
                                                                        StatementsInBraces(
                                                                          StatementListMultiple(
                                                                            StatementListMultiple(
                                                                              StatementListNo(
                                                                              ) [StatementListNo]
                                                                              StatementSingle(
                                                                                SingleDesignatorStatement(
                                                                                  DesignatorStmtPlusPlus(
                                                                                    IdentDesignator(
                                                                                     i
                                                                                    ) [IdentDesignator]
                                                                                  ) [DesignatorStmtPlusPlus]
                                                                                ) [SingleDesignatorStatement]
                                                                              ) [StatementSingle]
                                                                            ) [StatementListMultiple]
                                                                            StatementSingle(
                                                                              SingleContinueStatement(
                                                                              ) [SingleContinueStatement]
                                                                            ) [StatementSingle]
                                                                          ) [StatementListMultiple]
                                                                        ) [StatementsInBraces]
                                                                      ) [StatementMultiple]
                                                                    ) [IfStatement]
                                                                  ) [StatementSingle]
                                                                ) [StatementListMultiple]
                                                                StatementSingle(
                                                                  IfStatement(
                                                                    IfConditionSingleTerm(
                                                                      CondSingleFactTerm(
                                                                        CondMultiExprFact(
                                                                          CondSingleExprFact(
                                                                            SingleTermExprPositive(
                                                                              SingleFactorTerm(
                                                                                DesignatorEmptyFactor(
                                                                                  IdentDesignator(
                                                                                   i
                                                                                  ) [IdentDesignator]
                                                                                ) [DesignatorEmptyFactor]
                                                                              ) [SingleFactorTerm]
                                                                            ) [SingleTermExprPositive]
                                                                          ) [CondSingleExprFact]
                                                                          RelopEQUAL(
                                                                          ) [RelopEQUAL]
                                                                          SingleTermExprPositive(
                                                                            SingleFactorTerm(
                                                                              NumConstFactor(
                                                                               4
                                                                              ) [NumConstFactor]
                                                                            ) [SingleFactorTerm]
                                                                          ) [SingleTermExprPositive]
                                                                        ) [CondMultiExprFact]
                                                                      ) [CondSingleFactTerm]
                                                                    ) [IfConditionSingleTerm]
                                                                    StatementSingle(
                                                                      SingleBreakStatement(
                                                                      ) [SingleBreakStatement]
                                                                    ) [StatementSingle]
                                                                  ) [IfStatement]
                                                                ) [StatementSingle]
                                                              ) [StatementListMultiple]
                                                              StatementSingle(
                                                                SingleDesignatorStatement(
                                                                  DesignatorStmtAssign(
                                                                    DesignatorStmtAssignCorrect(
                                                                      IdentDesignator(
                                                                       i
                                                                      ) [IdentDesignator]
                                                                      SingleTermExprPositive(
                                                                        SingleFactorTerm(
                                                                          MethodCallFactor(
                                                                            MethodCall(
                                                                              IdentDesignator(
                                                                               inkrement
                                                                              ) [IdentDesignator]
                                                                              ActParsLeftParen(
                                                                              ) [ActParsLeftParen]
                                                                              ActParsYes(
                                                                                ActParsMultiExpr(
                                                                                  ActParsSingleExpr(
                                                                                    SingleTermExprPositive(
                                                                                      SingleFactorTerm(
                                                                                        DesignatorEmptyFactor(
                                                                                          IdentDesignator(
                                                                                           i
                                                                                          ) [IdentDesignator]
                                                                                        ) [DesignatorEmptyFactor]
                                                                                      ) [SingleFactorTerm]
                                                                                    ) [SingleTermExprPositive]
                                                                                  ) [ActParsSingleExpr]
                                                                                  SingleTermExprPositive(
                                                                                    SingleFactorTerm(
                                                                                      NumConstFactor(
                                                                                       1
                                                                                      ) [NumConstFactor]
                                                                                    ) [SingleFactorTerm]
                                                                                  ) [SingleTermExprPositive]
                                                                                ) [ActParsMultiExpr]
                                                                              ) [ActParsYes]
                                                                              ActParsRightParen(
                                                                              ) [ActParsRightParen]
                                                                            ) [MethodCall]
                                                                          ) [MethodCallFactor]
                                                                        ) [SingleFactorTerm]
                                                                      ) [SingleTermExprPositive]
                                                                    ) [DesignatorStmtAssignCorrect]
                                                                  ) [DesignatorStmtAssign]
                                                                ) [SingleDesignatorStatement]
                                                              ) [StatementSingle]
                                                            ) [StatementListMultiple]
                                                          ) [StatementsInBraces]
                                                        ) [StatementMultiple]
                                                      ) [StatementListMultiple]
                                                      ConditionSingleTerm(
                                                        CondSingleFactTerm(
                                                          CondMultiExprFact(
                                                            CondSingleExprFact(
                                                              SingleTermExprPositive(
                                                                SingleFactorTerm(
                                                                  DesignatorEmptyFactor(
                                                                    IdentDesignator(
                                                                     i
                                                                    ) [IdentDesignator]
                                                                  ) [DesignatorEmptyFactor]
                                                                ) [SingleFactorTerm]
                                                              ) [SingleTermExprPositive]
                                                            ) [CondSingleExprFact]
                                                            RelopLS(
                                                            ) [RelopLS]
                                                            SingleTermExprPositive(
                                                              SingleFactorTerm(
                                                                NumConstFactor(
                                                                 10
                                                                ) [NumConstFactor]
                                                              ) [SingleFactorTerm]
                                                            ) [SingleTermExprPositive]
                                                          ) [CondMultiExprFact]
                                                        ) [CondSingleFactTerm]
                                                      ) [ConditionSingleTerm]
                                                    ) [DoWhileStatement]
                                                  ) [StatementSingle]
                                                ) [StatementListMultiple]
                                                StatementSingle(
                                                  IfElseStatement(
                                                    IfConditionSingleTerm(
                                                      CondMultiFactTerm(
                                                        CondSingleFactTerm(
                                                          CondMultiExprFact(
                                                            CondSingleExprFact(
                                                              SingleTermExprPositive(
                                                                SingleFactorTerm(
                                                                  DesignatorEmptyFactor(
                                                                    IdentDesignator(
                                                                     i
                                                                    ) [IdentDesignator]
                                                                  ) [DesignatorEmptyFactor]
                                                                ) [SingleFactorTerm]
                                                              ) [SingleTermExprPositive]
                                                            ) [CondSingleExprFact]
                                                            RelopEQUAL(
                                                            ) [RelopEQUAL]
                                                            SingleTermExprPositive(
                                                              SingleFactorTerm(
                                                                NumConstFactor(
                                                                 3
                                                                ) [NumConstFactor]
                                                              ) [SingleFactorTerm]
                                                            ) [SingleTermExprPositive]
                                                          ) [CondMultiExprFact]
                                                        ) [CondSingleFactTerm]
                                                        CondSingleExprFact(
                                                          SingleTermExprPositive(
                                                            SingleFactorTerm(
                                                              MethodCallFactor(
                                                                MethodCall(
                                                                  IdentDesignator(
                                                                   verify
                                                                  ) [IdentDesignator]
                                                                  ActParsLeftParen(
                                                                  ) [ActParsLeftParen]
                                                                  ActParsNo(
                                                                  ) [ActParsNo]
                                                                  ActParsRightParen(
                                                                  ) [ActParsRightParen]
                                                                ) [MethodCall]
                                                              ) [MethodCallFactor]
                                                            ) [SingleFactorTerm]
                                                          ) [SingleTermExprPositive]
                                                        ) [CondSingleExprFact]
                                                      ) [CondMultiFactTerm]
                                                    ) [IfConditionSingleTerm]
                                                    StatementSingle(
                                                      SinglePrintStatement(
                                                        SingleTermExprNegative(
                                                          SingleFactorTerm(
                                                            NumConstFactor(
                                                             4
                                                            ) [NumConstFactor]
                                                          ) [SingleFactorTerm]
                                                        ) [SingleTermExprNegative]
                                                        NumConstNo(
                                                        ) [NumConstNo]
                                                      ) [SinglePrintStatement]
                                                    ) [StatementSingle]
                                                    StatementSingle(
                                                      SinglePrintStatement(
                                                        SingleTermExprPositive(
                                                          SingleFactorTerm(
                                                            NumConstFactor(
                                                             4
                                                            ) [NumConstFactor]
                                                          ) [SingleFactorTerm]
                                                        ) [SingleTermExprPositive]
                                                        NumConstNo(
                                                        ) [NumConstNo]
                                                      ) [SinglePrintStatement]
                                                    ) [StatementSingle]
                                                  ) [IfElseStatement]
                                                ) [StatementSingle]
                                              ) [StatementListMultiple]
                                              StatementSingle(
                                                SingleReadStatement(
                                                  IdentArrayDesignator(
                                                   niz
                                                    SingleTermExprPositive(
                                                      SingleFactorTerm(
                                                        NumConstFactor(
                                                         0
                                                        ) [NumConstFactor]
                                                      ) [SingleFactorTerm]
                                                    ) [SingleTermExprPositive]
                                                  ) [IdentArrayDesignator]
                                                ) [SingleReadStatement]
                                              ) [StatementSingle]
                                            ) [StatementListMultiple]
                                            StatementSingle(
                                              SingleReadStatement(
                                                IdentArrayDesignator(
                                                 niz
                                                  SingleTermExprPositive(
                                                    SingleFactorTerm(
                                                      NumConstFactor(
                                                       1
                                                      ) [NumConstFactor]
                                                    ) [SingleFactorTerm]
                                                  ) [SingleTermExprPositive]
                                                ) [IdentArrayDesignator]
                                              ) [SingleReadStatement]
                                            ) [StatementSingle]
                                          ) [StatementListMultiple]
                                          StatementSingle(
                                            SingleReadStatement(
                                              IdentArrayDesignator(
                                               niz
                                                SingleTermExprPositive(
                                                  SingleFactorTerm(
                                                    NumConstFactor(
                                                     2
                                                    ) [NumConstFactor]
                                                  ) [SingleFactorTerm]
                                                ) [SingleTermExprPositive]
                                              ) [IdentArrayDesignator]
                                            ) [SingleReadStatement]
                                          ) [StatementSingle]
                                        ) [StatementListMultiple]
                                        StatementSingle(
                                          SinglePrintStatement(
                                            SingleTermExprPositive(
                                              SingleFactorTerm(
                                                DesignatorEmptyFactor(
                                                  IdentDesignator(
                                                   eol
                                                  ) [IdentDesignator]
                                                ) [DesignatorEmptyFactor]
                                              ) [SingleFactorTerm]
                                            ) [SingleTermExprPositive]
                                            NumConstNo(
                                            ) [NumConstNo]
                                          ) [SinglePrintStatement]
                                        ) [StatementSingle]
                                      ) [StatementListMultiple]
                                      StatementSingle(
                                        SinglePrintStatement(
                                          SingleTermExprPositive(
                                            SingleFactorTerm(
                                              MethodCallFactor(
                                                MethodCall(
                                                  IdentDesignator(
                                                   sum
                                                  ) [IdentDesignator]
                                                  ActParsLeftParen(
                                                  ) [ActParsLeftParen]
                                                  ActParsYes(
                                                    ActParsMultiExpr(
                                                      ActParsSingleExpr(
                                                        SingleTermExprPositive(
                                                          SingleFactorTerm(
                                                            MethodCallFactor(
                                                              MethodCall(
                                                                IdentDesignator(
                                                                 sum
                                                                ) [IdentDesignator]
                                                                ActParsLeftParen(
                                                                ) [ActParsLeftParen]
                                                                ActParsYes(
                                                                  ActParsMultiExpr(
                                                                    ActParsSingleExpr(
                                                                      SingleTermExprPositive(
                                                                        SingleFactorTerm(
                                                                          DesignatorEmptyFactor(
                                                                            IdentArrayDesignator(
                                                                             niz
                                                                              SingleTermExprPositive(
                                                                                SingleFactorTerm(
                                                                                  NumConstFactor(
                                                                                   0
                                                                                  ) [NumConstFactor]
                                                                                ) [SingleFactorTerm]
                                                                              ) [SingleTermExprPositive]
                                                                            ) [IdentArrayDesignator]
                                                                          ) [DesignatorEmptyFactor]
                                                                        ) [SingleFactorTerm]
                                                                      ) [SingleTermExprPositive]
                                                                    ) [ActParsSingleExpr]
                                                                    SingleTermExprPositive(
                                                                      SingleFactorTerm(
                                                                        DesignatorEmptyFactor(
                                                                          IdentArrayDesignator(
                                                                           niz
                                                                            SingleTermExprPositive(
                                                                              SingleFactorTerm(
                                                                                NumConstFactor(
                                                                                 1
                                                                                ) [NumConstFactor]
                                                                              ) [SingleFactorTerm]
                                                                            ) [SingleTermExprPositive]
                                                                          ) [IdentArrayDesignator]
                                                                        ) [DesignatorEmptyFactor]
                                                                      ) [SingleFactorTerm]
                                                                    ) [SingleTermExprPositive]
                                                                  ) [ActParsMultiExpr]
                                                                ) [ActParsYes]
                                                                ActParsRightParen(
                                                                ) [ActParsRightParen]
                                                              ) [MethodCall]
                                                            ) [MethodCallFactor]
                                                          ) [SingleFactorTerm]
                                                        ) [SingleTermExprPositive]
                                                      ) [ActParsSingleExpr]
                                                      SingleTermExprPositive(
                                                        SingleFactorTerm(
                                                          DesignatorEmptyFactor(
                                                            IdentArrayDesignator(
                                                             niz
                                                              SingleTermExprPositive(
                                                                SingleFactorTerm(
                                                                  NumConstFactor(
                                                                   2
                                                                  ) [NumConstFactor]
                                                                ) [SingleFactorTerm]
                                                              ) [SingleTermExprPositive]
                                                            ) [IdentArrayDesignator]
                                                          ) [DesignatorEmptyFactor]
                                                        ) [SingleFactorTerm]
                                                      ) [SingleTermExprPositive]
                                                    ) [ActParsMultiExpr]
                                                  ) [ActParsYes]
                                                  ActParsRightParen(
                                                  ) [ActParsRightParen]
                                                ) [MethodCall]
                                              ) [MethodCallFactor]
                                            ) [SingleFactorTerm]
                                          ) [SingleTermExprPositive]
                                          NumConstNo(
                                          ) [NumConstNo]
                                        ) [SinglePrintStatement]
                                      ) [StatementSingle]
                                    ) [StatementListMultiple]
                                    StatementSingle(
                                      SinglePrintStatement(
                                        SingleTermExprPositive(
                                          SingleFactorTerm(
                                            DesignatorEmptyFactor(
                                              IdentDesignator(
                                               eol
                                              ) [IdentDesignator]
                                            ) [DesignatorEmptyFactor]
                                          ) [SingleFactorTerm]
                                        ) [SingleTermExprPositive]
                                        NumConstNo(
                                        ) [NumConstNo]
                                      ) [SinglePrintStatement]
                                    ) [StatementSingle]
                                  ) [StatementListMultiple]
                                  StatementSingle(
                                    SinglePrintStatement(
                                      SingleTermExprPositive(
                                        SingleFactorTerm(
                                          MethodCallFactor(
                                            MethodCall(
                                              IdentDesignator(
                                               inkrement
                                              ) [IdentDesignator]
                                              ActParsLeftParen(
                                              ) [ActParsLeftParen]
                                              ActParsYes(
                                                ActParsMultiExpr(
                                                  ActParsSingleExpr(
                                                    SingleTermExprPositive(
                                                      SingleFactorTerm(
                                                        DesignatorEmptyFactor(
                                                          IdentArrayDesignator(
                                                           niz
                                                            SingleTermExprPositive(
                                                              SingleFactorTerm(
                                                                NumConstFactor(
                                                                 2
                                                                ) [NumConstFactor]
                                                              ) [SingleFactorTerm]
                                                            ) [SingleTermExprPositive]
                                                          ) [IdentArrayDesignator]
                                                        ) [DesignatorEmptyFactor]
                                                      ) [SingleFactorTerm]
                                                    ) [SingleTermExprPositive]
                                                  ) [ActParsSingleExpr]
                                                  SingleTermExprPositive(
                                                    SingleFactorTerm(
                                                      NumConstFactor(
                                                       2
                                                      ) [NumConstFactor]
                                                    ) [SingleFactorTerm]
                                                  ) [SingleTermExprPositive]
                                                ) [ActParsMultiExpr]
                                              ) [ActParsYes]
                                              ActParsRightParen(
                                              ) [ActParsRightParen]
                                            ) [MethodCall]
                                          ) [MethodCallFactor]
                                        ) [SingleFactorTerm]
                                      ) [SingleTermExprPositive]
                                      NumConstNo(
                                      ) [NumConstNo]
                                    ) [SinglePrintStatement]
                                  ) [StatementSingle]
                                ) [StatementListMultiple]
                                StatementSingle(
                                  SingleDesignatorStatement(
                                    DesignatorStmtAssign(
                                      DesignatorStmtAssignCorrect(
                                        IdentDesignator(
                                         a
                                        ) [IdentDesignator]
                                        SingleTermExprPositive(
                                          SingleFactorTerm(
                                            NumConstFactor(
                                             3
                                            ) [NumConstFactor]
                                          ) [SingleFactorTerm]
                                        ) [SingleTermExprPositive]
                                      ) [DesignatorStmtAssignCorrect]
                                    ) [DesignatorStmtAssign]
                                  ) [SingleDesignatorStatement]
                                ) [StatementSingle]
                              ) [StatementListMultiple]
                              StatementSingle(
                                SingleDesignatorStatement(
                                  DesignatorStmtAssign(
                                    DesignatorStmtAssignCorrect(
                                      IdentDesignator(
                                       i
                                      ) [IdentDesignator]
                                      SingleTermExprPositive(
                                        SingleFactorTerm(
                                          NumConstFactor(
                                           0
                                          ) [NumConstFactor]
                                        ) [SingleFactorTerm]
                                      ) [SingleTermExprPositive]
                                    ) [DesignatorStmtAssignCorrect]
                                  ) [DesignatorStmtAssign]
                                ) [SingleDesignatorStatement]
                              ) [StatementSingle]
                            ) [StatementListMultiple]
                            StatementSingle(
                              DoWhileStatement(
                                DoEnter(
                                ) [DoEnter]
                                StatementListMultiple(
                                  StatementListNo(
                                  ) [StatementListNo]
                                  StatementMultiple(
                                    StatementsInBraces(
                                      StatementListMultiple(
                                        StatementListMultiple(
                                          StatementListNo(
                                          ) [StatementListNo]
                                          StatementSingle(
                                            SingleDesignatorStatement(
                                              DesignatorStmtAssign(
                                                DesignatorStmtAssignCorrect(
                                                  IdentArrayDesignator(
                                                   niz
                                                    SingleTermExprPositive(
                                                      SingleFactorTerm(
                                                        DesignatorEmptyFactor(
                                                          IdentDesignator(
                                                           i
                                                          ) [IdentDesignator]
                                                        ) [DesignatorEmptyFactor]
                                                      ) [SingleFactorTerm]
                                                    ) [SingleTermExprPositive]
                                                  ) [IdentArrayDesignator]
                                                  SingleTermExprPositive(
                                                    MultiFactorTerm(
                                                      MultiFactorTerm(
                                                        SingleFactorTerm(
                                                          DesignatorEmptyFactor(
                                                            IdentArrayDesignator(
                                                             niz
                                                              SingleTermExprPositive(
                                                                SingleFactorTerm(
                                                                  DesignatorEmptyFactor(
                                                                    IdentDesignator(
                                                                     i
                                                                    ) [IdentDesignator]
                                                                  ) [DesignatorEmptyFactor]
                                                                ) [SingleFactorTerm]
                                                              ) [SingleTermExprPositive]
                                                            ) [IdentArrayDesignator]
                                                          ) [DesignatorEmptyFactor]
                                                        ) [SingleFactorTerm]
                                                        MulopMul(
                                                        ) [MulopMul]
                                                        NumConstFactor(
                                                         2
                                                        ) [NumConstFactor]
                                                      ) [MultiFactorTerm]
                                                      MulopMul(
                                                      ) [MulopMul]
                                                      DesignatorEmptyFactor(
                                                        IdentDesignator(
                                                         a
                                                        ) [IdentDesignator]
                                                      ) [DesignatorEmptyFactor]
                                                    ) [MultiFactorTerm]
                                                  ) [SingleTermExprPositive]
                                                ) [DesignatorStmtAssignCorrect]
                                              ) [DesignatorStmtAssign]
                                            ) [SingleDesignatorStatement]
                                          ) [StatementSingle]
                                        ) [StatementListMultiple]
                                        StatementSingle(
                                          SingleDesignatorStatement(
                                            DesignatorStmtPlusPlus(
                                              IdentDesignator(
                                               i
                                              ) [IdentDesignator]
                                            ) [DesignatorStmtPlusPlus]
                                          ) [SingleDesignatorStatement]
                                        ) [StatementSingle]
                                      ) [StatementListMultiple]
                                    ) [StatementsInBraces]
                                  ) [StatementMultiple]
                                ) [StatementListMultiple]
                                ConditionSingleTerm(
                                  CondSingleFactTerm(
                                    CondMultiExprFact(
                                      CondSingleExprFact(
                                        SingleTermExprPositive(
                                          SingleFactorTerm(
                                            DesignatorEmptyFactor(
                                              IdentDesignator(
                                               i
                                              ) [IdentDesignator]
                                            ) [DesignatorEmptyFactor]
                                          ) [SingleFactorTerm]
                                        ) [SingleTermExprPositive]
                                      ) [CondSingleExprFact]
                                      RelopLS(
                                      ) [RelopLS]
                                      SingleTermExprPositive(
                                        SingleFactorTerm(
                                          NumConstFactor(
                                           3
                                          ) [NumConstFactor]
                                        ) [SingleFactorTerm]
                                      ) [SingleTermExprPositive]
                                    ) [CondMultiExprFact]
                                  ) [CondSingleFactTerm]
                                ) [ConditionSingleTerm]
                              ) [DoWhileStatement]
                            ) [StatementSingle]
                          ) [StatementListMultiple]
                          StatementSingle(
                            SinglePrintStatement(
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentArrayDesignator(
                                     niz
                                      SingleTermExprPositive(
                                        SingleFactorTerm(
                                          NumConstFactor(
                                           0
                                          ) [NumConstFactor]
                                        ) [SingleFactorTerm]
                                      ) [SingleTermExprPositive]
                                    ) [IdentArrayDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                              NumConstNo(
                              ) [NumConstNo]
                            ) [SinglePrintStatement]
                          ) [StatementSingle]
                        ) [StatementListMultiple]
                        StatementSingle(
                          SinglePrintStatement(
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                DesignatorEmptyFactor(
                                  IdentArrayDesignator(
                                   niz
                                    SingleTermExprPositive(
                                      SingleFactorTerm(
                                        NumConstFactor(
                                         1
                                        ) [NumConstFactor]
                                      ) [SingleFactorTerm]
                                    ) [SingleTermExprPositive]
                                  ) [IdentArrayDesignator]
                                ) [DesignatorEmptyFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                            NumConstNo(
                            ) [NumConstNo]
                          ) [SinglePrintStatement]
                        ) [StatementSingle]
                      ) [StatementListMultiple]
                      StatementSingle(
                        SinglePrintStatement(
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              DesignatorEmptyFactor(
                                IdentArrayDesignator(
                                 niz
                                  SingleTermExprPositive(
                                    SingleFactorTerm(
                                      NumConstFactor(
                                       2
                                      ) [NumConstFactor]
                                    ) [SingleFactorTerm]
                                  ) [SingleTermExprPositive]
                                ) [IdentArrayDesignator]
                              ) [DesignatorEmptyFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                          NumConstNo(
                          ) [NumConstNo]
                        ) [SinglePrintStatement]
                      ) [StatementSingle]
                    ) [StatementListMultiple]
                    StatementSingle(
                      SinglePrintStatement(
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            DesignatorEmptyFactor(
                              IdentDesignator(
                               eol
                              ) [IdentDesignator]
                            ) [DesignatorEmptyFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                        NumConstNo(
                        ) [NumConstNo]
                      ) [SinglePrintStatement]
                    ) [StatementSingle]
                  ) [StatementListMultiple]
                  StatementSingle(
                    SingleDesignatorStatement(
                      DesignatorStmtAssign(
                        DesignatorStmtAssignCorrect(
                          IdentDesignator(
                           i
                          ) [IdentDesignator]
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              NumConstFactor(
                               0
                              ) [NumConstFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [DesignatorStmtAssignCorrect]
                      ) [DesignatorStmtAssign]
                    ) [SingleDesignatorStatement]
                  ) [StatementSingle]
                ) [StatementListMultiple]
                StatementSingle(
                  SingleDesignatorStatement(
                    DesignatorStmtAssign(
                      DesignatorStmtAssignCorrect(
                        IdentDesignator(
                         niz2
                        ) [IdentDesignator]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            NumConstFactor(
                             0
                            ) [NumConstFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [DesignatorStmtAssignCorrect]
                    ) [DesignatorStmtAssign]
                  ) [SingleDesignatorStatement]
                ) [StatementSingle]
              ) [StatementListMultiple]
              StatementSingle(
                DoWhileStatement(
                  DoEnter(
                  ) [DoEnter]
                  StatementListMultiple(
                    StatementListNo(
                    ) [StatementListNo]
                    StatementMultiple(
                      StatementsInBraces(
                        StatementListMultiple(
                          StatementListMultiple(
                            StatementListNo(
                            ) [StatementListNo]
                            StatementSingle(
                              SingleDesignatorStatement(
                                DesignatorStmtAssign(
                                  DesignatorStmtAssignCorrect(
                                    IdentDesignator(
                                     niz2
                                    ) [IdentDesignator]
                                    MultiTermExpr(
                                      SingleTermExprPositive(
                                        SingleFactorTerm(
                                          DesignatorEmptyFactor(
                                            IdentDesignator(
                                             niz2
                                            ) [IdentDesignator]
                                          ) [DesignatorEmptyFactor]
                                        ) [SingleFactorTerm]
                                      ) [SingleTermExprPositive]
                                      AddopPlus(
                                      ) [AddopPlus]
                                      MultiFactorTerm(
                                        SingleFactorTerm(
                                          DesignatorEmptyFactor(
                                            IdentArrayDesignator(
                                             niz
                                              SingleTermExprPositive(
                                                SingleFactorTerm(
                                                  DesignatorEmptyFactor(
                                                    IdentDesignator(
                                                     i
                                                    ) [IdentDesignator]
                                                  ) [DesignatorEmptyFactor]
                                                ) [SingleFactorTerm]
                                              ) [SingleTermExprPositive]
                                            ) [IdentArrayDesignator]
                                          ) [DesignatorEmptyFactor]
                                        ) [SingleFactorTerm]
                                        MulopMul(
                                        ) [MulopMul]
                                        DesignatorEmptyFactor(
                                          IdentArrayDesignator(
                                           niz
                                            SingleTermExprPositive(
                                              SingleFactorTerm(
                                                DesignatorEmptyFactor(
                                                  IdentDesignator(
                                                   i
                                                  ) [IdentDesignator]
                                                ) [DesignatorEmptyFactor]
                                              ) [SingleFactorTerm]
                                            ) [SingleTermExprPositive]
                                          ) [IdentArrayDesignator]
                                        ) [DesignatorEmptyFactor]
                                      ) [MultiFactorTerm]
                                    ) [MultiTermExpr]
                                  ) [DesignatorStmtAssignCorrect]
                                ) [DesignatorStmtAssign]
                              ) [SingleDesignatorStatement]
                            ) [StatementSingle]
                          ) [StatementListMultiple]
                          StatementSingle(
                            SingleDesignatorStatement(
                              DesignatorStmtPlusPlus(
                                IdentDesignator(
                                 i
                                ) [IdentDesignator]
                              ) [DesignatorStmtPlusPlus]
                            ) [SingleDesignatorStatement]
                          ) [StatementSingle]
                        ) [StatementListMultiple]
                      ) [StatementsInBraces]
                    ) [StatementMultiple]
                  ) [StatementListMultiple]
                  ConditionSingleTerm(
                    CondSingleFactTerm(
                      CondMultiExprFact(
                        CondSingleExprFact(
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              DesignatorEmptyFactor(
                                IdentDesignator(
                                 i
                                ) [IdentDesignator]
                              ) [DesignatorEmptyFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [CondSingleExprFact]
                        RelopLS(
                        ) [RelopLS]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            NumConstFactor(
                             3
                            ) [NumConstFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [CondMultiExprFact]
                    ) [CondSingleFactTerm]
                  ) [ConditionSingleTerm]
                ) [DoWhileStatement]
              ) [StatementSingle]
            ) [StatementListMultiple]
            StatementSingle(
              SinglePrintStatement(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    DesignatorEmptyFactor(
                      IdentDesignator(
                       niz2
                      ) [IdentDesignator]
                    ) [DesignatorEmptyFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
                NumConstNo(
                ) [NumConstNo]
              ) [SinglePrintStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
          StatementSingle(
            SinglePrintStatement(
              SingleTermExprPositive(
                SingleFactorTerm(
                  DesignatorEmptyFactor(
                    IdentDesignator(
                     eol
                    ) [IdentDesignator]
                  ) [DesignatorEmptyFactor]
                ) [SingleFactorTerm]
              ) [SingleTermExprPositive]
              NumConstNo(
              ) [NumConstNo]
            ) [SinglePrintStatement]
          ) [StatementSingle]
        ) [StatementListMultiple]
        StatementSingle(
          SingleDesignatorStatement(
            DesignatorStmtMethodCall(
              MethodCall(
                IdentDesignator(
                 printArgs
                ) [IdentDesignator]
                ActParsLeftParen(
                ) [ActParsLeftParen]
                ActParsYes(
                  ActParsMultiExpr(
                    ActParsMultiExpr(
                      ActParsMultiExpr(
                        ActParsMultiExpr(
                          ActParsMultiExpr(
                            ActParsSingleExpr(
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  NumConstFactor(
                                   5
                                  ) [NumConstFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [ActParsSingleExpr]
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                CharConstFactor(
                                 t
                                ) [CharConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [ActParsMultiExpr]
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              CharConstFactor(
                               e
                              ) [CharConstFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [ActParsMultiExpr]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            CharConstFactor(
                             s
                            ) [CharConstFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [ActParsMultiExpr]
                      SingleTermExprPositive(
                        SingleFactorTerm(
                          CharConstFactor(
                           t
                          ) [CharConstFactor]
                        ) [SingleFactorTerm]
                      ) [SingleTermExprPositive]
                    ) [ActParsMultiExpr]
                    SingleTermExprPositive(
                      SingleFactorTerm(
                        CharConstFactor(
                         B
                        ) [CharConstFactor]
                      ) [SingleFactorTerm]
                    ) [SingleTermExprPositive]
                  ) [ActParsMultiExpr]
                ) [ActParsYes]
                ActParsRightParen(
                ) [ActParsRightParen]
              ) [MethodCall]
            ) [DesignatorStmtMethodCall]
          ) [SingleDesignatorStatement]
        ) [StatementSingle]
      ) [StatementListMultiple]
    ) [MethodDeclaration]
  ) [MethodDeclListMultiple]
) [Program]
INFO  16:29:55,100 - ===================================
INFO  16:29:55,104 - Line 20: Using local variable name: z
INFO  16:29:55,104 - Line 20: Access to array element detected. Array name: args
INFO  16:29:55,104 - Line 20: Access to formal argument detected. Method name: sum, argument name: args
INFO  16:29:55,104 - Line 21: Using local variable name: d
INFO  16:29:55,104 - Line 21: Access to array element detected. Array name: args
INFO  16:29:55,104 - Line 21: Access to formal argument detected. Method name: sum, argument name: args
INFO  16:29:55,104 - Line 22: Using local variable name: z
INFO  16:29:55,104 - Line 22: Using local variable name: d
INFO  16:29:55,104 - Line 28: Using local variable name: i
INFO  16:29:55,104 - Line 30: Using local variable name: i
INFO  16:29:55,104 - Line 30: Access to array element detected. Array name: args
INFO  16:29:55,104 - Line 30: Access to formal argument detected. Method name: printArgs, argument name: args
INFO  16:29:55,104 - Line 31: Using local variable name: i
INFO  16:29:55,104 - Line 32: Using local variable name: i
INFO  16:29:55,104 - Line 32: Access to formal argument detected. Method name: printArgs, argument name: num
INFO  16:29:55,104 - Line 37: Access to formal argument detected. Method name: inkrement, argument name: inc
INFO  16:29:55,104 - Line 37: Using local variable name: pom
INFO  16:29:55,104 - Line 38: Access to formal argument detected. Method name: inkrement, argument name: inc
INFO  16:29:55,104 - Line 38: Using local variable name: pom
INFO  16:29:55,104 - Line 38: Access to formal argument detected. Method name: inkrement, argument name: a
INFO  16:29:55,104 - Line 40: Access to formal argument detected. Method name: inkrement, argument name: a
INFO  16:29:55,104 - Line 40: Using local variable name: pom
INFO  16:29:55,104 - Line 40: Method Call detected. Method name: sum
INFO  16:29:55,104 - Method sum has varArgs with 2 args
INFO  16:29:55,104 - Line 53: Using global variable name: ibool
INFO  16:29:55,104 - Line 54: Using global variable name: i
INFO  16:29:55,104 - Line 56: Using global variable name: i
INFO  16:29:55,104 - Line 56: Using global variable name: ibool
INFO  16:29:55,104 - Line 57: Using global variable name: i
INFO  16:29:55,105 - Line 58: Using global variable name: i
INFO  16:29:55,105 - Line 60: Using global variable name: ibool
INFO  16:29:55,105 - Line 61: Using global variable name: i
INFO  16:29:55,105 - Line 63: Using global variable name: a
INFO  16:29:55,105 - Line 64: Using global variable name: niz
INFO  16:29:55,105 - Line 65: Using global variable name: niz
INFO  16:29:55,105 - Line 65: Access to array element detected. Array name: niz
INFO  16:29:55,105 - Line 65: Using global variable name: a
INFO  16:29:55,105 - Line 66: Using global variable name: niz
INFO  16:29:55,105 - Line 66: Access to array element detected. Array name: niz
INFO  16:29:55,105 - Line 66: Using global variable name: a
INFO  16:29:55,105 - Line 67: Using global variable name: niz
INFO  16:29:55,105 - Line 67: Access to array element detected. Array name: niz
INFO  16:29:55,105 - Line 67: Using global variable name: niz
INFO  16:29:55,105 - Line 67: Access to array element detected. Array name: niz
INFO  16:29:55,105 - Line 67: Using global variable name: niz
INFO  16:29:55,105 - Line 67: Access to array element detected. Array name: niz
INFO  16:29:55,105 - Line 67: Method Call detected. Method name: sum
INFO  16:29:55,105 - Method sum has varArgs with 2 args
INFO  16:29:55,105 - Line 67: Using global variable name: a
INFO  16:29:55,105 - Line 68: Method Call detected. Method name: verify
INFO  16:29:55,105 - Line 68: Using global variable name: niz
INFO  16:29:55,105 - Line 68: Access to array element detected. Array name: niz
INFO  16:29:55,105 - Line 68: Method Call detected. Method name: ord
INFO  16:29:55,105 - Line 69: Method Call detected. Method name: ord
INFO  16:29:55,105 - Line 72: Using global variable name: i
INFO  16:29:55,105 - Line 74: Using global variable name: i
INFO  16:29:55,105 - Line 76: Using global variable name: i
INFO  16:29:55,105 - Line 79: Using global variable name: i
INFO  16:29:55,105 - Line 80: Using global variable name: i
INFO  16:29:55,105 - Line 80: Using global variable name: i
INFO  16:29:55,105 - Line 80: Method Call detected. Method name: inkrement
INFO  16:29:55,105 - Line 81: Using global variable name: i
INFO  16:29:55,105 - Line 83: Using global variable name: i
INFO  16:29:55,105 - Line 83: Method Call detected. Method name: verify
INFO  16:29:55,105 - Line 86: Using global variable name: niz
INFO  16:29:55,105 - Line 86: Access to array element detected. Array name: niz
INFO  16:29:55,105 - Line 87: Using global variable name: niz
INFO  16:29:55,105 - Line 87: Access to array element detected. Array name: niz
INFO  16:29:55,105 - Line 88: Using global variable name: niz
INFO  16:29:55,105 - Line 88: Access to array element detected. Array name: niz
INFO  16:29:55,105 - Line 91: Using global variable name: niz
INFO  16:29:55,105 - Line 91: Access to array element detected. Array name: niz
INFO  16:29:55,105 - Line 91: Using global variable name: niz
INFO  16:29:55,105 - Line 91: Access to array element detected. Array name: niz
INFO  16:29:55,105 - Line 91: Method Call detected. Method name: sum
INFO  16:29:55,105 - Method sum has varArgs with 2 args
INFO  16:29:55,105 - Line 91: Using global variable name: niz
INFO  16:29:55,105 - Line 91: Access to array element detected. Array name: niz
INFO  16:29:55,105 - Line 91: Method Call detected. Method name: sum
INFO  16:29:55,105 - Method sum has varArgs with 2 args
INFO  16:29:55,105 - Line 94: Using global variable name: niz
INFO  16:29:55,105 - Line 94: Access to array element detected. Array name: niz
INFO  16:29:55,105 - Line 94: Method Call detected. Method name: inkrement
INFO  16:29:55,105 - Line 96: Using global variable name: a
INFO  16:29:55,105 - Line 97: Using global variable name: i
INFO  16:29:55,105 - Line 99: Using global variable name: i
INFO  16:29:55,105 - Line 99: Using global variable name: niz
INFO  16:29:55,105 - Line 99: Access to array element detected. Array name: niz
INFO  16:29:55,105 - Line 99: Using global variable name: i
INFO  16:29:55,105 - Line 99: Using global variable name: niz
INFO  16:29:55,105 - Line 99: Access to array element detected. Array name: niz
INFO  16:29:55,105 - Line 99: Using global variable name: a
INFO  16:29:55,105 - Line 100: Using global variable name: i
INFO  16:29:55,105 - Line 101: Using global variable name: i
INFO  16:29:55,105 - Line 102: Using global variable name: niz
INFO  16:29:55,105 - Line 102: Access to array element detected. Array name: niz
INFO  16:29:55,105 - Line 103: Using global variable name: niz
INFO  16:29:55,105 - Line 103: Access to array element detected. Array name: niz
INFO  16:29:55,105 - Line 104: Using global variable name: niz
INFO  16:29:55,105 - Line 104: Access to array element detected. Array name: niz
INFO  16:29:55,105 - Line 107: Using global variable name: i
INFO  16:29:55,105 - Line 108: Using global variable name: niz2
INFO  16:29:55,105 - Line 110: Using global variable name: niz2
INFO  16:29:55,105 - Line 110: Using global variable name: niz2
INFO  16:29:55,105 - Line 110: Using global variable name: i
INFO  16:29:55,105 - Line 110: Using global variable name: niz
INFO  16:29:55,105 - Line 110: Access to array element detected. Array name: niz
INFO  16:29:55,105 - Line 110: Using global variable name: i
INFO  16:29:55,105 - Line 110: Using global variable name: niz
INFO  16:29:55,105 - Line 110: Access to array element detected. Array name: niz
INFO  16:29:55,105 - Line 111: Using global variable name: i
INFO  16:29:55,105 - Line 112: Using global variable name: i
INFO  16:29:55,105 - Line 113: Using global variable name: niz2
INFO  16:29:55,105 - Line 115: Method Call detected. Method name: printArgs
INFO  16:29:55,105 - Method printArgs has varArgs with 5 args
INFO  16:29:55,105 - Compile successful!
INFO  01:52:25,464 - Compiling source file: D:\source\repos\PP_Projekat\MicroJavaCompiler\test\program.mj
INFO  01:52:25,482 - #2 program
INFO  01:52:25,482 - #49 test302
INFO  01:52:25,482 - #7 const
INFO  01:52:25,482 - #49 int
INFO  01:52:25,482 - #49 jedan
INFO  01:52:25,483 - #27 =
INFO  01:52:25,483 - #52 1
INFO  01:52:25,483 - #38 ;
INFO  01:52:25,483 - #49 int
INFO  01:52:25,483 - #49 i
INFO  01:52:25,483 - #38 ;
INFO  01:52:25,484 - #49 bool
INFO  01:52:25,484 - #49 ibool
INFO  01:52:25,484 - #38 ;
INFO  01:52:25,484 - #49 int
INFO  01:52:25,484 - #49 niz2
INFO  01:52:25,484 - #38 ;
INFO  01:52:25,484 - #49 int
INFO  01:52:25,484 - #49 niz
INFO  01:52:25,484 - #42 [
INFO  01:52:25,484 - #43 ]
INFO  01:52:25,484 - #38 ;
INFO  01:52:25,484 - #49 int
INFO  01:52:25,484 - #49 a
INFO  01:52:25,484 - #38 ;
INFO  01:52:25,484 - #44 {
INFO  01:52:25,484 - #49 int
INFO  01:52:25,485 - #49 sum
INFO  01:52:25,485 - #40 (
INFO  01:52:25,485 - #49 int
INFO  01:52:25,485 - #47 .
INFO  01:52:25,485 - #47 .
INFO  01:52:25,485 - #47 .
INFO  01:52:25,485 - #49 args
INFO  01:52:25,485 - #41 )
INFO  01:52:25,485 - #49 int
INFO  01:52:25,486 - #49 z
INFO  01:52:25,486 - #39 ,
INFO  01:52:25,486 - #49 d
INFO  01:52:25,486 - #38 ;
INFO  01:52:25,486 - #44 {
INFO  01:52:25,486 - #49 z
INFO  01:52:25,486 - #27 =
INFO  01:52:25,486 - #49 args
INFO  01:52:25,486 - #42 [
INFO  01:52:25,487 - #52 0
INFO  01:52:25,487 - #43 ]
INFO  01:52:25,487 - #38 ;
INFO  01:52:25,487 - #49 d
INFO  01:52:25,487 - #27 =
INFO  01:52:25,487 - #49 args
INFO  01:52:25,487 - #42 [
INFO  01:52:25,487 - #52 1
INFO  01:52:25,487 - #43 ]
INFO  01:52:25,487 - #38 ;
INFO  01:52:25,487 - #15 return
INFO  01:52:25,487 - #49 z
INFO  01:52:25,487 - #22 +
INFO  01:52:25,487 - #49 d
INFO  01:52:25,488 - #38 ;
INFO  01:52:25,488 - #45 }
INFO  01:52:25,488 - #14 void
INFO  01:52:25,488 - #49 printArgs
INFO  01:52:25,488 - #40 (
INFO  01:52:25,488 - #49 int
INFO  01:52:25,488 - #49 num
INFO  01:52:25,488 - #39 ,
INFO  01:52:25,488 - #49 char
INFO  01:52:25,488 - #47 .
INFO  01:52:25,489 - #47 .
INFO  01:52:25,489 - #47 .
INFO  01:52:25,489 - #49 args
INFO  01:52:25,489 - #41 )
INFO  01:52:25,489 - #49 int
INFO  01:52:25,489 - #49 i
INFO  01:52:25,489 - #38 ;
INFO  01:52:25,489 - #44 {
INFO  01:52:25,489 - #49 i
INFO  01:52:25,489 - #27 =
INFO  01:52:25,489 - #52 0
INFO  01:52:25,489 - #38 ;
INFO  01:52:25,489 - #9 do
INFO  01:52:25,489 - #44 {
INFO  01:52:25,489 - #12 print
INFO  01:52:25,489 - #40 (
INFO  01:52:25,489 - #49 args
INFO  01:52:25,489 - #42 [
INFO  01:52:25,489 - #49 i
INFO  01:52:25,489 - #43 ]
INFO  01:52:25,489 - #41 )
INFO  01:52:25,489 - #38 ;
INFO  01:52:25,489 - #49 i
INFO  01:52:25,490 - #36 ++
INFO  01:52:25,490 - #38 ;
INFO  01:52:25,490 - #45 }
INFO  01:52:25,490 - #10 while
INFO  01:52:25,490 - #40 (
INFO  01:52:25,490 - #49 i
INFO  01:52:25,490 - #32 <
INFO  01:52:25,490 - #49 num
INFO  01:52:25,490 - #41 )
INFO  01:52:25,490 - #38 ;
INFO  01:52:25,490 - #45 }
INFO  01:52:25,491 - #49 int
INFO  01:52:25,491 - #49 inkrement
INFO  01:52:25,491 - #40 (
INFO  01:52:25,491 - #49 int
INFO  01:52:25,491 - #49 a
INFO  01:52:25,491 - #39 ,
INFO  01:52:25,491 - #49 int
INFO  01:52:25,491 - #49 inc
INFO  01:52:25,491 - #41 )
INFO  01:52:25,491 - #49 int
INFO  01:52:25,491 - #49 pom
INFO  01:52:25,491 - #38 ;
INFO  01:52:25,491 - #44 {
INFO  01:52:25,491 - #5 if
INFO  01:52:25,491 - #40 (
INFO  01:52:25,491 - #49 inc
INFO  01:52:25,491 - #28 ==
INFO  01:52:25,491 - #49 jedan
INFO  01:52:25,491 - #41 )
INFO  01:52:25,491 - #49 pom
INFO  01:52:25,491 - #27 =
INFO  01:52:25,491 - #52 1
INFO  01:52:25,491 - #38 ;
INFO  01:52:25,492 - #6 else
INFO  01:52:25,492 - #5 if
INFO  01:52:25,492 - #40 (
INFO  01:52:25,492 - #49 inc
INFO  01:52:25,492 - #28 ==
INFO  01:52:25,492 - #52 2
INFO  01:52:25,492 - #41 )
INFO  01:52:25,492 - #49 pom
INFO  01:52:25,492 - #27 =
INFO  01:52:25,492 - #49 a
INFO  01:52:25,492 - #38 ;
INFO  01:52:25,492 - #15 return
INFO  01:52:25,492 - #49 sum
INFO  01:52:25,492 - #40 (
INFO  01:52:25,492 - #49 a
INFO  01:52:25,492 - #39 ,
INFO  01:52:25,492 - #49 pom
INFO  01:52:25,492 - #41 )
INFO  01:52:25,492 - #38 ;
INFO  01:52:25,493 - #45 }
INFO  01:52:25,493 - #49 bool
INFO  01:52:25,493 - #49 verify
INFO  01:52:25,493 - #40 (
INFO  01:52:25,493 - #41 )
INFO  01:52:25,493 - #44 {
INFO  01:52:25,493 - #12 print
INFO  01:52:25,493 - #40 (
INFO  01:52:25,493 - #51 v
INFO  01:52:25,493 - #41 )
INFO  01:52:25,493 - #38 ;
INFO  01:52:25,493 - #15 return
INFO  01:52:25,493 - #50 false
INFO  01:52:25,493 - #38 ;
INFO  01:52:25,493 - #45 }
INFO  01:52:25,493 - #14 void
INFO  01:52:25,493 - #49 main
INFO  01:52:25,493 - #40 (
INFO  01:52:25,493 - #41 )
INFO  01:52:25,493 - #44 {
INFO  01:52:25,493 - #5 if
INFO  01:52:25,493 - #40 (
INFO  01:52:25,493 - #52 1
INFO  01:52:25,493 - #29 !=
INFO  01:52:25,493 - #52 1
INFO  01:52:25,493 - #41 )
INFO  01:52:25,494 - #12 print
INFO  01:52:25,494 - #40 (
INFO  01:52:25,494 - #23 -
INFO  01:52:25,494 - #52 6
INFO  01:52:25,494 - #41 )
INFO  01:52:25,494 - #38 ;
INFO  01:52:25,494 - #6 else
INFO  01:52:25,494 - #12 print
INFO  01:52:25,494 - #40 (
INFO  01:52:25,494 - #52 0
INFO  01:52:25,494 - #41 )
INFO  01:52:25,494 - #38 ;
INFO  01:52:25,494 - #49 ibool
INFO  01:52:25,494 - #27 =
INFO  01:52:25,494 - #50 false
INFO  01:52:25,494 - #38 ;
INFO  01:52:25,494 - #49 i
INFO  01:52:25,494 - #27 =
INFO  01:52:25,494 - #52 0
INFO  01:52:25,494 - #38 ;
INFO  01:52:25,494 - #9 do
INFO  01:52:25,494 - #44 {
INFO  01:52:25,494 - #5 if
INFO  01:52:25,494 - #40 (
INFO  01:52:25,494 - #49 i
INFO  01:52:25,494 - #28 ==
INFO  01:52:25,494 - #52 2
INFO  01:52:25,494 - #41 )
INFO  01:52:25,494 - #49 ibool
INFO  01:52:25,494 - #27 =
INFO  01:52:25,494 - #50 true
INFO  01:52:25,494 - #38 ;
INFO  01:52:25,494 - #49 i
INFO  01:52:25,494 - #36 ++
INFO  01:52:25,494 - #38 ;
INFO  01:52:25,494 - #45 }
INFO  01:52:25,494 - #10 while
INFO  01:52:25,494 - #40 (
INFO  01:52:25,494 - #49 i
INFO  01:52:25,494 - #32 <
INFO  01:52:25,495 - #52 5
INFO  01:52:25,495 - #41 )
INFO  01:52:25,495 - #38 ;
INFO  01:52:25,495 - #5 if
INFO  01:52:25,495 - #40 (
INFO  01:52:25,495 - #49 ibool
INFO  01:52:25,495 - #41 )
INFO  01:52:25,495 - #5 if
INFO  01:52:25,495 - #40 (
INFO  01:52:25,495 - #49 i
INFO  01:52:25,495 - #28 ==
INFO  01:52:25,495 - #52 5
INFO  01:52:25,495 - #41 )
INFO  01:52:25,495 - #12 print
INFO  01:52:25,495 - #40 (
INFO  01:52:25,495 - #52 1
INFO  01:52:25,495 - #41 )
INFO  01:52:25,495 - #38 ;
INFO  01:52:25,495 - #6 else
INFO  01:52:25,495 - #12 print
INFO  01:52:25,495 - #40 (
INFO  01:52:25,495 - #23 -
INFO  01:52:25,495 - #52 1
INFO  01:52:25,495 - #41 )
INFO  01:52:25,495 - #38 ;
INFO  01:52:25,495 - #49 a
INFO  01:52:25,495 - #27 =
INFO  01:52:25,495 - #52 2
INFO  01:52:25,495 - #38 ;
INFO  01:52:25,495 - #49 niz
INFO  01:52:25,495 - #27 =
INFO  01:52:25,495 - #11 new
INFO  01:52:25,495 - #49 int
INFO  01:52:25,495 - #42 [
INFO  01:52:25,495 - #52 3
INFO  01:52:25,495 - #43 ]
INFO  01:52:25,495 - #38 ;
INFO  01:52:25,495 - #49 niz
INFO  01:52:25,495 - #42 [
INFO  01:52:25,495 - #52 0
INFO  01:52:25,495 - #43 ]
INFO  01:52:25,495 - #27 =
INFO  01:52:25,495 - #52 1
INFO  01:52:25,495 - #24 *
INFO  01:52:25,495 - #49 a
INFO  01:52:25,496 - #38 ;
INFO  01:52:25,496 - #49 niz
INFO  01:52:25,496 - #42 [
INFO  01:52:25,496 - #52 1
INFO  01:52:25,496 - #43 ]
INFO  01:52:25,496 - #27 =
INFO  01:52:25,496 - #52 2
INFO  01:52:25,496 - #24 *
INFO  01:52:25,496 - #49 a
INFO  01:52:25,496 - #38 ;
INFO  01:52:25,496 - #49 niz
INFO  01:52:25,496 - #42 [
INFO  01:52:25,496 - #52 2
INFO  01:52:25,496 - #43 ]
INFO  01:52:25,496 - #27 =
INFO  01:52:25,496 - #49 sum
INFO  01:52:25,496 - #40 (
INFO  01:52:25,496 - #49 niz
INFO  01:52:25,496 - #42 [
INFO  01:52:25,496 - #52 1
INFO  01:52:25,496 - #43 ]
INFO  01:52:25,496 - #39 ,
INFO  01:52:25,496 - #49 niz
INFO  01:52:25,496 - #42 [
INFO  01:52:25,496 - #52 0
INFO  01:52:25,496 - #43 ]
INFO  01:52:25,496 - #41 )
INFO  01:52:25,496 - #24 *
INFO  01:52:25,496 - #49 a
INFO  01:52:25,496 - #22 +
INFO  01:52:25,496 - #52 1
INFO  01:52:25,496 - #38 ;
INFO  01:52:25,496 - #5 if
INFO  01:52:25,496 - #40 (
INFO  01:52:25,496 - #49 verify
INFO  01:52:25,496 - #40 (
INFO  01:52:25,496 - #41 )
INFO  01:52:25,496 - #35 ||
INFO  01:52:25,497 - #49 niz
INFO  01:52:25,497 - #42 [
INFO  01:52:25,497 - #52 2
INFO  01:52:25,497 - #43 ]
INFO  01:52:25,497 - #28 ==
INFO  01:52:25,497 - #52 4
INFO  01:52:25,497 - #41 )
INFO  01:52:25,497 - #12 print
INFO  01:52:25,497 - #40 (
INFO  01:52:25,497 - #49 ord
INFO  01:52:25,497 - #40 (
INFO  01:52:25,497 - #51 A
INFO  01:52:25,497 - #41 )
INFO  01:52:25,497 - #41 )
INFO  01:52:25,497 - #38 ;
INFO  01:52:25,497 - #6 else
INFO  01:52:25,497 - #12 print
INFO  01:52:25,497 - #40 (
INFO  01:52:25,497 - #49 ord
INFO  01:52:25,497 - #40 (
INFO  01:52:25,497 - #51 a
INFO  01:52:25,497 - #41 )
INFO  01:52:25,497 - #41 )
INFO  01:52:25,497 - #38 ;
INFO  01:52:25,497 - #12 print
INFO  01:52:25,497 - #40 (
INFO  01:52:25,497 - #49 eol
INFO  01:52:25,497 - #41 )
INFO  01:52:25,497 - #38 ;
INFO  01:52:25,497 - #49 i
INFO  01:52:25,497 - #27 =
INFO  01:52:25,497 - #52 0
INFO  01:52:25,497 - #38 ;
INFO  01:52:25,497 - #9 do
INFO  01:52:25,497 - #44 {
INFO  01:52:25,497 - #5 if
INFO  01:52:25,497 - #40 (
INFO  01:52:25,497 - #49 i
INFO  01:52:25,497 - #28 ==
INFO  01:52:25,497 - #52 3
INFO  01:52:25,497 - #41 )
INFO  01:52:25,497 - #44 {
INFO  01:52:25,497 - #49 i
INFO  01:52:25,497 - #36 ++
INFO  01:52:25,497 - #38 ;
INFO  01:52:25,497 - #4 continue
INFO  01:52:25,497 - #38 ;
INFO  01:52:25,497 - #45 }
INFO  01:52:25,497 - #5 if
INFO  01:52:25,497 - #40 (
INFO  01:52:25,497 - #49 i
INFO  01:52:25,497 - #28 ==
INFO  01:52:25,497 - #52 4
INFO  01:52:25,497 - #41 )
INFO  01:52:25,497 - #3 break
INFO  01:52:25,497 - #38 ;
INFO  01:52:25,497 - #49 i
INFO  01:52:25,497 - #27 =
INFO  01:52:25,497 - #49 inkrement
INFO  01:52:25,497 - #40 (
INFO  01:52:25,497 - #49 i
INFO  01:52:25,497 - #39 ,
INFO  01:52:25,497 - #52 1
INFO  01:52:25,497 - #41 )
INFO  01:52:25,497 - #38 ;
INFO  01:52:25,498 - #45 }
INFO  01:52:25,498 - #10 while
INFO  01:52:25,498 - #40 (
INFO  01:52:25,498 - #49 i
INFO  01:52:25,498 - #32 <
INFO  01:52:25,498 - #52 10
INFO  01:52:25,498 - #41 )
INFO  01:52:25,498 - #38 ;
INFO  01:52:25,498 - #5 if
INFO  01:52:25,498 - #40 (
INFO  01:52:25,498 - #49 i
INFO  01:52:25,498 - #28 ==
INFO  01:52:25,498 - #52 3
INFO  01:52:25,498 - #34 &&
INFO  01:52:25,498 - #49 verify
INFO  01:52:25,498 - #40 (
INFO  01:52:25,498 - #41 )
INFO  01:52:25,498 - #41 )
INFO  01:52:25,498 - #12 print
INFO  01:52:25,498 - #40 (
INFO  01:52:25,498 - #23 -
INFO  01:52:25,498 - #52 4
INFO  01:52:25,498 - #41 )
INFO  01:52:25,498 - #38 ;
INFO  01:52:25,498 - #6 else
INFO  01:52:25,498 - #12 print
INFO  01:52:25,498 - #40 (
INFO  01:52:25,498 - #52 4
INFO  01:52:25,498 - #41 )
INFO  01:52:25,498 - #38 ;
INFO  01:52:25,498 - #13 read
INFO  01:52:25,498 - #40 (
INFO  01:52:25,498 - #49 niz
INFO  01:52:25,498 - #42 [
INFO  01:52:25,498 - #52 0
INFO  01:52:25,498 - #43 ]
INFO  01:52:25,498 - #41 )
INFO  01:52:25,498 - #38 ;
INFO  01:52:25,498 - #13 read
INFO  01:52:25,498 - #40 (
INFO  01:52:25,498 - #49 niz
INFO  01:52:25,498 - #42 [
INFO  01:52:25,498 - #52 1
INFO  01:52:25,498 - #43 ]
INFO  01:52:25,498 - #41 )
INFO  01:52:25,498 - #38 ;
INFO  01:52:25,498 - #13 read
INFO  01:52:25,498 - #40 (
INFO  01:52:25,498 - #49 niz
INFO  01:52:25,498 - #42 [
INFO  01:52:25,498 - #52 2
INFO  01:52:25,498 - #43 ]
INFO  01:52:25,498 - #41 )
INFO  01:52:25,498 - #38 ;
INFO  01:52:25,498 - #12 print
INFO  01:52:25,498 - #40 (
INFO  01:52:25,498 - #49 eol
INFO  01:52:25,498 - #41 )
INFO  01:52:25,498 - #38 ;
INFO  01:52:25,498 - #12 print
INFO  01:52:25,498 - #40 (
INFO  01:52:25,498 - #49 sum
INFO  01:52:25,498 - #40 (
INFO  01:52:25,498 - #49 sum
INFO  01:52:25,498 - #40 (
INFO  01:52:25,498 - #49 niz
INFO  01:52:25,498 - #42 [
INFO  01:52:25,498 - #52 0
INFO  01:52:25,498 - #43 ]
INFO  01:52:25,498 - #39 ,
INFO  01:52:25,498 - #49 niz
INFO  01:52:25,498 - #42 [
INFO  01:52:25,498 - #52 1
INFO  01:52:25,498 - #43 ]
INFO  01:52:25,498 - #41 )
INFO  01:52:25,498 - #39 ,
INFO  01:52:25,498 - #49 niz
INFO  01:52:25,498 - #42 [
INFO  01:52:25,498 - #52 2
INFO  01:52:25,498 - #43 ]
INFO  01:52:25,498 - #41 )
INFO  01:52:25,498 - #41 )
INFO  01:52:25,498 - #38 ;
INFO  01:52:25,498 - #12 print
INFO  01:52:25,498 - #40 (
INFO  01:52:25,498 - #49 eol
INFO  01:52:25,498 - #41 )
INFO  01:52:25,498 - #38 ;
INFO  01:52:25,498 - #12 print
INFO  01:52:25,498 - #40 (
INFO  01:52:25,498 - #49 inkrement
INFO  01:52:25,498 - #40 (
INFO  01:52:25,498 - #49 niz
INFO  01:52:25,498 - #42 [
INFO  01:52:25,498 - #52 2
INFO  01:52:25,498 - #43 ]
INFO  01:52:25,498 - #39 ,
INFO  01:52:25,498 - #52 2
INFO  01:52:25,498 - #41 )
INFO  01:52:25,499 - #41 )
INFO  01:52:25,499 - #38 ;
INFO  01:52:25,499 - #49 a
INFO  01:52:25,499 - #27 =
INFO  01:52:25,499 - #52 3
INFO  01:52:25,499 - #38 ;
INFO  01:52:25,499 - #49 i
INFO  01:52:25,499 - #27 =
INFO  01:52:25,499 - #52 0
INFO  01:52:25,499 - #38 ;
INFO  01:52:25,499 - #9 do
INFO  01:52:25,499 - #44 {
INFO  01:52:25,499 - #49 niz
INFO  01:52:25,499 - #42 [
INFO  01:52:25,499 - #49 i
INFO  01:52:25,499 - #43 ]
INFO  01:52:25,499 - #27 =
INFO  01:52:25,499 - #49 niz
INFO  01:52:25,499 - #42 [
INFO  01:52:25,499 - #49 i
INFO  01:52:25,499 - #43 ]
INFO  01:52:25,499 - #24 *
INFO  01:52:25,499 - #52 2
INFO  01:52:25,499 - #24 *
INFO  01:52:25,499 - #49 a
INFO  01:52:25,499 - #38 ;
INFO  01:52:25,499 - #49 i
INFO  01:52:25,499 - #36 ++
INFO  01:52:25,499 - #38 ;
INFO  01:52:25,499 - #45 }
INFO  01:52:25,499 - #10 while
INFO  01:52:25,499 - #40 (
INFO  01:52:25,499 - #49 i
INFO  01:52:25,499 - #32 <
INFO  01:52:25,499 - #52 3
INFO  01:52:25,499 - #41 )
INFO  01:52:25,499 - #38 ;
INFO  01:52:25,499 - #12 print
INFO  01:52:25,499 - #40 (
INFO  01:52:25,499 - #49 niz
INFO  01:52:25,499 - #42 [
INFO  01:52:25,499 - #52 0
INFO  01:52:25,499 - #43 ]
INFO  01:52:25,499 - #41 )
INFO  01:52:25,499 - #38 ;
INFO  01:52:25,499 - #12 print
INFO  01:52:25,499 - #40 (
INFO  01:52:25,499 - #49 niz
INFO  01:52:25,499 - #42 [
INFO  01:52:25,499 - #52 1
INFO  01:52:25,499 - #43 ]
INFO  01:52:25,499 - #41 )
INFO  01:52:25,499 - #38 ;
INFO  01:52:25,499 - #12 print
INFO  01:52:25,499 - #40 (
INFO  01:52:25,499 - #49 niz
INFO  01:52:25,499 - #42 [
INFO  01:52:25,499 - #52 2
INFO  01:52:25,499 - #43 ]
INFO  01:52:25,499 - #41 )
INFO  01:52:25,499 - #38 ;
INFO  01:52:25,499 - #12 print
INFO  01:52:25,499 - #40 (
INFO  01:52:25,499 - #49 eol
INFO  01:52:25,499 - #41 )
INFO  01:52:25,499 - #38 ;
INFO  01:52:25,499 - #49 i
INFO  01:52:25,499 - #27 =
INFO  01:52:25,499 - #52 0
INFO  01:52:25,499 - #38 ;
INFO  01:52:25,499 - #49 niz2
INFO  01:52:25,499 - #27 =
INFO  01:52:25,499 - #52 0
INFO  01:52:25,499 - #38 ;
INFO  01:52:25,499 - #9 do
INFO  01:52:25,499 - #44 {
INFO  01:52:25,499 - #49 niz2
INFO  01:52:25,499 - #27 =
INFO  01:52:25,499 - #49 niz2
INFO  01:52:25,499 - #22 +
INFO  01:52:25,499 - #49 niz
INFO  01:52:25,499 - #42 [
INFO  01:52:25,499 - #49 i
INFO  01:52:25,499 - #43 ]
INFO  01:52:25,499 - #24 *
INFO  01:52:25,499 - #49 niz
INFO  01:52:25,499 - #42 [
INFO  01:52:25,499 - #49 i
INFO  01:52:25,499 - #43 ]
INFO  01:52:25,499 - #38 ;
INFO  01:52:25,499 - #49 i
INFO  01:52:25,499 - #36 ++
INFO  01:52:25,499 - #38 ;
INFO  01:52:25,499 - #45 }
INFO  01:52:25,499 - #10 while
INFO  01:52:25,499 - #40 (
INFO  01:52:25,499 - #49 i
INFO  01:52:25,499 - #32 <
INFO  01:52:25,499 - #52 3
INFO  01:52:25,499 - #41 )
INFO  01:52:25,499 - #38 ;
INFO  01:52:25,499 - #12 print
INFO  01:52:25,499 - #40 (
INFO  01:52:25,499 - #49 niz2
INFO  01:52:25,499 - #41 )
INFO  01:52:25,499 - #38 ;
INFO  01:52:25,499 - #12 print
INFO  01:52:25,499 - #40 (
INFO  01:52:25,499 - #49 eol
INFO  01:52:25,499 - #41 )
INFO  01:52:25,499 - #38 ;
INFO  01:52:25,499 - #49 printArgs
INFO  01:52:25,499 - #40 (
INFO  01:52:25,499 - #52 5
INFO  01:52:25,499 - #39 ,
INFO  01:52:25,499 - #51 t
INFO  01:52:25,499 - #39 ,
INFO  01:52:25,499 - #51 e
INFO  01:52:25,499 - #39 ,
INFO  01:52:25,499 - #51 s
INFO  01:52:25,499 - #39 ,
INFO  01:52:25,499 - #51 t
INFO  01:52:25,499 - #39 ,
INFO  01:52:25,499 - #51 B
INFO  01:52:25,499 - #41 )
INFO  01:52:25,500 - #38 ;
INFO  01:52:25,500 - #45 }
INFO  01:52:25,500 - #45 }
INFO  01:52:25,505 - Program(
  ProgramName(
   test302
  ) [ProgramName]
  AllDeclListMultiple(
    AllDeclListMultiple(
      AllDeclListMultiple(
        AllDeclListMultiple(
          AllDeclListMultiple(
            AllDeclListMultiple(
              NoDecl(
              ) [NoDecl]
              ConstDeclaration(
                ConstDeclarationExpr(
                  Type(
                   int
                  ) [Type]
                  ConstAssignSingle(
                    ConstAssign(
                     jedan
                      NumberConst(
                       1
                      ) [NumberConst]
                    ) [ConstAssign]
                  ) [ConstAssignSingle]
                ) [ConstDeclarationExpr]
              ) [ConstDeclaration]
            ) [AllDeclListMultiple]
            GlobalVarDeclaration(
              GlobalVarDeclarationExpr(
                Type(
                 int
                ) [Type]
                GlobalVarDeclListSingle(
                  GlobalVarDeclarationSingle(
                   i
                    NoArray(
                    ) [NoArray]
                  ) [GlobalVarDeclarationSingle]
                ) [GlobalVarDeclListSingle]
              ) [GlobalVarDeclarationExpr]
            ) [GlobalVarDeclaration]
          ) [AllDeclListMultiple]
          GlobalVarDeclaration(
            GlobalVarDeclarationExpr(
              Type(
               bool
              ) [Type]
              GlobalVarDeclListSingle(
                GlobalVarDeclarationSingle(
                 ibool
                  NoArray(
                  ) [NoArray]
                ) [GlobalVarDeclarationSingle]
              ) [GlobalVarDeclListSingle]
            ) [GlobalVarDeclarationExpr]
          ) [GlobalVarDeclaration]
        ) [AllDeclListMultiple]
        GlobalVarDeclaration(
          GlobalVarDeclarationExpr(
            Type(
             int
            ) [Type]
            GlobalVarDeclListSingle(
              GlobalVarDeclarationSingle(
               niz2
                NoArray(
                ) [NoArray]
              ) [GlobalVarDeclarationSingle]
            ) [GlobalVarDeclListSingle]
          ) [GlobalVarDeclarationExpr]
        ) [GlobalVarDeclaration]
      ) [AllDeclListMultiple]
      GlobalVarDeclaration(
        GlobalVarDeclarationExpr(
          Type(
           int
          ) [Type]
          GlobalVarDeclListSingle(
            GlobalVarDeclarationSingle(
             niz
              ArrayBrackets(
              ) [ArrayBrackets]
            ) [GlobalVarDeclarationSingle]
          ) [GlobalVarDeclListSingle]
        ) [GlobalVarDeclarationExpr]
      ) [GlobalVarDeclaration]
    ) [AllDeclListMultiple]
    GlobalVarDeclaration(
      GlobalVarDeclarationExpr(
        Type(
         int
        ) [Type]
        GlobalVarDeclListSingle(
          GlobalVarDeclarationSingle(
           a
            NoArray(
            ) [NoArray]
          ) [GlobalVarDeclarationSingle]
        ) [GlobalVarDeclListSingle]
      ) [GlobalVarDeclarationExpr]
    ) [GlobalVarDeclaration]
  ) [AllDeclListMultiple]
  MethodDeclListMultiple(
    MethodDeclListMultiple(
      MethodDeclListMultiple(
        MethodDeclListMultiple(
          MethodDeclListMultiple(
            MethodDeclListNo(
            ) [MethodDeclListNo]
            MethodDeclaration(
              MethodSignatureVarArgsOnly(
                MethodTypeType(
                  Type(
                   int
                  ) [Type]
                ) [MethodTypeType]
                MethodName(
                 sum
                ) [MethodName]
                Type(
                 int
                ) [Type]
                VarArgsDeclaration(
                 args
                ) [VarArgsDeclaration]
                FormParsEnd(
                ) [FormParsEnd]
              ) [MethodSignatureVarArgsOnly]
              VarDeclOptionTrue(
                NoVarDeclOption(
                ) [NoVarDeclOption]
                VarDeclarationExpr(
                  Type(
                   int
                  ) [Type]
                  VarDeclListMultiple(
                    VarDeclListSingle(
                      VarDeclSingle(
                       z
                        NoArray(
                        ) [NoArray]
                      ) [VarDeclSingle]
                    ) [VarDeclListSingle]
                    VarDeclSingle(
                     d
                      NoArray(
                      ) [NoArray]
                    ) [VarDeclSingle]
                  ) [VarDeclListMultiple]
                ) [VarDeclarationExpr]
              ) [VarDeclOptionTrue]
              StatementListMultiple(
                StatementListMultiple(
                  StatementListMultiple(
                    StatementListNo(
                    ) [StatementListNo]
                    StatementSingle(
                      SingleDesignatorStatement(
                        DesignatorStmtAssign(
                          DesignatorStmtAssignCorrect(
                            IdentDesignator(
                             z
                            ) [IdentDesignator]
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                DesignatorEmptyFactor(
                                  IdentArrayDesignator(
                                   args
                                    SingleTermExprPositive(
                                      SingleFactorTerm(
                                        NumConstFactor(
                                         0
                                        ) [NumConstFactor]
                                      ) [SingleFactorTerm]
                                    ) [SingleTermExprPositive]
                                  ) [IdentArrayDesignator]
                                ) [DesignatorEmptyFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [DesignatorStmtAssignCorrect]
                        ) [DesignatorStmtAssign]
                      ) [SingleDesignatorStatement]
                    ) [StatementSingle]
                  ) [StatementListMultiple]
                  StatementSingle(
                    SingleDesignatorStatement(
                      DesignatorStmtAssign(
                        DesignatorStmtAssignCorrect(
                          IdentDesignator(
                           d
                          ) [IdentDesignator]
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              DesignatorEmptyFactor(
                                IdentArrayDesignator(
                                 args
                                  SingleTermExprPositive(
                                    SingleFactorTerm(
                                      NumConstFactor(
                                       1
                                      ) [NumConstFactor]
                                    ) [SingleFactorTerm]
                                  ) [SingleTermExprPositive]
                                ) [IdentArrayDesignator]
                              ) [DesignatorEmptyFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [DesignatorStmtAssignCorrect]
                      ) [DesignatorStmtAssign]
                    ) [SingleDesignatorStatement]
                  ) [StatementSingle]
                ) [StatementListMultiple]
                StatementSingle(
                  SingleReturnExprStatement(
                    MultiTermExpr(
                      SingleTermExprPositive(
                        SingleFactorTerm(
                          DesignatorEmptyFactor(
                            IdentDesignator(
                             z
                            ) [IdentDesignator]
                          ) [DesignatorEmptyFactor]
                        ) [SingleFactorTerm]
                      ) [SingleTermExprPositive]
                      AddopPlus(
                      ) [AddopPlus]
                      SingleFactorTerm(
                        DesignatorEmptyFactor(
                          IdentDesignator(
                           d
                          ) [IdentDesignator]
                        ) [DesignatorEmptyFactor]
                      ) [SingleFactorTerm]
                    ) [MultiTermExpr]
                  ) [SingleReturnExprStatement]
                ) [StatementSingle]
              ) [StatementListMultiple]
            ) [MethodDeclaration]
          ) [MethodDeclListMultiple]
          MethodDeclaration(
            MethodSignatureVarArgs(
              MethodTypeVoid(
              ) [MethodTypeVoid]
              MethodName(
               printArgs
              ) [MethodName]
              FormParsSingle(
                FormParSingle(
                  Type(
                   int
                  ) [Type]
                 num
                  NoArray(
                  ) [NoArray]
                ) [FormParSingle]
              ) [FormParsSingle]
              Type(
               char
              ) [Type]
              VarArgsDeclaration(
               args
              ) [VarArgsDeclaration]
              FormParsEnd(
              ) [FormParsEnd]
            ) [MethodSignatureVarArgs]
            VarDeclOptionTrue(
              NoVarDeclOption(
              ) [NoVarDeclOption]
              VarDeclarationExpr(
                Type(
                 int
                ) [Type]
                VarDeclListSingle(
                  VarDeclSingle(
                   i
                    NoArray(
                    ) [NoArray]
                  ) [VarDeclSingle]
                ) [VarDeclListSingle]
              ) [VarDeclarationExpr]
            ) [VarDeclOptionTrue]
            StatementListMultiple(
              StatementListMultiple(
                StatementListNo(
                ) [StatementListNo]
                StatementSingle(
                  SingleDesignatorStatement(
                    DesignatorStmtAssign(
                      DesignatorStmtAssignCorrect(
                        IdentDesignator(
                         i
                        ) [IdentDesignator]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            NumConstFactor(
                             0
                            ) [NumConstFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [DesignatorStmtAssignCorrect]
                    ) [DesignatorStmtAssign]
                  ) [SingleDesignatorStatement]
                ) [StatementSingle]
              ) [StatementListMultiple]
              StatementSingle(
                DoWhileStatement(
                  DoEnter(
                  ) [DoEnter]
                  StatementListMultiple(
                    StatementListNo(
                    ) [StatementListNo]
                    StatementMultiple(
                      StatementsInBraces(
                        StatementListMultiple(
                          StatementListMultiple(
                            StatementListNo(
                            ) [StatementListNo]
                            StatementSingle(
                              SinglePrintStatement(
                                SingleTermExprPositive(
                                  SingleFactorTerm(
                                    DesignatorEmptyFactor(
                                      IdentArrayDesignator(
                                       args
                                        SingleTermExprPositive(
                                          SingleFactorTerm(
                                            DesignatorEmptyFactor(
                                              IdentDesignator(
                                               i
                                              ) [IdentDesignator]
                                            ) [DesignatorEmptyFactor]
                                          ) [SingleFactorTerm]
                                        ) [SingleTermExprPositive]
                                      ) [IdentArrayDesignator]
                                    ) [DesignatorEmptyFactor]
                                  ) [SingleFactorTerm]
                                ) [SingleTermExprPositive]
                                NumConstNo(
                                ) [NumConstNo]
                              ) [SinglePrintStatement]
                            ) [StatementSingle]
                          ) [StatementListMultiple]
                          StatementSingle(
                            SingleDesignatorStatement(
                              DesignatorStmtPlusPlus(
                                IdentDesignator(
                                 i
                                ) [IdentDesignator]
                              ) [DesignatorStmtPlusPlus]
                            ) [SingleDesignatorStatement]
                          ) [StatementSingle]
                        ) [StatementListMultiple]
                      ) [StatementsInBraces]
                    ) [StatementMultiple]
                  ) [StatementListMultiple]
                  ConditionSingleTerm(
                    CondSingleFactTerm(
                      CondMultiExprFact(
                        CondSingleExprFact(
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              DesignatorEmptyFactor(
                                IdentDesignator(
                                 i
                                ) [IdentDesignator]
                              ) [DesignatorEmptyFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [CondSingleExprFact]
                        RelopLS(
                        ) [RelopLS]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            DesignatorEmptyFactor(
                              IdentDesignator(
                               num
                              ) [IdentDesignator]
                            ) [DesignatorEmptyFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [CondMultiExprFact]
                    ) [CondSingleFactTerm]
                  ) [ConditionSingleTerm]
                ) [DoWhileStatement]
              ) [StatementSingle]
            ) [StatementListMultiple]
          ) [MethodDeclaration]
        ) [MethodDeclListMultiple]
        MethodDeclaration(
          MethodSignatureParams(
            MethodTypeType(
              Type(
               int
              ) [Type]
            ) [MethodTypeType]
            MethodName(
             inkrement
            ) [MethodName]
            FormParsMultiple(
              FormParsSingle(
                FormParSingle(
                  Type(
                   int
                  ) [Type]
                 a
                  NoArray(
                  ) [NoArray]
                ) [FormParSingle]
              ) [FormParsSingle]
              FormParSingle(
                Type(
                 int
                ) [Type]
               inc
                NoArray(
                ) [NoArray]
              ) [FormParSingle]
            ) [FormParsMultiple]
            FormParsEnd(
            ) [FormParsEnd]
          ) [MethodSignatureParams]
          VarDeclOptionTrue(
            NoVarDeclOption(
            ) [NoVarDeclOption]
            VarDeclarationExpr(
              Type(
               int
              ) [Type]
              VarDeclListSingle(
                VarDeclSingle(
                 pom
                  NoArray(
                  ) [NoArray]
                ) [VarDeclSingle]
              ) [VarDeclListSingle]
            ) [VarDeclarationExpr]
          ) [VarDeclOptionTrue]
          StatementListMultiple(
            StatementListMultiple(
              StatementListNo(
              ) [StatementListNo]
              StatementSingle(
                IfElseStatement(
                  IfConditionSingleTerm(
                    CondSingleFactTerm(
                      CondMultiExprFact(
                        CondSingleExprFact(
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              DesignatorEmptyFactor(
                                IdentDesignator(
                                 inc
                                ) [IdentDesignator]
                              ) [DesignatorEmptyFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [CondSingleExprFact]
                        RelopEQUAL(
                        ) [RelopEQUAL]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            DesignatorEmptyFactor(
                              IdentDesignator(
                               jedan
                              ) [IdentDesignator]
                            ) [DesignatorEmptyFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [CondMultiExprFact]
                    ) [CondSingleFactTerm]
                  ) [IfConditionSingleTerm]
                  StatementSingle(
                    SingleDesignatorStatement(
                      DesignatorStmtAssign(
                        DesignatorStmtAssignCorrect(
                          IdentDesignator(
                           pom
                          ) [IdentDesignator]
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              NumConstFactor(
                               1
                              ) [NumConstFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [DesignatorStmtAssignCorrect]
                      ) [DesignatorStmtAssign]
                    ) [SingleDesignatorStatement]
                  ) [StatementSingle]
                  StatementSingle(
                    IfStatement(
                      IfConditionSingleTerm(
                        CondSingleFactTerm(
                          CondMultiExprFact(
                            CondSingleExprFact(
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentDesignator(
                                     inc
                                    ) [IdentDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [CondSingleExprFact]
                            RelopEQUAL(
                            ) [RelopEQUAL]
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                NumConstFactor(
                                 2
                                ) [NumConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [CondMultiExprFact]
                        ) [CondSingleFactTerm]
                      ) [IfConditionSingleTerm]
                      StatementSingle(
                        SingleDesignatorStatement(
                          DesignatorStmtAssign(
                            DesignatorStmtAssignCorrect(
                              IdentDesignator(
                               pom
                              ) [IdentDesignator]
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentDesignator(
                                     a
                                    ) [IdentDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [DesignatorStmtAssignCorrect]
                          ) [DesignatorStmtAssign]
                        ) [SingleDesignatorStatement]
                      ) [StatementSingle]
                    ) [IfStatement]
                  ) [StatementSingle]
                ) [IfElseStatement]
              ) [StatementSingle]
            ) [StatementListMultiple]
            StatementSingle(
              SingleReturnExprStatement(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    MethodCallFactor(
                      MethodCall(
                        IdentDesignator(
                         sum
                        ) [IdentDesignator]
                        ActParsLeftParen(
                        ) [ActParsLeftParen]
                        ActParsYes(
                          ActParsMultiExpr(
                            ActParsSingleExpr(
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentDesignator(
                                     a
                                    ) [IdentDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [ActParsSingleExpr]
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                DesignatorEmptyFactor(
                                  IdentDesignator(
                                   pom
                                  ) [IdentDesignator]
                                ) [DesignatorEmptyFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [ActParsMultiExpr]
                        ) [ActParsYes]
                        ActParsRightParen(
                        ) [ActParsRightParen]
                      ) [MethodCall]
                    ) [MethodCallFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
              ) [SingleReturnExprStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
        ) [MethodDeclaration]
      ) [MethodDeclListMultiple]
      MethodDeclaration(
        MethodSignaturePlain(
          MethodTypeType(
            Type(
             bool
            ) [Type]
          ) [MethodTypeType]
          MethodName(
           verify
          ) [MethodName]
        ) [MethodSignaturePlain]
        NoVarDeclOption(
        ) [NoVarDeclOption]
        StatementListMultiple(
          StatementListMultiple(
            StatementListNo(
            ) [StatementListNo]
            StatementSingle(
              SinglePrintStatement(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    CharConstFactor(
                     v
                    ) [CharConstFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
                NumConstNo(
                ) [NumConstNo]
              ) [SinglePrintStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
          StatementSingle(
            SingleReturnExprStatement(
              SingleTermExprPositive(
                SingleFactorTerm(
                  BoolConstFactor(
                   false
                  ) [BoolConstFactor]
                ) [SingleFactorTerm]
              ) [SingleTermExprPositive]
            ) [SingleReturnExprStatement]
          ) [StatementSingle]
        ) [StatementListMultiple]
      ) [MethodDeclaration]
    ) [MethodDeclListMultiple]
    MethodDeclaration(
      MethodSignaturePlain(
        MethodTypeVoid(
        ) [MethodTypeVoid]
        MethodName(
         main
        ) [MethodName]
      ) [MethodSignaturePlain]
      NoVarDeclOption(
      ) [NoVarDeclOption]
      StatementListMultiple(
        StatementListMultiple(
          StatementListMultiple(
            StatementListMultiple(
              StatementListMultiple(
                StatementListMultiple(
                  StatementListMultiple(
                    StatementListMultiple(
                      StatementListMultiple(
                        StatementListMultiple(
                          StatementListMultiple(
                            StatementListMultiple(
                              StatementListMultiple(
                                StatementListMultiple(
                                  StatementListMultiple(
                                    StatementListMultiple(
                                      StatementListMultiple(
                                        StatementListMultiple(
                                          StatementListMultiple(
                                            StatementListMultiple(
                                              StatementListMultiple(
                                                StatementListMultiple(
                                                  StatementListMultiple(
                                                    StatementListMultiple(
                                                      StatementListMultiple(
                                                        StatementListMultiple(
                                                          StatementListMultiple(
                                                            StatementListMultiple(
                                                              StatementListMultiple(
                                                                StatementListMultiple(
                                                                  StatementListMultiple(
                                                                    StatementListMultiple(
                                                                      StatementListMultiple(
                                                                        StatementListMultiple(
                                                                          StatementListMultiple(
                                                                            StatementListNo(
                                                                            ) [StatementListNo]
                                                                            StatementSingle(
                                                                              IfElseStatement(
                                                                                IfConditionSingleTerm(
                                                                                  CondSingleFactTerm(
                                                                                    CondMultiExprFact(
                                                                                      CondSingleExprFact(
                                                                                        SingleTermExprPositive(
                                                                                          SingleFactorTerm(
                                                                                            NumConstFactor(
                                                                                             1
                                                                                            ) [NumConstFactor]
                                                                                          ) [SingleFactorTerm]
                                                                                        ) [SingleTermExprPositive]
                                                                                      ) [CondSingleExprFact]
                                                                                      RelopNOTEQUAL(
                                                                                      ) [RelopNOTEQUAL]
                                                                                      SingleTermExprPositive(
                                                                                        SingleFactorTerm(
                                                                                          NumConstFactor(
                                                                                           1
                                                                                          ) [NumConstFactor]
                                                                                        ) [SingleFactorTerm]
                                                                                      ) [SingleTermExprPositive]
                                                                                    ) [CondMultiExprFact]
                                                                                  ) [CondSingleFactTerm]
                                                                                ) [IfConditionSingleTerm]
                                                                                StatementSingle(
                                                                                  SinglePrintStatement(
                                                                                    SingleTermExprNegative(
                                                                                      SingleFactorTerm(
                                                                                        NumConstFactor(
                                                                                         6
                                                                                        ) [NumConstFactor]
                                                                                      ) [SingleFactorTerm]
                                                                                    ) [SingleTermExprNegative]
                                                                                    NumConstNo(
                                                                                    ) [NumConstNo]
                                                                                  ) [SinglePrintStatement]
                                                                                ) [StatementSingle]
                                                                                StatementSingle(
                                                                                  SinglePrintStatement(
                                                                                    SingleTermExprPositive(
                                                                                      SingleFactorTerm(
                                                                                        NumConstFactor(
                                                                                         0
                                                                                        ) [NumConstFactor]
                                                                                      ) [SingleFactorTerm]
                                                                                    ) [SingleTermExprPositive]
                                                                                    NumConstNo(
                                                                                    ) [NumConstNo]
                                                                                  ) [SinglePrintStatement]
                                                                                ) [StatementSingle]
                                                                              ) [IfElseStatement]
                                                                            ) [StatementSingle]
                                                                          ) [StatementListMultiple]
                                                                          StatementSingle(
                                                                            SingleDesignatorStatement(
                                                                              DesignatorStmtAssign(
                                                                                DesignatorStmtAssignCorrect(
                                                                                  IdentDesignator(
                                                                                   ibool
                                                                                  ) [IdentDesignator]
                                                                                  SingleTermExprPositive(
                                                                                    SingleFactorTerm(
                                                                                      BoolConstFactor(
                                                                                       false
                                                                                      ) [BoolConstFactor]
                                                                                    ) [SingleFactorTerm]
                                                                                  ) [SingleTermExprPositive]
                                                                                ) [DesignatorStmtAssignCorrect]
                                                                              ) [DesignatorStmtAssign]
                                                                            ) [SingleDesignatorStatement]
                                                                          ) [StatementSingle]
                                                                        ) [StatementListMultiple]
                                                                        StatementSingle(
                                                                          SingleDesignatorStatement(
                                                                            DesignatorStmtAssign(
                                                                              DesignatorStmtAssignCorrect(
                                                                                IdentDesignator(
                                                                                 i
                                                                                ) [IdentDesignator]
                                                                                SingleTermExprPositive(
                                                                                  SingleFactorTerm(
                                                                                    NumConstFactor(
                                                                                     0
                                                                                    ) [NumConstFactor]
                                                                                  ) [SingleFactorTerm]
                                                                                ) [SingleTermExprPositive]
                                                                              ) [DesignatorStmtAssignCorrect]
                                                                            ) [DesignatorStmtAssign]
                                                                          ) [SingleDesignatorStatement]
                                                                        ) [StatementSingle]
                                                                      ) [StatementListMultiple]
                                                                      StatementSingle(
                                                                        DoWhileStatement(
                                                                          DoEnter(
                                                                          ) [DoEnter]
                                                                          StatementListMultiple(
                                                                            StatementListNo(
                                                                            ) [StatementListNo]
                                                                            StatementMultiple(
                                                                              StatementsInBraces(
                                                                                StatementListMultiple(
                                                                                  StatementListMultiple(
                                                                                    StatementListNo(
                                                                                    ) [StatementListNo]
                                                                                    StatementSingle(
                                                                                      IfStatement(
                                                                                        IfConditionSingleTerm(
                                                                                          CondSingleFactTerm(
                                                                                            CondMultiExprFact(
                                                                                              CondSingleExprFact(
                                                                                                SingleTermExprPositive(
                                                                                                  SingleFactorTerm(
                                                                                                    DesignatorEmptyFactor(
                                                                                                      IdentDesignator(
                                                                                                       i
                                                                                                      ) [IdentDesignator]
                                                                                                    ) [DesignatorEmptyFactor]
                                                                                                  ) [SingleFactorTerm]
                                                                                                ) [SingleTermExprPositive]
                                                                                              ) [CondSingleExprFact]
                                                                                              RelopEQUAL(
                                                                                              ) [RelopEQUAL]
                                                                                              SingleTermExprPositive(
                                                                                                SingleFactorTerm(
                                                                                                  NumConstFactor(
                                                                                                   2
                                                                                                  ) [NumConstFactor]
                                                                                                ) [SingleFactorTerm]
                                                                                              ) [SingleTermExprPositive]
                                                                                            ) [CondMultiExprFact]
                                                                                          ) [CondSingleFactTerm]
                                                                                        ) [IfConditionSingleTerm]
                                                                                        StatementSingle(
                                                                                          SingleDesignatorStatement(
                                                                                            DesignatorStmtAssign(
                                                                                              DesignatorStmtAssignCorrect(
                                                                                                IdentDesignator(
                                                                                                 ibool
                                                                                                ) [IdentDesignator]
                                                                                                SingleTermExprPositive(
                                                                                                  SingleFactorTerm(
                                                                                                    BoolConstFactor(
                                                                                                     true
                                                                                                    ) [BoolConstFactor]
                                                                                                  ) [SingleFactorTerm]
                                                                                                ) [SingleTermExprPositive]
                                                                                              ) [DesignatorStmtAssignCorrect]
                                                                                            ) [DesignatorStmtAssign]
                                                                                          ) [SingleDesignatorStatement]
                                                                                        ) [StatementSingle]
                                                                                      ) [IfStatement]
                                                                                    ) [StatementSingle]
                                                                                  ) [StatementListMultiple]
                                                                                  StatementSingle(
                                                                                    SingleDesignatorStatement(
                                                                                      DesignatorStmtPlusPlus(
                                                                                        IdentDesignator(
                                                                                         i
                                                                                        ) [IdentDesignator]
                                                                                      ) [DesignatorStmtPlusPlus]
                                                                                    ) [SingleDesignatorStatement]
                                                                                  ) [StatementSingle]
                                                                                ) [StatementListMultiple]
                                                                              ) [StatementsInBraces]
                                                                            ) [StatementMultiple]
                                                                          ) [StatementListMultiple]
                                                                          ConditionSingleTerm(
                                                                            CondSingleFactTerm(
                                                                              CondMultiExprFact(
                                                                                CondSingleExprFact(
                                                                                  SingleTermExprPositive(
                                                                                    SingleFactorTerm(
                                                                                      DesignatorEmptyFactor(
                                                                                        IdentDesignator(
                                                                                         i
                                                                                        ) [IdentDesignator]
                                                                                      ) [DesignatorEmptyFactor]
                                                                                    ) [SingleFactorTerm]
                                                                                  ) [SingleTermExprPositive]
                                                                                ) [CondSingleExprFact]
                                                                                RelopLS(
                                                                                ) [RelopLS]
                                                                                SingleTermExprPositive(
                                                                                  SingleFactorTerm(
                                                                                    NumConstFactor(
                                                                                     5
                                                                                    ) [NumConstFactor]
                                                                                  ) [SingleFactorTerm]
                                                                                ) [SingleTermExprPositive]
                                                                              ) [CondMultiExprFact]
                                                                            ) [CondSingleFactTerm]
                                                                          ) [ConditionSingleTerm]
                                                                        ) [DoWhileStatement]
                                                                      ) [StatementSingle]
                                                                    ) [StatementListMultiple]
                                                                    StatementSingle(
                                                                      IfStatement(
                                                                        IfConditionSingleTerm(
                                                                          CondSingleFactTerm(
                                                                            CondSingleExprFact(
                                                                              SingleTermExprPositive(
                                                                                SingleFactorTerm(
                                                                                  DesignatorEmptyFactor(
                                                                                    IdentDesignator(
                                                                                     ibool
                                                                                    ) [IdentDesignator]
                                                                                  ) [DesignatorEmptyFactor]
                                                                                ) [SingleFactorTerm]
                                                                              ) [SingleTermExprPositive]
                                                                            ) [CondSingleExprFact]
                                                                          ) [CondSingleFactTerm]
                                                                        ) [IfConditionSingleTerm]
                                                                        StatementSingle(
                                                                          IfElseStatement(
                                                                            IfConditionSingleTerm(
                                                                              CondSingleFactTerm(
                                                                                CondMultiExprFact(
                                                                                  CondSingleExprFact(
                                                                                    SingleTermExprPositive(
                                                                                      SingleFactorTerm(
                                                                                        DesignatorEmptyFactor(
                                                                                          IdentDesignator(
                                                                                           i
                                                                                          ) [IdentDesignator]
                                                                                        ) [DesignatorEmptyFactor]
                                                                                      ) [SingleFactorTerm]
                                                                                    ) [SingleTermExprPositive]
                                                                                  ) [CondSingleExprFact]
                                                                                  RelopEQUAL(
                                                                                  ) [RelopEQUAL]
                                                                                  SingleTermExprPositive(
                                                                                    SingleFactorTerm(
                                                                                      NumConstFactor(
                                                                                       5
                                                                                      ) [NumConstFactor]
                                                                                    ) [SingleFactorTerm]
                                                                                  ) [SingleTermExprPositive]
                                                                                ) [CondMultiExprFact]
                                                                              ) [CondSingleFactTerm]
                                                                            ) [IfConditionSingleTerm]
                                                                            StatementSingle(
                                                                              SinglePrintStatement(
                                                                                SingleTermExprPositive(
                                                                                  SingleFactorTerm(
                                                                                    NumConstFactor(
                                                                                     1
                                                                                    ) [NumConstFactor]
                                                                                  ) [SingleFactorTerm]
                                                                                ) [SingleTermExprPositive]
                                                                                NumConstNo(
                                                                                ) [NumConstNo]
                                                                              ) [SinglePrintStatement]
                                                                            ) [StatementSingle]
                                                                            StatementSingle(
                                                                              SinglePrintStatement(
                                                                                SingleTermExprNegative(
                                                                                  SingleFactorTerm(
                                                                                    NumConstFactor(
                                                                                     1
                                                                                    ) [NumConstFactor]
                                                                                  ) [SingleFactorTerm]
                                                                                ) [SingleTermExprNegative]
                                                                                NumConstNo(
                                                                                ) [NumConstNo]
                                                                              ) [SinglePrintStatement]
                                                                            ) [StatementSingle]
                                                                          ) [IfElseStatement]
                                                                        ) [StatementSingle]
                                                                      ) [IfStatement]
                                                                    ) [StatementSingle]
                                                                  ) [StatementListMultiple]
                                                                  StatementSingle(
                                                                    SingleDesignatorStatement(
                                                                      DesignatorStmtAssign(
                                                                        DesignatorStmtAssignCorrect(
                                                                          IdentDesignator(
                                                                           a
                                                                          ) [IdentDesignator]
                                                                          SingleTermExprPositive(
                                                                            SingleFactorTerm(
                                                                              NumConstFactor(
                                                                               2
                                                                              ) [NumConstFactor]
                                                                            ) [SingleFactorTerm]
                                                                          ) [SingleTermExprPositive]
                                                                        ) [DesignatorStmtAssignCorrect]
                                                                      ) [DesignatorStmtAssign]
                                                                    ) [SingleDesignatorStatement]
                                                                  ) [StatementSingle]
                                                                ) [StatementListMultiple]
                                                                StatementSingle(
                                                                  SingleDesignatorStatement(
                                                                    DesignatorStmtAssign(
                                                                      DesignatorStmtAssignCorrect(
                                                                        IdentDesignator(
                                                                         niz
                                                                        ) [IdentDesignator]
                                                                        SingleTermExprPositive(
                                                                          SingleFactorTerm(
                                                                            NewTypeArrayFactor(
                                                                              Type(
                                                                               int
                                                                              ) [Type]
                                                                              SingleTermExprPositive(
                                                                                SingleFactorTerm(
                                                                                  NumConstFactor(
                                                                                   3
                                                                                  ) [NumConstFactor]
                                                                                ) [SingleFactorTerm]
                                                                              ) [SingleTermExprPositive]
                                                                            ) [NewTypeArrayFactor]
                                                                          ) [SingleFactorTerm]
                                                                        ) [SingleTermExprPositive]
                                                                      ) [DesignatorStmtAssignCorrect]
                                                                    ) [DesignatorStmtAssign]
                                                                  ) [SingleDesignatorStatement]
                                                                ) [StatementSingle]
                                                              ) [StatementListMultiple]
                                                              StatementSingle(
                                                                SingleDesignatorStatement(
                                                                  DesignatorStmtAssign(
                                                                    DesignatorStmtAssignCorrect(
                                                                      IdentArrayDesignator(
                                                                       niz
                                                                        SingleTermExprPositive(
                                                                          SingleFactorTerm(
                                                                            NumConstFactor(
                                                                             0
                                                                            ) [NumConstFactor]
                                                                          ) [SingleFactorTerm]
                                                                        ) [SingleTermExprPositive]
                                                                      ) [IdentArrayDesignator]
                                                                      SingleTermExprPositive(
                                                                        MultiFactorTerm(
                                                                          SingleFactorTerm(
                                                                            NumConstFactor(
                                                                             1
                                                                            ) [NumConstFactor]
                                                                          ) [SingleFactorTerm]
                                                                          MulopMul(
                                                                          ) [MulopMul]
                                                                          DesignatorEmptyFactor(
                                                                            IdentDesignator(
                                                                             a
                                                                            ) [IdentDesignator]
                                                                          ) [DesignatorEmptyFactor]
                                                                        ) [MultiFactorTerm]
                                                                      ) [SingleTermExprPositive]
                                                                    ) [DesignatorStmtAssignCorrect]
                                                                  ) [DesignatorStmtAssign]
                                                                ) [SingleDesignatorStatement]
                                                              ) [StatementSingle]
                                                            ) [StatementListMultiple]
                                                            StatementSingle(
                                                              SingleDesignatorStatement(
                                                                DesignatorStmtAssign(
                                                                  DesignatorStmtAssignCorrect(
                                                                    IdentArrayDesignator(
                                                                     niz
                                                                      SingleTermExprPositive(
                                                                        SingleFactorTerm(
                                                                          NumConstFactor(
                                                                           1
                                                                          ) [NumConstFactor]
                                                                        ) [SingleFactorTerm]
                                                                      ) [SingleTermExprPositive]
                                                                    ) [IdentArrayDesignator]
                                                                    SingleTermExprPositive(
                                                                      MultiFactorTerm(
                                                                        SingleFactorTerm(
                                                                          NumConstFactor(
                                                                           2
                                                                          ) [NumConstFactor]
                                                                        ) [SingleFactorTerm]
                                                                        MulopMul(
                                                                        ) [MulopMul]
                                                                        DesignatorEmptyFactor(
                                                                          IdentDesignator(
                                                                           a
                                                                          ) [IdentDesignator]
                                                                        ) [DesignatorEmptyFactor]
                                                                      ) [MultiFactorTerm]
                                                                    ) [SingleTermExprPositive]
                                                                  ) [DesignatorStmtAssignCorrect]
                                                                ) [DesignatorStmtAssign]
                                                              ) [SingleDesignatorStatement]
                                                            ) [StatementSingle]
                                                          ) [StatementListMultiple]
                                                          StatementSingle(
                                                            SingleDesignatorStatement(
                                                              DesignatorStmtAssign(
                                                                DesignatorStmtAssignCorrect(
                                                                  IdentArrayDesignator(
                                                                   niz
                                                                    SingleTermExprPositive(
                                                                      SingleFactorTerm(
                                                                        NumConstFactor(
                                                                         2
                                                                        ) [NumConstFactor]
                                                                      ) [SingleFactorTerm]
                                                                    ) [SingleTermExprPositive]
                                                                  ) [IdentArrayDesignator]
                                                                  MultiTermExpr(
                                                                    SingleTermExprPositive(
                                                                      MultiFactorTerm(
                                                                        SingleFactorTerm(
                                                                          MethodCallFactor(
                                                                            MethodCall(
                                                                              IdentDesignator(
                                                                               sum
                                                                              ) [IdentDesignator]
                                                                              ActParsLeftParen(
                                                                              ) [ActParsLeftParen]
                                                                              ActParsYes(
                                                                                ActParsMultiExpr(
                                                                                  ActParsSingleExpr(
                                                                                    SingleTermExprPositive(
                                                                                      SingleFactorTerm(
                                                                                        DesignatorEmptyFactor(
                                                                                          IdentArrayDesignator(
                                                                                           niz
                                                                                            SingleTermExprPositive(
                                                                                              SingleFactorTerm(
                                                                                                NumConstFactor(
                                                                                                 1
                                                                                                ) [NumConstFactor]
                                                                                              ) [SingleFactorTerm]
                                                                                            ) [SingleTermExprPositive]
                                                                                          ) [IdentArrayDesignator]
                                                                                        ) [DesignatorEmptyFactor]
                                                                                      ) [SingleFactorTerm]
                                                                                    ) [SingleTermExprPositive]
                                                                                  ) [ActParsSingleExpr]
                                                                                  SingleTermExprPositive(
                                                                                    SingleFactorTerm(
                                                                                      DesignatorEmptyFactor(
                                                                                        IdentArrayDesignator(
                                                                                         niz
                                                                                          SingleTermExprPositive(
                                                                                            SingleFactorTerm(
                                                                                              NumConstFactor(
                                                                                               0
                                                                                              ) [NumConstFactor]
                                                                                            ) [SingleFactorTerm]
                                                                                          ) [SingleTermExprPositive]
                                                                                        ) [IdentArrayDesignator]
                                                                                      ) [DesignatorEmptyFactor]
                                                                                    ) [SingleFactorTerm]
                                                                                  ) [SingleTermExprPositive]
                                                                                ) [ActParsMultiExpr]
                                                                              ) [ActParsYes]
                                                                              ActParsRightParen(
                                                                              ) [ActParsRightParen]
                                                                            ) [MethodCall]
                                                                          ) [MethodCallFactor]
                                                                        ) [SingleFactorTerm]
                                                                        MulopMul(
                                                                        ) [MulopMul]
                                                                        DesignatorEmptyFactor(
                                                                          IdentDesignator(
                                                                           a
                                                                          ) [IdentDesignator]
                                                                        ) [DesignatorEmptyFactor]
                                                                      ) [MultiFactorTerm]
                                                                    ) [SingleTermExprPositive]
                                                                    AddopPlus(
                                                                    ) [AddopPlus]
                                                                    SingleFactorTerm(
                                                                      NumConstFactor(
                                                                       1
                                                                      ) [NumConstFactor]
                                                                    ) [SingleFactorTerm]
                                                                  ) [MultiTermExpr]
                                                                ) [DesignatorStmtAssignCorrect]
                                                              ) [DesignatorStmtAssign]
                                                            ) [SingleDesignatorStatement]
                                                          ) [StatementSingle]
                                                        ) [StatementListMultiple]
                                                        StatementSingle(
                                                          IfElseStatement(
                                                            IfConditionMultiTerm(
                                                              ConditionSingleTerm(
                                                                CondSingleFactTerm(
                                                                  CondSingleExprFact(
                                                                    SingleTermExprPositive(
                                                                      SingleFactorTerm(
                                                                        MethodCallFactor(
                                                                          MethodCall(
                                                                            IdentDesignator(
                                                                             verify
                                                                            ) [IdentDesignator]
                                                                            ActParsLeftParen(
                                                                            ) [ActParsLeftParen]
                                                                            ActParsNo(
                                                                            ) [ActParsNo]
                                                                            ActParsRightParen(
                                                                            ) [ActParsRightParen]
                                                                          ) [MethodCall]
                                                                        ) [MethodCallFactor]
                                                                      ) [SingleFactorTerm]
                                                                    ) [SingleTermExprPositive]
                                                                  ) [CondSingleExprFact]
                                                                ) [CondSingleFactTerm]
                                                              ) [ConditionSingleTerm]
                                                              CondSingleFactTerm(
                                                                CondMultiExprFact(
                                                                  CondSingleExprFact(
                                                                    SingleTermExprPositive(
                                                                      SingleFactorTerm(
                                                                        DesignatorEmptyFactor(
                                                                          IdentArrayDesignator(
                                                                           niz
                                                                            SingleTermExprPositive(
                                                                              SingleFactorTerm(
                                                                                NumConstFactor(
                                                                                 2
                                                                                ) [NumConstFactor]
                                                                              ) [SingleFactorTerm]
                                                                            ) [SingleTermExprPositive]
                                                                          ) [IdentArrayDesignator]
                                                                        ) [DesignatorEmptyFactor]
                                                                      ) [SingleFactorTerm]
                                                                    ) [SingleTermExprPositive]
                                                                  ) [CondSingleExprFact]
                                                                  RelopEQUAL(
                                                                  ) [RelopEQUAL]
                                                                  SingleTermExprPositive(
                                                                    SingleFactorTerm(
                                                                      NumConstFactor(
                                                                       4
                                                                      ) [NumConstFactor]
                                                                    ) [SingleFactorTerm]
                                                                  ) [SingleTermExprPositive]
                                                                ) [CondMultiExprFact]
                                                              ) [CondSingleFactTerm]
                                                            ) [IfConditionMultiTerm]
                                                            StatementSingle(
                                                              SinglePrintStatement(
                                                                SingleTermExprPositive(
                                                                  SingleFactorTerm(
                                                                    MethodCallFactor(
                                                                      MethodCall(
                                                                        IdentDesignator(
                                                                         ord
                                                                        ) [IdentDesignator]
                                                                        ActParsLeftParen(
                                                                        ) [ActParsLeftParen]
                                                                        ActParsYes(
                                                                          ActParsSingleExpr(
                                                                            SingleTermExprPositive(
                                                                              SingleFactorTerm(
                                                                                CharConstFactor(
                                                                                 A
                                                                                ) [CharConstFactor]
                                                                              ) [SingleFactorTerm]
                                                                            ) [SingleTermExprPositive]
                                                                          ) [ActParsSingleExpr]
                                                                        ) [ActParsYes]
                                                                        ActParsRightParen(
                                                                        ) [ActParsRightParen]
                                                                      ) [MethodCall]
                                                                    ) [MethodCallFactor]
                                                                  ) [SingleFactorTerm]
                                                                ) [SingleTermExprPositive]
                                                                NumConstNo(
                                                                ) [NumConstNo]
                                                              ) [SinglePrintStatement]
                                                            ) [StatementSingle]
                                                            StatementSingle(
                                                              SinglePrintStatement(
                                                                SingleTermExprPositive(
                                                                  SingleFactorTerm(
                                                                    MethodCallFactor(
                                                                      MethodCall(
                                                                        IdentDesignator(
                                                                         ord
                                                                        ) [IdentDesignator]
                                                                        ActParsLeftParen(
                                                                        ) [ActParsLeftParen]
                                                                        ActParsYes(
                                                                          ActParsSingleExpr(
                                                                            SingleTermExprPositive(
                                                                              SingleFactorTerm(
                                                                                CharConstFactor(
                                                                                 a
                                                                                ) [CharConstFactor]
                                                                              ) [SingleFactorTerm]
                                                                            ) [SingleTermExprPositive]
                                                                          ) [ActParsSingleExpr]
                                                                        ) [ActParsYes]
                                                                        ActParsRightParen(
                                                                        ) [ActParsRightParen]
                                                                      ) [MethodCall]
                                                                    ) [MethodCallFactor]
                                                                  ) [SingleFactorTerm]
                                                                ) [SingleTermExprPositive]
                                                                NumConstNo(
                                                                ) [NumConstNo]
                                                              ) [SinglePrintStatement]
                                                            ) [StatementSingle]
                                                          ) [IfElseStatement]
                                                        ) [StatementSingle]
                                                      ) [StatementListMultiple]
                                                      StatementSingle(
                                                        SinglePrintStatement(
                                                          SingleTermExprPositive(
                                                            SingleFactorTerm(
                                                              DesignatorEmptyFactor(
                                                                IdentDesignator(
                                                                 eol
                                                                ) [IdentDesignator]
                                                              ) [DesignatorEmptyFactor]
                                                            ) [SingleFactorTerm]
                                                          ) [SingleTermExprPositive]
                                                          NumConstNo(
                                                          ) [NumConstNo]
                                                        ) [SinglePrintStatement]
                                                      ) [StatementSingle]
                                                    ) [StatementListMultiple]
                                                    StatementSingle(
                                                      SingleDesignatorStatement(
                                                        DesignatorStmtAssign(
                                                          DesignatorStmtAssignCorrect(
                                                            IdentDesignator(
                                                             i
                                                            ) [IdentDesignator]
                                                            SingleTermExprPositive(
                                                              SingleFactorTerm(
                                                                NumConstFactor(
                                                                 0
                                                                ) [NumConstFactor]
                                                              ) [SingleFactorTerm]
                                                            ) [SingleTermExprPositive]
                                                          ) [DesignatorStmtAssignCorrect]
                                                        ) [DesignatorStmtAssign]
                                                      ) [SingleDesignatorStatement]
                                                    ) [StatementSingle]
                                                  ) [StatementListMultiple]
                                                  StatementSingle(
                                                    DoWhileStatement(
                                                      DoEnter(
                                                      ) [DoEnter]
                                                      StatementListMultiple(
                                                        StatementListNo(
                                                        ) [StatementListNo]
                                                        StatementMultiple(
                                                          StatementsInBraces(
                                                            StatementListMultiple(
                                                              StatementListMultiple(
                                                                StatementListMultiple(
                                                                  StatementListNo(
                                                                  ) [StatementListNo]
                                                                  StatementSingle(
                                                                    IfStatement(
                                                                      IfConditionSingleTerm(
                                                                        CondSingleFactTerm(
                                                                          CondMultiExprFact(
                                                                            CondSingleExprFact(
                                                                              SingleTermExprPositive(
                                                                                SingleFactorTerm(
                                                                                  DesignatorEmptyFactor(
                                                                                    IdentDesignator(
                                                                                     i
                                                                                    ) [IdentDesignator]
                                                                                  ) [DesignatorEmptyFactor]
                                                                                ) [SingleFactorTerm]
                                                                              ) [SingleTermExprPositive]
                                                                            ) [CondSingleExprFact]
                                                                            RelopEQUAL(
                                                                            ) [RelopEQUAL]
                                                                            SingleTermExprPositive(
                                                                              SingleFactorTerm(
                                                                                NumConstFactor(
                                                                                 3
                                                                                ) [NumConstFactor]
                                                                              ) [SingleFactorTerm]
                                                                            ) [SingleTermExprPositive]
                                                                          ) [CondMultiExprFact]
                                                                        ) [CondSingleFactTerm]
                                                                      ) [IfConditionSingleTerm]
                                                                      StatementMultiple(
                                                                        StatementsInBraces(
                                                                          StatementListMultiple(
                                                                            StatementListMultiple(
                                                                              StatementListNo(
                                                                              ) [StatementListNo]
                                                                              StatementSingle(
                                                                                SingleDesignatorStatement(
                                                                                  DesignatorStmtPlusPlus(
                                                                                    IdentDesignator(
                                                                                     i
                                                                                    ) [IdentDesignator]
                                                                                  ) [DesignatorStmtPlusPlus]
                                                                                ) [SingleDesignatorStatement]
                                                                              ) [StatementSingle]
                                                                            ) [StatementListMultiple]
                                                                            StatementSingle(
                                                                              SingleContinueStatement(
                                                                              ) [SingleContinueStatement]
                                                                            ) [StatementSingle]
                                                                          ) [StatementListMultiple]
                                                                        ) [StatementsInBraces]
                                                                      ) [StatementMultiple]
                                                                    ) [IfStatement]
                                                                  ) [StatementSingle]
                                                                ) [StatementListMultiple]
                                                                StatementSingle(
                                                                  IfStatement(
                                                                    IfConditionSingleTerm(
                                                                      CondSingleFactTerm(
                                                                        CondMultiExprFact(
                                                                          CondSingleExprFact(
                                                                            SingleTermExprPositive(
                                                                              SingleFactorTerm(
                                                                                DesignatorEmptyFactor(
                                                                                  IdentDesignator(
                                                                                   i
                                                                                  ) [IdentDesignator]
                                                                                ) [DesignatorEmptyFactor]
                                                                              ) [SingleFactorTerm]
                                                                            ) [SingleTermExprPositive]
                                                                          ) [CondSingleExprFact]
                                                                          RelopEQUAL(
                                                                          ) [RelopEQUAL]
                                                                          SingleTermExprPositive(
                                                                            SingleFactorTerm(
                                                                              NumConstFactor(
                                                                               4
                                                                              ) [NumConstFactor]
                                                                            ) [SingleFactorTerm]
                                                                          ) [SingleTermExprPositive]
                                                                        ) [CondMultiExprFact]
                                                                      ) [CondSingleFactTerm]
                                                                    ) [IfConditionSingleTerm]
                                                                    StatementSingle(
                                                                      SingleBreakStatement(
                                                                      ) [SingleBreakStatement]
                                                                    ) [StatementSingle]
                                                                  ) [IfStatement]
                                                                ) [StatementSingle]
                                                              ) [StatementListMultiple]
                                                              StatementSingle(
                                                                SingleDesignatorStatement(
                                                                  DesignatorStmtAssign(
                                                                    DesignatorStmtAssignCorrect(
                                                                      IdentDesignator(
                                                                       i
                                                                      ) [IdentDesignator]
                                                                      SingleTermExprPositive(
                                                                        SingleFactorTerm(
                                                                          MethodCallFactor(
                                                                            MethodCall(
                                                                              IdentDesignator(
                                                                               inkrement
                                                                              ) [IdentDesignator]
                                                                              ActParsLeftParen(
                                                                              ) [ActParsLeftParen]
                                                                              ActParsYes(
                                                                                ActParsMultiExpr(
                                                                                  ActParsSingleExpr(
                                                                                    SingleTermExprPositive(
                                                                                      SingleFactorTerm(
                                                                                        DesignatorEmptyFactor(
                                                                                          IdentDesignator(
                                                                                           i
                                                                                          ) [IdentDesignator]
                                                                                        ) [DesignatorEmptyFactor]
                                                                                      ) [SingleFactorTerm]
                                                                                    ) [SingleTermExprPositive]
                                                                                  ) [ActParsSingleExpr]
                                                                                  SingleTermExprPositive(
                                                                                    SingleFactorTerm(
                                                                                      NumConstFactor(
                                                                                       1
                                                                                      ) [NumConstFactor]
                                                                                    ) [SingleFactorTerm]
                                                                                  ) [SingleTermExprPositive]
                                                                                ) [ActParsMultiExpr]
                                                                              ) [ActParsYes]
                                                                              ActParsRightParen(
                                                                              ) [ActParsRightParen]
                                                                            ) [MethodCall]
                                                                          ) [MethodCallFactor]
                                                                        ) [SingleFactorTerm]
                                                                      ) [SingleTermExprPositive]
                                                                    ) [DesignatorStmtAssignCorrect]
                                                                  ) [DesignatorStmtAssign]
                                                                ) [SingleDesignatorStatement]
                                                              ) [StatementSingle]
                                                            ) [StatementListMultiple]
                                                          ) [StatementsInBraces]
                                                        ) [StatementMultiple]
                                                      ) [StatementListMultiple]
                                                      ConditionSingleTerm(
                                                        CondSingleFactTerm(
                                                          CondMultiExprFact(
                                                            CondSingleExprFact(
                                                              SingleTermExprPositive(
                                                                SingleFactorTerm(
                                                                  DesignatorEmptyFactor(
                                                                    IdentDesignator(
                                                                     i
                                                                    ) [IdentDesignator]
                                                                  ) [DesignatorEmptyFactor]
                                                                ) [SingleFactorTerm]
                                                              ) [SingleTermExprPositive]
                                                            ) [CondSingleExprFact]
                                                            RelopLS(
                                                            ) [RelopLS]
                                                            SingleTermExprPositive(
                                                              SingleFactorTerm(
                                                                NumConstFactor(
                                                                 10
                                                                ) [NumConstFactor]
                                                              ) [SingleFactorTerm]
                                                            ) [SingleTermExprPositive]
                                                          ) [CondMultiExprFact]
                                                        ) [CondSingleFactTerm]
                                                      ) [ConditionSingleTerm]
                                                    ) [DoWhileStatement]
                                                  ) [StatementSingle]
                                                ) [StatementListMultiple]
                                                StatementSingle(
                                                  IfElseStatement(
                                                    IfConditionSingleTerm(
                                                      CondMultiFactTerm(
                                                        CondSingleFactTerm(
                                                          CondMultiExprFact(
                                                            CondSingleExprFact(
                                                              SingleTermExprPositive(
                                                                SingleFactorTerm(
                                                                  DesignatorEmptyFactor(
                                                                    IdentDesignator(
                                                                     i
                                                                    ) [IdentDesignator]
                                                                  ) [DesignatorEmptyFactor]
                                                                ) [SingleFactorTerm]
                                                              ) [SingleTermExprPositive]
                                                            ) [CondSingleExprFact]
                                                            RelopEQUAL(
                                                            ) [RelopEQUAL]
                                                            SingleTermExprPositive(
                                                              SingleFactorTerm(
                                                                NumConstFactor(
                                                                 3
                                                                ) [NumConstFactor]
                                                              ) [SingleFactorTerm]
                                                            ) [SingleTermExprPositive]
                                                          ) [CondMultiExprFact]
                                                        ) [CondSingleFactTerm]
                                                        CondSingleExprFact(
                                                          SingleTermExprPositive(
                                                            SingleFactorTerm(
                                                              MethodCallFactor(
                                                                MethodCall(
                                                                  IdentDesignator(
                                                                   verify
                                                                  ) [IdentDesignator]
                                                                  ActParsLeftParen(
                                                                  ) [ActParsLeftParen]
                                                                  ActParsNo(
                                                                  ) [ActParsNo]
                                                                  ActParsRightParen(
                                                                  ) [ActParsRightParen]
                                                                ) [MethodCall]
                                                              ) [MethodCallFactor]
                                                            ) [SingleFactorTerm]
                                                          ) [SingleTermExprPositive]
                                                        ) [CondSingleExprFact]
                                                      ) [CondMultiFactTerm]
                                                    ) [IfConditionSingleTerm]
                                                    StatementSingle(
                                                      SinglePrintStatement(
                                                        SingleTermExprNegative(
                                                          SingleFactorTerm(
                                                            NumConstFactor(
                                                             4
                                                            ) [NumConstFactor]
                                                          ) [SingleFactorTerm]
                                                        ) [SingleTermExprNegative]
                                                        NumConstNo(
                                                        ) [NumConstNo]
                                                      ) [SinglePrintStatement]
                                                    ) [StatementSingle]
                                                    StatementSingle(
                                                      SinglePrintStatement(
                                                        SingleTermExprPositive(
                                                          SingleFactorTerm(
                                                            NumConstFactor(
                                                             4
                                                            ) [NumConstFactor]
                                                          ) [SingleFactorTerm]
                                                        ) [SingleTermExprPositive]
                                                        NumConstNo(
                                                        ) [NumConstNo]
                                                      ) [SinglePrintStatement]
                                                    ) [StatementSingle]
                                                  ) [IfElseStatement]
                                                ) [StatementSingle]
                                              ) [StatementListMultiple]
                                              StatementSingle(
                                                SingleReadStatement(
                                                  IdentArrayDesignator(
                                                   niz
                                                    SingleTermExprPositive(
                                                      SingleFactorTerm(
                                                        NumConstFactor(
                                                         0
                                                        ) [NumConstFactor]
                                                      ) [SingleFactorTerm]
                                                    ) [SingleTermExprPositive]
                                                  ) [IdentArrayDesignator]
                                                ) [SingleReadStatement]
                                              ) [StatementSingle]
                                            ) [StatementListMultiple]
                                            StatementSingle(
                                              SingleReadStatement(
                                                IdentArrayDesignator(
                                                 niz
                                                  SingleTermExprPositive(
                                                    SingleFactorTerm(
                                                      NumConstFactor(
                                                       1
                                                      ) [NumConstFactor]
                                                    ) [SingleFactorTerm]
                                                  ) [SingleTermExprPositive]
                                                ) [IdentArrayDesignator]
                                              ) [SingleReadStatement]
                                            ) [StatementSingle]
                                          ) [StatementListMultiple]
                                          StatementSingle(
                                            SingleReadStatement(
                                              IdentArrayDesignator(
                                               niz
                                                SingleTermExprPositive(
                                                  SingleFactorTerm(
                                                    NumConstFactor(
                                                     2
                                                    ) [NumConstFactor]
                                                  ) [SingleFactorTerm]
                                                ) [SingleTermExprPositive]
                                              ) [IdentArrayDesignator]
                                            ) [SingleReadStatement]
                                          ) [StatementSingle]
                                        ) [StatementListMultiple]
                                        StatementSingle(
                                          SinglePrintStatement(
                                            SingleTermExprPositive(
                                              SingleFactorTerm(
                                                DesignatorEmptyFactor(
                                                  IdentDesignator(
                                                   eol
                                                  ) [IdentDesignator]
                                                ) [DesignatorEmptyFactor]
                                              ) [SingleFactorTerm]
                                            ) [SingleTermExprPositive]
                                            NumConstNo(
                                            ) [NumConstNo]
                                          ) [SinglePrintStatement]
                                        ) [StatementSingle]
                                      ) [StatementListMultiple]
                                      StatementSingle(
                                        SinglePrintStatement(
                                          SingleTermExprPositive(
                                            SingleFactorTerm(
                                              MethodCallFactor(
                                                MethodCall(
                                                  IdentDesignator(
                                                   sum
                                                  ) [IdentDesignator]
                                                  ActParsLeftParen(
                                                  ) [ActParsLeftParen]
                                                  ActParsYes(
                                                    ActParsMultiExpr(
                                                      ActParsSingleExpr(
                                                        SingleTermExprPositive(
                                                          SingleFactorTerm(
                                                            MethodCallFactor(
                                                              MethodCall(
                                                                IdentDesignator(
                                                                 sum
                                                                ) [IdentDesignator]
                                                                ActParsLeftParen(
                                                                ) [ActParsLeftParen]
                                                                ActParsYes(
                                                                  ActParsMultiExpr(
                                                                    ActParsSingleExpr(
                                                                      SingleTermExprPositive(
                                                                        SingleFactorTerm(
                                                                          DesignatorEmptyFactor(
                                                                            IdentArrayDesignator(
                                                                             niz
                                                                              SingleTermExprPositive(
                                                                                SingleFactorTerm(
                                                                                  NumConstFactor(
                                                                                   0
                                                                                  ) [NumConstFactor]
                                                                                ) [SingleFactorTerm]
                                                                              ) [SingleTermExprPositive]
                                                                            ) [IdentArrayDesignator]
                                                                          ) [DesignatorEmptyFactor]
                                                                        ) [SingleFactorTerm]
                                                                      ) [SingleTermExprPositive]
                                                                    ) [ActParsSingleExpr]
                                                                    SingleTermExprPositive(
                                                                      SingleFactorTerm(
                                                                        DesignatorEmptyFactor(
                                                                          IdentArrayDesignator(
                                                                           niz
                                                                            SingleTermExprPositive(
                                                                              SingleFactorTerm(
                                                                                NumConstFactor(
                                                                                 1
                                                                                ) [NumConstFactor]
                                                                              ) [SingleFactorTerm]
                                                                            ) [SingleTermExprPositive]
                                                                          ) [IdentArrayDesignator]
                                                                        ) [DesignatorEmptyFactor]
                                                                      ) [SingleFactorTerm]
                                                                    ) [SingleTermExprPositive]
                                                                  ) [ActParsMultiExpr]
                                                                ) [ActParsYes]
                                                                ActParsRightParen(
                                                                ) [ActParsRightParen]
                                                              ) [MethodCall]
                                                            ) [MethodCallFactor]
                                                          ) [SingleFactorTerm]
                                                        ) [SingleTermExprPositive]
                                                      ) [ActParsSingleExpr]
                                                      SingleTermExprPositive(
                                                        SingleFactorTerm(
                                                          DesignatorEmptyFactor(
                                                            IdentArrayDesignator(
                                                             niz
                                                              SingleTermExprPositive(
                                                                SingleFactorTerm(
                                                                  NumConstFactor(
                                                                   2
                                                                  ) [NumConstFactor]
                                                                ) [SingleFactorTerm]
                                                              ) [SingleTermExprPositive]
                                                            ) [IdentArrayDesignator]
                                                          ) [DesignatorEmptyFactor]
                                                        ) [SingleFactorTerm]
                                                      ) [SingleTermExprPositive]
                                                    ) [ActParsMultiExpr]
                                                  ) [ActParsYes]
                                                  ActParsRightParen(
                                                  ) [ActParsRightParen]
                                                ) [MethodCall]
                                              ) [MethodCallFactor]
                                            ) [SingleFactorTerm]
                                          ) [SingleTermExprPositive]
                                          NumConstNo(
                                          ) [NumConstNo]
                                        ) [SinglePrintStatement]
                                      ) [StatementSingle]
                                    ) [StatementListMultiple]
                                    StatementSingle(
                                      SinglePrintStatement(
                                        SingleTermExprPositive(
                                          SingleFactorTerm(
                                            DesignatorEmptyFactor(
                                              IdentDesignator(
                                               eol
                                              ) [IdentDesignator]
                                            ) [DesignatorEmptyFactor]
                                          ) [SingleFactorTerm]
                                        ) [SingleTermExprPositive]
                                        NumConstNo(
                                        ) [NumConstNo]
                                      ) [SinglePrintStatement]
                                    ) [StatementSingle]
                                  ) [StatementListMultiple]
                                  StatementSingle(
                                    SinglePrintStatement(
                                      SingleTermExprPositive(
                                        SingleFactorTerm(
                                          MethodCallFactor(
                                            MethodCall(
                                              IdentDesignator(
                                               inkrement
                                              ) [IdentDesignator]
                                              ActParsLeftParen(
                                              ) [ActParsLeftParen]
                                              ActParsYes(
                                                ActParsMultiExpr(
                                                  ActParsSingleExpr(
                                                    SingleTermExprPositive(
                                                      SingleFactorTerm(
                                                        DesignatorEmptyFactor(
                                                          IdentArrayDesignator(
                                                           niz
                                                            SingleTermExprPositive(
                                                              SingleFactorTerm(
                                                                NumConstFactor(
                                                                 2
                                                                ) [NumConstFactor]
                                                              ) [SingleFactorTerm]
                                                            ) [SingleTermExprPositive]
                                                          ) [IdentArrayDesignator]
                                                        ) [DesignatorEmptyFactor]
                                                      ) [SingleFactorTerm]
                                                    ) [SingleTermExprPositive]
                                                  ) [ActParsSingleExpr]
                                                  SingleTermExprPositive(
                                                    SingleFactorTerm(
                                                      NumConstFactor(
                                                       2
                                                      ) [NumConstFactor]
                                                    ) [SingleFactorTerm]
                                                  ) [SingleTermExprPositive]
                                                ) [ActParsMultiExpr]
                                              ) [ActParsYes]
                                              ActParsRightParen(
                                              ) [ActParsRightParen]
                                            ) [MethodCall]
                                          ) [MethodCallFactor]
                                        ) [SingleFactorTerm]
                                      ) [SingleTermExprPositive]
                                      NumConstNo(
                                      ) [NumConstNo]
                                    ) [SinglePrintStatement]
                                  ) [StatementSingle]
                                ) [StatementListMultiple]
                                StatementSingle(
                                  SingleDesignatorStatement(
                                    DesignatorStmtAssign(
                                      DesignatorStmtAssignCorrect(
                                        IdentDesignator(
                                         a
                                        ) [IdentDesignator]
                                        SingleTermExprPositive(
                                          SingleFactorTerm(
                                            NumConstFactor(
                                             3
                                            ) [NumConstFactor]
                                          ) [SingleFactorTerm]
                                        ) [SingleTermExprPositive]
                                      ) [DesignatorStmtAssignCorrect]
                                    ) [DesignatorStmtAssign]
                                  ) [SingleDesignatorStatement]
                                ) [StatementSingle]
                              ) [StatementListMultiple]
                              StatementSingle(
                                SingleDesignatorStatement(
                                  DesignatorStmtAssign(
                                    DesignatorStmtAssignCorrect(
                                      IdentDesignator(
                                       i
                                      ) [IdentDesignator]
                                      SingleTermExprPositive(
                                        SingleFactorTerm(
                                          NumConstFactor(
                                           0
                                          ) [NumConstFactor]
                                        ) [SingleFactorTerm]
                                      ) [SingleTermExprPositive]
                                    ) [DesignatorStmtAssignCorrect]
                                  ) [DesignatorStmtAssign]
                                ) [SingleDesignatorStatement]
                              ) [StatementSingle]
                            ) [StatementListMultiple]
                            StatementSingle(
                              DoWhileStatement(
                                DoEnter(
                                ) [DoEnter]
                                StatementListMultiple(
                                  StatementListNo(
                                  ) [StatementListNo]
                                  StatementMultiple(
                                    StatementsInBraces(
                                      StatementListMultiple(
                                        StatementListMultiple(
                                          StatementListNo(
                                          ) [StatementListNo]
                                          StatementSingle(
                                            SingleDesignatorStatement(
                                              DesignatorStmtAssign(
                                                DesignatorStmtAssignCorrect(
                                                  IdentArrayDesignator(
                                                   niz
                                                    SingleTermExprPositive(
                                                      SingleFactorTerm(
                                                        DesignatorEmptyFactor(
                                                          IdentDesignator(
                                                           i
                                                          ) [IdentDesignator]
                                                        ) [DesignatorEmptyFactor]
                                                      ) [SingleFactorTerm]
                                                    ) [SingleTermExprPositive]
                                                  ) [IdentArrayDesignator]
                                                  SingleTermExprPositive(
                                                    MultiFactorTerm(
                                                      MultiFactorTerm(
                                                        SingleFactorTerm(
                                                          DesignatorEmptyFactor(
                                                            IdentArrayDesignator(
                                                             niz
                                                              SingleTermExprPositive(
                                                                SingleFactorTerm(
                                                                  DesignatorEmptyFactor(
                                                                    IdentDesignator(
                                                                     i
                                                                    ) [IdentDesignator]
                                                                  ) [DesignatorEmptyFactor]
                                                                ) [SingleFactorTerm]
                                                              ) [SingleTermExprPositive]
                                                            ) [IdentArrayDesignator]
                                                          ) [DesignatorEmptyFactor]
                                                        ) [SingleFactorTerm]
                                                        MulopMul(
                                                        ) [MulopMul]
                                                        NumConstFactor(
                                                         2
                                                        ) [NumConstFactor]
                                                      ) [MultiFactorTerm]
                                                      MulopMul(
                                                      ) [MulopMul]
                                                      DesignatorEmptyFactor(
                                                        IdentDesignator(
                                                         a
                                                        ) [IdentDesignator]
                                                      ) [DesignatorEmptyFactor]
                                                    ) [MultiFactorTerm]
                                                  ) [SingleTermExprPositive]
                                                ) [DesignatorStmtAssignCorrect]
                                              ) [DesignatorStmtAssign]
                                            ) [SingleDesignatorStatement]
                                          ) [StatementSingle]
                                        ) [StatementListMultiple]
                                        StatementSingle(
                                          SingleDesignatorStatement(
                                            DesignatorStmtPlusPlus(
                                              IdentDesignator(
                                               i
                                              ) [IdentDesignator]
                                            ) [DesignatorStmtPlusPlus]
                                          ) [SingleDesignatorStatement]
                                        ) [StatementSingle]
                                      ) [StatementListMultiple]
                                    ) [StatementsInBraces]
                                  ) [StatementMultiple]
                                ) [StatementListMultiple]
                                ConditionSingleTerm(
                                  CondSingleFactTerm(
                                    CondMultiExprFact(
                                      CondSingleExprFact(
                                        SingleTermExprPositive(
                                          SingleFactorTerm(
                                            DesignatorEmptyFactor(
                                              IdentDesignator(
                                               i
                                              ) [IdentDesignator]
                                            ) [DesignatorEmptyFactor]
                                          ) [SingleFactorTerm]
                                        ) [SingleTermExprPositive]
                                      ) [CondSingleExprFact]
                                      RelopLS(
                                      ) [RelopLS]
                                      SingleTermExprPositive(
                                        SingleFactorTerm(
                                          NumConstFactor(
                                           3
                                          ) [NumConstFactor]
                                        ) [SingleFactorTerm]
                                      ) [SingleTermExprPositive]
                                    ) [CondMultiExprFact]
                                  ) [CondSingleFactTerm]
                                ) [ConditionSingleTerm]
                              ) [DoWhileStatement]
                            ) [StatementSingle]
                          ) [StatementListMultiple]
                          StatementSingle(
                            SinglePrintStatement(
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentArrayDesignator(
                                     niz
                                      SingleTermExprPositive(
                                        SingleFactorTerm(
                                          NumConstFactor(
                                           0
                                          ) [NumConstFactor]
                                        ) [SingleFactorTerm]
                                      ) [SingleTermExprPositive]
                                    ) [IdentArrayDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                              NumConstNo(
                              ) [NumConstNo]
                            ) [SinglePrintStatement]
                          ) [StatementSingle]
                        ) [StatementListMultiple]
                        StatementSingle(
                          SinglePrintStatement(
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                DesignatorEmptyFactor(
                                  IdentArrayDesignator(
                                   niz
                                    SingleTermExprPositive(
                                      SingleFactorTerm(
                                        NumConstFactor(
                                         1
                                        ) [NumConstFactor]
                                      ) [SingleFactorTerm]
                                    ) [SingleTermExprPositive]
                                  ) [IdentArrayDesignator]
                                ) [DesignatorEmptyFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                            NumConstNo(
                            ) [NumConstNo]
                          ) [SinglePrintStatement]
                        ) [StatementSingle]
                      ) [StatementListMultiple]
                      StatementSingle(
                        SinglePrintStatement(
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              DesignatorEmptyFactor(
                                IdentArrayDesignator(
                                 niz
                                  SingleTermExprPositive(
                                    SingleFactorTerm(
                                      NumConstFactor(
                                       2
                                      ) [NumConstFactor]
                                    ) [SingleFactorTerm]
                                  ) [SingleTermExprPositive]
                                ) [IdentArrayDesignator]
                              ) [DesignatorEmptyFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                          NumConstNo(
                          ) [NumConstNo]
                        ) [SinglePrintStatement]
                      ) [StatementSingle]
                    ) [StatementListMultiple]
                    StatementSingle(
                      SinglePrintStatement(
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            DesignatorEmptyFactor(
                              IdentDesignator(
                               eol
                              ) [IdentDesignator]
                            ) [DesignatorEmptyFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                        NumConstNo(
                        ) [NumConstNo]
                      ) [SinglePrintStatement]
                    ) [StatementSingle]
                  ) [StatementListMultiple]
                  StatementSingle(
                    SingleDesignatorStatement(
                      DesignatorStmtAssign(
                        DesignatorStmtAssignCorrect(
                          IdentDesignator(
                           i
                          ) [IdentDesignator]
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              NumConstFactor(
                               0
                              ) [NumConstFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [DesignatorStmtAssignCorrect]
                      ) [DesignatorStmtAssign]
                    ) [SingleDesignatorStatement]
                  ) [StatementSingle]
                ) [StatementListMultiple]
                StatementSingle(
                  SingleDesignatorStatement(
                    DesignatorStmtAssign(
                      DesignatorStmtAssignCorrect(
                        IdentDesignator(
                         niz2
                        ) [IdentDesignator]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            NumConstFactor(
                             0
                            ) [NumConstFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [DesignatorStmtAssignCorrect]
                    ) [DesignatorStmtAssign]
                  ) [SingleDesignatorStatement]
                ) [StatementSingle]
              ) [StatementListMultiple]
              StatementSingle(
                DoWhileStatement(
                  DoEnter(
                  ) [DoEnter]
                  StatementListMultiple(
                    StatementListNo(
                    ) [StatementListNo]
                    StatementMultiple(
                      StatementsInBraces(
                        StatementListMultiple(
                          StatementListMultiple(
                            StatementListNo(
                            ) [StatementListNo]
                            StatementSingle(
                              SingleDesignatorStatement(
                                DesignatorStmtAssign(
                                  DesignatorStmtAssignCorrect(
                                    IdentDesignator(
                                     niz2
                                    ) [IdentDesignator]
                                    MultiTermExpr(
                                      SingleTermExprPositive(
                                        SingleFactorTerm(
                                          DesignatorEmptyFactor(
                                            IdentDesignator(
                                             niz2
                                            ) [IdentDesignator]
                                          ) [DesignatorEmptyFactor]
                                        ) [SingleFactorTerm]
                                      ) [SingleTermExprPositive]
                                      AddopPlus(
                                      ) [AddopPlus]
                                      MultiFactorTerm(
                                        SingleFactorTerm(
                                          DesignatorEmptyFactor(
                                            IdentArrayDesignator(
                                             niz
                                              SingleTermExprPositive(
                                                SingleFactorTerm(
                                                  DesignatorEmptyFactor(
                                                    IdentDesignator(
                                                     i
                                                    ) [IdentDesignator]
                                                  ) [DesignatorEmptyFactor]
                                                ) [SingleFactorTerm]
                                              ) [SingleTermExprPositive]
                                            ) [IdentArrayDesignator]
                                          ) [DesignatorEmptyFactor]
                                        ) [SingleFactorTerm]
                                        MulopMul(
                                        ) [MulopMul]
                                        DesignatorEmptyFactor(
                                          IdentArrayDesignator(
                                           niz
                                            SingleTermExprPositive(
                                              SingleFactorTerm(
                                                DesignatorEmptyFactor(
                                                  IdentDesignator(
                                                   i
                                                  ) [IdentDesignator]
                                                ) [DesignatorEmptyFactor]
                                              ) [SingleFactorTerm]
                                            ) [SingleTermExprPositive]
                                          ) [IdentArrayDesignator]
                                        ) [DesignatorEmptyFactor]
                                      ) [MultiFactorTerm]
                                    ) [MultiTermExpr]
                                  ) [DesignatorStmtAssignCorrect]
                                ) [DesignatorStmtAssign]
                              ) [SingleDesignatorStatement]
                            ) [StatementSingle]
                          ) [StatementListMultiple]
                          StatementSingle(
                            SingleDesignatorStatement(
                              DesignatorStmtPlusPlus(
                                IdentDesignator(
                                 i
                                ) [IdentDesignator]
                              ) [DesignatorStmtPlusPlus]
                            ) [SingleDesignatorStatement]
                          ) [StatementSingle]
                        ) [StatementListMultiple]
                      ) [StatementsInBraces]
                    ) [StatementMultiple]
                  ) [StatementListMultiple]
                  ConditionSingleTerm(
                    CondSingleFactTerm(
                      CondMultiExprFact(
                        CondSingleExprFact(
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              DesignatorEmptyFactor(
                                IdentDesignator(
                                 i
                                ) [IdentDesignator]
                              ) [DesignatorEmptyFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [CondSingleExprFact]
                        RelopLS(
                        ) [RelopLS]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            NumConstFactor(
                             3
                            ) [NumConstFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [CondMultiExprFact]
                    ) [CondSingleFactTerm]
                  ) [ConditionSingleTerm]
                ) [DoWhileStatement]
              ) [StatementSingle]
            ) [StatementListMultiple]
            StatementSingle(
              SinglePrintStatement(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    DesignatorEmptyFactor(
                      IdentDesignator(
                       niz2
                      ) [IdentDesignator]
                    ) [DesignatorEmptyFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
                NumConstNo(
                ) [NumConstNo]
              ) [SinglePrintStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
          StatementSingle(
            SinglePrintStatement(
              SingleTermExprPositive(
                SingleFactorTerm(
                  DesignatorEmptyFactor(
                    IdentDesignator(
                     eol
                    ) [IdentDesignator]
                  ) [DesignatorEmptyFactor]
                ) [SingleFactorTerm]
              ) [SingleTermExprPositive]
              NumConstNo(
              ) [NumConstNo]
            ) [SinglePrintStatement]
          ) [StatementSingle]
        ) [StatementListMultiple]
        StatementSingle(
          SingleDesignatorStatement(
            DesignatorStmtMethodCall(
              MethodCall(
                IdentDesignator(
                 printArgs
                ) [IdentDesignator]
                ActParsLeftParen(
                ) [ActParsLeftParen]
                ActParsYes(
                  ActParsMultiExpr(
                    ActParsMultiExpr(
                      ActParsMultiExpr(
                        ActParsMultiExpr(
                          ActParsMultiExpr(
                            ActParsSingleExpr(
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  NumConstFactor(
                                   5
                                  ) [NumConstFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [ActParsSingleExpr]
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                CharConstFactor(
                                 t
                                ) [CharConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [ActParsMultiExpr]
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              CharConstFactor(
                               e
                              ) [CharConstFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [ActParsMultiExpr]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            CharConstFactor(
                             s
                            ) [CharConstFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [ActParsMultiExpr]
                      SingleTermExprPositive(
                        SingleFactorTerm(
                          CharConstFactor(
                           t
                          ) [CharConstFactor]
                        ) [SingleFactorTerm]
                      ) [SingleTermExprPositive]
                    ) [ActParsMultiExpr]
                    SingleTermExprPositive(
                      SingleFactorTerm(
                        CharConstFactor(
                         B
                        ) [CharConstFactor]
                      ) [SingleFactorTerm]
                    ) [SingleTermExprPositive]
                  ) [ActParsMultiExpr]
                ) [ActParsYes]
                ActParsRightParen(
                ) [ActParsRightParen]
              ) [MethodCall]
            ) [DesignatorStmtMethodCall]
          ) [SingleDesignatorStatement]
        ) [StatementSingle]
      ) [StatementListMultiple]
    ) [MethodDeclaration]
  ) [MethodDeclListMultiple]
) [Program]
INFO  01:52:25,506 - ===================================
INFO  01:52:25,510 - Line 20: Using local variable name: z
INFO  01:52:25,510 - Line 20: Access to array element detected. Array name: args
INFO  01:52:25,510 - Line 20: Access to formal argument detected. Method name: sum, argument name: args
INFO  01:52:25,510 - Line 21: Using local variable name: d
INFO  01:52:25,510 - Line 21: Access to array element detected. Array name: args
INFO  01:52:25,510 - Line 21: Access to formal argument detected. Method name: sum, argument name: args
INFO  01:52:25,510 - Line 22: Using local variable name: z
INFO  01:52:25,510 - Line 22: Using local variable name: d
INFO  01:52:25,510 - Line 28: Using local variable name: i
INFO  01:52:25,510 - Line 30: Using local variable name: i
INFO  01:52:25,510 - Line 30: Access to array element detected. Array name: args
INFO  01:52:25,510 - Line 30: Access to formal argument detected. Method name: printArgs, argument name: args
INFO  01:52:25,510 - Line 31: Using local variable name: i
INFO  01:52:25,510 - Line 32: Using local variable name: i
INFO  01:52:25,510 - Line 32: Access to formal argument detected. Method name: printArgs, argument name: num
INFO  01:52:25,510 - Line 37: Access to formal argument detected. Method name: inkrement, argument name: inc
INFO  01:52:25,510 - Line 37: Using local variable name: pom
INFO  01:52:25,510 - Line 38: Access to formal argument detected. Method name: inkrement, argument name: inc
INFO  01:52:25,510 - Line 38: Using local variable name: pom
INFO  01:52:25,510 - Line 38: Access to formal argument detected. Method name: inkrement, argument name: a
INFO  01:52:25,510 - Line 40: Access to formal argument detected. Method name: inkrement, argument name: a
INFO  01:52:25,510 - Line 40: Using local variable name: pom
INFO  01:52:25,510 - Line 40: Method Call detected. Method name: sum
INFO  01:52:25,510 - Method sum has varArgs with 2 args
INFO  01:52:25,510 - Line 53: Using global variable name: ibool
INFO  01:52:25,510 - Line 54: Using global variable name: i
INFO  01:52:25,510 - Line 56: Using global variable name: i
INFO  01:52:25,510 - Line 56: Using global variable name: ibool
INFO  01:52:25,510 - Line 57: Using global variable name: i
INFO  01:52:25,510 - Line 58: Using global variable name: i
INFO  01:52:25,510 - Line 60: Using global variable name: ibool
INFO  01:52:25,510 - Line 61: Using global variable name: i
INFO  01:52:25,510 - Line 63: Using global variable name: a
INFO  01:52:25,510 - Line 64: Using global variable name: niz
INFO  01:52:25,510 - Line 65: Using global variable name: niz
INFO  01:52:25,510 - Line 65: Access to array element detected. Array name: niz
INFO  01:52:25,510 - Line 65: Using global variable name: a
INFO  01:52:25,510 - Line 66: Using global variable name: niz
INFO  01:52:25,510 - Line 66: Access to array element detected. Array name: niz
INFO  01:52:25,510 - Line 66: Using global variable name: a
INFO  01:52:25,510 - Line 67: Using global variable name: niz
INFO  01:52:25,510 - Line 67: Access to array element detected. Array name: niz
INFO  01:52:25,510 - Line 67: Using global variable name: niz
INFO  01:52:25,510 - Line 67: Access to array element detected. Array name: niz
INFO  01:52:25,510 - Line 67: Using global variable name: niz
INFO  01:52:25,510 - Line 67: Access to array element detected. Array name: niz
INFO  01:52:25,510 - Line 67: Method Call detected. Method name: sum
INFO  01:52:25,510 - Method sum has varArgs with 2 args
INFO  01:52:25,511 - Line 67: Using global variable name: a
INFO  01:52:25,511 - Line 68: Method Call detected. Method name: verify
INFO  01:52:25,511 - Line 68: Using global variable name: niz
INFO  01:52:25,511 - Line 68: Access to array element detected. Array name: niz
INFO  01:52:25,511 - Line 68: Method Call detected. Method name: ord
INFO  01:52:25,511 - Line 69: Method Call detected. Method name: ord
INFO  01:52:25,511 - Line 72: Using global variable name: i
INFO  01:52:25,511 - Line 74: Using global variable name: i
INFO  01:52:25,511 - Line 76: Using global variable name: i
INFO  01:52:25,511 - Line 79: Using global variable name: i
INFO  01:52:25,511 - Line 80: Using global variable name: i
INFO  01:52:25,511 - Line 80: Using global variable name: i
INFO  01:52:25,511 - Line 80: Method Call detected. Method name: inkrement
INFO  01:52:25,511 - Line 81: Using global variable name: i
INFO  01:52:25,511 - Line 83: Using global variable name: i
INFO  01:52:25,511 - Line 83: Method Call detected. Method name: verify
INFO  01:52:25,511 - Line 86: Using global variable name: niz
INFO  01:52:25,511 - Line 86: Access to array element detected. Array name: niz
INFO  01:52:25,511 - Line 87: Using global variable name: niz
INFO  01:52:25,511 - Line 87: Access to array element detected. Array name: niz
INFO  01:52:25,511 - Line 88: Using global variable name: niz
INFO  01:52:25,511 - Line 88: Access to array element detected. Array name: niz
INFO  01:52:25,511 - Line 91: Using global variable name: niz
INFO  01:52:25,511 - Line 91: Access to array element detected. Array name: niz
INFO  01:52:25,511 - Line 91: Using global variable name: niz
INFO  01:52:25,511 - Line 91: Access to array element detected. Array name: niz
INFO  01:52:25,511 - Line 91: Method Call detected. Method name: sum
INFO  01:52:25,511 - Method sum has varArgs with 2 args
INFO  01:52:25,511 - Line 91: Using global variable name: niz
INFO  01:52:25,511 - Line 91: Access to array element detected. Array name: niz
INFO  01:52:25,511 - Line 91: Method Call detected. Method name: sum
INFO  01:52:25,511 - Method sum has varArgs with 2 args
INFO  01:52:25,511 - Line 94: Using global variable name: niz
INFO  01:52:25,511 - Line 94: Access to array element detected. Array name: niz
INFO  01:52:25,511 - Line 94: Method Call detected. Method name: inkrement
INFO  01:52:25,511 - Line 96: Using global variable name: a
INFO  01:52:25,511 - Line 97: Using global variable name: i
INFO  01:52:25,511 - Line 99: Using global variable name: i
INFO  01:52:25,511 - Line 99: Using global variable name: niz
INFO  01:52:25,511 - Line 99: Access to array element detected. Array name: niz
INFO  01:52:25,511 - Line 99: Using global variable name: i
INFO  01:52:25,511 - Line 99: Using global variable name: niz
INFO  01:52:25,511 - Line 99: Access to array element detected. Array name: niz
INFO  01:52:25,511 - Line 99: Using global variable name: a
INFO  01:52:25,511 - Line 100: Using global variable name: i
INFO  01:52:25,511 - Line 101: Using global variable name: i
INFO  01:52:25,511 - Line 102: Using global variable name: niz
INFO  01:52:25,511 - Line 102: Access to array element detected. Array name: niz
INFO  01:52:25,511 - Line 103: Using global variable name: niz
INFO  01:52:25,511 - Line 103: Access to array element detected. Array name: niz
INFO  01:52:25,511 - Line 104: Using global variable name: niz
INFO  01:52:25,511 - Line 104: Access to array element detected. Array name: niz
INFO  01:52:25,511 - Line 107: Using global variable name: i
INFO  01:52:25,511 - Line 108: Using global variable name: niz2
INFO  01:52:25,511 - Line 110: Using global variable name: niz2
INFO  01:52:25,511 - Line 110: Using global variable name: niz2
INFO  01:52:25,511 - Line 110: Using global variable name: i
INFO  01:52:25,511 - Line 110: Using global variable name: niz
INFO  01:52:25,511 - Line 110: Access to array element detected. Array name: niz
INFO  01:52:25,511 - Line 110: Using global variable name: i
INFO  01:52:25,511 - Line 110: Using global variable name: niz
INFO  01:52:25,511 - Line 110: Access to array element detected. Array name: niz
INFO  01:52:25,511 - Line 111: Using global variable name: i
INFO  01:52:25,511 - Line 112: Using global variable name: i
INFO  01:52:25,511 - Line 113: Using global variable name: niz2
INFO  01:52:25,511 - Line 115: Method Call detected. Method name: printArgs
INFO  01:52:25,511 - Method printArgs has varArgs with 5 args
INFO  01:52:25,511 - Compile successful!
INFO  01:53:44,406 - Compiling source file: D:\source\repos\PP_Projekat\MicroJavaCompiler\test\program.mj
INFO  01:53:44,423 - #2 program
INFO  01:53:44,423 - #49 test302
INFO  01:53:44,423 - #7 const
INFO  01:53:44,423 - #49 int
INFO  01:53:44,423 - #49 jedan
INFO  01:53:44,424 - #27 =
INFO  01:53:44,424 - #52 1
INFO  01:53:44,424 - #38 ;
INFO  01:53:44,424 - #49 int
INFO  01:53:44,424 - #49 i
INFO  01:53:44,424 - #38 ;
INFO  01:53:44,425 - #49 bool
INFO  01:53:44,425 - #49 ibool
INFO  01:53:44,425 - #38 ;
INFO  01:53:44,425 - #49 int
INFO  01:53:44,425 - #49 niz2
INFO  01:53:44,425 - #38 ;
INFO  01:53:44,425 - #49 int
INFO  01:53:44,425 - #49 niz
INFO  01:53:44,425 - #42 [
INFO  01:53:44,425 - #43 ]
INFO  01:53:44,425 - #38 ;
INFO  01:53:44,425 - #49 int
INFO  01:53:44,425 - #49 a
INFO  01:53:44,425 - #38 ;
INFO  01:53:44,425 - #44 {
INFO  01:53:44,425 - #49 int
INFO  01:53:44,426 - #49 sum
INFO  01:53:44,426 - #40 (
INFO  01:53:44,426 - #49 int
INFO  01:53:44,426 - #47 .
INFO  01:53:44,426 - #47 .
INFO  01:53:44,426 - #47 .
INFO  01:53:44,426 - #49 args
INFO  01:53:44,426 - #41 )
INFO  01:53:44,426 - #49 int
INFO  01:53:44,426 - #49 z
INFO  01:53:44,426 - #39 ,
INFO  01:53:44,427 - #49 d
INFO  01:53:44,427 - #38 ;
INFO  01:53:44,427 - #44 {
INFO  01:53:44,427 - #49 z
INFO  01:53:44,427 - #27 =
INFO  01:53:44,427 - #49 args
INFO  01:53:44,427 - #42 [
INFO  01:53:44,428 - #52 0
INFO  01:53:44,428 - #43 ]
INFO  01:53:44,428 - #38 ;
INFO  01:53:44,428 - #49 d
INFO  01:53:44,428 - #27 =
INFO  01:53:44,428 - #49 args
INFO  01:53:44,428 - #42 [
INFO  01:53:44,428 - #52 1
INFO  01:53:44,428 - #43 ]
INFO  01:53:44,428 - #38 ;
INFO  01:53:44,428 - #15 return
INFO  01:53:44,428 - #49 z
INFO  01:53:44,428 - #22 +
INFO  01:53:44,428 - #49 d
INFO  01:53:44,429 - #38 ;
INFO  01:53:44,429 - #45 }
INFO  01:53:44,429 - #14 void
INFO  01:53:44,429 - #49 printArgs
INFO  01:53:44,429 - #40 (
INFO  01:53:44,429 - #49 int
INFO  01:53:44,429 - #49 num
INFO  01:53:44,429 - #39 ,
INFO  01:53:44,429 - #49 char
INFO  01:53:44,429 - #47 .
INFO  01:53:44,429 - #47 .
INFO  01:53:44,429 - #47 .
INFO  01:53:44,430 - #49 args
INFO  01:53:44,430 - #41 )
INFO  01:53:44,430 - #49 int
INFO  01:53:44,430 - #49 i
INFO  01:53:44,430 - #38 ;
INFO  01:53:44,430 - #44 {
INFO  01:53:44,430 - #49 i
INFO  01:53:44,430 - #27 =
INFO  01:53:44,430 - #52 0
INFO  01:53:44,430 - #38 ;
INFO  01:53:44,430 - #9 do
INFO  01:53:44,430 - #44 {
INFO  01:53:44,430 - #12 print
INFO  01:53:44,430 - #40 (
INFO  01:53:44,430 - #49 args
INFO  01:53:44,430 - #42 [
INFO  01:53:44,430 - #49 i
INFO  01:53:44,430 - #43 ]
INFO  01:53:44,430 - #41 )
INFO  01:53:44,430 - #38 ;
INFO  01:53:44,430 - #49 i
INFO  01:53:44,431 - #36 ++
INFO  01:53:44,431 - #38 ;
INFO  01:53:44,431 - #45 }
INFO  01:53:44,431 - #10 while
INFO  01:53:44,431 - #40 (
INFO  01:53:44,431 - #49 i
INFO  01:53:44,431 - #32 <
INFO  01:53:44,431 - #49 num
INFO  01:53:44,431 - #41 )
INFO  01:53:44,431 - #38 ;
INFO  01:53:44,432 - #45 }
INFO  01:53:44,432 - #49 int
INFO  01:53:44,432 - #49 inkrement
INFO  01:53:44,432 - #40 (
INFO  01:53:44,432 - #49 int
INFO  01:53:44,432 - #49 a
INFO  01:53:44,432 - #39 ,
INFO  01:53:44,432 - #49 int
INFO  01:53:44,432 - #49 inc
INFO  01:53:44,432 - #41 )
INFO  01:53:44,432 - #49 int
INFO  01:53:44,432 - #49 pom
INFO  01:53:44,432 - #38 ;
INFO  01:53:44,432 - #44 {
INFO  01:53:44,432 - #5 if
INFO  01:53:44,432 - #40 (
INFO  01:53:44,432 - #49 inc
INFO  01:53:44,432 - #28 ==
INFO  01:53:44,432 - #49 jedan
INFO  01:53:44,433 - #41 )
INFO  01:53:44,433 - #49 pom
INFO  01:53:44,433 - #27 =
INFO  01:53:44,433 - #52 1
INFO  01:53:44,433 - #38 ;
INFO  01:53:44,433 - #6 else
INFO  01:53:44,433 - #5 if
INFO  01:53:44,433 - #40 (
INFO  01:53:44,433 - #49 inc
INFO  01:53:44,433 - #28 ==
INFO  01:53:44,433 - #52 2
INFO  01:53:44,433 - #41 )
INFO  01:53:44,433 - #49 pom
INFO  01:53:44,433 - #27 =
INFO  01:53:44,433 - #49 a
INFO  01:53:44,433 - #38 ;
INFO  01:53:44,433 - #15 return
INFO  01:53:44,433 - #49 sum
INFO  01:53:44,434 - #40 (
INFO  01:53:44,434 - #49 a
INFO  01:53:44,434 - #39 ,
INFO  01:53:44,434 - #49 pom
INFO  01:53:44,434 - #41 )
INFO  01:53:44,434 - #38 ;
INFO  01:53:44,434 - #45 }
INFO  01:53:44,434 - #49 bool
INFO  01:53:44,434 - #49 verify
INFO  01:53:44,434 - #40 (
INFO  01:53:44,434 - #41 )
INFO  01:53:44,434 - #44 {
INFO  01:53:44,434 - #12 print
INFO  01:53:44,434 - #40 (
INFO  01:53:44,434 - #51 v
INFO  01:53:44,435 - #41 )
INFO  01:53:44,435 - #38 ;
INFO  01:53:44,435 - #15 return
INFO  01:53:44,435 - #50 false
INFO  01:53:44,435 - #38 ;
INFO  01:53:44,435 - #45 }
INFO  01:53:44,435 - #14 void
INFO  01:53:44,435 - #49 main
INFO  01:53:44,435 - #40 (
INFO  01:53:44,435 - #41 )
INFO  01:53:44,435 - #44 {
INFO  01:53:44,435 - #5 if
INFO  01:53:44,435 - #40 (
INFO  01:53:44,435 - #52 1
INFO  01:53:44,435 - #29 !=
INFO  01:53:44,435 - #52 1
INFO  01:53:44,435 - #41 )
INFO  01:53:44,435 - #12 print
INFO  01:53:44,435 - #40 (
INFO  01:53:44,435 - #23 -
INFO  01:53:44,435 - #52 6
INFO  01:53:44,435 - #41 )
INFO  01:53:44,435 - #38 ;
INFO  01:53:44,435 - #6 else
INFO  01:53:44,435 - #12 print
INFO  01:53:44,435 - #40 (
INFO  01:53:44,435 - #52 0
INFO  01:53:44,435 - #41 )
INFO  01:53:44,435 - #38 ;
INFO  01:53:44,435 - #49 ibool
INFO  01:53:44,435 - #27 =
INFO  01:53:44,435 - #50 false
INFO  01:53:44,435 - #38 ;
INFO  01:53:44,435 - #49 i
INFO  01:53:44,435 - #27 =
INFO  01:53:44,435 - #52 0
INFO  01:53:44,436 - #38 ;
INFO  01:53:44,436 - #9 do
INFO  01:53:44,436 - #44 {
INFO  01:53:44,436 - #5 if
INFO  01:53:44,436 - #40 (
INFO  01:53:44,436 - #49 i
INFO  01:53:44,436 - #28 ==
INFO  01:53:44,436 - #52 2
INFO  01:53:44,436 - #41 )
INFO  01:53:44,436 - #49 ibool
INFO  01:53:44,436 - #27 =
INFO  01:53:44,436 - #50 true
INFO  01:53:44,436 - #38 ;
INFO  01:53:44,436 - #49 i
INFO  01:53:44,436 - #36 ++
INFO  01:53:44,436 - #38 ;
INFO  01:53:44,436 - #45 }
INFO  01:53:44,436 - #10 while
INFO  01:53:44,436 - #40 (
INFO  01:53:44,436 - #49 i
INFO  01:53:44,436 - #32 <
INFO  01:53:44,436 - #52 5
INFO  01:53:44,436 - #41 )
INFO  01:53:44,436 - #38 ;
INFO  01:53:44,436 - #5 if
INFO  01:53:44,436 - #40 (
INFO  01:53:44,436 - #49 ibool
INFO  01:53:44,436 - #41 )
INFO  01:53:44,436 - #5 if
INFO  01:53:44,436 - #40 (
INFO  01:53:44,436 - #49 i
INFO  01:53:44,436 - #28 ==
INFO  01:53:44,436 - #52 5
INFO  01:53:44,436 - #41 )
INFO  01:53:44,436 - #12 print
INFO  01:53:44,436 - #40 (
INFO  01:53:44,436 - #52 1
INFO  01:53:44,436 - #41 )
INFO  01:53:44,436 - #38 ;
INFO  01:53:44,437 - #6 else
INFO  01:53:44,437 - #12 print
INFO  01:53:44,437 - #40 (
INFO  01:53:44,437 - #23 -
INFO  01:53:44,437 - #52 1
INFO  01:53:44,437 - #41 )
INFO  01:53:44,437 - #38 ;
INFO  01:53:44,437 - #49 a
INFO  01:53:44,437 - #27 =
INFO  01:53:44,437 - #52 2
INFO  01:53:44,437 - #38 ;
INFO  01:53:44,437 - #49 niz
INFO  01:53:44,437 - #27 =
INFO  01:53:44,437 - #11 new
INFO  01:53:44,437 - #49 int
INFO  01:53:44,437 - #42 [
INFO  01:53:44,437 - #52 3
INFO  01:53:44,437 - #43 ]
INFO  01:53:44,437 - #38 ;
INFO  01:53:44,437 - #49 niz
INFO  01:53:44,437 - #42 [
INFO  01:53:44,437 - #52 0
INFO  01:53:44,437 - #43 ]
INFO  01:53:44,437 - #27 =
INFO  01:53:44,437 - #52 1
INFO  01:53:44,437 - #24 *
INFO  01:53:44,437 - #49 a
INFO  01:53:44,438 - #38 ;
INFO  01:53:44,438 - #49 niz
INFO  01:53:44,438 - #42 [
INFO  01:53:44,438 - #52 1
INFO  01:53:44,438 - #43 ]
INFO  01:53:44,438 - #27 =
INFO  01:53:44,438 - #52 2
INFO  01:53:44,438 - #24 *
INFO  01:53:44,438 - #49 a
INFO  01:53:44,438 - #38 ;
INFO  01:53:44,438 - #49 niz
INFO  01:53:44,438 - #42 [
INFO  01:53:44,438 - #52 2
INFO  01:53:44,438 - #43 ]
INFO  01:53:44,438 - #27 =
INFO  01:53:44,438 - #49 sum
INFO  01:53:44,438 - #40 (
INFO  01:53:44,438 - #49 niz
INFO  01:53:44,438 - #42 [
INFO  01:53:44,438 - #52 1
INFO  01:53:44,438 - #43 ]
INFO  01:53:44,438 - #39 ,
INFO  01:53:44,438 - #49 niz
INFO  01:53:44,438 - #42 [
INFO  01:53:44,438 - #52 0
INFO  01:53:44,438 - #43 ]
INFO  01:53:44,438 - #41 )
INFO  01:53:44,438 - #24 *
INFO  01:53:44,438 - #49 a
INFO  01:53:44,438 - #22 +
INFO  01:53:44,438 - #52 1
INFO  01:53:44,438 - #38 ;
INFO  01:53:44,438 - #5 if
INFO  01:53:44,438 - #40 (
INFO  01:53:44,438 - #49 verify
INFO  01:53:44,438 - #40 (
INFO  01:53:44,438 - #41 )
INFO  01:53:44,438 - #35 ||
INFO  01:53:44,438 - #49 niz
INFO  01:53:44,438 - #42 [
INFO  01:53:44,438 - #52 2
INFO  01:53:44,438 - #43 ]
INFO  01:53:44,439 - #28 ==
INFO  01:53:44,439 - #52 4
INFO  01:53:44,439 - #41 )
INFO  01:53:44,439 - #12 print
INFO  01:53:44,439 - #40 (
INFO  01:53:44,439 - #49 ord
INFO  01:53:44,439 - #40 (
INFO  01:53:44,439 - #51 A
INFO  01:53:44,439 - #41 )
INFO  01:53:44,439 - #41 )
INFO  01:53:44,439 - #38 ;
INFO  01:53:44,439 - #6 else
INFO  01:53:44,439 - #12 print
INFO  01:53:44,439 - #40 (
INFO  01:53:44,439 - #49 ord
INFO  01:53:44,439 - #40 (
INFO  01:53:44,439 - #51 a
INFO  01:53:44,439 - #41 )
INFO  01:53:44,439 - #41 )
INFO  01:53:44,439 - #38 ;
INFO  01:53:44,439 - #12 print
INFO  01:53:44,439 - #40 (
INFO  01:53:44,439 - #49 eol
INFO  01:53:44,439 - #41 )
INFO  01:53:44,439 - #38 ;
INFO  01:53:44,439 - #49 i
INFO  01:53:44,439 - #27 =
INFO  01:53:44,439 - #52 0
INFO  01:53:44,439 - #38 ;
INFO  01:53:44,439 - #9 do
INFO  01:53:44,439 - #44 {
INFO  01:53:44,439 - #5 if
INFO  01:53:44,439 - #40 (
INFO  01:53:44,439 - #49 i
INFO  01:53:44,439 - #28 ==
INFO  01:53:44,439 - #52 3
INFO  01:53:44,439 - #41 )
INFO  01:53:44,439 - #44 {
INFO  01:53:44,439 - #49 i
INFO  01:53:44,439 - #36 ++
INFO  01:53:44,439 - #38 ;
INFO  01:53:44,439 - #4 continue
INFO  01:53:44,439 - #38 ;
INFO  01:53:44,439 - #45 }
INFO  01:53:44,439 - #5 if
INFO  01:53:44,439 - #40 (
INFO  01:53:44,439 - #49 i
INFO  01:53:44,439 - #28 ==
INFO  01:53:44,439 - #52 4
INFO  01:53:44,439 - #41 )
INFO  01:53:44,439 - #3 break
INFO  01:53:44,439 - #38 ;
INFO  01:53:44,439 - #49 i
INFO  01:53:44,439 - #27 =
INFO  01:53:44,439 - #49 inkrement
INFO  01:53:44,439 - #40 (
INFO  01:53:44,439 - #49 i
INFO  01:53:44,439 - #39 ,
INFO  01:53:44,439 - #52 1
INFO  01:53:44,439 - #41 )
INFO  01:53:44,439 - #38 ;
INFO  01:53:44,439 - #45 }
INFO  01:53:44,439 - #10 while
INFO  01:53:44,439 - #40 (
INFO  01:53:44,439 - #49 i
INFO  01:53:44,439 - #32 <
INFO  01:53:44,439 - #52 10
INFO  01:53:44,439 - #41 )
INFO  01:53:44,439 - #38 ;
INFO  01:53:44,439 - #5 if
INFO  01:53:44,439 - #40 (
INFO  01:53:44,439 - #49 i
INFO  01:53:44,439 - #28 ==
INFO  01:53:44,439 - #52 3
INFO  01:53:44,440 - #34 &&
INFO  01:53:44,440 - #49 verify
INFO  01:53:44,440 - #40 (
INFO  01:53:44,440 - #41 )
INFO  01:53:44,440 - #41 )
INFO  01:53:44,440 - #12 print
INFO  01:53:44,440 - #40 (
INFO  01:53:44,440 - #23 -
INFO  01:53:44,440 - #52 4
INFO  01:53:44,440 - #41 )
INFO  01:53:44,440 - #38 ;
INFO  01:53:44,440 - #6 else
INFO  01:53:44,440 - #12 print
INFO  01:53:44,440 - #40 (
INFO  01:53:44,440 - #52 4
INFO  01:53:44,440 - #41 )
INFO  01:53:44,440 - #38 ;
INFO  01:53:44,440 - #13 read
INFO  01:53:44,440 - #40 (
INFO  01:53:44,440 - #49 niz
INFO  01:53:44,440 - #42 [
INFO  01:53:44,440 - #52 0
INFO  01:53:44,440 - #43 ]
INFO  01:53:44,440 - #41 )
INFO  01:53:44,440 - #38 ;
INFO  01:53:44,440 - #13 read
INFO  01:53:44,440 - #40 (
INFO  01:53:44,440 - #49 niz
INFO  01:53:44,440 - #42 [
INFO  01:53:44,440 - #52 1
INFO  01:53:44,440 - #43 ]
INFO  01:53:44,440 - #41 )
INFO  01:53:44,440 - #38 ;
INFO  01:53:44,440 - #13 read
INFO  01:53:44,440 - #40 (
INFO  01:53:44,440 - #49 niz
INFO  01:53:44,440 - #42 [
INFO  01:53:44,440 - #52 2
INFO  01:53:44,440 - #43 ]
INFO  01:53:44,440 - #41 )
INFO  01:53:44,440 - #38 ;
INFO  01:53:44,440 - #12 print
INFO  01:53:44,440 - #40 (
INFO  01:53:44,440 - #49 eol
INFO  01:53:44,440 - #41 )
INFO  01:53:44,440 - #38 ;
INFO  01:53:44,440 - #12 print
INFO  01:53:44,440 - #40 (
INFO  01:53:44,440 - #49 sum
INFO  01:53:44,440 - #40 (
INFO  01:53:44,440 - #49 sum
INFO  01:53:44,440 - #40 (
INFO  01:53:44,440 - #49 niz
INFO  01:53:44,440 - #42 [
INFO  01:53:44,440 - #52 0
INFO  01:53:44,440 - #43 ]
INFO  01:53:44,440 - #39 ,
INFO  01:53:44,440 - #49 niz
INFO  01:53:44,440 - #42 [
INFO  01:53:44,440 - #52 1
INFO  01:53:44,440 - #43 ]
INFO  01:53:44,440 - #41 )
INFO  01:53:44,440 - #39 ,
INFO  01:53:44,440 - #49 niz
INFO  01:53:44,440 - #42 [
INFO  01:53:44,440 - #52 2
INFO  01:53:44,440 - #43 ]
INFO  01:53:44,440 - #41 )
INFO  01:53:44,440 - #41 )
INFO  01:53:44,440 - #38 ;
INFO  01:53:44,440 - #12 print
INFO  01:53:44,440 - #40 (
INFO  01:53:44,440 - #49 eol
INFO  01:53:44,440 - #41 )
INFO  01:53:44,440 - #38 ;
INFO  01:53:44,440 - #12 print
INFO  01:53:44,440 - #40 (
INFO  01:53:44,440 - #49 inkrement
INFO  01:53:44,440 - #40 (
INFO  01:53:44,440 - #49 niz
INFO  01:53:44,440 - #42 [
INFO  01:53:44,440 - #52 2
INFO  01:53:44,440 - #43 ]
INFO  01:53:44,440 - #39 ,
INFO  01:53:44,440 - #52 2
INFO  01:53:44,440 - #41 )
INFO  01:53:44,440 - #41 )
INFO  01:53:44,440 - #38 ;
INFO  01:53:44,440 - #49 a
INFO  01:53:44,440 - #27 =
INFO  01:53:44,440 - #52 3
INFO  01:53:44,440 - #38 ;
INFO  01:53:44,440 - #49 i
INFO  01:53:44,440 - #27 =
INFO  01:53:44,440 - #52 0
INFO  01:53:44,440 - #38 ;
INFO  01:53:44,440 - #9 do
INFO  01:53:44,440 - #44 {
INFO  01:53:44,440 - #49 niz
INFO  01:53:44,440 - #42 [
INFO  01:53:44,440 - #49 i
INFO  01:53:44,440 - #43 ]
INFO  01:53:44,441 - #27 =
INFO  01:53:44,441 - #49 niz
INFO  01:53:44,441 - #42 [
INFO  01:53:44,441 - #49 i
INFO  01:53:44,441 - #43 ]
INFO  01:53:44,441 - #24 *
INFO  01:53:44,441 - #52 2
INFO  01:53:44,441 - #24 *
INFO  01:53:44,441 - #49 a
INFO  01:53:44,441 - #38 ;
INFO  01:53:44,441 - #49 i
INFO  01:53:44,441 - #36 ++
INFO  01:53:44,441 - #38 ;
INFO  01:53:44,441 - #45 }
INFO  01:53:44,441 - #10 while
INFO  01:53:44,441 - #40 (
INFO  01:53:44,441 - #49 i
INFO  01:53:44,441 - #32 <
INFO  01:53:44,441 - #52 3
INFO  01:53:44,441 - #41 )
INFO  01:53:44,441 - #38 ;
INFO  01:53:44,441 - #12 print
INFO  01:53:44,441 - #40 (
INFO  01:53:44,441 - #49 niz
INFO  01:53:44,441 - #42 [
INFO  01:53:44,441 - #52 0
INFO  01:53:44,441 - #43 ]
INFO  01:53:44,441 - #41 )
INFO  01:53:44,441 - #38 ;
INFO  01:53:44,441 - #12 print
INFO  01:53:44,441 - #40 (
INFO  01:53:44,441 - #49 niz
INFO  01:53:44,441 - #42 [
INFO  01:53:44,441 - #52 1
INFO  01:53:44,441 - #43 ]
INFO  01:53:44,441 - #41 )
INFO  01:53:44,441 - #38 ;
INFO  01:53:44,441 - #12 print
INFO  01:53:44,441 - #40 (
INFO  01:53:44,441 - #49 niz
INFO  01:53:44,441 - #42 [
INFO  01:53:44,441 - #52 2
INFO  01:53:44,441 - #43 ]
INFO  01:53:44,441 - #41 )
INFO  01:53:44,441 - #38 ;
INFO  01:53:44,441 - #12 print
INFO  01:53:44,441 - #40 (
INFO  01:53:44,441 - #49 eol
INFO  01:53:44,441 - #41 )
INFO  01:53:44,441 - #38 ;
INFO  01:53:44,441 - #49 i
INFO  01:53:44,441 - #27 =
INFO  01:53:44,441 - #52 0
INFO  01:53:44,441 - #38 ;
INFO  01:53:44,441 - #49 niz2
INFO  01:53:44,441 - #27 =
INFO  01:53:44,441 - #52 0
INFO  01:53:44,441 - #38 ;
INFO  01:53:44,441 - #9 do
INFO  01:53:44,441 - #44 {
INFO  01:53:44,441 - #49 niz2
INFO  01:53:44,441 - #27 =
INFO  01:53:44,441 - #49 niz2
INFO  01:53:44,441 - #22 +
INFO  01:53:44,441 - #49 niz
INFO  01:53:44,441 - #42 [
INFO  01:53:44,441 - #49 i
INFO  01:53:44,441 - #43 ]
INFO  01:53:44,441 - #24 *
INFO  01:53:44,441 - #49 niz
INFO  01:53:44,441 - #42 [
INFO  01:53:44,441 - #49 i
INFO  01:53:44,441 - #43 ]
INFO  01:53:44,441 - #38 ;
INFO  01:53:44,441 - #49 i
INFO  01:53:44,441 - #36 ++
INFO  01:53:44,441 - #38 ;
INFO  01:53:44,441 - #45 }
INFO  01:53:44,441 - #10 while
INFO  01:53:44,441 - #40 (
INFO  01:53:44,441 - #49 i
INFO  01:53:44,441 - #32 <
INFO  01:53:44,441 - #52 3
INFO  01:53:44,441 - #41 )
INFO  01:53:44,441 - #38 ;
INFO  01:53:44,441 - #12 print
INFO  01:53:44,441 - #40 (
INFO  01:53:44,441 - #49 niz2
INFO  01:53:44,441 - #41 )
INFO  01:53:44,441 - #38 ;
INFO  01:53:44,441 - #12 print
INFO  01:53:44,441 - #40 (
INFO  01:53:44,441 - #49 eol
INFO  01:53:44,441 - #41 )
INFO  01:53:44,441 - #38 ;
INFO  01:53:44,441 - #49 printArgs
INFO  01:53:44,441 - #40 (
INFO  01:53:44,441 - #52 5
INFO  01:53:44,441 - #39 ,
INFO  01:53:44,441 - #51 t
INFO  01:53:44,441 - #39 ,
INFO  01:53:44,441 - #51 e
INFO  01:53:44,441 - #39 ,
INFO  01:53:44,441 - #51 s
INFO  01:53:44,441 - #39 ,
INFO  01:53:44,441 - #51 t
INFO  01:53:44,441 - #39 ,
INFO  01:53:44,441 - #51 B
INFO  01:53:44,441 - #41 )
INFO  01:53:44,441 - #38 ;
INFO  01:53:44,441 - #45 }
INFO  01:53:44,441 - #45 }
INFO  01:53:44,447 - Program(
  ProgramName(
   test302
  ) [ProgramName]
  AllDeclListMultiple(
    AllDeclListMultiple(
      AllDeclListMultiple(
        AllDeclListMultiple(
          AllDeclListMultiple(
            AllDeclListMultiple(
              NoDecl(
              ) [NoDecl]
              ConstDeclaration(
                ConstDeclarationExpr(
                  Type(
                   int
                  ) [Type]
                  ConstAssignSingle(
                    ConstAssign(
                     jedan
                      NumberConst(
                       1
                      ) [NumberConst]
                    ) [ConstAssign]
                  ) [ConstAssignSingle]
                ) [ConstDeclarationExpr]
              ) [ConstDeclaration]
            ) [AllDeclListMultiple]
            GlobalVarDeclaration(
              GlobalVarDeclarationExpr(
                Type(
                 int
                ) [Type]
                GlobalVarDeclListSingle(
                  GlobalVarDeclarationSingle(
                   i
                    NoArray(
                    ) [NoArray]
                  ) [GlobalVarDeclarationSingle]
                ) [GlobalVarDeclListSingle]
              ) [GlobalVarDeclarationExpr]
            ) [GlobalVarDeclaration]
          ) [AllDeclListMultiple]
          GlobalVarDeclaration(
            GlobalVarDeclarationExpr(
              Type(
               bool
              ) [Type]
              GlobalVarDeclListSingle(
                GlobalVarDeclarationSingle(
                 ibool
                  NoArray(
                  ) [NoArray]
                ) [GlobalVarDeclarationSingle]
              ) [GlobalVarDeclListSingle]
            ) [GlobalVarDeclarationExpr]
          ) [GlobalVarDeclaration]
        ) [AllDeclListMultiple]
        GlobalVarDeclaration(
          GlobalVarDeclarationExpr(
            Type(
             int
            ) [Type]
            GlobalVarDeclListSingle(
              GlobalVarDeclarationSingle(
               niz2
                NoArray(
                ) [NoArray]
              ) [GlobalVarDeclarationSingle]
            ) [GlobalVarDeclListSingle]
          ) [GlobalVarDeclarationExpr]
        ) [GlobalVarDeclaration]
      ) [AllDeclListMultiple]
      GlobalVarDeclaration(
        GlobalVarDeclarationExpr(
          Type(
           int
          ) [Type]
          GlobalVarDeclListSingle(
            GlobalVarDeclarationSingle(
             niz
              ArrayBrackets(
              ) [ArrayBrackets]
            ) [GlobalVarDeclarationSingle]
          ) [GlobalVarDeclListSingle]
        ) [GlobalVarDeclarationExpr]
      ) [GlobalVarDeclaration]
    ) [AllDeclListMultiple]
    GlobalVarDeclaration(
      GlobalVarDeclarationExpr(
        Type(
         int
        ) [Type]
        GlobalVarDeclListSingle(
          GlobalVarDeclarationSingle(
           a
            NoArray(
            ) [NoArray]
          ) [GlobalVarDeclarationSingle]
        ) [GlobalVarDeclListSingle]
      ) [GlobalVarDeclarationExpr]
    ) [GlobalVarDeclaration]
  ) [AllDeclListMultiple]
  MethodDeclListMultiple(
    MethodDeclListMultiple(
      MethodDeclListMultiple(
        MethodDeclListMultiple(
          MethodDeclListMultiple(
            MethodDeclListNo(
            ) [MethodDeclListNo]
            MethodDeclaration(
              MethodSignatureVarArgsOnly(
                MethodTypeType(
                  Type(
                   int
                  ) [Type]
                ) [MethodTypeType]
                MethodName(
                 sum
                ) [MethodName]
                Type(
                 int
                ) [Type]
                VarArgsDeclaration(
                 args
                ) [VarArgsDeclaration]
                FormParsEnd(
                ) [FormParsEnd]
              ) [MethodSignatureVarArgsOnly]
              VarDeclOptionTrue(
                NoVarDeclOption(
                ) [NoVarDeclOption]
                VarDeclarationExpr(
                  Type(
                   int
                  ) [Type]
                  VarDeclListMultiple(
                    VarDeclListSingle(
                      VarDeclSingle(
                       z
                        NoArray(
                        ) [NoArray]
                      ) [VarDeclSingle]
                    ) [VarDeclListSingle]
                    VarDeclSingle(
                     d
                      NoArray(
                      ) [NoArray]
                    ) [VarDeclSingle]
                  ) [VarDeclListMultiple]
                ) [VarDeclarationExpr]
              ) [VarDeclOptionTrue]
              StatementListMultiple(
                StatementListMultiple(
                  StatementListMultiple(
                    StatementListNo(
                    ) [StatementListNo]
                    StatementSingle(
                      SingleDesignatorStatement(
                        DesignatorStmtAssign(
                          DesignatorStmtAssignCorrect(
                            IdentDesignator(
                             z
                            ) [IdentDesignator]
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                DesignatorEmptyFactor(
                                  IdentArrayDesignator(
                                   args
                                    SingleTermExprPositive(
                                      SingleFactorTerm(
                                        NumConstFactor(
                                         0
                                        ) [NumConstFactor]
                                      ) [SingleFactorTerm]
                                    ) [SingleTermExprPositive]
                                  ) [IdentArrayDesignator]
                                ) [DesignatorEmptyFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [DesignatorStmtAssignCorrect]
                        ) [DesignatorStmtAssign]
                      ) [SingleDesignatorStatement]
                    ) [StatementSingle]
                  ) [StatementListMultiple]
                  StatementSingle(
                    SingleDesignatorStatement(
                      DesignatorStmtAssign(
                        DesignatorStmtAssignCorrect(
                          IdentDesignator(
                           d
                          ) [IdentDesignator]
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              DesignatorEmptyFactor(
                                IdentArrayDesignator(
                                 args
                                  SingleTermExprPositive(
                                    SingleFactorTerm(
                                      NumConstFactor(
                                       1
                                      ) [NumConstFactor]
                                    ) [SingleFactorTerm]
                                  ) [SingleTermExprPositive]
                                ) [IdentArrayDesignator]
                              ) [DesignatorEmptyFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [DesignatorStmtAssignCorrect]
                      ) [DesignatorStmtAssign]
                    ) [SingleDesignatorStatement]
                  ) [StatementSingle]
                ) [StatementListMultiple]
                StatementSingle(
                  SingleReturnExprStatement(
                    MultiTermExpr(
                      SingleTermExprPositive(
                        SingleFactorTerm(
                          DesignatorEmptyFactor(
                            IdentDesignator(
                             z
                            ) [IdentDesignator]
                          ) [DesignatorEmptyFactor]
                        ) [SingleFactorTerm]
                      ) [SingleTermExprPositive]
                      AddopPlus(
                      ) [AddopPlus]
                      SingleFactorTerm(
                        DesignatorEmptyFactor(
                          IdentDesignator(
                           d
                          ) [IdentDesignator]
                        ) [DesignatorEmptyFactor]
                      ) [SingleFactorTerm]
                    ) [MultiTermExpr]
                  ) [SingleReturnExprStatement]
                ) [StatementSingle]
              ) [StatementListMultiple]
            ) [MethodDeclaration]
          ) [MethodDeclListMultiple]
          MethodDeclaration(
            MethodSignatureVarArgs(
              MethodTypeVoid(
              ) [MethodTypeVoid]
              MethodName(
               printArgs
              ) [MethodName]
              FormParsSingle(
                FormParSingle(
                  Type(
                   int
                  ) [Type]
                 num
                  NoArray(
                  ) [NoArray]
                ) [FormParSingle]
              ) [FormParsSingle]
              Type(
               char
              ) [Type]
              VarArgsDeclaration(
               args
              ) [VarArgsDeclaration]
              FormParsEnd(
              ) [FormParsEnd]
            ) [MethodSignatureVarArgs]
            VarDeclOptionTrue(
              NoVarDeclOption(
              ) [NoVarDeclOption]
              VarDeclarationExpr(
                Type(
                 int
                ) [Type]
                VarDeclListSingle(
                  VarDeclSingle(
                   i
                    NoArray(
                    ) [NoArray]
                  ) [VarDeclSingle]
                ) [VarDeclListSingle]
              ) [VarDeclarationExpr]
            ) [VarDeclOptionTrue]
            StatementListMultiple(
              StatementListMultiple(
                StatementListNo(
                ) [StatementListNo]
                StatementSingle(
                  SingleDesignatorStatement(
                    DesignatorStmtAssign(
                      DesignatorStmtAssignCorrect(
                        IdentDesignator(
                         i
                        ) [IdentDesignator]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            NumConstFactor(
                             0
                            ) [NumConstFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [DesignatorStmtAssignCorrect]
                    ) [DesignatorStmtAssign]
                  ) [SingleDesignatorStatement]
                ) [StatementSingle]
              ) [StatementListMultiple]
              StatementSingle(
                DoWhileStatement(
                  DoEnter(
                  ) [DoEnter]
                  StatementListMultiple(
                    StatementListNo(
                    ) [StatementListNo]
                    StatementMultiple(
                      StatementsInBraces(
                        StatementListMultiple(
                          StatementListMultiple(
                            StatementListNo(
                            ) [StatementListNo]
                            StatementSingle(
                              SinglePrintStatement(
                                SingleTermExprPositive(
                                  SingleFactorTerm(
                                    DesignatorEmptyFactor(
                                      IdentArrayDesignator(
                                       args
                                        SingleTermExprPositive(
                                          SingleFactorTerm(
                                            DesignatorEmptyFactor(
                                              IdentDesignator(
                                               i
                                              ) [IdentDesignator]
                                            ) [DesignatorEmptyFactor]
                                          ) [SingleFactorTerm]
                                        ) [SingleTermExprPositive]
                                      ) [IdentArrayDesignator]
                                    ) [DesignatorEmptyFactor]
                                  ) [SingleFactorTerm]
                                ) [SingleTermExprPositive]
                                NumConstNo(
                                ) [NumConstNo]
                              ) [SinglePrintStatement]
                            ) [StatementSingle]
                          ) [StatementListMultiple]
                          StatementSingle(
                            SingleDesignatorStatement(
                              DesignatorStmtPlusPlus(
                                IdentDesignator(
                                 i
                                ) [IdentDesignator]
                              ) [DesignatorStmtPlusPlus]
                            ) [SingleDesignatorStatement]
                          ) [StatementSingle]
                        ) [StatementListMultiple]
                      ) [StatementsInBraces]
                    ) [StatementMultiple]
                  ) [StatementListMultiple]
                  ConditionSingleTerm(
                    CondSingleFactTerm(
                      CondMultiExprFact(
                        CondSingleExprFact(
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              DesignatorEmptyFactor(
                                IdentDesignator(
                                 i
                                ) [IdentDesignator]
                              ) [DesignatorEmptyFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [CondSingleExprFact]
                        RelopLS(
                        ) [RelopLS]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            DesignatorEmptyFactor(
                              IdentDesignator(
                               num
                              ) [IdentDesignator]
                            ) [DesignatorEmptyFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [CondMultiExprFact]
                    ) [CondSingleFactTerm]
                  ) [ConditionSingleTerm]
                ) [DoWhileStatement]
              ) [StatementSingle]
            ) [StatementListMultiple]
          ) [MethodDeclaration]
        ) [MethodDeclListMultiple]
        MethodDeclaration(
          MethodSignatureParams(
            MethodTypeType(
              Type(
               int
              ) [Type]
            ) [MethodTypeType]
            MethodName(
             inkrement
            ) [MethodName]
            FormParsMultiple(
              FormParsSingle(
                FormParSingle(
                  Type(
                   int
                  ) [Type]
                 a
                  NoArray(
                  ) [NoArray]
                ) [FormParSingle]
              ) [FormParsSingle]
              FormParSingle(
                Type(
                 int
                ) [Type]
               inc
                NoArray(
                ) [NoArray]
              ) [FormParSingle]
            ) [FormParsMultiple]
            FormParsEnd(
            ) [FormParsEnd]
          ) [MethodSignatureParams]
          VarDeclOptionTrue(
            NoVarDeclOption(
            ) [NoVarDeclOption]
            VarDeclarationExpr(
              Type(
               int
              ) [Type]
              VarDeclListSingle(
                VarDeclSingle(
                 pom
                  NoArray(
                  ) [NoArray]
                ) [VarDeclSingle]
              ) [VarDeclListSingle]
            ) [VarDeclarationExpr]
          ) [VarDeclOptionTrue]
          StatementListMultiple(
            StatementListMultiple(
              StatementListNo(
              ) [StatementListNo]
              StatementSingle(
                IfElseStatement(
                  IfConditionSingleTerm(
                    CondSingleFactTerm(
                      CondMultiExprFact(
                        CondSingleExprFact(
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              DesignatorEmptyFactor(
                                IdentDesignator(
                                 inc
                                ) [IdentDesignator]
                              ) [DesignatorEmptyFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [CondSingleExprFact]
                        RelopEQUAL(
                        ) [RelopEQUAL]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            DesignatorEmptyFactor(
                              IdentDesignator(
                               jedan
                              ) [IdentDesignator]
                            ) [DesignatorEmptyFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [CondMultiExprFact]
                    ) [CondSingleFactTerm]
                  ) [IfConditionSingleTerm]
                  StatementSingle(
                    SingleDesignatorStatement(
                      DesignatorStmtAssign(
                        DesignatorStmtAssignCorrect(
                          IdentDesignator(
                           pom
                          ) [IdentDesignator]
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              NumConstFactor(
                               1
                              ) [NumConstFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [DesignatorStmtAssignCorrect]
                      ) [DesignatorStmtAssign]
                    ) [SingleDesignatorStatement]
                  ) [StatementSingle]
                  StatementSingle(
                    IfStatement(
                      IfConditionSingleTerm(
                        CondSingleFactTerm(
                          CondMultiExprFact(
                            CondSingleExprFact(
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentDesignator(
                                     inc
                                    ) [IdentDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [CondSingleExprFact]
                            RelopEQUAL(
                            ) [RelopEQUAL]
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                NumConstFactor(
                                 2
                                ) [NumConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [CondMultiExprFact]
                        ) [CondSingleFactTerm]
                      ) [IfConditionSingleTerm]
                      StatementSingle(
                        SingleDesignatorStatement(
                          DesignatorStmtAssign(
                            DesignatorStmtAssignCorrect(
                              IdentDesignator(
                               pom
                              ) [IdentDesignator]
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentDesignator(
                                     a
                                    ) [IdentDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [DesignatorStmtAssignCorrect]
                          ) [DesignatorStmtAssign]
                        ) [SingleDesignatorStatement]
                      ) [StatementSingle]
                    ) [IfStatement]
                  ) [StatementSingle]
                ) [IfElseStatement]
              ) [StatementSingle]
            ) [StatementListMultiple]
            StatementSingle(
              SingleReturnExprStatement(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    MethodCallFactor(
                      MethodCall(
                        IdentDesignator(
                         sum
                        ) [IdentDesignator]
                        ActParsLeftParen(
                        ) [ActParsLeftParen]
                        ActParsYes(
                          ActParsMultiExpr(
                            ActParsSingleExpr(
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentDesignator(
                                     a
                                    ) [IdentDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [ActParsSingleExpr]
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                DesignatorEmptyFactor(
                                  IdentDesignator(
                                   pom
                                  ) [IdentDesignator]
                                ) [DesignatorEmptyFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [ActParsMultiExpr]
                        ) [ActParsYes]
                        ActParsRightParen(
                        ) [ActParsRightParen]
                      ) [MethodCall]
                    ) [MethodCallFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
              ) [SingleReturnExprStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
        ) [MethodDeclaration]
      ) [MethodDeclListMultiple]
      MethodDeclaration(
        MethodSignaturePlain(
          MethodTypeType(
            Type(
             bool
            ) [Type]
          ) [MethodTypeType]
          MethodName(
           verify
          ) [MethodName]
        ) [MethodSignaturePlain]
        NoVarDeclOption(
        ) [NoVarDeclOption]
        StatementListMultiple(
          StatementListMultiple(
            StatementListNo(
            ) [StatementListNo]
            StatementSingle(
              SinglePrintStatement(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    CharConstFactor(
                     v
                    ) [CharConstFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
                NumConstNo(
                ) [NumConstNo]
              ) [SinglePrintStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
          StatementSingle(
            SingleReturnExprStatement(
              SingleTermExprPositive(
                SingleFactorTerm(
                  BoolConstFactor(
                   false
                  ) [BoolConstFactor]
                ) [SingleFactorTerm]
              ) [SingleTermExprPositive]
            ) [SingleReturnExprStatement]
          ) [StatementSingle]
        ) [StatementListMultiple]
      ) [MethodDeclaration]
    ) [MethodDeclListMultiple]
    MethodDeclaration(
      MethodSignaturePlain(
        MethodTypeVoid(
        ) [MethodTypeVoid]
        MethodName(
         main
        ) [MethodName]
      ) [MethodSignaturePlain]
      NoVarDeclOption(
      ) [NoVarDeclOption]
      StatementListMultiple(
        StatementListMultiple(
          StatementListMultiple(
            StatementListMultiple(
              StatementListMultiple(
                StatementListMultiple(
                  StatementListMultiple(
                    StatementListMultiple(
                      StatementListMultiple(
                        StatementListMultiple(
                          StatementListMultiple(
                            StatementListMultiple(
                              StatementListMultiple(
                                StatementListMultiple(
                                  StatementListMultiple(
                                    StatementListMultiple(
                                      StatementListMultiple(
                                        StatementListMultiple(
                                          StatementListMultiple(
                                            StatementListMultiple(
                                              StatementListMultiple(
                                                StatementListMultiple(
                                                  StatementListMultiple(
                                                    StatementListMultiple(
                                                      StatementListMultiple(
                                                        StatementListMultiple(
                                                          StatementListMultiple(
                                                            StatementListMultiple(
                                                              StatementListMultiple(
                                                                StatementListMultiple(
                                                                  StatementListMultiple(
                                                                    StatementListMultiple(
                                                                      StatementListMultiple(
                                                                        StatementListMultiple(
                                                                          StatementListMultiple(
                                                                            StatementListNo(
                                                                            ) [StatementListNo]
                                                                            StatementSingle(
                                                                              IfElseStatement(
                                                                                IfConditionSingleTerm(
                                                                                  CondSingleFactTerm(
                                                                                    CondMultiExprFact(
                                                                                      CondSingleExprFact(
                                                                                        SingleTermExprPositive(
                                                                                          SingleFactorTerm(
                                                                                            NumConstFactor(
                                                                                             1
                                                                                            ) [NumConstFactor]
                                                                                          ) [SingleFactorTerm]
                                                                                        ) [SingleTermExprPositive]
                                                                                      ) [CondSingleExprFact]
                                                                                      RelopNOTEQUAL(
                                                                                      ) [RelopNOTEQUAL]
                                                                                      SingleTermExprPositive(
                                                                                        SingleFactorTerm(
                                                                                          NumConstFactor(
                                                                                           1
                                                                                          ) [NumConstFactor]
                                                                                        ) [SingleFactorTerm]
                                                                                      ) [SingleTermExprPositive]
                                                                                    ) [CondMultiExprFact]
                                                                                  ) [CondSingleFactTerm]
                                                                                ) [IfConditionSingleTerm]
                                                                                StatementSingle(
                                                                                  SinglePrintStatement(
                                                                                    SingleTermExprNegative(
                                                                                      SingleFactorTerm(
                                                                                        NumConstFactor(
                                                                                         6
                                                                                        ) [NumConstFactor]
                                                                                      ) [SingleFactorTerm]
                                                                                    ) [SingleTermExprNegative]
                                                                                    NumConstNo(
                                                                                    ) [NumConstNo]
                                                                                  ) [SinglePrintStatement]
                                                                                ) [StatementSingle]
                                                                                StatementSingle(
                                                                                  SinglePrintStatement(
                                                                                    SingleTermExprPositive(
                                                                                      SingleFactorTerm(
                                                                                        NumConstFactor(
                                                                                         0
                                                                                        ) [NumConstFactor]
                                                                                      ) [SingleFactorTerm]
                                                                                    ) [SingleTermExprPositive]
                                                                                    NumConstNo(
                                                                                    ) [NumConstNo]
                                                                                  ) [SinglePrintStatement]
                                                                                ) [StatementSingle]
                                                                              ) [IfElseStatement]
                                                                            ) [StatementSingle]
                                                                          ) [StatementListMultiple]
                                                                          StatementSingle(
                                                                            SingleDesignatorStatement(
                                                                              DesignatorStmtAssign(
                                                                                DesignatorStmtAssignCorrect(
                                                                                  IdentDesignator(
                                                                                   ibool
                                                                                  ) [IdentDesignator]
                                                                                  SingleTermExprPositive(
                                                                                    SingleFactorTerm(
                                                                                      BoolConstFactor(
                                                                                       false
                                                                                      ) [BoolConstFactor]
                                                                                    ) [SingleFactorTerm]
                                                                                  ) [SingleTermExprPositive]
                                                                                ) [DesignatorStmtAssignCorrect]
                                                                              ) [DesignatorStmtAssign]
                                                                            ) [SingleDesignatorStatement]
                                                                          ) [StatementSingle]
                                                                        ) [StatementListMultiple]
                                                                        StatementSingle(
                                                                          SingleDesignatorStatement(
                                                                            DesignatorStmtAssign(
                                                                              DesignatorStmtAssignCorrect(
                                                                                IdentDesignator(
                                                                                 i
                                                                                ) [IdentDesignator]
                                                                                SingleTermExprPositive(
                                                                                  SingleFactorTerm(
                                                                                    NumConstFactor(
                                                                                     0
                                                                                    ) [NumConstFactor]
                                                                                  ) [SingleFactorTerm]
                                                                                ) [SingleTermExprPositive]
                                                                              ) [DesignatorStmtAssignCorrect]
                                                                            ) [DesignatorStmtAssign]
                                                                          ) [SingleDesignatorStatement]
                                                                        ) [StatementSingle]
                                                                      ) [StatementListMultiple]
                                                                      StatementSingle(
                                                                        DoWhileStatement(
                                                                          DoEnter(
                                                                          ) [DoEnter]
                                                                          StatementListMultiple(
                                                                            StatementListNo(
                                                                            ) [StatementListNo]
                                                                            StatementMultiple(
                                                                              StatementsInBraces(
                                                                                StatementListMultiple(
                                                                                  StatementListMultiple(
                                                                                    StatementListNo(
                                                                                    ) [StatementListNo]
                                                                                    StatementSingle(
                                                                                      IfStatement(
                                                                                        IfConditionSingleTerm(
                                                                                          CondSingleFactTerm(
                                                                                            CondMultiExprFact(
                                                                                              CondSingleExprFact(
                                                                                                SingleTermExprPositive(
                                                                                                  SingleFactorTerm(
                                                                                                    DesignatorEmptyFactor(
                                                                                                      IdentDesignator(
                                                                                                       i
                                                                                                      ) [IdentDesignator]
                                                                                                    ) [DesignatorEmptyFactor]
                                                                                                  ) [SingleFactorTerm]
                                                                                                ) [SingleTermExprPositive]
                                                                                              ) [CondSingleExprFact]
                                                                                              RelopEQUAL(
                                                                                              ) [RelopEQUAL]
                                                                                              SingleTermExprPositive(
                                                                                                SingleFactorTerm(
                                                                                                  NumConstFactor(
                                                                                                   2
                                                                                                  ) [NumConstFactor]
                                                                                                ) [SingleFactorTerm]
                                                                                              ) [SingleTermExprPositive]
                                                                                            ) [CondMultiExprFact]
                                                                                          ) [CondSingleFactTerm]
                                                                                        ) [IfConditionSingleTerm]
                                                                                        StatementSingle(
                                                                                          SingleDesignatorStatement(
                                                                                            DesignatorStmtAssign(
                                                                                              DesignatorStmtAssignCorrect(
                                                                                                IdentDesignator(
                                                                                                 ibool
                                                                                                ) [IdentDesignator]
                                                                                                SingleTermExprPositive(
                                                                                                  SingleFactorTerm(
                                                                                                    BoolConstFactor(
                                                                                                     true
                                                                                                    ) [BoolConstFactor]
                                                                                                  ) [SingleFactorTerm]
                                                                                                ) [SingleTermExprPositive]
                                                                                              ) [DesignatorStmtAssignCorrect]
                                                                                            ) [DesignatorStmtAssign]
                                                                                          ) [SingleDesignatorStatement]
                                                                                        ) [StatementSingle]
                                                                                      ) [IfStatement]
                                                                                    ) [StatementSingle]
                                                                                  ) [StatementListMultiple]
                                                                                  StatementSingle(
                                                                                    SingleDesignatorStatement(
                                                                                      DesignatorStmtPlusPlus(
                                                                                        IdentDesignator(
                                                                                         i
                                                                                        ) [IdentDesignator]
                                                                                      ) [DesignatorStmtPlusPlus]
                                                                                    ) [SingleDesignatorStatement]
                                                                                  ) [StatementSingle]
                                                                                ) [StatementListMultiple]
                                                                              ) [StatementsInBraces]
                                                                            ) [StatementMultiple]
                                                                          ) [StatementListMultiple]
                                                                          ConditionSingleTerm(
                                                                            CondSingleFactTerm(
                                                                              CondMultiExprFact(
                                                                                CondSingleExprFact(
                                                                                  SingleTermExprPositive(
                                                                                    SingleFactorTerm(
                                                                                      DesignatorEmptyFactor(
                                                                                        IdentDesignator(
                                                                                         i
                                                                                        ) [IdentDesignator]
                                                                                      ) [DesignatorEmptyFactor]
                                                                                    ) [SingleFactorTerm]
                                                                                  ) [SingleTermExprPositive]
                                                                                ) [CondSingleExprFact]
                                                                                RelopLS(
                                                                                ) [RelopLS]
                                                                                SingleTermExprPositive(
                                                                                  SingleFactorTerm(
                                                                                    NumConstFactor(
                                                                                     5
                                                                                    ) [NumConstFactor]
                                                                                  ) [SingleFactorTerm]
                                                                                ) [SingleTermExprPositive]
                                                                              ) [CondMultiExprFact]
                                                                            ) [CondSingleFactTerm]
                                                                          ) [ConditionSingleTerm]
                                                                        ) [DoWhileStatement]
                                                                      ) [StatementSingle]
                                                                    ) [StatementListMultiple]
                                                                    StatementSingle(
                                                                      IfStatement(
                                                                        IfConditionSingleTerm(
                                                                          CondSingleFactTerm(
                                                                            CondSingleExprFact(
                                                                              SingleTermExprPositive(
                                                                                SingleFactorTerm(
                                                                                  DesignatorEmptyFactor(
                                                                                    IdentDesignator(
                                                                                     ibool
                                                                                    ) [IdentDesignator]
                                                                                  ) [DesignatorEmptyFactor]
                                                                                ) [SingleFactorTerm]
                                                                              ) [SingleTermExprPositive]
                                                                            ) [CondSingleExprFact]
                                                                          ) [CondSingleFactTerm]
                                                                        ) [IfConditionSingleTerm]
                                                                        StatementSingle(
                                                                          IfElseStatement(
                                                                            IfConditionSingleTerm(
                                                                              CondSingleFactTerm(
                                                                                CondMultiExprFact(
                                                                                  CondSingleExprFact(
                                                                                    SingleTermExprPositive(
                                                                                      SingleFactorTerm(
                                                                                        DesignatorEmptyFactor(
                                                                                          IdentDesignator(
                                                                                           i
                                                                                          ) [IdentDesignator]
                                                                                        ) [DesignatorEmptyFactor]
                                                                                      ) [SingleFactorTerm]
                                                                                    ) [SingleTermExprPositive]
                                                                                  ) [CondSingleExprFact]
                                                                                  RelopEQUAL(
                                                                                  ) [RelopEQUAL]
                                                                                  SingleTermExprPositive(
                                                                                    SingleFactorTerm(
                                                                                      NumConstFactor(
                                                                                       5
                                                                                      ) [NumConstFactor]
                                                                                    ) [SingleFactorTerm]
                                                                                  ) [SingleTermExprPositive]
                                                                                ) [CondMultiExprFact]
                                                                              ) [CondSingleFactTerm]
                                                                            ) [IfConditionSingleTerm]
                                                                            StatementSingle(
                                                                              SinglePrintStatement(
                                                                                SingleTermExprPositive(
                                                                                  SingleFactorTerm(
                                                                                    NumConstFactor(
                                                                                     1
                                                                                    ) [NumConstFactor]
                                                                                  ) [SingleFactorTerm]
                                                                                ) [SingleTermExprPositive]
                                                                                NumConstNo(
                                                                                ) [NumConstNo]
                                                                              ) [SinglePrintStatement]
                                                                            ) [StatementSingle]
                                                                            StatementSingle(
                                                                              SinglePrintStatement(
                                                                                SingleTermExprNegative(
                                                                                  SingleFactorTerm(
                                                                                    NumConstFactor(
                                                                                     1
                                                                                    ) [NumConstFactor]
                                                                                  ) [SingleFactorTerm]
                                                                                ) [SingleTermExprNegative]
                                                                                NumConstNo(
                                                                                ) [NumConstNo]
                                                                              ) [SinglePrintStatement]
                                                                            ) [StatementSingle]
                                                                          ) [IfElseStatement]
                                                                        ) [StatementSingle]
                                                                      ) [IfStatement]
                                                                    ) [StatementSingle]
                                                                  ) [StatementListMultiple]
                                                                  StatementSingle(
                                                                    SingleDesignatorStatement(
                                                                      DesignatorStmtAssign(
                                                                        DesignatorStmtAssignCorrect(
                                                                          IdentDesignator(
                                                                           a
                                                                          ) [IdentDesignator]
                                                                          SingleTermExprPositive(
                                                                            SingleFactorTerm(
                                                                              NumConstFactor(
                                                                               2
                                                                              ) [NumConstFactor]
                                                                            ) [SingleFactorTerm]
                                                                          ) [SingleTermExprPositive]
                                                                        ) [DesignatorStmtAssignCorrect]
                                                                      ) [DesignatorStmtAssign]
                                                                    ) [SingleDesignatorStatement]
                                                                  ) [StatementSingle]
                                                                ) [StatementListMultiple]
                                                                StatementSingle(
                                                                  SingleDesignatorStatement(
                                                                    DesignatorStmtAssign(
                                                                      DesignatorStmtAssignCorrect(
                                                                        IdentDesignator(
                                                                         niz
                                                                        ) [IdentDesignator]
                                                                        SingleTermExprPositive(
                                                                          SingleFactorTerm(
                                                                            NewTypeArrayFactor(
                                                                              Type(
                                                                               int
                                                                              ) [Type]
                                                                              SingleTermExprPositive(
                                                                                SingleFactorTerm(
                                                                                  NumConstFactor(
                                                                                   3
                                                                                  ) [NumConstFactor]
                                                                                ) [SingleFactorTerm]
                                                                              ) [SingleTermExprPositive]
                                                                            ) [NewTypeArrayFactor]
                                                                          ) [SingleFactorTerm]
                                                                        ) [SingleTermExprPositive]
                                                                      ) [DesignatorStmtAssignCorrect]
                                                                    ) [DesignatorStmtAssign]
                                                                  ) [SingleDesignatorStatement]
                                                                ) [StatementSingle]
                                                              ) [StatementListMultiple]
                                                              StatementSingle(
                                                                SingleDesignatorStatement(
                                                                  DesignatorStmtAssign(
                                                                    DesignatorStmtAssignCorrect(
                                                                      IdentArrayDesignator(
                                                                       niz
                                                                        SingleTermExprPositive(
                                                                          SingleFactorTerm(
                                                                            NumConstFactor(
                                                                             0
                                                                            ) [NumConstFactor]
                                                                          ) [SingleFactorTerm]
                                                                        ) [SingleTermExprPositive]
                                                                      ) [IdentArrayDesignator]
                                                                      SingleTermExprPositive(
                                                                        MultiFactorTerm(
                                                                          SingleFactorTerm(
                                                                            NumConstFactor(
                                                                             1
                                                                            ) [NumConstFactor]
                                                                          ) [SingleFactorTerm]
                                                                          MulopMul(
                                                                          ) [MulopMul]
                                                                          DesignatorEmptyFactor(
                                                                            IdentDesignator(
                                                                             a
                                                                            ) [IdentDesignator]
                                                                          ) [DesignatorEmptyFactor]
                                                                        ) [MultiFactorTerm]
                                                                      ) [SingleTermExprPositive]
                                                                    ) [DesignatorStmtAssignCorrect]
                                                                  ) [DesignatorStmtAssign]
                                                                ) [SingleDesignatorStatement]
                                                              ) [StatementSingle]
                                                            ) [StatementListMultiple]
                                                            StatementSingle(
                                                              SingleDesignatorStatement(
                                                                DesignatorStmtAssign(
                                                                  DesignatorStmtAssignCorrect(
                                                                    IdentArrayDesignator(
                                                                     niz
                                                                      SingleTermExprPositive(
                                                                        SingleFactorTerm(
                                                                          NumConstFactor(
                                                                           1
                                                                          ) [NumConstFactor]
                                                                        ) [SingleFactorTerm]
                                                                      ) [SingleTermExprPositive]
                                                                    ) [IdentArrayDesignator]
                                                                    SingleTermExprPositive(
                                                                      MultiFactorTerm(
                                                                        SingleFactorTerm(
                                                                          NumConstFactor(
                                                                           2
                                                                          ) [NumConstFactor]
                                                                        ) [SingleFactorTerm]
                                                                        MulopMul(
                                                                        ) [MulopMul]
                                                                        DesignatorEmptyFactor(
                                                                          IdentDesignator(
                                                                           a
                                                                          ) [IdentDesignator]
                                                                        ) [DesignatorEmptyFactor]
                                                                      ) [MultiFactorTerm]
                                                                    ) [SingleTermExprPositive]
                                                                  ) [DesignatorStmtAssignCorrect]
                                                                ) [DesignatorStmtAssign]
                                                              ) [SingleDesignatorStatement]
                                                            ) [StatementSingle]
                                                          ) [StatementListMultiple]
                                                          StatementSingle(
                                                            SingleDesignatorStatement(
                                                              DesignatorStmtAssign(
                                                                DesignatorStmtAssignCorrect(
                                                                  IdentArrayDesignator(
                                                                   niz
                                                                    SingleTermExprPositive(
                                                                      SingleFactorTerm(
                                                                        NumConstFactor(
                                                                         2
                                                                        ) [NumConstFactor]
                                                                      ) [SingleFactorTerm]
                                                                    ) [SingleTermExprPositive]
                                                                  ) [IdentArrayDesignator]
                                                                  MultiTermExpr(
                                                                    SingleTermExprPositive(
                                                                      MultiFactorTerm(
                                                                        SingleFactorTerm(
                                                                          MethodCallFactor(
                                                                            MethodCall(
                                                                              IdentDesignator(
                                                                               sum
                                                                              ) [IdentDesignator]
                                                                              ActParsLeftParen(
                                                                              ) [ActParsLeftParen]
                                                                              ActParsYes(
                                                                                ActParsMultiExpr(
                                                                                  ActParsSingleExpr(
                                                                                    SingleTermExprPositive(
                                                                                      SingleFactorTerm(
                                                                                        DesignatorEmptyFactor(
                                                                                          IdentArrayDesignator(
                                                                                           niz
                                                                                            SingleTermExprPositive(
                                                                                              SingleFactorTerm(
                                                                                                NumConstFactor(
                                                                                                 1
                                                                                                ) [NumConstFactor]
                                                                                              ) [SingleFactorTerm]
                                                                                            ) [SingleTermExprPositive]
                                                                                          ) [IdentArrayDesignator]
                                                                                        ) [DesignatorEmptyFactor]
                                                                                      ) [SingleFactorTerm]
                                                                                    ) [SingleTermExprPositive]
                                                                                  ) [ActParsSingleExpr]
                                                                                  SingleTermExprPositive(
                                                                                    SingleFactorTerm(
                                                                                      DesignatorEmptyFactor(
                                                                                        IdentArrayDesignator(
                                                                                         niz
                                                                                          SingleTermExprPositive(
                                                                                            SingleFactorTerm(
                                                                                              NumConstFactor(
                                                                                               0
                                                                                              ) [NumConstFactor]
                                                                                            ) [SingleFactorTerm]
                                                                                          ) [SingleTermExprPositive]
                                                                                        ) [IdentArrayDesignator]
                                                                                      ) [DesignatorEmptyFactor]
                                                                                    ) [SingleFactorTerm]
                                                                                  ) [SingleTermExprPositive]
                                                                                ) [ActParsMultiExpr]
                                                                              ) [ActParsYes]
                                                                              ActParsRightParen(
                                                                              ) [ActParsRightParen]
                                                                            ) [MethodCall]
                                                                          ) [MethodCallFactor]
                                                                        ) [SingleFactorTerm]
                                                                        MulopMul(
                                                                        ) [MulopMul]
                                                                        DesignatorEmptyFactor(
                                                                          IdentDesignator(
                                                                           a
                                                                          ) [IdentDesignator]
                                                                        ) [DesignatorEmptyFactor]
                                                                      ) [MultiFactorTerm]
                                                                    ) [SingleTermExprPositive]
                                                                    AddopPlus(
                                                                    ) [AddopPlus]
                                                                    SingleFactorTerm(
                                                                      NumConstFactor(
                                                                       1
                                                                      ) [NumConstFactor]
                                                                    ) [SingleFactorTerm]
                                                                  ) [MultiTermExpr]
                                                                ) [DesignatorStmtAssignCorrect]
                                                              ) [DesignatorStmtAssign]
                                                            ) [SingleDesignatorStatement]
                                                          ) [StatementSingle]
                                                        ) [StatementListMultiple]
                                                        StatementSingle(
                                                          IfElseStatement(
                                                            IfConditionMultiTerm(
                                                              ConditionSingleTerm(
                                                                CondSingleFactTerm(
                                                                  CondSingleExprFact(
                                                                    SingleTermExprPositive(
                                                                      SingleFactorTerm(
                                                                        MethodCallFactor(
                                                                          MethodCall(
                                                                            IdentDesignator(
                                                                             verify
                                                                            ) [IdentDesignator]
                                                                            ActParsLeftParen(
                                                                            ) [ActParsLeftParen]
                                                                            ActParsNo(
                                                                            ) [ActParsNo]
                                                                            ActParsRightParen(
                                                                            ) [ActParsRightParen]
                                                                          ) [MethodCall]
                                                                        ) [MethodCallFactor]
                                                                      ) [SingleFactorTerm]
                                                                    ) [SingleTermExprPositive]
                                                                  ) [CondSingleExprFact]
                                                                ) [CondSingleFactTerm]
                                                              ) [ConditionSingleTerm]
                                                              CondSingleFactTerm(
                                                                CondMultiExprFact(
                                                                  CondSingleExprFact(
                                                                    SingleTermExprPositive(
                                                                      SingleFactorTerm(
                                                                        DesignatorEmptyFactor(
                                                                          IdentArrayDesignator(
                                                                           niz
                                                                            SingleTermExprPositive(
                                                                              SingleFactorTerm(
                                                                                NumConstFactor(
                                                                                 2
                                                                                ) [NumConstFactor]
                                                                              ) [SingleFactorTerm]
                                                                            ) [SingleTermExprPositive]
                                                                          ) [IdentArrayDesignator]
                                                                        ) [DesignatorEmptyFactor]
                                                                      ) [SingleFactorTerm]
                                                                    ) [SingleTermExprPositive]
                                                                  ) [CondSingleExprFact]
                                                                  RelopEQUAL(
                                                                  ) [RelopEQUAL]
                                                                  SingleTermExprPositive(
                                                                    SingleFactorTerm(
                                                                      NumConstFactor(
                                                                       4
                                                                      ) [NumConstFactor]
                                                                    ) [SingleFactorTerm]
                                                                  ) [SingleTermExprPositive]
                                                                ) [CondMultiExprFact]
                                                              ) [CondSingleFactTerm]
                                                            ) [IfConditionMultiTerm]
                                                            StatementSingle(
                                                              SinglePrintStatement(
                                                                SingleTermExprPositive(
                                                                  SingleFactorTerm(
                                                                    MethodCallFactor(
                                                                      MethodCall(
                                                                        IdentDesignator(
                                                                         ord
                                                                        ) [IdentDesignator]
                                                                        ActParsLeftParen(
                                                                        ) [ActParsLeftParen]
                                                                        ActParsYes(
                                                                          ActParsSingleExpr(
                                                                            SingleTermExprPositive(
                                                                              SingleFactorTerm(
                                                                                CharConstFactor(
                                                                                 A
                                                                                ) [CharConstFactor]
                                                                              ) [SingleFactorTerm]
                                                                            ) [SingleTermExprPositive]
                                                                          ) [ActParsSingleExpr]
                                                                        ) [ActParsYes]
                                                                        ActParsRightParen(
                                                                        ) [ActParsRightParen]
                                                                      ) [MethodCall]
                                                                    ) [MethodCallFactor]
                                                                  ) [SingleFactorTerm]
                                                                ) [SingleTermExprPositive]
                                                                NumConstNo(
                                                                ) [NumConstNo]
                                                              ) [SinglePrintStatement]
                                                            ) [StatementSingle]
                                                            StatementSingle(
                                                              SinglePrintStatement(
                                                                SingleTermExprPositive(
                                                                  SingleFactorTerm(
                                                                    MethodCallFactor(
                                                                      MethodCall(
                                                                        IdentDesignator(
                                                                         ord
                                                                        ) [IdentDesignator]
                                                                        ActParsLeftParen(
                                                                        ) [ActParsLeftParen]
                                                                        ActParsYes(
                                                                          ActParsSingleExpr(
                                                                            SingleTermExprPositive(
                                                                              SingleFactorTerm(
                                                                                CharConstFactor(
                                                                                 a
                                                                                ) [CharConstFactor]
                                                                              ) [SingleFactorTerm]
                                                                            ) [SingleTermExprPositive]
                                                                          ) [ActParsSingleExpr]
                                                                        ) [ActParsYes]
                                                                        ActParsRightParen(
                                                                        ) [ActParsRightParen]
                                                                      ) [MethodCall]
                                                                    ) [MethodCallFactor]
                                                                  ) [SingleFactorTerm]
                                                                ) [SingleTermExprPositive]
                                                                NumConstNo(
                                                                ) [NumConstNo]
                                                              ) [SinglePrintStatement]
                                                            ) [StatementSingle]
                                                          ) [IfElseStatement]
                                                        ) [StatementSingle]
                                                      ) [StatementListMultiple]
                                                      StatementSingle(
                                                        SinglePrintStatement(
                                                          SingleTermExprPositive(
                                                            SingleFactorTerm(
                                                              DesignatorEmptyFactor(
                                                                IdentDesignator(
                                                                 eol
                                                                ) [IdentDesignator]
                                                              ) [DesignatorEmptyFactor]
                                                            ) [SingleFactorTerm]
                                                          ) [SingleTermExprPositive]
                                                          NumConstNo(
                                                          ) [NumConstNo]
                                                        ) [SinglePrintStatement]
                                                      ) [StatementSingle]
                                                    ) [StatementListMultiple]
                                                    StatementSingle(
                                                      SingleDesignatorStatement(
                                                        DesignatorStmtAssign(
                                                          DesignatorStmtAssignCorrect(
                                                            IdentDesignator(
                                                             i
                                                            ) [IdentDesignator]
                                                            SingleTermExprPositive(
                                                              SingleFactorTerm(
                                                                NumConstFactor(
                                                                 0
                                                                ) [NumConstFactor]
                                                              ) [SingleFactorTerm]
                                                            ) [SingleTermExprPositive]
                                                          ) [DesignatorStmtAssignCorrect]
                                                        ) [DesignatorStmtAssign]
                                                      ) [SingleDesignatorStatement]
                                                    ) [StatementSingle]
                                                  ) [StatementListMultiple]
                                                  StatementSingle(
                                                    DoWhileStatement(
                                                      DoEnter(
                                                      ) [DoEnter]
                                                      StatementListMultiple(
                                                        StatementListNo(
                                                        ) [StatementListNo]
                                                        StatementMultiple(
                                                          StatementsInBraces(
                                                            StatementListMultiple(
                                                              StatementListMultiple(
                                                                StatementListMultiple(
                                                                  StatementListNo(
                                                                  ) [StatementListNo]
                                                                  StatementSingle(
                                                                    IfStatement(
                                                                      IfConditionSingleTerm(
                                                                        CondSingleFactTerm(
                                                                          CondMultiExprFact(
                                                                            CondSingleExprFact(
                                                                              SingleTermExprPositive(
                                                                                SingleFactorTerm(
                                                                                  DesignatorEmptyFactor(
                                                                                    IdentDesignator(
                                                                                     i
                                                                                    ) [IdentDesignator]
                                                                                  ) [DesignatorEmptyFactor]
                                                                                ) [SingleFactorTerm]
                                                                              ) [SingleTermExprPositive]
                                                                            ) [CondSingleExprFact]
                                                                            RelopEQUAL(
                                                                            ) [RelopEQUAL]
                                                                            SingleTermExprPositive(
                                                                              SingleFactorTerm(
                                                                                NumConstFactor(
                                                                                 3
                                                                                ) [NumConstFactor]
                                                                              ) [SingleFactorTerm]
                                                                            ) [SingleTermExprPositive]
                                                                          ) [CondMultiExprFact]
                                                                        ) [CondSingleFactTerm]
                                                                      ) [IfConditionSingleTerm]
                                                                      StatementMultiple(
                                                                        StatementsInBraces(
                                                                          StatementListMultiple(
                                                                            StatementListMultiple(
                                                                              StatementListNo(
                                                                              ) [StatementListNo]
                                                                              StatementSingle(
                                                                                SingleDesignatorStatement(
                                                                                  DesignatorStmtPlusPlus(
                                                                                    IdentDesignator(
                                                                                     i
                                                                                    ) [IdentDesignator]
                                                                                  ) [DesignatorStmtPlusPlus]
                                                                                ) [SingleDesignatorStatement]
                                                                              ) [StatementSingle]
                                                                            ) [StatementListMultiple]
                                                                            StatementSingle(
                                                                              SingleContinueStatement(
                                                                              ) [SingleContinueStatement]
                                                                            ) [StatementSingle]
                                                                          ) [StatementListMultiple]
                                                                        ) [StatementsInBraces]
                                                                      ) [StatementMultiple]
                                                                    ) [IfStatement]
                                                                  ) [StatementSingle]
                                                                ) [StatementListMultiple]
                                                                StatementSingle(
                                                                  IfStatement(
                                                                    IfConditionSingleTerm(
                                                                      CondSingleFactTerm(
                                                                        CondMultiExprFact(
                                                                          CondSingleExprFact(
                                                                            SingleTermExprPositive(
                                                                              SingleFactorTerm(
                                                                                DesignatorEmptyFactor(
                                                                                  IdentDesignator(
                                                                                   i
                                                                                  ) [IdentDesignator]
                                                                                ) [DesignatorEmptyFactor]
                                                                              ) [SingleFactorTerm]
                                                                            ) [SingleTermExprPositive]
                                                                          ) [CondSingleExprFact]
                                                                          RelopEQUAL(
                                                                          ) [RelopEQUAL]
                                                                          SingleTermExprPositive(
                                                                            SingleFactorTerm(
                                                                              NumConstFactor(
                                                                               4
                                                                              ) [NumConstFactor]
                                                                            ) [SingleFactorTerm]
                                                                          ) [SingleTermExprPositive]
                                                                        ) [CondMultiExprFact]
                                                                      ) [CondSingleFactTerm]
                                                                    ) [IfConditionSingleTerm]
                                                                    StatementSingle(
                                                                      SingleBreakStatement(
                                                                      ) [SingleBreakStatement]
                                                                    ) [StatementSingle]
                                                                  ) [IfStatement]
                                                                ) [StatementSingle]
                                                              ) [StatementListMultiple]
                                                              StatementSingle(
                                                                SingleDesignatorStatement(
                                                                  DesignatorStmtAssign(
                                                                    DesignatorStmtAssignCorrect(
                                                                      IdentDesignator(
                                                                       i
                                                                      ) [IdentDesignator]
                                                                      SingleTermExprPositive(
                                                                        SingleFactorTerm(
                                                                          MethodCallFactor(
                                                                            MethodCall(
                                                                              IdentDesignator(
                                                                               inkrement
                                                                              ) [IdentDesignator]
                                                                              ActParsLeftParen(
                                                                              ) [ActParsLeftParen]
                                                                              ActParsYes(
                                                                                ActParsMultiExpr(
                                                                                  ActParsSingleExpr(
                                                                                    SingleTermExprPositive(
                                                                                      SingleFactorTerm(
                                                                                        DesignatorEmptyFactor(
                                                                                          IdentDesignator(
                                                                                           i
                                                                                          ) [IdentDesignator]
                                                                                        ) [DesignatorEmptyFactor]
                                                                                      ) [SingleFactorTerm]
                                                                                    ) [SingleTermExprPositive]
                                                                                  ) [ActParsSingleExpr]
                                                                                  SingleTermExprPositive(
                                                                                    SingleFactorTerm(
                                                                                      NumConstFactor(
                                                                                       1
                                                                                      ) [NumConstFactor]
                                                                                    ) [SingleFactorTerm]
                                                                                  ) [SingleTermExprPositive]
                                                                                ) [ActParsMultiExpr]
                                                                              ) [ActParsYes]
                                                                              ActParsRightParen(
                                                                              ) [ActParsRightParen]
                                                                            ) [MethodCall]
                                                                          ) [MethodCallFactor]
                                                                        ) [SingleFactorTerm]
                                                                      ) [SingleTermExprPositive]
                                                                    ) [DesignatorStmtAssignCorrect]
                                                                  ) [DesignatorStmtAssign]
                                                                ) [SingleDesignatorStatement]
                                                              ) [StatementSingle]
                                                            ) [StatementListMultiple]
                                                          ) [StatementsInBraces]
                                                        ) [StatementMultiple]
                                                      ) [StatementListMultiple]
                                                      ConditionSingleTerm(
                                                        CondSingleFactTerm(
                                                          CondMultiExprFact(
                                                            CondSingleExprFact(
                                                              SingleTermExprPositive(
                                                                SingleFactorTerm(
                                                                  DesignatorEmptyFactor(
                                                                    IdentDesignator(
                                                                     i
                                                                    ) [IdentDesignator]
                                                                  ) [DesignatorEmptyFactor]
                                                                ) [SingleFactorTerm]
                                                              ) [SingleTermExprPositive]
                                                            ) [CondSingleExprFact]
                                                            RelopLS(
                                                            ) [RelopLS]
                                                            SingleTermExprPositive(
                                                              SingleFactorTerm(
                                                                NumConstFactor(
                                                                 10
                                                                ) [NumConstFactor]
                                                              ) [SingleFactorTerm]
                                                            ) [SingleTermExprPositive]
                                                          ) [CondMultiExprFact]
                                                        ) [CondSingleFactTerm]
                                                      ) [ConditionSingleTerm]
                                                    ) [DoWhileStatement]
                                                  ) [StatementSingle]
                                                ) [StatementListMultiple]
                                                StatementSingle(
                                                  IfElseStatement(
                                                    IfConditionSingleTerm(
                                                      CondMultiFactTerm(
                                                        CondSingleFactTerm(
                                                          CondMultiExprFact(
                                                            CondSingleExprFact(
                                                              SingleTermExprPositive(
                                                                SingleFactorTerm(
                                                                  DesignatorEmptyFactor(
                                                                    IdentDesignator(
                                                                     i
                                                                    ) [IdentDesignator]
                                                                  ) [DesignatorEmptyFactor]
                                                                ) [SingleFactorTerm]
                                                              ) [SingleTermExprPositive]
                                                            ) [CondSingleExprFact]
                                                            RelopEQUAL(
                                                            ) [RelopEQUAL]
                                                            SingleTermExprPositive(
                                                              SingleFactorTerm(
                                                                NumConstFactor(
                                                                 3
                                                                ) [NumConstFactor]
                                                              ) [SingleFactorTerm]
                                                            ) [SingleTermExprPositive]
                                                          ) [CondMultiExprFact]
                                                        ) [CondSingleFactTerm]
                                                        CondSingleExprFact(
                                                          SingleTermExprPositive(
                                                            SingleFactorTerm(
                                                              MethodCallFactor(
                                                                MethodCall(
                                                                  IdentDesignator(
                                                                   verify
                                                                  ) [IdentDesignator]
                                                                  ActParsLeftParen(
                                                                  ) [ActParsLeftParen]
                                                                  ActParsNo(
                                                                  ) [ActParsNo]
                                                                  ActParsRightParen(
                                                                  ) [ActParsRightParen]
                                                                ) [MethodCall]
                                                              ) [MethodCallFactor]
                                                            ) [SingleFactorTerm]
                                                          ) [SingleTermExprPositive]
                                                        ) [CondSingleExprFact]
                                                      ) [CondMultiFactTerm]
                                                    ) [IfConditionSingleTerm]
                                                    StatementSingle(
                                                      SinglePrintStatement(
                                                        SingleTermExprNegative(
                                                          SingleFactorTerm(
                                                            NumConstFactor(
                                                             4
                                                            ) [NumConstFactor]
                                                          ) [SingleFactorTerm]
                                                        ) [SingleTermExprNegative]
                                                        NumConstNo(
                                                        ) [NumConstNo]
                                                      ) [SinglePrintStatement]
                                                    ) [StatementSingle]
                                                    StatementSingle(
                                                      SinglePrintStatement(
                                                        SingleTermExprPositive(
                                                          SingleFactorTerm(
                                                            NumConstFactor(
                                                             4
                                                            ) [NumConstFactor]
                                                          ) [SingleFactorTerm]
                                                        ) [SingleTermExprPositive]
                                                        NumConstNo(
                                                        ) [NumConstNo]
                                                      ) [SinglePrintStatement]
                                                    ) [StatementSingle]
                                                  ) [IfElseStatement]
                                                ) [StatementSingle]
                                              ) [StatementListMultiple]
                                              StatementSingle(
                                                SingleReadStatement(
                                                  IdentArrayDesignator(
                                                   niz
                                                    SingleTermExprPositive(
                                                      SingleFactorTerm(
                                                        NumConstFactor(
                                                         0
                                                        ) [NumConstFactor]
                                                      ) [SingleFactorTerm]
                                                    ) [SingleTermExprPositive]
                                                  ) [IdentArrayDesignator]
                                                ) [SingleReadStatement]
                                              ) [StatementSingle]
                                            ) [StatementListMultiple]
                                            StatementSingle(
                                              SingleReadStatement(
                                                IdentArrayDesignator(
                                                 niz
                                                  SingleTermExprPositive(
                                                    SingleFactorTerm(
                                                      NumConstFactor(
                                                       1
                                                      ) [NumConstFactor]
                                                    ) [SingleFactorTerm]
                                                  ) [SingleTermExprPositive]
                                                ) [IdentArrayDesignator]
                                              ) [SingleReadStatement]
                                            ) [StatementSingle]
                                          ) [StatementListMultiple]
                                          StatementSingle(
                                            SingleReadStatement(
                                              IdentArrayDesignator(
                                               niz
                                                SingleTermExprPositive(
                                                  SingleFactorTerm(
                                                    NumConstFactor(
                                                     2
                                                    ) [NumConstFactor]
                                                  ) [SingleFactorTerm]
                                                ) [SingleTermExprPositive]
                                              ) [IdentArrayDesignator]
                                            ) [SingleReadStatement]
                                          ) [StatementSingle]
                                        ) [StatementListMultiple]
                                        StatementSingle(
                                          SinglePrintStatement(
                                            SingleTermExprPositive(
                                              SingleFactorTerm(
                                                DesignatorEmptyFactor(
                                                  IdentDesignator(
                                                   eol
                                                  ) [IdentDesignator]
                                                ) [DesignatorEmptyFactor]
                                              ) [SingleFactorTerm]
                                            ) [SingleTermExprPositive]
                                            NumConstNo(
                                            ) [NumConstNo]
                                          ) [SinglePrintStatement]
                                        ) [StatementSingle]
                                      ) [StatementListMultiple]
                                      StatementSingle(
                                        SinglePrintStatement(
                                          SingleTermExprPositive(
                                            SingleFactorTerm(
                                              MethodCallFactor(
                                                MethodCall(
                                                  IdentDesignator(
                                                   sum
                                                  ) [IdentDesignator]
                                                  ActParsLeftParen(
                                                  ) [ActParsLeftParen]
                                                  ActParsYes(
                                                    ActParsMultiExpr(
                                                      ActParsSingleExpr(
                                                        SingleTermExprPositive(
                                                          SingleFactorTerm(
                                                            MethodCallFactor(
                                                              MethodCall(
                                                                IdentDesignator(
                                                                 sum
                                                                ) [IdentDesignator]
                                                                ActParsLeftParen(
                                                                ) [ActParsLeftParen]
                                                                ActParsYes(
                                                                  ActParsMultiExpr(
                                                                    ActParsSingleExpr(
                                                                      SingleTermExprPositive(
                                                                        SingleFactorTerm(
                                                                          DesignatorEmptyFactor(
                                                                            IdentArrayDesignator(
                                                                             niz
                                                                              SingleTermExprPositive(
                                                                                SingleFactorTerm(
                                                                                  NumConstFactor(
                                                                                   0
                                                                                  ) [NumConstFactor]
                                                                                ) [SingleFactorTerm]
                                                                              ) [SingleTermExprPositive]
                                                                            ) [IdentArrayDesignator]
                                                                          ) [DesignatorEmptyFactor]
                                                                        ) [SingleFactorTerm]
                                                                      ) [SingleTermExprPositive]
                                                                    ) [ActParsSingleExpr]
                                                                    SingleTermExprPositive(
                                                                      SingleFactorTerm(
                                                                        DesignatorEmptyFactor(
                                                                          IdentArrayDesignator(
                                                                           niz
                                                                            SingleTermExprPositive(
                                                                              SingleFactorTerm(
                                                                                NumConstFactor(
                                                                                 1
                                                                                ) [NumConstFactor]
                                                                              ) [SingleFactorTerm]
                                                                            ) [SingleTermExprPositive]
                                                                          ) [IdentArrayDesignator]
                                                                        ) [DesignatorEmptyFactor]
                                                                      ) [SingleFactorTerm]
                                                                    ) [SingleTermExprPositive]
                                                                  ) [ActParsMultiExpr]
                                                                ) [ActParsYes]
                                                                ActParsRightParen(
                                                                ) [ActParsRightParen]
                                                              ) [MethodCall]
                                                            ) [MethodCallFactor]
                                                          ) [SingleFactorTerm]
                                                        ) [SingleTermExprPositive]
                                                      ) [ActParsSingleExpr]
                                                      SingleTermExprPositive(
                                                        SingleFactorTerm(
                                                          DesignatorEmptyFactor(
                                                            IdentArrayDesignator(
                                                             niz
                                                              SingleTermExprPositive(
                                                                SingleFactorTerm(
                                                                  NumConstFactor(
                                                                   2
                                                                  ) [NumConstFactor]
                                                                ) [SingleFactorTerm]
                                                              ) [SingleTermExprPositive]
                                                            ) [IdentArrayDesignator]
                                                          ) [DesignatorEmptyFactor]
                                                        ) [SingleFactorTerm]
                                                      ) [SingleTermExprPositive]
                                                    ) [ActParsMultiExpr]
                                                  ) [ActParsYes]
                                                  ActParsRightParen(
                                                  ) [ActParsRightParen]
                                                ) [MethodCall]
                                              ) [MethodCallFactor]
                                            ) [SingleFactorTerm]
                                          ) [SingleTermExprPositive]
                                          NumConstNo(
                                          ) [NumConstNo]
                                        ) [SinglePrintStatement]
                                      ) [StatementSingle]
                                    ) [StatementListMultiple]
                                    StatementSingle(
                                      SinglePrintStatement(
                                        SingleTermExprPositive(
                                          SingleFactorTerm(
                                            DesignatorEmptyFactor(
                                              IdentDesignator(
                                               eol
                                              ) [IdentDesignator]
                                            ) [DesignatorEmptyFactor]
                                          ) [SingleFactorTerm]
                                        ) [SingleTermExprPositive]
                                        NumConstNo(
                                        ) [NumConstNo]
                                      ) [SinglePrintStatement]
                                    ) [StatementSingle]
                                  ) [StatementListMultiple]
                                  StatementSingle(
                                    SinglePrintStatement(
                                      SingleTermExprPositive(
                                        SingleFactorTerm(
                                          MethodCallFactor(
                                            MethodCall(
                                              IdentDesignator(
                                               inkrement
                                              ) [IdentDesignator]
                                              ActParsLeftParen(
                                              ) [ActParsLeftParen]
                                              ActParsYes(
                                                ActParsMultiExpr(
                                                  ActParsSingleExpr(
                                                    SingleTermExprPositive(
                                                      SingleFactorTerm(
                                                        DesignatorEmptyFactor(
                                                          IdentArrayDesignator(
                                                           niz
                                                            SingleTermExprPositive(
                                                              SingleFactorTerm(
                                                                NumConstFactor(
                                                                 2
                                                                ) [NumConstFactor]
                                                              ) [SingleFactorTerm]
                                                            ) [SingleTermExprPositive]
                                                          ) [IdentArrayDesignator]
                                                        ) [DesignatorEmptyFactor]
                                                      ) [SingleFactorTerm]
                                                    ) [SingleTermExprPositive]
                                                  ) [ActParsSingleExpr]
                                                  SingleTermExprPositive(
                                                    SingleFactorTerm(
                                                      NumConstFactor(
                                                       2
                                                      ) [NumConstFactor]
                                                    ) [SingleFactorTerm]
                                                  ) [SingleTermExprPositive]
                                                ) [ActParsMultiExpr]
                                              ) [ActParsYes]
                                              ActParsRightParen(
                                              ) [ActParsRightParen]
                                            ) [MethodCall]
                                          ) [MethodCallFactor]
                                        ) [SingleFactorTerm]
                                      ) [SingleTermExprPositive]
                                      NumConstNo(
                                      ) [NumConstNo]
                                    ) [SinglePrintStatement]
                                  ) [StatementSingle]
                                ) [StatementListMultiple]
                                StatementSingle(
                                  SingleDesignatorStatement(
                                    DesignatorStmtAssign(
                                      DesignatorStmtAssignCorrect(
                                        IdentDesignator(
                                         a
                                        ) [IdentDesignator]
                                        SingleTermExprPositive(
                                          SingleFactorTerm(
                                            NumConstFactor(
                                             3
                                            ) [NumConstFactor]
                                          ) [SingleFactorTerm]
                                        ) [SingleTermExprPositive]
                                      ) [DesignatorStmtAssignCorrect]
                                    ) [DesignatorStmtAssign]
                                  ) [SingleDesignatorStatement]
                                ) [StatementSingle]
                              ) [StatementListMultiple]
                              StatementSingle(
                                SingleDesignatorStatement(
                                  DesignatorStmtAssign(
                                    DesignatorStmtAssignCorrect(
                                      IdentDesignator(
                                       i
                                      ) [IdentDesignator]
                                      SingleTermExprPositive(
                                        SingleFactorTerm(
                                          NumConstFactor(
                                           0
                                          ) [NumConstFactor]
                                        ) [SingleFactorTerm]
                                      ) [SingleTermExprPositive]
                                    ) [DesignatorStmtAssignCorrect]
                                  ) [DesignatorStmtAssign]
                                ) [SingleDesignatorStatement]
                              ) [StatementSingle]
                            ) [StatementListMultiple]
                            StatementSingle(
                              DoWhileStatement(
                                DoEnter(
                                ) [DoEnter]
                                StatementListMultiple(
                                  StatementListNo(
                                  ) [StatementListNo]
                                  StatementMultiple(
                                    StatementsInBraces(
                                      StatementListMultiple(
                                        StatementListMultiple(
                                          StatementListNo(
                                          ) [StatementListNo]
                                          StatementSingle(
                                            SingleDesignatorStatement(
                                              DesignatorStmtAssign(
                                                DesignatorStmtAssignCorrect(
                                                  IdentArrayDesignator(
                                                   niz
                                                    SingleTermExprPositive(
                                                      SingleFactorTerm(
                                                        DesignatorEmptyFactor(
                                                          IdentDesignator(
                                                           i
                                                          ) [IdentDesignator]
                                                        ) [DesignatorEmptyFactor]
                                                      ) [SingleFactorTerm]
                                                    ) [SingleTermExprPositive]
                                                  ) [IdentArrayDesignator]
                                                  SingleTermExprPositive(
                                                    MultiFactorTerm(
                                                      MultiFactorTerm(
                                                        SingleFactorTerm(
                                                          DesignatorEmptyFactor(
                                                            IdentArrayDesignator(
                                                             niz
                                                              SingleTermExprPositive(
                                                                SingleFactorTerm(
                                                                  DesignatorEmptyFactor(
                                                                    IdentDesignator(
                                                                     i
                                                                    ) [IdentDesignator]
                                                                  ) [DesignatorEmptyFactor]
                                                                ) [SingleFactorTerm]
                                                              ) [SingleTermExprPositive]
                                                            ) [IdentArrayDesignator]
                                                          ) [DesignatorEmptyFactor]
                                                        ) [SingleFactorTerm]
                                                        MulopMul(
                                                        ) [MulopMul]
                                                        NumConstFactor(
                                                         2
                                                        ) [NumConstFactor]
                                                      ) [MultiFactorTerm]
                                                      MulopMul(
                                                      ) [MulopMul]
                                                      DesignatorEmptyFactor(
                                                        IdentDesignator(
                                                         a
                                                        ) [IdentDesignator]
                                                      ) [DesignatorEmptyFactor]
                                                    ) [MultiFactorTerm]
                                                  ) [SingleTermExprPositive]
                                                ) [DesignatorStmtAssignCorrect]
                                              ) [DesignatorStmtAssign]
                                            ) [SingleDesignatorStatement]
                                          ) [StatementSingle]
                                        ) [StatementListMultiple]
                                        StatementSingle(
                                          SingleDesignatorStatement(
                                            DesignatorStmtPlusPlus(
                                              IdentDesignator(
                                               i
                                              ) [IdentDesignator]
                                            ) [DesignatorStmtPlusPlus]
                                          ) [SingleDesignatorStatement]
                                        ) [StatementSingle]
                                      ) [StatementListMultiple]
                                    ) [StatementsInBraces]
                                  ) [StatementMultiple]
                                ) [StatementListMultiple]
                                ConditionSingleTerm(
                                  CondSingleFactTerm(
                                    CondMultiExprFact(
                                      CondSingleExprFact(
                                        SingleTermExprPositive(
                                          SingleFactorTerm(
                                            DesignatorEmptyFactor(
                                              IdentDesignator(
                                               i
                                              ) [IdentDesignator]
                                            ) [DesignatorEmptyFactor]
                                          ) [SingleFactorTerm]
                                        ) [SingleTermExprPositive]
                                      ) [CondSingleExprFact]
                                      RelopLS(
                                      ) [RelopLS]
                                      SingleTermExprPositive(
                                        SingleFactorTerm(
                                          NumConstFactor(
                                           3
                                          ) [NumConstFactor]
                                        ) [SingleFactorTerm]
                                      ) [SingleTermExprPositive]
                                    ) [CondMultiExprFact]
                                  ) [CondSingleFactTerm]
                                ) [ConditionSingleTerm]
                              ) [DoWhileStatement]
                            ) [StatementSingle]
                          ) [StatementListMultiple]
                          StatementSingle(
                            SinglePrintStatement(
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentArrayDesignator(
                                     niz
                                      SingleTermExprPositive(
                                        SingleFactorTerm(
                                          NumConstFactor(
                                           0
                                          ) [NumConstFactor]
                                        ) [SingleFactorTerm]
                                      ) [SingleTermExprPositive]
                                    ) [IdentArrayDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                              NumConstNo(
                              ) [NumConstNo]
                            ) [SinglePrintStatement]
                          ) [StatementSingle]
                        ) [StatementListMultiple]
                        StatementSingle(
                          SinglePrintStatement(
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                DesignatorEmptyFactor(
                                  IdentArrayDesignator(
                                   niz
                                    SingleTermExprPositive(
                                      SingleFactorTerm(
                                        NumConstFactor(
                                         1
                                        ) [NumConstFactor]
                                      ) [SingleFactorTerm]
                                    ) [SingleTermExprPositive]
                                  ) [IdentArrayDesignator]
                                ) [DesignatorEmptyFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                            NumConstNo(
                            ) [NumConstNo]
                          ) [SinglePrintStatement]
                        ) [StatementSingle]
                      ) [StatementListMultiple]
                      StatementSingle(
                        SinglePrintStatement(
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              DesignatorEmptyFactor(
                                IdentArrayDesignator(
                                 niz
                                  SingleTermExprPositive(
                                    SingleFactorTerm(
                                      NumConstFactor(
                                       2
                                      ) [NumConstFactor]
                                    ) [SingleFactorTerm]
                                  ) [SingleTermExprPositive]
                                ) [IdentArrayDesignator]
                              ) [DesignatorEmptyFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                          NumConstNo(
                          ) [NumConstNo]
                        ) [SinglePrintStatement]
                      ) [StatementSingle]
                    ) [StatementListMultiple]
                    StatementSingle(
                      SinglePrintStatement(
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            DesignatorEmptyFactor(
                              IdentDesignator(
                               eol
                              ) [IdentDesignator]
                            ) [DesignatorEmptyFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                        NumConstNo(
                        ) [NumConstNo]
                      ) [SinglePrintStatement]
                    ) [StatementSingle]
                  ) [StatementListMultiple]
                  StatementSingle(
                    SingleDesignatorStatement(
                      DesignatorStmtAssign(
                        DesignatorStmtAssignCorrect(
                          IdentDesignator(
                           i
                          ) [IdentDesignator]
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              NumConstFactor(
                               0
                              ) [NumConstFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [DesignatorStmtAssignCorrect]
                      ) [DesignatorStmtAssign]
                    ) [SingleDesignatorStatement]
                  ) [StatementSingle]
                ) [StatementListMultiple]
                StatementSingle(
                  SingleDesignatorStatement(
                    DesignatorStmtAssign(
                      DesignatorStmtAssignCorrect(
                        IdentDesignator(
                         niz2
                        ) [IdentDesignator]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            NumConstFactor(
                             0
                            ) [NumConstFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [DesignatorStmtAssignCorrect]
                    ) [DesignatorStmtAssign]
                  ) [SingleDesignatorStatement]
                ) [StatementSingle]
              ) [StatementListMultiple]
              StatementSingle(
                DoWhileStatement(
                  DoEnter(
                  ) [DoEnter]
                  StatementListMultiple(
                    StatementListNo(
                    ) [StatementListNo]
                    StatementMultiple(
                      StatementsInBraces(
                        StatementListMultiple(
                          StatementListMultiple(
                            StatementListNo(
                            ) [StatementListNo]
                            StatementSingle(
                              SingleDesignatorStatement(
                                DesignatorStmtAssign(
                                  DesignatorStmtAssignCorrect(
                                    IdentDesignator(
                                     niz2
                                    ) [IdentDesignator]
                                    MultiTermExpr(
                                      SingleTermExprPositive(
                                        SingleFactorTerm(
                                          DesignatorEmptyFactor(
                                            IdentDesignator(
                                             niz2
                                            ) [IdentDesignator]
                                          ) [DesignatorEmptyFactor]
                                        ) [SingleFactorTerm]
                                      ) [SingleTermExprPositive]
                                      AddopPlus(
                                      ) [AddopPlus]
                                      MultiFactorTerm(
                                        SingleFactorTerm(
                                          DesignatorEmptyFactor(
                                            IdentArrayDesignator(
                                             niz
                                              SingleTermExprPositive(
                                                SingleFactorTerm(
                                                  DesignatorEmptyFactor(
                                                    IdentDesignator(
                                                     i
                                                    ) [IdentDesignator]
                                                  ) [DesignatorEmptyFactor]
                                                ) [SingleFactorTerm]
                                              ) [SingleTermExprPositive]
                                            ) [IdentArrayDesignator]
                                          ) [DesignatorEmptyFactor]
                                        ) [SingleFactorTerm]
                                        MulopMul(
                                        ) [MulopMul]
                                        DesignatorEmptyFactor(
                                          IdentArrayDesignator(
                                           niz
                                            SingleTermExprPositive(
                                              SingleFactorTerm(
                                                DesignatorEmptyFactor(
                                                  IdentDesignator(
                                                   i
                                                  ) [IdentDesignator]
                                                ) [DesignatorEmptyFactor]
                                              ) [SingleFactorTerm]
                                            ) [SingleTermExprPositive]
                                          ) [IdentArrayDesignator]
                                        ) [DesignatorEmptyFactor]
                                      ) [MultiFactorTerm]
                                    ) [MultiTermExpr]
                                  ) [DesignatorStmtAssignCorrect]
                                ) [DesignatorStmtAssign]
                              ) [SingleDesignatorStatement]
                            ) [StatementSingle]
                          ) [StatementListMultiple]
                          StatementSingle(
                            SingleDesignatorStatement(
                              DesignatorStmtPlusPlus(
                                IdentDesignator(
                                 i
                                ) [IdentDesignator]
                              ) [DesignatorStmtPlusPlus]
                            ) [SingleDesignatorStatement]
                          ) [StatementSingle]
                        ) [StatementListMultiple]
                      ) [StatementsInBraces]
                    ) [StatementMultiple]
                  ) [StatementListMultiple]
                  ConditionSingleTerm(
                    CondSingleFactTerm(
                      CondMultiExprFact(
                        CondSingleExprFact(
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              DesignatorEmptyFactor(
                                IdentDesignator(
                                 i
                                ) [IdentDesignator]
                              ) [DesignatorEmptyFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [CondSingleExprFact]
                        RelopLS(
                        ) [RelopLS]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            NumConstFactor(
                             3
                            ) [NumConstFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [CondMultiExprFact]
                    ) [CondSingleFactTerm]
                  ) [ConditionSingleTerm]
                ) [DoWhileStatement]
              ) [StatementSingle]
            ) [StatementListMultiple]
            StatementSingle(
              SinglePrintStatement(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    DesignatorEmptyFactor(
                      IdentDesignator(
                       niz2
                      ) [IdentDesignator]
                    ) [DesignatorEmptyFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
                NumConstNo(
                ) [NumConstNo]
              ) [SinglePrintStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
          StatementSingle(
            SinglePrintStatement(
              SingleTermExprPositive(
                SingleFactorTerm(
                  DesignatorEmptyFactor(
                    IdentDesignator(
                     eol
                    ) [IdentDesignator]
                  ) [DesignatorEmptyFactor]
                ) [SingleFactorTerm]
              ) [SingleTermExprPositive]
              NumConstNo(
              ) [NumConstNo]
            ) [SinglePrintStatement]
          ) [StatementSingle]
        ) [StatementListMultiple]
        StatementSingle(
          SingleDesignatorStatement(
            DesignatorStmtMethodCall(
              MethodCall(
                IdentDesignator(
                 printArgs
                ) [IdentDesignator]
                ActParsLeftParen(
                ) [ActParsLeftParen]
                ActParsYes(
                  ActParsMultiExpr(
                    ActParsMultiExpr(
                      ActParsMultiExpr(
                        ActParsMultiExpr(
                          ActParsMultiExpr(
                            ActParsSingleExpr(
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  NumConstFactor(
                                   5
                                  ) [NumConstFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [ActParsSingleExpr]
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                CharConstFactor(
                                 t
                                ) [CharConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [ActParsMultiExpr]
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              CharConstFactor(
                               e
                              ) [CharConstFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [ActParsMultiExpr]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            CharConstFactor(
                             s
                            ) [CharConstFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [ActParsMultiExpr]
                      SingleTermExprPositive(
                        SingleFactorTerm(
                          CharConstFactor(
                           t
                          ) [CharConstFactor]
                        ) [SingleFactorTerm]
                      ) [SingleTermExprPositive]
                    ) [ActParsMultiExpr]
                    SingleTermExprPositive(
                      SingleFactorTerm(
                        CharConstFactor(
                         B
                        ) [CharConstFactor]
                      ) [SingleFactorTerm]
                    ) [SingleTermExprPositive]
                  ) [ActParsMultiExpr]
                ) [ActParsYes]
                ActParsRightParen(
                ) [ActParsRightParen]
              ) [MethodCall]
            ) [DesignatorStmtMethodCall]
          ) [SingleDesignatorStatement]
        ) [StatementSingle]
      ) [StatementListMultiple]
    ) [MethodDeclaration]
  ) [MethodDeclListMultiple]
) [Program]
INFO  01:53:44,448 - ===================================
INFO  01:53:44,451 - Line 20: Using local variable name: z
INFO  01:53:44,451 - Line 20: Access to array element detected. Array name: args
INFO  01:53:44,451 - Line 20: Access to formal argument detected. Method name: sum, argument name: args
INFO  01:53:44,451 - Line 21: Using local variable name: d
INFO  01:53:44,451 - Line 21: Access to array element detected. Array name: args
INFO  01:53:44,451 - Line 21: Access to formal argument detected. Method name: sum, argument name: args
INFO  01:53:44,451 - Line 22: Using local variable name: z
INFO  01:53:44,451 - Line 22: Using local variable name: d
INFO  01:53:44,451 - Line 28: Using local variable name: i
INFO  01:53:44,451 - Line 30: Using local variable name: i
INFO  01:53:44,451 - Line 30: Access to array element detected. Array name: args
INFO  01:53:44,451 - Line 30: Access to formal argument detected. Method name: printArgs, argument name: args
INFO  01:53:44,452 - Line 31: Using local variable name: i
INFO  01:53:44,452 - Line 32: Using local variable name: i
INFO  01:53:44,452 - Line 32: Access to formal argument detected. Method name: printArgs, argument name: num
INFO  01:53:44,452 - Line 37: Access to formal argument detected. Method name: inkrement, argument name: inc
INFO  01:53:44,452 - Line 37: Using local variable name: pom
INFO  01:53:44,452 - Line 38: Access to formal argument detected. Method name: inkrement, argument name: inc
INFO  01:53:44,452 - Line 38: Using local variable name: pom
INFO  01:53:44,452 - Line 38: Access to formal argument detected. Method name: inkrement, argument name: a
INFO  01:53:44,452 - Line 40: Access to formal argument detected. Method name: inkrement, argument name: a
INFO  01:53:44,452 - Line 40: Using local variable name: pom
INFO  01:53:44,452 - Line 40: Method Call detected. Method name: sum
INFO  01:53:44,452 - Method sum has varArgs with 2 args
INFO  01:53:44,452 - Line 53: Using global variable name: ibool
INFO  01:53:44,452 - Line 54: Using global variable name: i
INFO  01:53:44,452 - Line 56: Using global variable name: i
INFO  01:53:44,452 - Line 56: Using global variable name: ibool
INFO  01:53:44,452 - Line 57: Using global variable name: i
INFO  01:53:44,452 - Line 58: Using global variable name: i
INFO  01:53:44,452 - Line 60: Using global variable name: ibool
INFO  01:53:44,452 - Line 61: Using global variable name: i
INFO  01:53:44,452 - Line 63: Using global variable name: a
INFO  01:53:44,452 - Line 64: Using global variable name: niz
INFO  01:53:44,452 - Line 65: Using global variable name: niz
INFO  01:53:44,452 - Line 65: Access to array element detected. Array name: niz
INFO  01:53:44,452 - Line 65: Using global variable name: a
INFO  01:53:44,452 - Line 66: Using global variable name: niz
INFO  01:53:44,452 - Line 66: Access to array element detected. Array name: niz
INFO  01:53:44,452 - Line 66: Using global variable name: a
INFO  01:53:44,452 - Line 67: Using global variable name: niz
INFO  01:53:44,452 - Line 67: Access to array element detected. Array name: niz
INFO  01:53:44,452 - Line 67: Using global variable name: niz
INFO  01:53:44,452 - Line 67: Access to array element detected. Array name: niz
INFO  01:53:44,452 - Line 67: Using global variable name: niz
INFO  01:53:44,452 - Line 67: Access to array element detected. Array name: niz
INFO  01:53:44,452 - Line 67: Method Call detected. Method name: sum
INFO  01:53:44,452 - Method sum has varArgs with 2 args
INFO  01:53:44,452 - Line 67: Using global variable name: a
INFO  01:53:44,452 - Line 68: Method Call detected. Method name: verify
INFO  01:53:44,452 - Line 68: Using global variable name: niz
INFO  01:53:44,452 - Line 68: Access to array element detected. Array name: niz
INFO  01:53:44,452 - Line 68: Method Call detected. Method name: ord
INFO  01:53:44,452 - Line 69: Method Call detected. Method name: ord
INFO  01:53:44,452 - Line 72: Using global variable name: i
INFO  01:53:44,452 - Line 74: Using global variable name: i
INFO  01:53:44,452 - Line 76: Using global variable name: i
INFO  01:53:44,452 - Line 79: Using global variable name: i
INFO  01:53:44,452 - Line 80: Using global variable name: i
INFO  01:53:44,452 - Line 80: Using global variable name: i
INFO  01:53:44,452 - Line 80: Method Call detected. Method name: inkrement
INFO  01:53:44,452 - Line 81: Using global variable name: i
INFO  01:53:44,452 - Line 83: Using global variable name: i
INFO  01:53:44,452 - Line 83: Method Call detected. Method name: verify
INFO  01:53:44,452 - Line 86: Using global variable name: niz
INFO  01:53:44,452 - Line 86: Access to array element detected. Array name: niz
INFO  01:53:44,452 - Line 87: Using global variable name: niz
INFO  01:53:44,452 - Line 87: Access to array element detected. Array name: niz
INFO  01:53:44,452 - Line 88: Using global variable name: niz
INFO  01:53:44,452 - Line 88: Access to array element detected. Array name: niz
INFO  01:53:44,452 - Line 91: Using global variable name: niz
INFO  01:53:44,452 - Line 91: Access to array element detected. Array name: niz
INFO  01:53:44,452 - Line 91: Using global variable name: niz
INFO  01:53:44,452 - Line 91: Access to array element detected. Array name: niz
INFO  01:53:44,452 - Line 91: Method Call detected. Method name: sum
INFO  01:53:44,452 - Method sum has varArgs with 2 args
INFO  01:53:44,452 - Line 91: Using global variable name: niz
INFO  01:53:44,452 - Line 91: Access to array element detected. Array name: niz
INFO  01:53:44,452 - Line 91: Method Call detected. Method name: sum
INFO  01:53:44,452 - Method sum has varArgs with 2 args
INFO  01:53:44,453 - Line 94: Using global variable name: niz
INFO  01:53:44,453 - Line 94: Access to array element detected. Array name: niz
INFO  01:53:44,453 - Line 94: Method Call detected. Method name: inkrement
INFO  01:53:44,453 - Line 96: Using global variable name: a
INFO  01:53:44,453 - Line 97: Using global variable name: i
INFO  01:53:44,453 - Line 99: Using global variable name: i
INFO  01:53:44,453 - Line 99: Using global variable name: niz
INFO  01:53:44,453 - Line 99: Access to array element detected. Array name: niz
INFO  01:53:44,453 - Line 99: Using global variable name: i
INFO  01:53:44,453 - Line 99: Using global variable name: niz
INFO  01:53:44,453 - Line 99: Access to array element detected. Array name: niz
INFO  01:53:44,453 - Line 99: Using global variable name: a
INFO  01:53:44,453 - Line 100: Using global variable name: i
INFO  01:53:44,453 - Line 101: Using global variable name: i
INFO  01:53:44,453 - Line 102: Using global variable name: niz
INFO  01:53:44,453 - Line 102: Access to array element detected. Array name: niz
INFO  01:53:44,453 - Line 103: Using global variable name: niz
INFO  01:53:44,453 - Line 103: Access to array element detected. Array name: niz
INFO  01:53:44,453 - Line 104: Using global variable name: niz
INFO  01:53:44,453 - Line 104: Access to array element detected. Array name: niz
INFO  01:53:44,453 - Line 107: Using global variable name: i
INFO  01:53:44,453 - Line 108: Using global variable name: niz2
INFO  01:53:44,453 - Line 110: Using global variable name: niz2
INFO  01:53:44,453 - Line 110: Using global variable name: niz2
INFO  01:53:44,453 - Line 110: Using global variable name: i
INFO  01:53:44,453 - Line 110: Using global variable name: niz
INFO  01:53:44,453 - Line 110: Access to array element detected. Array name: niz
INFO  01:53:44,453 - Line 110: Using global variable name: i
INFO  01:53:44,453 - Line 110: Using global variable name: niz
INFO  01:53:44,453 - Line 110: Access to array element detected. Array name: niz
INFO  01:53:44,453 - Line 111: Using global variable name: i
INFO  01:53:44,453 - Line 112: Using global variable name: i
INFO  01:53:44,453 - Line 113: Using global variable name: niz2
INFO  01:53:44,453 - Line 115: Method Call detected. Method name: printArgs
INFO  01:53:44,453 - Method printArgs has varArgs with 5 args
INFO  01:53:44,453 - Compile successful!
INFO  03:24:18,214 - Compiling source file: D:\source\repos\PP_Projekat\MicroJavaCompiler\test\program.mj
INFO  03:24:18,233 - #2 program
INFO  03:24:18,233 - #49 test302
INFO  03:24:18,233 - #7 const
INFO  03:24:18,233 - #49 int
INFO  03:24:18,233 - #49 jedan
INFO  03:24:18,233 - #27 =
INFO  03:24:18,233 - #52 1
INFO  03:24:18,233 - #38 ;
INFO  03:24:18,234 - #49 int
INFO  03:24:18,234 - #49 i
INFO  03:24:18,234 - #38 ;
INFO  03:24:18,235 - #49 bool
INFO  03:24:18,235 - #49 ibool
INFO  03:24:18,235 - #38 ;
INFO  03:24:18,235 - #49 int
INFO  03:24:18,235 - #49 niz2
INFO  03:24:18,235 - #38 ;
INFO  03:24:18,235 - #49 int
INFO  03:24:18,235 - #49 niz
INFO  03:24:18,235 - #42 [
INFO  03:24:18,235 - #43 ]
INFO  03:24:18,235 - #38 ;
INFO  03:24:18,235 - #49 int
INFO  03:24:18,235 - #49 a
INFO  03:24:18,235 - #38 ;
INFO  03:24:18,235 - #44 {
INFO  03:24:18,236 - #49 int
INFO  03:24:18,236 - #49 sum
INFO  03:24:18,236 - #40 (
INFO  03:24:18,236 - #49 int
INFO  03:24:18,236 - #47 .
INFO  03:24:18,236 - #47 .
INFO  03:24:18,236 - #47 .
INFO  03:24:18,236 - #49 args
INFO  03:24:18,236 - #41 )
INFO  03:24:18,236 - #49 int
INFO  03:24:18,237 - #49 z
INFO  03:24:18,237 - #39 ,
INFO  03:24:18,237 - #49 d
INFO  03:24:18,237 - #38 ;
INFO  03:24:18,237 - #44 {
INFO  03:24:18,237 - #49 z
INFO  03:24:18,237 - #27 =
INFO  03:24:18,238 - #49 args
INFO  03:24:18,238 - #42 [
INFO  03:24:18,238 - #52 0
INFO  03:24:18,238 - #43 ]
INFO  03:24:18,238 - #38 ;
INFO  03:24:18,238 - #49 d
INFO  03:24:18,238 - #27 =
INFO  03:24:18,238 - #49 args
INFO  03:24:18,238 - #42 [
INFO  03:24:18,238 - #52 1
INFO  03:24:18,238 - #43 ]
INFO  03:24:18,238 - #38 ;
INFO  03:24:18,238 - #15 return
INFO  03:24:18,238 - #49 z
INFO  03:24:18,238 - #22 +
INFO  03:24:18,238 - #49 d
INFO  03:24:18,239 - #38 ;
INFO  03:24:18,239 - #45 }
INFO  03:24:18,239 - #14 void
INFO  03:24:18,239 - #49 printArgs
INFO  03:24:18,239 - #40 (
INFO  03:24:18,239 - #49 int
INFO  03:24:18,239 - #49 num
INFO  03:24:18,239 - #39 ,
INFO  03:24:18,239 - #49 char
INFO  03:24:18,239 - #47 .
INFO  03:24:18,239 - #47 .
INFO  03:24:18,239 - #47 .
INFO  03:24:18,239 - #49 args
INFO  03:24:18,239 - #41 )
INFO  03:24:18,239 - #49 int
INFO  03:24:18,239 - #49 i
INFO  03:24:18,239 - #38 ;
INFO  03:24:18,240 - #44 {
INFO  03:24:18,240 - #49 i
INFO  03:24:18,240 - #27 =
INFO  03:24:18,240 - #52 0
INFO  03:24:18,240 - #38 ;
INFO  03:24:18,240 - #9 do
INFO  03:24:18,240 - #44 {
INFO  03:24:18,240 - #12 print
INFO  03:24:18,240 - #40 (
INFO  03:24:18,240 - #49 args
INFO  03:24:18,240 - #42 [
INFO  03:24:18,240 - #49 i
INFO  03:24:18,240 - #43 ]
INFO  03:24:18,240 - #41 )
INFO  03:24:18,240 - #38 ;
INFO  03:24:18,240 - #49 i
INFO  03:24:18,240 - #36 ++
INFO  03:24:18,240 - #38 ;
INFO  03:24:18,240 - #45 }
INFO  03:24:18,240 - #10 while
INFO  03:24:18,241 - #40 (
INFO  03:24:18,241 - #49 i
INFO  03:24:18,241 - #32 <
INFO  03:24:18,241 - #49 num
INFO  03:24:18,241 - #41 )
INFO  03:24:18,241 - #38 ;
INFO  03:24:18,241 - #45 }
INFO  03:24:18,241 - #49 int
INFO  03:24:18,241 - #49 inkrement
INFO  03:24:18,241 - #40 (
INFO  03:24:18,241 - #49 int
INFO  03:24:18,242 - #49 a
INFO  03:24:18,242 - #39 ,
INFO  03:24:18,242 - #49 int
INFO  03:24:18,242 - #49 inc
INFO  03:24:18,242 - #41 )
INFO  03:24:18,242 - #49 int
INFO  03:24:18,242 - #49 pom
INFO  03:24:18,242 - #38 ;
INFO  03:24:18,242 - #44 {
INFO  03:24:18,242 - #5 if
INFO  03:24:18,242 - #40 (
INFO  03:24:18,242 - #49 inc
INFO  03:24:18,242 - #28 ==
INFO  03:24:18,242 - #49 jedan
INFO  03:24:18,242 - #41 )
INFO  03:24:18,242 - #49 pom
INFO  03:24:18,242 - #27 =
INFO  03:24:18,242 - #52 1
INFO  03:24:18,242 - #38 ;
INFO  03:24:18,242 - #6 else
INFO  03:24:18,242 - #5 if
INFO  03:24:18,242 - #40 (
INFO  03:24:18,243 - #49 inc
INFO  03:24:18,243 - #28 ==
INFO  03:24:18,243 - #52 2
INFO  03:24:18,243 - #41 )
INFO  03:24:18,243 - #49 pom
INFO  03:24:18,243 - #27 =
INFO  03:24:18,243 - #49 a
INFO  03:24:18,243 - #38 ;
INFO  03:24:18,243 - #15 return
INFO  03:24:18,243 - #49 sum
INFO  03:24:18,243 - #40 (
INFO  03:24:18,243 - #49 a
INFO  03:24:18,243 - #39 ,
INFO  03:24:18,243 - #49 pom
INFO  03:24:18,243 - #41 )
INFO  03:24:18,243 - #38 ;
INFO  03:24:18,244 - #45 }
INFO  03:24:18,244 - #49 bool
INFO  03:24:18,244 - #49 verify
INFO  03:24:18,244 - #40 (
INFO  03:24:18,244 - #41 )
INFO  03:24:18,244 - #44 {
INFO  03:24:18,244 - #12 print
INFO  03:24:18,244 - #40 (
INFO  03:24:18,244 - #51 v
INFO  03:24:18,244 - #41 )
INFO  03:24:18,244 - #38 ;
INFO  03:24:18,244 - #15 return
INFO  03:24:18,244 - #50 false
INFO  03:24:18,244 - #38 ;
INFO  03:24:18,244 - #45 }
INFO  03:24:18,244 - #14 void
INFO  03:24:18,244 - #49 main
INFO  03:24:18,244 - #40 (
INFO  03:24:18,244 - #41 )
INFO  03:24:18,244 - #44 {
INFO  03:24:18,244 - #5 if
INFO  03:24:18,244 - #40 (
INFO  03:24:18,244 - #52 1
INFO  03:24:18,244 - #29 !=
INFO  03:24:18,244 - #52 1
INFO  03:24:18,244 - #41 )
INFO  03:24:18,244 - #12 print
INFO  03:24:18,244 - #40 (
INFO  03:24:18,244 - #23 -
INFO  03:24:18,245 - #52 6
INFO  03:24:18,245 - #41 )
INFO  03:24:18,245 - #38 ;
INFO  03:24:18,245 - #6 else
INFO  03:24:18,245 - #12 print
INFO  03:24:18,245 - #40 (
INFO  03:24:18,245 - #52 0
INFO  03:24:18,245 - #41 )
INFO  03:24:18,245 - #38 ;
INFO  03:24:18,245 - #49 ibool
INFO  03:24:18,245 - #27 =
INFO  03:24:18,245 - #50 false
INFO  03:24:18,245 - #38 ;
INFO  03:24:18,245 - #49 i
INFO  03:24:18,245 - #27 =
INFO  03:24:18,245 - #52 0
INFO  03:24:18,245 - #38 ;
INFO  03:24:18,245 - #9 do
INFO  03:24:18,245 - #44 {
INFO  03:24:18,245 - #5 if
INFO  03:24:18,245 - #40 (
INFO  03:24:18,245 - #49 i
INFO  03:24:18,245 - #28 ==
INFO  03:24:18,245 - #52 2
INFO  03:24:18,245 - #41 )
INFO  03:24:18,245 - #49 ibool
INFO  03:24:18,245 - #27 =
INFO  03:24:18,245 - #50 true
INFO  03:24:18,245 - #38 ;
INFO  03:24:18,245 - #49 i
INFO  03:24:18,245 - #36 ++
INFO  03:24:18,245 - #38 ;
INFO  03:24:18,245 - #45 }
INFO  03:24:18,245 - #10 while
INFO  03:24:18,245 - #40 (
INFO  03:24:18,245 - #49 i
INFO  03:24:18,245 - #32 <
INFO  03:24:18,245 - #52 5
INFO  03:24:18,245 - #41 )
INFO  03:24:18,245 - #38 ;
INFO  03:24:18,245 - #5 if
INFO  03:24:18,246 - #40 (
INFO  03:24:18,246 - #49 ibool
INFO  03:24:18,246 - #41 )
INFO  03:24:18,246 - #5 if
INFO  03:24:18,246 - #40 (
INFO  03:24:18,246 - #49 i
INFO  03:24:18,246 - #28 ==
INFO  03:24:18,246 - #52 5
INFO  03:24:18,246 - #41 )
INFO  03:24:18,246 - #12 print
INFO  03:24:18,246 - #40 (
INFO  03:24:18,246 - #52 1
INFO  03:24:18,246 - #41 )
INFO  03:24:18,246 - #38 ;
INFO  03:24:18,246 - #6 else
INFO  03:24:18,246 - #12 print
INFO  03:24:18,246 - #40 (
INFO  03:24:18,246 - #23 -
INFO  03:24:18,246 - #52 1
INFO  03:24:18,246 - #41 )
INFO  03:24:18,246 - #38 ;
INFO  03:24:18,246 - #49 a
INFO  03:24:18,246 - #27 =
INFO  03:24:18,246 - #52 2
INFO  03:24:18,246 - #38 ;
INFO  03:24:18,246 - #49 niz
INFO  03:24:18,246 - #27 =
INFO  03:24:18,246 - #11 new
INFO  03:24:18,246 - #49 int
INFO  03:24:18,246 - #42 [
INFO  03:24:18,246 - #52 3
INFO  03:24:18,246 - #43 ]
INFO  03:24:18,246 - #38 ;
INFO  03:24:18,246 - #49 niz
INFO  03:24:18,246 - #42 [
INFO  03:24:18,246 - #52 0
INFO  03:24:18,246 - #43 ]
INFO  03:24:18,246 - #27 =
INFO  03:24:18,246 - #52 1
INFO  03:24:18,246 - #24 *
INFO  03:24:18,246 - #49 a
INFO  03:24:18,247 - #38 ;
INFO  03:24:18,247 - #49 niz
INFO  03:24:18,247 - #42 [
INFO  03:24:18,247 - #52 1
INFO  03:24:18,247 - #43 ]
INFO  03:24:18,247 - #27 =
INFO  03:24:18,247 - #52 2
INFO  03:24:18,247 - #24 *
INFO  03:24:18,247 - #49 a
INFO  03:24:18,247 - #38 ;
INFO  03:24:18,247 - #49 niz
INFO  03:24:18,247 - #42 [
INFO  03:24:18,247 - #52 2
INFO  03:24:18,247 - #43 ]
INFO  03:24:18,247 - #27 =
INFO  03:24:18,247 - #49 sum
INFO  03:24:18,247 - #40 (
INFO  03:24:18,247 - #49 niz
INFO  03:24:18,247 - #42 [
INFO  03:24:18,247 - #52 1
INFO  03:24:18,247 - #43 ]
INFO  03:24:18,247 - #39 ,
INFO  03:24:18,247 - #49 niz
INFO  03:24:18,247 - #42 [
INFO  03:24:18,247 - #52 0
INFO  03:24:18,247 - #43 ]
INFO  03:24:18,247 - #41 )
INFO  03:24:18,247 - #24 *
INFO  03:24:18,247 - #49 a
INFO  03:24:18,247 - #22 +
INFO  03:24:18,247 - #52 1
INFO  03:24:18,247 - #38 ;
INFO  03:24:18,247 - #5 if
INFO  03:24:18,247 - #40 (
INFO  03:24:18,247 - #49 verify
INFO  03:24:18,247 - #40 (
INFO  03:24:18,247 - #41 )
INFO  03:24:18,248 - #35 ||
INFO  03:24:18,248 - #49 niz
INFO  03:24:18,248 - #42 [
INFO  03:24:18,248 - #52 2
INFO  03:24:18,248 - #43 ]
INFO  03:24:18,248 - #28 ==
INFO  03:24:18,248 - #52 4
INFO  03:24:18,248 - #41 )
INFO  03:24:18,248 - #12 print
INFO  03:24:18,248 - #40 (
INFO  03:24:18,248 - #49 ord
INFO  03:24:18,248 - #40 (
INFO  03:24:18,248 - #51 A
INFO  03:24:18,248 - #41 )
INFO  03:24:18,248 - #41 )
INFO  03:24:18,248 - #38 ;
INFO  03:24:18,248 - #6 else
INFO  03:24:18,248 - #12 print
INFO  03:24:18,248 - #40 (
INFO  03:24:18,248 - #49 ord
INFO  03:24:18,248 - #40 (
INFO  03:24:18,248 - #51 a
INFO  03:24:18,248 - #41 )
INFO  03:24:18,248 - #41 )
INFO  03:24:18,248 - #38 ;
INFO  03:24:18,248 - #12 print
INFO  03:24:18,248 - #40 (
INFO  03:24:18,248 - #49 eol
INFO  03:24:18,248 - #41 )
INFO  03:24:18,248 - #38 ;
INFO  03:24:18,248 - #49 i
INFO  03:24:18,248 - #27 =
INFO  03:24:18,248 - #52 0
INFO  03:24:18,248 - #38 ;
INFO  03:24:18,248 - #9 do
INFO  03:24:18,248 - #44 {
INFO  03:24:18,248 - #5 if
INFO  03:24:18,248 - #40 (
INFO  03:24:18,248 - #49 i
INFO  03:24:18,248 - #28 ==
INFO  03:24:18,248 - #52 3
INFO  03:24:18,248 - #41 )
INFO  03:24:18,248 - #44 {
INFO  03:24:18,248 - #49 i
INFO  03:24:18,248 - #36 ++
INFO  03:24:18,248 - #38 ;
INFO  03:24:18,248 - #4 continue
INFO  03:24:18,248 - #38 ;
INFO  03:24:18,248 - #45 }
INFO  03:24:18,248 - #5 if
INFO  03:24:18,248 - #40 (
INFO  03:24:18,248 - #49 i
INFO  03:24:18,248 - #28 ==
INFO  03:24:18,248 - #52 4
INFO  03:24:18,248 - #41 )
INFO  03:24:18,248 - #3 break
INFO  03:24:18,248 - #38 ;
INFO  03:24:18,248 - #49 i
INFO  03:24:18,248 - #27 =
INFO  03:24:18,248 - #49 inkrement
INFO  03:24:18,248 - #40 (
INFO  03:24:18,249 - #49 i
INFO  03:24:18,249 - #39 ,
INFO  03:24:18,249 - #52 1
INFO  03:24:18,249 - #41 )
INFO  03:24:18,249 - #38 ;
INFO  03:24:18,249 - #45 }
INFO  03:24:18,249 - #10 while
INFO  03:24:18,249 - #40 (
INFO  03:24:18,249 - #49 i
INFO  03:24:18,249 - #32 <
INFO  03:24:18,249 - #52 10
INFO  03:24:18,249 - #41 )
INFO  03:24:18,249 - #38 ;
INFO  03:24:18,249 - #5 if
INFO  03:24:18,249 - #40 (
INFO  03:24:18,249 - #49 i
INFO  03:24:18,249 - #28 ==
INFO  03:24:18,249 - #52 3
INFO  03:24:18,249 - #34 &&
INFO  03:24:18,249 - #49 verify
INFO  03:24:18,249 - #40 (
INFO  03:24:18,249 - #41 )
INFO  03:24:18,249 - #41 )
INFO  03:24:18,249 - #12 print
INFO  03:24:18,249 - #40 (
INFO  03:24:18,249 - #23 -
INFO  03:24:18,249 - #52 4
INFO  03:24:18,249 - #41 )
INFO  03:24:18,249 - #38 ;
INFO  03:24:18,249 - #6 else
INFO  03:24:18,249 - #12 print
INFO  03:24:18,249 - #40 (
INFO  03:24:18,249 - #52 4
INFO  03:24:18,249 - #41 )
INFO  03:24:18,249 - #38 ;
INFO  03:24:18,249 - #13 read
INFO  03:24:18,249 - #40 (
INFO  03:24:18,249 - #49 niz
INFO  03:24:18,249 - #42 [
INFO  03:24:18,249 - #52 0
INFO  03:24:18,249 - #43 ]
INFO  03:24:18,249 - #41 )
INFO  03:24:18,249 - #38 ;
INFO  03:24:18,249 - #13 read
INFO  03:24:18,249 - #40 (
INFO  03:24:18,249 - #49 niz
INFO  03:24:18,249 - #42 [
INFO  03:24:18,249 - #52 1
INFO  03:24:18,249 - #43 ]
INFO  03:24:18,249 - #41 )
INFO  03:24:18,249 - #38 ;
INFO  03:24:18,249 - #13 read
INFO  03:24:18,249 - #40 (
INFO  03:24:18,249 - #49 niz
INFO  03:24:18,249 - #42 [
INFO  03:24:18,249 - #52 2
INFO  03:24:18,249 - #43 ]
INFO  03:24:18,249 - #41 )
INFO  03:24:18,249 - #38 ;
INFO  03:24:18,249 - #12 print
INFO  03:24:18,249 - #40 (
INFO  03:24:18,249 - #49 eol
INFO  03:24:18,249 - #41 )
INFO  03:24:18,249 - #38 ;
INFO  03:24:18,249 - #12 print
INFO  03:24:18,249 - #40 (
INFO  03:24:18,249 - #49 sum
INFO  03:24:18,249 - #40 (
INFO  03:24:18,249 - #49 sum
INFO  03:24:18,249 - #40 (
INFO  03:24:18,249 - #49 niz
INFO  03:24:18,249 - #42 [
INFO  03:24:18,249 - #52 0
INFO  03:24:18,249 - #43 ]
INFO  03:24:18,249 - #39 ,
INFO  03:24:18,249 - #49 niz
INFO  03:24:18,249 - #42 [
INFO  03:24:18,249 - #52 1
INFO  03:24:18,249 - #43 ]
INFO  03:24:18,249 - #41 )
INFO  03:24:18,249 - #39 ,
INFO  03:24:18,249 - #49 niz
INFO  03:24:18,249 - #42 [
INFO  03:24:18,249 - #52 2
INFO  03:24:18,249 - #43 ]
INFO  03:24:18,249 - #41 )
INFO  03:24:18,249 - #41 )
INFO  03:24:18,249 - #38 ;
INFO  03:24:18,249 - #12 print
INFO  03:24:18,249 - #40 (
INFO  03:24:18,249 - #49 eol
INFO  03:24:18,249 - #41 )
INFO  03:24:18,249 - #38 ;
INFO  03:24:18,249 - #12 print
INFO  03:24:18,249 - #40 (
INFO  03:24:18,249 - #49 inkrement
INFO  03:24:18,249 - #40 (
INFO  03:24:18,249 - #49 niz
INFO  03:24:18,249 - #42 [
INFO  03:24:18,249 - #52 2
INFO  03:24:18,249 - #43 ]
INFO  03:24:18,249 - #39 ,
INFO  03:24:18,249 - #52 2
INFO  03:24:18,249 - #41 )
INFO  03:24:18,249 - #41 )
INFO  03:24:18,249 - #38 ;
INFO  03:24:18,249 - #49 a
INFO  03:24:18,249 - #27 =
INFO  03:24:18,249 - #52 3
INFO  03:24:18,249 - #38 ;
INFO  03:24:18,249 - #49 i
INFO  03:24:18,249 - #27 =
INFO  03:24:18,249 - #52 0
INFO  03:24:18,249 - #38 ;
INFO  03:24:18,249 - #9 do
INFO  03:24:18,249 - #44 {
INFO  03:24:18,249 - #49 niz
INFO  03:24:18,249 - #42 [
INFO  03:24:18,249 - #49 i
INFO  03:24:18,249 - #43 ]
INFO  03:24:18,249 - #27 =
INFO  03:24:18,249 - #49 niz
INFO  03:24:18,249 - #42 [
INFO  03:24:18,249 - #49 i
INFO  03:24:18,249 - #43 ]
INFO  03:24:18,249 - #24 *
INFO  03:24:18,249 - #52 2
INFO  03:24:18,249 - #24 *
INFO  03:24:18,249 - #49 a
INFO  03:24:18,249 - #38 ;
INFO  03:24:18,249 - #49 i
INFO  03:24:18,249 - #36 ++
INFO  03:24:18,249 - #38 ;
INFO  03:24:18,249 - #45 }
INFO  03:24:18,249 - #10 while
INFO  03:24:18,249 - #40 (
INFO  03:24:18,249 - #49 i
INFO  03:24:18,249 - #32 <
INFO  03:24:18,249 - #52 3
INFO  03:24:18,249 - #41 )
INFO  03:24:18,249 - #38 ;
INFO  03:24:18,249 - #12 print
INFO  03:24:18,249 - #40 (
INFO  03:24:18,249 - #49 niz
INFO  03:24:18,249 - #42 [
INFO  03:24:18,249 - #52 0
INFO  03:24:18,249 - #43 ]
INFO  03:24:18,249 - #41 )
INFO  03:24:18,249 - #38 ;
INFO  03:24:18,249 - #12 print
INFO  03:24:18,249 - #40 (
INFO  03:24:18,249 - #49 niz
INFO  03:24:18,249 - #42 [
INFO  03:24:18,249 - #52 1
INFO  03:24:18,249 - #43 ]
INFO  03:24:18,249 - #41 )
INFO  03:24:18,249 - #38 ;
INFO  03:24:18,249 - #12 print
INFO  03:24:18,249 - #40 (
INFO  03:24:18,249 - #49 niz
INFO  03:24:18,249 - #42 [
INFO  03:24:18,249 - #52 2
INFO  03:24:18,249 - #43 ]
INFO  03:24:18,249 - #41 )
INFO  03:24:18,249 - #38 ;
INFO  03:24:18,249 - #12 print
INFO  03:24:18,249 - #40 (
INFO  03:24:18,249 - #49 eol
INFO  03:24:18,249 - #41 )
INFO  03:24:18,249 - #38 ;
INFO  03:24:18,249 - #49 i
INFO  03:24:18,249 - #27 =
INFO  03:24:18,249 - #52 0
INFO  03:24:18,249 - #38 ;
INFO  03:24:18,249 - #49 niz2
INFO  03:24:18,249 - #27 =
INFO  03:24:18,249 - #52 0
INFO  03:24:18,249 - #38 ;
INFO  03:24:18,249 - #9 do
INFO  03:24:18,249 - #44 {
INFO  03:24:18,249 - #49 niz2
INFO  03:24:18,249 - #27 =
INFO  03:24:18,249 - #49 niz2
INFO  03:24:18,249 - #22 +
INFO  03:24:18,249 - #49 niz
INFO  03:24:18,249 - #42 [
INFO  03:24:18,249 - #49 i
INFO  03:24:18,249 - #43 ]
INFO  03:24:18,249 - #24 *
INFO  03:24:18,249 - #49 niz
INFO  03:24:18,249 - #42 [
INFO  03:24:18,249 - #49 i
INFO  03:24:18,249 - #43 ]
INFO  03:24:18,249 - #38 ;
INFO  03:24:18,249 - #49 i
INFO  03:24:18,249 - #36 ++
INFO  03:24:18,249 - #38 ;
INFO  03:24:18,249 - #45 }
INFO  03:24:18,249 - #10 while
INFO  03:24:18,249 - #40 (
INFO  03:24:18,249 - #49 i
INFO  03:24:18,249 - #32 <
INFO  03:24:18,249 - #52 3
INFO  03:24:18,249 - #41 )
INFO  03:24:18,249 - #38 ;
INFO  03:24:18,249 - #12 print
INFO  03:24:18,249 - #40 (
INFO  03:24:18,249 - #49 niz2
INFO  03:24:18,249 - #41 )
INFO  03:24:18,249 - #38 ;
INFO  03:24:18,249 - #12 print
INFO  03:24:18,249 - #40 (
INFO  03:24:18,249 - #49 eol
INFO  03:24:18,249 - #41 )
INFO  03:24:18,249 - #38 ;
INFO  03:24:18,249 - #49 printArgs
INFO  03:24:18,249 - #40 (
INFO  03:24:18,249 - #52 5
INFO  03:24:18,249 - #39 ,
INFO  03:24:18,249 - #51 t
INFO  03:24:18,249 - #39 ,
INFO  03:24:18,249 - #51 e
INFO  03:24:18,249 - #39 ,
INFO  03:24:18,249 - #51 s
INFO  03:24:18,249 - #39 ,
INFO  03:24:18,249 - #51 t
INFO  03:24:18,249 - #39 ,
INFO  03:24:18,249 - #51 B
INFO  03:24:18,249 - #41 )
INFO  03:24:18,249 - #38 ;
INFO  03:24:18,249 - #45 }
INFO  03:24:18,250 - #45 }
INFO  03:24:18,255 - Program(
  ProgramName(
   test302
  ) [ProgramName]
  AllDeclListMultiple(
    AllDeclListMultiple(
      AllDeclListMultiple(
        AllDeclListMultiple(
          AllDeclListMultiple(
            AllDeclListMultiple(
              NoDecl(
              ) [NoDecl]
              ConstDeclaration(
                ConstDeclarationExpr(
                  Type(
                   int
                  ) [Type]
                  ConstAssignSingle(
                    ConstAssign(
                     jedan
                      NumberConst(
                       1
                      ) [NumberConst]
                    ) [ConstAssign]
                  ) [ConstAssignSingle]
                ) [ConstDeclarationExpr]
              ) [ConstDeclaration]
            ) [AllDeclListMultiple]
            GlobalVarDeclaration(
              GlobalVarDeclarationExpr(
                Type(
                 int
                ) [Type]
                GlobalVarDeclListSingle(
                  GlobalVarDeclarationSingle(
                   i
                    NoArray(
                    ) [NoArray]
                  ) [GlobalVarDeclarationSingle]
                ) [GlobalVarDeclListSingle]
              ) [GlobalVarDeclarationExpr]
            ) [GlobalVarDeclaration]
          ) [AllDeclListMultiple]
          GlobalVarDeclaration(
            GlobalVarDeclarationExpr(
              Type(
               bool
              ) [Type]
              GlobalVarDeclListSingle(
                GlobalVarDeclarationSingle(
                 ibool
                  NoArray(
                  ) [NoArray]
                ) [GlobalVarDeclarationSingle]
              ) [GlobalVarDeclListSingle]
            ) [GlobalVarDeclarationExpr]
          ) [GlobalVarDeclaration]
        ) [AllDeclListMultiple]
        GlobalVarDeclaration(
          GlobalVarDeclarationExpr(
            Type(
             int
            ) [Type]
            GlobalVarDeclListSingle(
              GlobalVarDeclarationSingle(
               niz2
                NoArray(
                ) [NoArray]
              ) [GlobalVarDeclarationSingle]
            ) [GlobalVarDeclListSingle]
          ) [GlobalVarDeclarationExpr]
        ) [GlobalVarDeclaration]
      ) [AllDeclListMultiple]
      GlobalVarDeclaration(
        GlobalVarDeclarationExpr(
          Type(
           int
          ) [Type]
          GlobalVarDeclListSingle(
            GlobalVarDeclarationSingle(
             niz
              ArrayBrackets(
              ) [ArrayBrackets]
            ) [GlobalVarDeclarationSingle]
          ) [GlobalVarDeclListSingle]
        ) [GlobalVarDeclarationExpr]
      ) [GlobalVarDeclaration]
    ) [AllDeclListMultiple]
    GlobalVarDeclaration(
      GlobalVarDeclarationExpr(
        Type(
         int
        ) [Type]
        GlobalVarDeclListSingle(
          GlobalVarDeclarationSingle(
           a
            NoArray(
            ) [NoArray]
          ) [GlobalVarDeclarationSingle]
        ) [GlobalVarDeclListSingle]
      ) [GlobalVarDeclarationExpr]
    ) [GlobalVarDeclaration]
  ) [AllDeclListMultiple]
  MethodDeclListMultiple(
    MethodDeclListMultiple(
      MethodDeclListMultiple(
        MethodDeclListMultiple(
          MethodDeclListMultiple(
            MethodDeclListNo(
            ) [MethodDeclListNo]
            MethodDeclaration(
              MethodSignatureVarArgsOnly(
                MethodTypeType(
                  Type(
                   int
                  ) [Type]
                ) [MethodTypeType]
                MethodName(
                 sum
                ) [MethodName]
                Type(
                 int
                ) [Type]
                VarArgsDeclaration(
                 args
                ) [VarArgsDeclaration]
                FormParsEnd(
                ) [FormParsEnd]
              ) [MethodSignatureVarArgsOnly]
              VarDeclOptionTrue(
                NoVarDeclOption(
                ) [NoVarDeclOption]
                VarDeclarationExpr(
                  Type(
                   int
                  ) [Type]
                  VarDeclListMultiple(
                    VarDeclListSingle(
                      VarDeclSingle(
                       z
                        NoArray(
                        ) [NoArray]
                      ) [VarDeclSingle]
                    ) [VarDeclListSingle]
                    VarDeclSingle(
                     d
                      NoArray(
                      ) [NoArray]
                    ) [VarDeclSingle]
                  ) [VarDeclListMultiple]
                ) [VarDeclarationExpr]
              ) [VarDeclOptionTrue]
              StatementListMultiple(
                StatementListMultiple(
                  StatementListMultiple(
                    StatementListNo(
                    ) [StatementListNo]
                    StatementSingle(
                      SingleDesignatorStatement(
                        DesignatorStmtAssign(
                          DesignatorStmtAssignCorrect(
                            IdentDesignator(
                             z
                            ) [IdentDesignator]
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                DesignatorEmptyFactor(
                                  IdentArrayDesignator(
                                   args
                                    SingleTermExprPositive(
                                      SingleFactorTerm(
                                        NumConstFactor(
                                         0
                                        ) [NumConstFactor]
                                      ) [SingleFactorTerm]
                                    ) [SingleTermExprPositive]
                                  ) [IdentArrayDesignator]
                                ) [DesignatorEmptyFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [DesignatorStmtAssignCorrect]
                        ) [DesignatorStmtAssign]
                      ) [SingleDesignatorStatement]
                    ) [StatementSingle]
                  ) [StatementListMultiple]
                  StatementSingle(
                    SingleDesignatorStatement(
                      DesignatorStmtAssign(
                        DesignatorStmtAssignCorrect(
                          IdentDesignator(
                           d
                          ) [IdentDesignator]
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              DesignatorEmptyFactor(
                                IdentArrayDesignator(
                                 args
                                  SingleTermExprPositive(
                                    SingleFactorTerm(
                                      NumConstFactor(
                                       1
                                      ) [NumConstFactor]
                                    ) [SingleFactorTerm]
                                  ) [SingleTermExprPositive]
                                ) [IdentArrayDesignator]
                              ) [DesignatorEmptyFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [DesignatorStmtAssignCorrect]
                      ) [DesignatorStmtAssign]
                    ) [SingleDesignatorStatement]
                  ) [StatementSingle]
                ) [StatementListMultiple]
                StatementSingle(
                  SingleReturnExprStatement(
                    MultiTermExpr(
                      SingleTermExprPositive(
                        SingleFactorTerm(
                          DesignatorEmptyFactor(
                            IdentDesignator(
                             z
                            ) [IdentDesignator]
                          ) [DesignatorEmptyFactor]
                        ) [SingleFactorTerm]
                      ) [SingleTermExprPositive]
                      AddopPlus(
                      ) [AddopPlus]
                      SingleFactorTerm(
                        DesignatorEmptyFactor(
                          IdentDesignator(
                           d
                          ) [IdentDesignator]
                        ) [DesignatorEmptyFactor]
                      ) [SingleFactorTerm]
                    ) [MultiTermExpr]
                  ) [SingleReturnExprStatement]
                ) [StatementSingle]
              ) [StatementListMultiple]
            ) [MethodDeclaration]
          ) [MethodDeclListMultiple]
          MethodDeclaration(
            MethodSignatureVarArgs(
              MethodTypeVoid(
              ) [MethodTypeVoid]
              MethodName(
               printArgs
              ) [MethodName]
              FormParsSingle(
                FormParSingle(
                  Type(
                   int
                  ) [Type]
                 num
                  NoArray(
                  ) [NoArray]
                ) [FormParSingle]
              ) [FormParsSingle]
              Type(
               char
              ) [Type]
              VarArgsDeclaration(
               args
              ) [VarArgsDeclaration]
              FormParsEnd(
              ) [FormParsEnd]
            ) [MethodSignatureVarArgs]
            VarDeclOptionTrue(
              NoVarDeclOption(
              ) [NoVarDeclOption]
              VarDeclarationExpr(
                Type(
                 int
                ) [Type]
                VarDeclListSingle(
                  VarDeclSingle(
                   i
                    NoArray(
                    ) [NoArray]
                  ) [VarDeclSingle]
                ) [VarDeclListSingle]
              ) [VarDeclarationExpr]
            ) [VarDeclOptionTrue]
            StatementListMultiple(
              StatementListMultiple(
                StatementListNo(
                ) [StatementListNo]
                StatementSingle(
                  SingleDesignatorStatement(
                    DesignatorStmtAssign(
                      DesignatorStmtAssignCorrect(
                        IdentDesignator(
                         i
                        ) [IdentDesignator]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            NumConstFactor(
                             0
                            ) [NumConstFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [DesignatorStmtAssignCorrect]
                    ) [DesignatorStmtAssign]
                  ) [SingleDesignatorStatement]
                ) [StatementSingle]
              ) [StatementListMultiple]
              StatementSingle(
                DoWhileStatement(
                  DoEnter(
                  ) [DoEnter]
                  StatementListMultiple(
                    StatementListNo(
                    ) [StatementListNo]
                    StatementMultiple(
                      StatementsInBraces(
                        StatementListMultiple(
                          StatementListMultiple(
                            StatementListNo(
                            ) [StatementListNo]
                            StatementSingle(
                              SinglePrintStatement(
                                SingleTermExprPositive(
                                  SingleFactorTerm(
                                    DesignatorEmptyFactor(
                                      IdentArrayDesignator(
                                       args
                                        SingleTermExprPositive(
                                          SingleFactorTerm(
                                            DesignatorEmptyFactor(
                                              IdentDesignator(
                                               i
                                              ) [IdentDesignator]
                                            ) [DesignatorEmptyFactor]
                                          ) [SingleFactorTerm]
                                        ) [SingleTermExprPositive]
                                      ) [IdentArrayDesignator]
                                    ) [DesignatorEmptyFactor]
                                  ) [SingleFactorTerm]
                                ) [SingleTermExprPositive]
                                NumConstNo(
                                ) [NumConstNo]
                              ) [SinglePrintStatement]
                            ) [StatementSingle]
                          ) [StatementListMultiple]
                          StatementSingle(
                            SingleDesignatorStatement(
                              DesignatorStmtPlusPlus(
                                IdentDesignator(
                                 i
                                ) [IdentDesignator]
                              ) [DesignatorStmtPlusPlus]
                            ) [SingleDesignatorStatement]
                          ) [StatementSingle]
                        ) [StatementListMultiple]
                      ) [StatementsInBraces]
                    ) [StatementMultiple]
                  ) [StatementListMultiple]
                  ConditionSingleTerm(
                    CondSingleFactTerm(
                      CondMultiExprFact(
                        CondSingleExprFact(
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              DesignatorEmptyFactor(
                                IdentDesignator(
                                 i
                                ) [IdentDesignator]
                              ) [DesignatorEmptyFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [CondSingleExprFact]
                        RelopLS(
                        ) [RelopLS]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            DesignatorEmptyFactor(
                              IdentDesignator(
                               num
                              ) [IdentDesignator]
                            ) [DesignatorEmptyFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [CondMultiExprFact]
                    ) [CondSingleFactTerm]
                  ) [ConditionSingleTerm]
                ) [DoWhileStatement]
              ) [StatementSingle]
            ) [StatementListMultiple]
          ) [MethodDeclaration]
        ) [MethodDeclListMultiple]
        MethodDeclaration(
          MethodSignatureParams(
            MethodTypeType(
              Type(
               int
              ) [Type]
            ) [MethodTypeType]
            MethodName(
             inkrement
            ) [MethodName]
            FormParsMultiple(
              FormParsSingle(
                FormParSingle(
                  Type(
                   int
                  ) [Type]
                 a
                  NoArray(
                  ) [NoArray]
                ) [FormParSingle]
              ) [FormParsSingle]
              FormParSingle(
                Type(
                 int
                ) [Type]
               inc
                NoArray(
                ) [NoArray]
              ) [FormParSingle]
            ) [FormParsMultiple]
            FormParsEnd(
            ) [FormParsEnd]
          ) [MethodSignatureParams]
          VarDeclOptionTrue(
            NoVarDeclOption(
            ) [NoVarDeclOption]
            VarDeclarationExpr(
              Type(
               int
              ) [Type]
              VarDeclListSingle(
                VarDeclSingle(
                 pom
                  NoArray(
                  ) [NoArray]
                ) [VarDeclSingle]
              ) [VarDeclListSingle]
            ) [VarDeclarationExpr]
          ) [VarDeclOptionTrue]
          StatementListMultiple(
            StatementListMultiple(
              StatementListNo(
              ) [StatementListNo]
              StatementSingle(
                IfElseStatement(
                  IfConditionSingleTerm(
                    CondSingleFactTerm(
                      CondMultiExprFact(
                        CondSingleExprFact(
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              DesignatorEmptyFactor(
                                IdentDesignator(
                                 inc
                                ) [IdentDesignator]
                              ) [DesignatorEmptyFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [CondSingleExprFact]
                        RelopEQUAL(
                        ) [RelopEQUAL]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            DesignatorEmptyFactor(
                              IdentDesignator(
                               jedan
                              ) [IdentDesignator]
                            ) [DesignatorEmptyFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [CondMultiExprFact]
                    ) [CondSingleFactTerm]
                  ) [IfConditionSingleTerm]
                  StatementSingle(
                    SingleDesignatorStatement(
                      DesignatorStmtAssign(
                        DesignatorStmtAssignCorrect(
                          IdentDesignator(
                           pom
                          ) [IdentDesignator]
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              NumConstFactor(
                               1
                              ) [NumConstFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [DesignatorStmtAssignCorrect]
                      ) [DesignatorStmtAssign]
                    ) [SingleDesignatorStatement]
                  ) [StatementSingle]
                  StatementSingle(
                    IfStatement(
                      IfConditionSingleTerm(
                        CondSingleFactTerm(
                          CondMultiExprFact(
                            CondSingleExprFact(
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentDesignator(
                                     inc
                                    ) [IdentDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [CondSingleExprFact]
                            RelopEQUAL(
                            ) [RelopEQUAL]
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                NumConstFactor(
                                 2
                                ) [NumConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [CondMultiExprFact]
                        ) [CondSingleFactTerm]
                      ) [IfConditionSingleTerm]
                      StatementSingle(
                        SingleDesignatorStatement(
                          DesignatorStmtAssign(
                            DesignatorStmtAssignCorrect(
                              IdentDesignator(
                               pom
                              ) [IdentDesignator]
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentDesignator(
                                     a
                                    ) [IdentDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [DesignatorStmtAssignCorrect]
                          ) [DesignatorStmtAssign]
                        ) [SingleDesignatorStatement]
                      ) [StatementSingle]
                    ) [IfStatement]
                  ) [StatementSingle]
                ) [IfElseStatement]
              ) [StatementSingle]
            ) [StatementListMultiple]
            StatementSingle(
              SingleReturnExprStatement(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    MethodCallFactor(
                      MethodCall(
                        IdentDesignator(
                         sum
                        ) [IdentDesignator]
                        ActParsLeftParen(
                        ) [ActParsLeftParen]
                        ActParsYes(
                          ActParsMultiExpr(
                            ActParsSingleExpr(
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentDesignator(
                                     a
                                    ) [IdentDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [ActParsSingleExpr]
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                DesignatorEmptyFactor(
                                  IdentDesignator(
                                   pom
                                  ) [IdentDesignator]
                                ) [DesignatorEmptyFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [ActParsMultiExpr]
                        ) [ActParsYes]
                        ActParsRightParen(
                        ) [ActParsRightParen]
                      ) [MethodCall]
                    ) [MethodCallFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
              ) [SingleReturnExprStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
        ) [MethodDeclaration]
      ) [MethodDeclListMultiple]
      MethodDeclaration(
        MethodSignaturePlain(
          MethodTypeType(
            Type(
             bool
            ) [Type]
          ) [MethodTypeType]
          MethodName(
           verify
          ) [MethodName]
        ) [MethodSignaturePlain]
        NoVarDeclOption(
        ) [NoVarDeclOption]
        StatementListMultiple(
          StatementListMultiple(
            StatementListNo(
            ) [StatementListNo]
            StatementSingle(
              SinglePrintStatement(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    CharConstFactor(
                     v
                    ) [CharConstFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
                NumConstNo(
                ) [NumConstNo]
              ) [SinglePrintStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
          StatementSingle(
            SingleReturnExprStatement(
              SingleTermExprPositive(
                SingleFactorTerm(
                  BoolConstFactor(
                   false
                  ) [BoolConstFactor]
                ) [SingleFactorTerm]
              ) [SingleTermExprPositive]
            ) [SingleReturnExprStatement]
          ) [StatementSingle]
        ) [StatementListMultiple]
      ) [MethodDeclaration]
    ) [MethodDeclListMultiple]
    MethodDeclaration(
      MethodSignaturePlain(
        MethodTypeVoid(
        ) [MethodTypeVoid]
        MethodName(
         main
        ) [MethodName]
      ) [MethodSignaturePlain]
      NoVarDeclOption(
      ) [NoVarDeclOption]
      StatementListMultiple(
        StatementListMultiple(
          StatementListMultiple(
            StatementListMultiple(
              StatementListMultiple(
                StatementListMultiple(
                  StatementListMultiple(
                    StatementListMultiple(
                      StatementListMultiple(
                        StatementListMultiple(
                          StatementListMultiple(
                            StatementListMultiple(
                              StatementListMultiple(
                                StatementListMultiple(
                                  StatementListMultiple(
                                    StatementListMultiple(
                                      StatementListMultiple(
                                        StatementListMultiple(
                                          StatementListMultiple(
                                            StatementListMultiple(
                                              StatementListMultiple(
                                                StatementListMultiple(
                                                  StatementListMultiple(
                                                    StatementListMultiple(
                                                      StatementListMultiple(
                                                        StatementListMultiple(
                                                          StatementListMultiple(
                                                            StatementListMultiple(
                                                              StatementListMultiple(
                                                                StatementListMultiple(
                                                                  StatementListMultiple(
                                                                    StatementListMultiple(
                                                                      StatementListMultiple(
                                                                        StatementListMultiple(
                                                                          StatementListMultiple(
                                                                            StatementListNo(
                                                                            ) [StatementListNo]
                                                                            StatementSingle(
                                                                              IfElseStatement(
                                                                                IfConditionSingleTerm(
                                                                                  CondSingleFactTerm(
                                                                                    CondMultiExprFact(
                                                                                      CondSingleExprFact(
                                                                                        SingleTermExprPositive(
                                                                                          SingleFactorTerm(
                                                                                            NumConstFactor(
                                                                                             1
                                                                                            ) [NumConstFactor]
                                                                                          ) [SingleFactorTerm]
                                                                                        ) [SingleTermExprPositive]
                                                                                      ) [CondSingleExprFact]
                                                                                      RelopNOTEQUAL(
                                                                                      ) [RelopNOTEQUAL]
                                                                                      SingleTermExprPositive(
                                                                                        SingleFactorTerm(
                                                                                          NumConstFactor(
                                                                                           1
                                                                                          ) [NumConstFactor]
                                                                                        ) [SingleFactorTerm]
                                                                                      ) [SingleTermExprPositive]
                                                                                    ) [CondMultiExprFact]
                                                                                  ) [CondSingleFactTerm]
                                                                                ) [IfConditionSingleTerm]
                                                                                StatementSingle(
                                                                                  SinglePrintStatement(
                                                                                    SingleTermExprNegative(
                                                                                      SingleFactorTerm(
                                                                                        NumConstFactor(
                                                                                         6
                                                                                        ) [NumConstFactor]
                                                                                      ) [SingleFactorTerm]
                                                                                    ) [SingleTermExprNegative]
                                                                                    NumConstNo(
                                                                                    ) [NumConstNo]
                                                                                  ) [SinglePrintStatement]
                                                                                ) [StatementSingle]
                                                                                StatementSingle(
                                                                                  SinglePrintStatement(
                                                                                    SingleTermExprPositive(
                                                                                      SingleFactorTerm(
                                                                                        NumConstFactor(
                                                                                         0
                                                                                        ) [NumConstFactor]
                                                                                      ) [SingleFactorTerm]
                                                                                    ) [SingleTermExprPositive]
                                                                                    NumConstNo(
                                                                                    ) [NumConstNo]
                                                                                  ) [SinglePrintStatement]
                                                                                ) [StatementSingle]
                                                                              ) [IfElseStatement]
                                                                            ) [StatementSingle]
                                                                          ) [StatementListMultiple]
                                                                          StatementSingle(
                                                                            SingleDesignatorStatement(
                                                                              DesignatorStmtAssign(
                                                                                DesignatorStmtAssignCorrect(
                                                                                  IdentDesignator(
                                                                                   ibool
                                                                                  ) [IdentDesignator]
                                                                                  SingleTermExprPositive(
                                                                                    SingleFactorTerm(
                                                                                      BoolConstFactor(
                                                                                       false
                                                                                      ) [BoolConstFactor]
                                                                                    ) [SingleFactorTerm]
                                                                                  ) [SingleTermExprPositive]
                                                                                ) [DesignatorStmtAssignCorrect]
                                                                              ) [DesignatorStmtAssign]
                                                                            ) [SingleDesignatorStatement]
                                                                          ) [StatementSingle]
                                                                        ) [StatementListMultiple]
                                                                        StatementSingle(
                                                                          SingleDesignatorStatement(
                                                                            DesignatorStmtAssign(
                                                                              DesignatorStmtAssignCorrect(
                                                                                IdentDesignator(
                                                                                 i
                                                                                ) [IdentDesignator]
                                                                                SingleTermExprPositive(
                                                                                  SingleFactorTerm(
                                                                                    NumConstFactor(
                                                                                     0
                                                                                    ) [NumConstFactor]
                                                                                  ) [SingleFactorTerm]
                                                                                ) [SingleTermExprPositive]
                                                                              ) [DesignatorStmtAssignCorrect]
                                                                            ) [DesignatorStmtAssign]
                                                                          ) [SingleDesignatorStatement]
                                                                        ) [StatementSingle]
                                                                      ) [StatementListMultiple]
                                                                      StatementSingle(
                                                                        DoWhileStatement(
                                                                          DoEnter(
                                                                          ) [DoEnter]
                                                                          StatementListMultiple(
                                                                            StatementListNo(
                                                                            ) [StatementListNo]
                                                                            StatementMultiple(
                                                                              StatementsInBraces(
                                                                                StatementListMultiple(
                                                                                  StatementListMultiple(
                                                                                    StatementListNo(
                                                                                    ) [StatementListNo]
                                                                                    StatementSingle(
                                                                                      IfStatement(
                                                                                        IfConditionSingleTerm(
                                                                                          CondSingleFactTerm(
                                                                                            CondMultiExprFact(
                                                                                              CondSingleExprFact(
                                                                                                SingleTermExprPositive(
                                                                                                  SingleFactorTerm(
                                                                                                    DesignatorEmptyFactor(
                                                                                                      IdentDesignator(
                                                                                                       i
                                                                                                      ) [IdentDesignator]
                                                                                                    ) [DesignatorEmptyFactor]
                                                                                                  ) [SingleFactorTerm]
                                                                                                ) [SingleTermExprPositive]
                                                                                              ) [CondSingleExprFact]
                                                                                              RelopEQUAL(
                                                                                              ) [RelopEQUAL]
                                                                                              SingleTermExprPositive(
                                                                                                SingleFactorTerm(
                                                                                                  NumConstFactor(
                                                                                                   2
                                                                                                  ) [NumConstFactor]
                                                                                                ) [SingleFactorTerm]
                                                                                              ) [SingleTermExprPositive]
                                                                                            ) [CondMultiExprFact]
                                                                                          ) [CondSingleFactTerm]
                                                                                        ) [IfConditionSingleTerm]
                                                                                        StatementSingle(
                                                                                          SingleDesignatorStatement(
                                                                                            DesignatorStmtAssign(
                                                                                              DesignatorStmtAssignCorrect(
                                                                                                IdentDesignator(
                                                                                                 ibool
                                                                                                ) [IdentDesignator]
                                                                                                SingleTermExprPositive(
                                                                                                  SingleFactorTerm(
                                                                                                    BoolConstFactor(
                                                                                                     true
                                                                                                    ) [BoolConstFactor]
                                                                                                  ) [SingleFactorTerm]
                                                                                                ) [SingleTermExprPositive]
                                                                                              ) [DesignatorStmtAssignCorrect]
                                                                                            ) [DesignatorStmtAssign]
                                                                                          ) [SingleDesignatorStatement]
                                                                                        ) [StatementSingle]
                                                                                      ) [IfStatement]
                                                                                    ) [StatementSingle]
                                                                                  ) [StatementListMultiple]
                                                                                  StatementSingle(
                                                                                    SingleDesignatorStatement(
                                                                                      DesignatorStmtPlusPlus(
                                                                                        IdentDesignator(
                                                                                         i
                                                                                        ) [IdentDesignator]
                                                                                      ) [DesignatorStmtPlusPlus]
                                                                                    ) [SingleDesignatorStatement]
                                                                                  ) [StatementSingle]
                                                                                ) [StatementListMultiple]
                                                                              ) [StatementsInBraces]
                                                                            ) [StatementMultiple]
                                                                          ) [StatementListMultiple]
                                                                          ConditionSingleTerm(
                                                                            CondSingleFactTerm(
                                                                              CondMultiExprFact(
                                                                                CondSingleExprFact(
                                                                                  SingleTermExprPositive(
                                                                                    SingleFactorTerm(
                                                                                      DesignatorEmptyFactor(
                                                                                        IdentDesignator(
                                                                                         i
                                                                                        ) [IdentDesignator]
                                                                                      ) [DesignatorEmptyFactor]
                                                                                    ) [SingleFactorTerm]
                                                                                  ) [SingleTermExprPositive]
                                                                                ) [CondSingleExprFact]
                                                                                RelopLS(
                                                                                ) [RelopLS]
                                                                                SingleTermExprPositive(
                                                                                  SingleFactorTerm(
                                                                                    NumConstFactor(
                                                                                     5
                                                                                    ) [NumConstFactor]
                                                                                  ) [SingleFactorTerm]
                                                                                ) [SingleTermExprPositive]
                                                                              ) [CondMultiExprFact]
                                                                            ) [CondSingleFactTerm]
                                                                          ) [ConditionSingleTerm]
                                                                        ) [DoWhileStatement]
                                                                      ) [StatementSingle]
                                                                    ) [StatementListMultiple]
                                                                    StatementSingle(
                                                                      IfStatement(
                                                                        IfConditionSingleTerm(
                                                                          CondSingleFactTerm(
                                                                            CondSingleExprFact(
                                                                              SingleTermExprPositive(
                                                                                SingleFactorTerm(
                                                                                  DesignatorEmptyFactor(
                                                                                    IdentDesignator(
                                                                                     ibool
                                                                                    ) [IdentDesignator]
                                                                                  ) [DesignatorEmptyFactor]
                                                                                ) [SingleFactorTerm]
                                                                              ) [SingleTermExprPositive]
                                                                            ) [CondSingleExprFact]
                                                                          ) [CondSingleFactTerm]
                                                                        ) [IfConditionSingleTerm]
                                                                        StatementSingle(
                                                                          IfElseStatement(
                                                                            IfConditionSingleTerm(
                                                                              CondSingleFactTerm(
                                                                                CondMultiExprFact(
                                                                                  CondSingleExprFact(
                                                                                    SingleTermExprPositive(
                                                                                      SingleFactorTerm(
                                                                                        DesignatorEmptyFactor(
                                                                                          IdentDesignator(
                                                                                           i
                                                                                          ) [IdentDesignator]
                                                                                        ) [DesignatorEmptyFactor]
                                                                                      ) [SingleFactorTerm]
                                                                                    ) [SingleTermExprPositive]
                                                                                  ) [CondSingleExprFact]
                                                                                  RelopEQUAL(
                                                                                  ) [RelopEQUAL]
                                                                                  SingleTermExprPositive(
                                                                                    SingleFactorTerm(
                                                                                      NumConstFactor(
                                                                                       5
                                                                                      ) [NumConstFactor]
                                                                                    ) [SingleFactorTerm]
                                                                                  ) [SingleTermExprPositive]
                                                                                ) [CondMultiExprFact]
                                                                              ) [CondSingleFactTerm]
                                                                            ) [IfConditionSingleTerm]
                                                                            StatementSingle(
                                                                              SinglePrintStatement(
                                                                                SingleTermExprPositive(
                                                                                  SingleFactorTerm(
                                                                                    NumConstFactor(
                                                                                     1
                                                                                    ) [NumConstFactor]
                                                                                  ) [SingleFactorTerm]
                                                                                ) [SingleTermExprPositive]
                                                                                NumConstNo(
                                                                                ) [NumConstNo]
                                                                              ) [SinglePrintStatement]
                                                                            ) [StatementSingle]
                                                                            StatementSingle(
                                                                              SinglePrintStatement(
                                                                                SingleTermExprNegative(
                                                                                  SingleFactorTerm(
                                                                                    NumConstFactor(
                                                                                     1
                                                                                    ) [NumConstFactor]
                                                                                  ) [SingleFactorTerm]
                                                                                ) [SingleTermExprNegative]
                                                                                NumConstNo(
                                                                                ) [NumConstNo]
                                                                              ) [SinglePrintStatement]
                                                                            ) [StatementSingle]
                                                                          ) [IfElseStatement]
                                                                        ) [StatementSingle]
                                                                      ) [IfStatement]
                                                                    ) [StatementSingle]
                                                                  ) [StatementListMultiple]
                                                                  StatementSingle(
                                                                    SingleDesignatorStatement(
                                                                      DesignatorStmtAssign(
                                                                        DesignatorStmtAssignCorrect(
                                                                          IdentDesignator(
                                                                           a
                                                                          ) [IdentDesignator]
                                                                          SingleTermExprPositive(
                                                                            SingleFactorTerm(
                                                                              NumConstFactor(
                                                                               2
                                                                              ) [NumConstFactor]
                                                                            ) [SingleFactorTerm]
                                                                          ) [SingleTermExprPositive]
                                                                        ) [DesignatorStmtAssignCorrect]
                                                                      ) [DesignatorStmtAssign]
                                                                    ) [SingleDesignatorStatement]
                                                                  ) [StatementSingle]
                                                                ) [StatementListMultiple]
                                                                StatementSingle(
                                                                  SingleDesignatorStatement(
                                                                    DesignatorStmtAssign(
                                                                      DesignatorStmtAssignCorrect(
                                                                        IdentDesignator(
                                                                         niz
                                                                        ) [IdentDesignator]
                                                                        SingleTermExprPositive(
                                                                          SingleFactorTerm(
                                                                            NewTypeArrayFactor(
                                                                              Type(
                                                                               int
                                                                              ) [Type]
                                                                              SingleTermExprPositive(
                                                                                SingleFactorTerm(
                                                                                  NumConstFactor(
                                                                                   3
                                                                                  ) [NumConstFactor]
                                                                                ) [SingleFactorTerm]
                                                                              ) [SingleTermExprPositive]
                                                                            ) [NewTypeArrayFactor]
                                                                          ) [SingleFactorTerm]
                                                                        ) [SingleTermExprPositive]
                                                                      ) [DesignatorStmtAssignCorrect]
                                                                    ) [DesignatorStmtAssign]
                                                                  ) [SingleDesignatorStatement]
                                                                ) [StatementSingle]
                                                              ) [StatementListMultiple]
                                                              StatementSingle(
                                                                SingleDesignatorStatement(
                                                                  DesignatorStmtAssign(
                                                                    DesignatorStmtAssignCorrect(
                                                                      IdentArrayDesignator(
                                                                       niz
                                                                        SingleTermExprPositive(
                                                                          SingleFactorTerm(
                                                                            NumConstFactor(
                                                                             0
                                                                            ) [NumConstFactor]
                                                                          ) [SingleFactorTerm]
                                                                        ) [SingleTermExprPositive]
                                                                      ) [IdentArrayDesignator]
                                                                      SingleTermExprPositive(
                                                                        MultiFactorTerm(
                                                                          SingleFactorTerm(
                                                                            NumConstFactor(
                                                                             1
                                                                            ) [NumConstFactor]
                                                                          ) [SingleFactorTerm]
                                                                          MulopMul(
                                                                          ) [MulopMul]
                                                                          DesignatorEmptyFactor(
                                                                            IdentDesignator(
                                                                             a
                                                                            ) [IdentDesignator]
                                                                          ) [DesignatorEmptyFactor]
                                                                        ) [MultiFactorTerm]
                                                                      ) [SingleTermExprPositive]
                                                                    ) [DesignatorStmtAssignCorrect]
                                                                  ) [DesignatorStmtAssign]
                                                                ) [SingleDesignatorStatement]
                                                              ) [StatementSingle]
                                                            ) [StatementListMultiple]
                                                            StatementSingle(
                                                              SingleDesignatorStatement(
                                                                DesignatorStmtAssign(
                                                                  DesignatorStmtAssignCorrect(
                                                                    IdentArrayDesignator(
                                                                     niz
                                                                      SingleTermExprPositive(
                                                                        SingleFactorTerm(
                                                                          NumConstFactor(
                                                                           1
                                                                          ) [NumConstFactor]
                                                                        ) [SingleFactorTerm]
                                                                      ) [SingleTermExprPositive]
                                                                    ) [IdentArrayDesignator]
                                                                    SingleTermExprPositive(
                                                                      MultiFactorTerm(
                                                                        SingleFactorTerm(
                                                                          NumConstFactor(
                                                                           2
                                                                          ) [NumConstFactor]
                                                                        ) [SingleFactorTerm]
                                                                        MulopMul(
                                                                        ) [MulopMul]
                                                                        DesignatorEmptyFactor(
                                                                          IdentDesignator(
                                                                           a
                                                                          ) [IdentDesignator]
                                                                        ) [DesignatorEmptyFactor]
                                                                      ) [MultiFactorTerm]
                                                                    ) [SingleTermExprPositive]
                                                                  ) [DesignatorStmtAssignCorrect]
                                                                ) [DesignatorStmtAssign]
                                                              ) [SingleDesignatorStatement]
                                                            ) [StatementSingle]
                                                          ) [StatementListMultiple]
                                                          StatementSingle(
                                                            SingleDesignatorStatement(
                                                              DesignatorStmtAssign(
                                                                DesignatorStmtAssignCorrect(
                                                                  IdentArrayDesignator(
                                                                   niz
                                                                    SingleTermExprPositive(
                                                                      SingleFactorTerm(
                                                                        NumConstFactor(
                                                                         2
                                                                        ) [NumConstFactor]
                                                                      ) [SingleFactorTerm]
                                                                    ) [SingleTermExprPositive]
                                                                  ) [IdentArrayDesignator]
                                                                  MultiTermExpr(
                                                                    SingleTermExprPositive(
                                                                      MultiFactorTerm(
                                                                        SingleFactorTerm(
                                                                          MethodCallFactor(
                                                                            MethodCall(
                                                                              IdentDesignator(
                                                                               sum
                                                                              ) [IdentDesignator]
                                                                              ActParsLeftParen(
                                                                              ) [ActParsLeftParen]
                                                                              ActParsYes(
                                                                                ActParsMultiExpr(
                                                                                  ActParsSingleExpr(
                                                                                    SingleTermExprPositive(
                                                                                      SingleFactorTerm(
                                                                                        DesignatorEmptyFactor(
                                                                                          IdentArrayDesignator(
                                                                                           niz
                                                                                            SingleTermExprPositive(
                                                                                              SingleFactorTerm(
                                                                                                NumConstFactor(
                                                                                                 1
                                                                                                ) [NumConstFactor]
                                                                                              ) [SingleFactorTerm]
                                                                                            ) [SingleTermExprPositive]
                                                                                          ) [IdentArrayDesignator]
                                                                                        ) [DesignatorEmptyFactor]
                                                                                      ) [SingleFactorTerm]
                                                                                    ) [SingleTermExprPositive]
                                                                                  ) [ActParsSingleExpr]
                                                                                  SingleTermExprPositive(
                                                                                    SingleFactorTerm(
                                                                                      DesignatorEmptyFactor(
                                                                                        IdentArrayDesignator(
                                                                                         niz
                                                                                          SingleTermExprPositive(
                                                                                            SingleFactorTerm(
                                                                                              NumConstFactor(
                                                                                               0
                                                                                              ) [NumConstFactor]
                                                                                            ) [SingleFactorTerm]
                                                                                          ) [SingleTermExprPositive]
                                                                                        ) [IdentArrayDesignator]
                                                                                      ) [DesignatorEmptyFactor]
                                                                                    ) [SingleFactorTerm]
                                                                                  ) [SingleTermExprPositive]
                                                                                ) [ActParsMultiExpr]
                                                                              ) [ActParsYes]
                                                                              ActParsRightParen(
                                                                              ) [ActParsRightParen]
                                                                            ) [MethodCall]
                                                                          ) [MethodCallFactor]
                                                                        ) [SingleFactorTerm]
                                                                        MulopMul(
                                                                        ) [MulopMul]
                                                                        DesignatorEmptyFactor(
                                                                          IdentDesignator(
                                                                           a
                                                                          ) [IdentDesignator]
                                                                        ) [DesignatorEmptyFactor]
                                                                      ) [MultiFactorTerm]
                                                                    ) [SingleTermExprPositive]
                                                                    AddopPlus(
                                                                    ) [AddopPlus]
                                                                    SingleFactorTerm(
                                                                      NumConstFactor(
                                                                       1
                                                                      ) [NumConstFactor]
                                                                    ) [SingleFactorTerm]
                                                                  ) [MultiTermExpr]
                                                                ) [DesignatorStmtAssignCorrect]
                                                              ) [DesignatorStmtAssign]
                                                            ) [SingleDesignatorStatement]
                                                          ) [StatementSingle]
                                                        ) [StatementListMultiple]
                                                        StatementSingle(
                                                          IfElseStatement(
                                                            IfConditionMultiTerm(
                                                              ConditionSingleTerm(
                                                                CondSingleFactTerm(
                                                                  CondSingleExprFact(
                                                                    SingleTermExprPositive(
                                                                      SingleFactorTerm(
                                                                        MethodCallFactor(
                                                                          MethodCall(
                                                                            IdentDesignator(
                                                                             verify
                                                                            ) [IdentDesignator]
                                                                            ActParsLeftParen(
                                                                            ) [ActParsLeftParen]
                                                                            ActParsNo(
                                                                            ) [ActParsNo]
                                                                            ActParsRightParen(
                                                                            ) [ActParsRightParen]
                                                                          ) [MethodCall]
                                                                        ) [MethodCallFactor]
                                                                      ) [SingleFactorTerm]
                                                                    ) [SingleTermExprPositive]
                                                                  ) [CondSingleExprFact]
                                                                ) [CondSingleFactTerm]
                                                              ) [ConditionSingleTerm]
                                                              CondSingleFactTerm(
                                                                CondMultiExprFact(
                                                                  CondSingleExprFact(
                                                                    SingleTermExprPositive(
                                                                      SingleFactorTerm(
                                                                        DesignatorEmptyFactor(
                                                                          IdentArrayDesignator(
                                                                           niz
                                                                            SingleTermExprPositive(
                                                                              SingleFactorTerm(
                                                                                NumConstFactor(
                                                                                 2
                                                                                ) [NumConstFactor]
                                                                              ) [SingleFactorTerm]
                                                                            ) [SingleTermExprPositive]
                                                                          ) [IdentArrayDesignator]
                                                                        ) [DesignatorEmptyFactor]
                                                                      ) [SingleFactorTerm]
                                                                    ) [SingleTermExprPositive]
                                                                  ) [CondSingleExprFact]
                                                                  RelopEQUAL(
                                                                  ) [RelopEQUAL]
                                                                  SingleTermExprPositive(
                                                                    SingleFactorTerm(
                                                                      NumConstFactor(
                                                                       4
                                                                      ) [NumConstFactor]
                                                                    ) [SingleFactorTerm]
                                                                  ) [SingleTermExprPositive]
                                                                ) [CondMultiExprFact]
                                                              ) [CondSingleFactTerm]
                                                            ) [IfConditionMultiTerm]
                                                            StatementSingle(
                                                              SinglePrintStatement(
                                                                SingleTermExprPositive(
                                                                  SingleFactorTerm(
                                                                    MethodCallFactor(
                                                                      MethodCall(
                                                                        IdentDesignator(
                                                                         ord
                                                                        ) [IdentDesignator]
                                                                        ActParsLeftParen(
                                                                        ) [ActParsLeftParen]
                                                                        ActParsYes(
                                                                          ActParsSingleExpr(
                                                                            SingleTermExprPositive(
                                                                              SingleFactorTerm(
                                                                                CharConstFactor(
                                                                                 A
                                                                                ) [CharConstFactor]
                                                                              ) [SingleFactorTerm]
                                                                            ) [SingleTermExprPositive]
                                                                          ) [ActParsSingleExpr]
                                                                        ) [ActParsYes]
                                                                        ActParsRightParen(
                                                                        ) [ActParsRightParen]
                                                                      ) [MethodCall]
                                                                    ) [MethodCallFactor]
                                                                  ) [SingleFactorTerm]
                                                                ) [SingleTermExprPositive]
                                                                NumConstNo(
                                                                ) [NumConstNo]
                                                              ) [SinglePrintStatement]
                                                            ) [StatementSingle]
                                                            StatementSingle(
                                                              SinglePrintStatement(
                                                                SingleTermExprPositive(
                                                                  SingleFactorTerm(
                                                                    MethodCallFactor(
                                                                      MethodCall(
                                                                        IdentDesignator(
                                                                         ord
                                                                        ) [IdentDesignator]
                                                                        ActParsLeftParen(
                                                                        ) [ActParsLeftParen]
                                                                        ActParsYes(
                                                                          ActParsSingleExpr(
                                                                            SingleTermExprPositive(
                                                                              SingleFactorTerm(
                                                                                CharConstFactor(
                                                                                 a
                                                                                ) [CharConstFactor]
                                                                              ) [SingleFactorTerm]
                                                                            ) [SingleTermExprPositive]
                                                                          ) [ActParsSingleExpr]
                                                                        ) [ActParsYes]
                                                                        ActParsRightParen(
                                                                        ) [ActParsRightParen]
                                                                      ) [MethodCall]
                                                                    ) [MethodCallFactor]
                                                                  ) [SingleFactorTerm]
                                                                ) [SingleTermExprPositive]
                                                                NumConstNo(
                                                                ) [NumConstNo]
                                                              ) [SinglePrintStatement]
                                                            ) [StatementSingle]
                                                          ) [IfElseStatement]
                                                        ) [StatementSingle]
                                                      ) [StatementListMultiple]
                                                      StatementSingle(
                                                        SinglePrintStatement(
                                                          SingleTermExprPositive(
                                                            SingleFactorTerm(
                                                              DesignatorEmptyFactor(
                                                                IdentDesignator(
                                                                 eol
                                                                ) [IdentDesignator]
                                                              ) [DesignatorEmptyFactor]
                                                            ) [SingleFactorTerm]
                                                          ) [SingleTermExprPositive]
                                                          NumConstNo(
                                                          ) [NumConstNo]
                                                        ) [SinglePrintStatement]
                                                      ) [StatementSingle]
                                                    ) [StatementListMultiple]
                                                    StatementSingle(
                                                      SingleDesignatorStatement(
                                                        DesignatorStmtAssign(
                                                          DesignatorStmtAssignCorrect(
                                                            IdentDesignator(
                                                             i
                                                            ) [IdentDesignator]
                                                            SingleTermExprPositive(
                                                              SingleFactorTerm(
                                                                NumConstFactor(
                                                                 0
                                                                ) [NumConstFactor]
                                                              ) [SingleFactorTerm]
                                                            ) [SingleTermExprPositive]
                                                          ) [DesignatorStmtAssignCorrect]
                                                        ) [DesignatorStmtAssign]
                                                      ) [SingleDesignatorStatement]
                                                    ) [StatementSingle]
                                                  ) [StatementListMultiple]
                                                  StatementSingle(
                                                    DoWhileStatement(
                                                      DoEnter(
                                                      ) [DoEnter]
                                                      StatementListMultiple(
                                                        StatementListNo(
                                                        ) [StatementListNo]
                                                        StatementMultiple(
                                                          StatementsInBraces(
                                                            StatementListMultiple(
                                                              StatementListMultiple(
                                                                StatementListMultiple(
                                                                  StatementListNo(
                                                                  ) [StatementListNo]
                                                                  StatementSingle(
                                                                    IfStatement(
                                                                      IfConditionSingleTerm(
                                                                        CondSingleFactTerm(
                                                                          CondMultiExprFact(
                                                                            CondSingleExprFact(
                                                                              SingleTermExprPositive(
                                                                                SingleFactorTerm(
                                                                                  DesignatorEmptyFactor(
                                                                                    IdentDesignator(
                                                                                     i
                                                                                    ) [IdentDesignator]
                                                                                  ) [DesignatorEmptyFactor]
                                                                                ) [SingleFactorTerm]
                                                                              ) [SingleTermExprPositive]
                                                                            ) [CondSingleExprFact]
                                                                            RelopEQUAL(
                                                                            ) [RelopEQUAL]
                                                                            SingleTermExprPositive(
                                                                              SingleFactorTerm(
                                                                                NumConstFactor(
                                                                                 3
                                                                                ) [NumConstFactor]
                                                                              ) [SingleFactorTerm]
                                                                            ) [SingleTermExprPositive]
                                                                          ) [CondMultiExprFact]
                                                                        ) [CondSingleFactTerm]
                                                                      ) [IfConditionSingleTerm]
                                                                      StatementMultiple(
                                                                        StatementsInBraces(
                                                                          StatementListMultiple(
                                                                            StatementListMultiple(
                                                                              StatementListNo(
                                                                              ) [StatementListNo]
                                                                              StatementSingle(
                                                                                SingleDesignatorStatement(
                                                                                  DesignatorStmtPlusPlus(
                                                                                    IdentDesignator(
                                                                                     i
                                                                                    ) [IdentDesignator]
                                                                                  ) [DesignatorStmtPlusPlus]
                                                                                ) [SingleDesignatorStatement]
                                                                              ) [StatementSingle]
                                                                            ) [StatementListMultiple]
                                                                            StatementSingle(
                                                                              SingleContinueStatement(
                                                                              ) [SingleContinueStatement]
                                                                            ) [StatementSingle]
                                                                          ) [StatementListMultiple]
                                                                        ) [StatementsInBraces]
                                                                      ) [StatementMultiple]
                                                                    ) [IfStatement]
                                                                  ) [StatementSingle]
                                                                ) [StatementListMultiple]
                                                                StatementSingle(
                                                                  IfStatement(
                                                                    IfConditionSingleTerm(
                                                                      CondSingleFactTerm(
                                                                        CondMultiExprFact(
                                                                          CondSingleExprFact(
                                                                            SingleTermExprPositive(
                                                                              SingleFactorTerm(
                                                                                DesignatorEmptyFactor(
                                                                                  IdentDesignator(
                                                                                   i
                                                                                  ) [IdentDesignator]
                                                                                ) [DesignatorEmptyFactor]
                                                                              ) [SingleFactorTerm]
                                                                            ) [SingleTermExprPositive]
                                                                          ) [CondSingleExprFact]
                                                                          RelopEQUAL(
                                                                          ) [RelopEQUAL]
                                                                          SingleTermExprPositive(
                                                                            SingleFactorTerm(
                                                                              NumConstFactor(
                                                                               4
                                                                              ) [NumConstFactor]
                                                                            ) [SingleFactorTerm]
                                                                          ) [SingleTermExprPositive]
                                                                        ) [CondMultiExprFact]
                                                                      ) [CondSingleFactTerm]
                                                                    ) [IfConditionSingleTerm]
                                                                    StatementSingle(
                                                                      SingleBreakStatement(
                                                                      ) [SingleBreakStatement]
                                                                    ) [StatementSingle]
                                                                  ) [IfStatement]
                                                                ) [StatementSingle]
                                                              ) [StatementListMultiple]
                                                              StatementSingle(
                                                                SingleDesignatorStatement(
                                                                  DesignatorStmtAssign(
                                                                    DesignatorStmtAssignCorrect(
                                                                      IdentDesignator(
                                                                       i
                                                                      ) [IdentDesignator]
                                                                      SingleTermExprPositive(
                                                                        SingleFactorTerm(
                                                                          MethodCallFactor(
                                                                            MethodCall(
                                                                              IdentDesignator(
                                                                               inkrement
                                                                              ) [IdentDesignator]
                                                                              ActParsLeftParen(
                                                                              ) [ActParsLeftParen]
                                                                              ActParsYes(
                                                                                ActParsMultiExpr(
                                                                                  ActParsSingleExpr(
                                                                                    SingleTermExprPositive(
                                                                                      SingleFactorTerm(
                                                                                        DesignatorEmptyFactor(
                                                                                          IdentDesignator(
                                                                                           i
                                                                                          ) [IdentDesignator]
                                                                                        ) [DesignatorEmptyFactor]
                                                                                      ) [SingleFactorTerm]
                                                                                    ) [SingleTermExprPositive]
                                                                                  ) [ActParsSingleExpr]
                                                                                  SingleTermExprPositive(
                                                                                    SingleFactorTerm(
                                                                                      NumConstFactor(
                                                                                       1
                                                                                      ) [NumConstFactor]
                                                                                    ) [SingleFactorTerm]
                                                                                  ) [SingleTermExprPositive]
                                                                                ) [ActParsMultiExpr]
                                                                              ) [ActParsYes]
                                                                              ActParsRightParen(
                                                                              ) [ActParsRightParen]
                                                                            ) [MethodCall]
                                                                          ) [MethodCallFactor]
                                                                        ) [SingleFactorTerm]
                                                                      ) [SingleTermExprPositive]
                                                                    ) [DesignatorStmtAssignCorrect]
                                                                  ) [DesignatorStmtAssign]
                                                                ) [SingleDesignatorStatement]
                                                              ) [StatementSingle]
                                                            ) [StatementListMultiple]
                                                          ) [StatementsInBraces]
                                                        ) [StatementMultiple]
                                                      ) [StatementListMultiple]
                                                      ConditionSingleTerm(
                                                        CondSingleFactTerm(
                                                          CondMultiExprFact(
                                                            CondSingleExprFact(
                                                              SingleTermExprPositive(
                                                                SingleFactorTerm(
                                                                  DesignatorEmptyFactor(
                                                                    IdentDesignator(
                                                                     i
                                                                    ) [IdentDesignator]
                                                                  ) [DesignatorEmptyFactor]
                                                                ) [SingleFactorTerm]
                                                              ) [SingleTermExprPositive]
                                                            ) [CondSingleExprFact]
                                                            RelopLS(
                                                            ) [RelopLS]
                                                            SingleTermExprPositive(
                                                              SingleFactorTerm(
                                                                NumConstFactor(
                                                                 10
                                                                ) [NumConstFactor]
                                                              ) [SingleFactorTerm]
                                                            ) [SingleTermExprPositive]
                                                          ) [CondMultiExprFact]
                                                        ) [CondSingleFactTerm]
                                                      ) [ConditionSingleTerm]
                                                    ) [DoWhileStatement]
                                                  ) [StatementSingle]
                                                ) [StatementListMultiple]
                                                StatementSingle(
                                                  IfElseStatement(
                                                    IfConditionSingleTerm(
                                                      CondMultiFactTerm(
                                                        CondSingleFactTerm(
                                                          CondMultiExprFact(
                                                            CondSingleExprFact(
                                                              SingleTermExprPositive(
                                                                SingleFactorTerm(
                                                                  DesignatorEmptyFactor(
                                                                    IdentDesignator(
                                                                     i
                                                                    ) [IdentDesignator]
                                                                  ) [DesignatorEmptyFactor]
                                                                ) [SingleFactorTerm]
                                                              ) [SingleTermExprPositive]
                                                            ) [CondSingleExprFact]
                                                            RelopEQUAL(
                                                            ) [RelopEQUAL]
                                                            SingleTermExprPositive(
                                                              SingleFactorTerm(
                                                                NumConstFactor(
                                                                 3
                                                                ) [NumConstFactor]
                                                              ) [SingleFactorTerm]
                                                            ) [SingleTermExprPositive]
                                                          ) [CondMultiExprFact]
                                                        ) [CondSingleFactTerm]
                                                        CondSingleExprFact(
                                                          SingleTermExprPositive(
                                                            SingleFactorTerm(
                                                              MethodCallFactor(
                                                                MethodCall(
                                                                  IdentDesignator(
                                                                   verify
                                                                  ) [IdentDesignator]
                                                                  ActParsLeftParen(
                                                                  ) [ActParsLeftParen]
                                                                  ActParsNo(
                                                                  ) [ActParsNo]
                                                                  ActParsRightParen(
                                                                  ) [ActParsRightParen]
                                                                ) [MethodCall]
                                                              ) [MethodCallFactor]
                                                            ) [SingleFactorTerm]
                                                          ) [SingleTermExprPositive]
                                                        ) [CondSingleExprFact]
                                                      ) [CondMultiFactTerm]
                                                    ) [IfConditionSingleTerm]
                                                    StatementSingle(
                                                      SinglePrintStatement(
                                                        SingleTermExprNegative(
                                                          SingleFactorTerm(
                                                            NumConstFactor(
                                                             4
                                                            ) [NumConstFactor]
                                                          ) [SingleFactorTerm]
                                                        ) [SingleTermExprNegative]
                                                        NumConstNo(
                                                        ) [NumConstNo]
                                                      ) [SinglePrintStatement]
                                                    ) [StatementSingle]
                                                    StatementSingle(
                                                      SinglePrintStatement(
                                                        SingleTermExprPositive(
                                                          SingleFactorTerm(
                                                            NumConstFactor(
                                                             4
                                                            ) [NumConstFactor]
                                                          ) [SingleFactorTerm]
                                                        ) [SingleTermExprPositive]
                                                        NumConstNo(
                                                        ) [NumConstNo]
                                                      ) [SinglePrintStatement]
                                                    ) [StatementSingle]
                                                  ) [IfElseStatement]
                                                ) [StatementSingle]
                                              ) [StatementListMultiple]
                                              StatementSingle(
                                                SingleReadStatement(
                                                  IdentArrayDesignator(
                                                   niz
                                                    SingleTermExprPositive(
                                                      SingleFactorTerm(
                                                        NumConstFactor(
                                                         0
                                                        ) [NumConstFactor]
                                                      ) [SingleFactorTerm]
                                                    ) [SingleTermExprPositive]
                                                  ) [IdentArrayDesignator]
                                                ) [SingleReadStatement]
                                              ) [StatementSingle]
                                            ) [StatementListMultiple]
                                            StatementSingle(
                                              SingleReadStatement(
                                                IdentArrayDesignator(
                                                 niz
                                                  SingleTermExprPositive(
                                                    SingleFactorTerm(
                                                      NumConstFactor(
                                                       1
                                                      ) [NumConstFactor]
                                                    ) [SingleFactorTerm]
                                                  ) [SingleTermExprPositive]
                                                ) [IdentArrayDesignator]
                                              ) [SingleReadStatement]
                                            ) [StatementSingle]
                                          ) [StatementListMultiple]
                                          StatementSingle(
                                            SingleReadStatement(
                                              IdentArrayDesignator(
                                               niz
                                                SingleTermExprPositive(
                                                  SingleFactorTerm(
                                                    NumConstFactor(
                                                     2
                                                    ) [NumConstFactor]
                                                  ) [SingleFactorTerm]
                                                ) [SingleTermExprPositive]
                                              ) [IdentArrayDesignator]
                                            ) [SingleReadStatement]
                                          ) [StatementSingle]
                                        ) [StatementListMultiple]
                                        StatementSingle(
                                          SinglePrintStatement(
                                            SingleTermExprPositive(
                                              SingleFactorTerm(
                                                DesignatorEmptyFactor(
                                                  IdentDesignator(
                                                   eol
                                                  ) [IdentDesignator]
                                                ) [DesignatorEmptyFactor]
                                              ) [SingleFactorTerm]
                                            ) [SingleTermExprPositive]
                                            NumConstNo(
                                            ) [NumConstNo]
                                          ) [SinglePrintStatement]
                                        ) [StatementSingle]
                                      ) [StatementListMultiple]
                                      StatementSingle(
                                        SinglePrintStatement(
                                          SingleTermExprPositive(
                                            SingleFactorTerm(
                                              MethodCallFactor(
                                                MethodCall(
                                                  IdentDesignator(
                                                   sum
                                                  ) [IdentDesignator]
                                                  ActParsLeftParen(
                                                  ) [ActParsLeftParen]
                                                  ActParsYes(
                                                    ActParsMultiExpr(
                                                      ActParsSingleExpr(
                                                        SingleTermExprPositive(
                                                          SingleFactorTerm(
                                                            MethodCallFactor(
                                                              MethodCall(
                                                                IdentDesignator(
                                                                 sum
                                                                ) [IdentDesignator]
                                                                ActParsLeftParen(
                                                                ) [ActParsLeftParen]
                                                                ActParsYes(
                                                                  ActParsMultiExpr(
                                                                    ActParsSingleExpr(
                                                                      SingleTermExprPositive(
                                                                        SingleFactorTerm(
                                                                          DesignatorEmptyFactor(
                                                                            IdentArrayDesignator(
                                                                             niz
                                                                              SingleTermExprPositive(
                                                                                SingleFactorTerm(
                                                                                  NumConstFactor(
                                                                                   0
                                                                                  ) [NumConstFactor]
                                                                                ) [SingleFactorTerm]
                                                                              ) [SingleTermExprPositive]
                                                                            ) [IdentArrayDesignator]
                                                                          ) [DesignatorEmptyFactor]
                                                                        ) [SingleFactorTerm]
                                                                      ) [SingleTermExprPositive]
                                                                    ) [ActParsSingleExpr]
                                                                    SingleTermExprPositive(
                                                                      SingleFactorTerm(
                                                                        DesignatorEmptyFactor(
                                                                          IdentArrayDesignator(
                                                                           niz
                                                                            SingleTermExprPositive(
                                                                              SingleFactorTerm(
                                                                                NumConstFactor(
                                                                                 1
                                                                                ) [NumConstFactor]
                                                                              ) [SingleFactorTerm]
                                                                            ) [SingleTermExprPositive]
                                                                          ) [IdentArrayDesignator]
                                                                        ) [DesignatorEmptyFactor]
                                                                      ) [SingleFactorTerm]
                                                                    ) [SingleTermExprPositive]
                                                                  ) [ActParsMultiExpr]
                                                                ) [ActParsYes]
                                                                ActParsRightParen(
                                                                ) [ActParsRightParen]
                                                              ) [MethodCall]
                                                            ) [MethodCallFactor]
                                                          ) [SingleFactorTerm]
                                                        ) [SingleTermExprPositive]
                                                      ) [ActParsSingleExpr]
                                                      SingleTermExprPositive(
                                                        SingleFactorTerm(
                                                          DesignatorEmptyFactor(
                                                            IdentArrayDesignator(
                                                             niz
                                                              SingleTermExprPositive(
                                                                SingleFactorTerm(
                                                                  NumConstFactor(
                                                                   2
                                                                  ) [NumConstFactor]
                                                                ) [SingleFactorTerm]
                                                              ) [SingleTermExprPositive]
                                                            ) [IdentArrayDesignator]
                                                          ) [DesignatorEmptyFactor]
                                                        ) [SingleFactorTerm]
                                                      ) [SingleTermExprPositive]
                                                    ) [ActParsMultiExpr]
                                                  ) [ActParsYes]
                                                  ActParsRightParen(
                                                  ) [ActParsRightParen]
                                                ) [MethodCall]
                                              ) [MethodCallFactor]
                                            ) [SingleFactorTerm]
                                          ) [SingleTermExprPositive]
                                          NumConstNo(
                                          ) [NumConstNo]
                                        ) [SinglePrintStatement]
                                      ) [StatementSingle]
                                    ) [StatementListMultiple]
                                    StatementSingle(
                                      SinglePrintStatement(
                                        SingleTermExprPositive(
                                          SingleFactorTerm(
                                            DesignatorEmptyFactor(
                                              IdentDesignator(
                                               eol
                                              ) [IdentDesignator]
                                            ) [DesignatorEmptyFactor]
                                          ) [SingleFactorTerm]
                                        ) [SingleTermExprPositive]
                                        NumConstNo(
                                        ) [NumConstNo]
                                      ) [SinglePrintStatement]
                                    ) [StatementSingle]
                                  ) [StatementListMultiple]
                                  StatementSingle(
                                    SinglePrintStatement(
                                      SingleTermExprPositive(
                                        SingleFactorTerm(
                                          MethodCallFactor(
                                            MethodCall(
                                              IdentDesignator(
                                               inkrement
                                              ) [IdentDesignator]
                                              ActParsLeftParen(
                                              ) [ActParsLeftParen]
                                              ActParsYes(
                                                ActParsMultiExpr(
                                                  ActParsSingleExpr(
                                                    SingleTermExprPositive(
                                                      SingleFactorTerm(
                                                        DesignatorEmptyFactor(
                                                          IdentArrayDesignator(
                                                           niz
                                                            SingleTermExprPositive(
                                                              SingleFactorTerm(
                                                                NumConstFactor(
                                                                 2
                                                                ) [NumConstFactor]
                                                              ) [SingleFactorTerm]
                                                            ) [SingleTermExprPositive]
                                                          ) [IdentArrayDesignator]
                                                        ) [DesignatorEmptyFactor]
                                                      ) [SingleFactorTerm]
                                                    ) [SingleTermExprPositive]
                                                  ) [ActParsSingleExpr]
                                                  SingleTermExprPositive(
                                                    SingleFactorTerm(
                                                      NumConstFactor(
                                                       2
                                                      ) [NumConstFactor]
                                                    ) [SingleFactorTerm]
                                                  ) [SingleTermExprPositive]
                                                ) [ActParsMultiExpr]
                                              ) [ActParsYes]
                                              ActParsRightParen(
                                              ) [ActParsRightParen]
                                            ) [MethodCall]
                                          ) [MethodCallFactor]
                                        ) [SingleFactorTerm]
                                      ) [SingleTermExprPositive]
                                      NumConstNo(
                                      ) [NumConstNo]
                                    ) [SinglePrintStatement]
                                  ) [StatementSingle]
                                ) [StatementListMultiple]
                                StatementSingle(
                                  SingleDesignatorStatement(
                                    DesignatorStmtAssign(
                                      DesignatorStmtAssignCorrect(
                                        IdentDesignator(
                                         a
                                        ) [IdentDesignator]
                                        SingleTermExprPositive(
                                          SingleFactorTerm(
                                            NumConstFactor(
                                             3
                                            ) [NumConstFactor]
                                          ) [SingleFactorTerm]
                                        ) [SingleTermExprPositive]
                                      ) [DesignatorStmtAssignCorrect]
                                    ) [DesignatorStmtAssign]
                                  ) [SingleDesignatorStatement]
                                ) [StatementSingle]
                              ) [StatementListMultiple]
                              StatementSingle(
                                SingleDesignatorStatement(
                                  DesignatorStmtAssign(
                                    DesignatorStmtAssignCorrect(
                                      IdentDesignator(
                                       i
                                      ) [IdentDesignator]
                                      SingleTermExprPositive(
                                        SingleFactorTerm(
                                          NumConstFactor(
                                           0
                                          ) [NumConstFactor]
                                        ) [SingleFactorTerm]
                                      ) [SingleTermExprPositive]
                                    ) [DesignatorStmtAssignCorrect]
                                  ) [DesignatorStmtAssign]
                                ) [SingleDesignatorStatement]
                              ) [StatementSingle]
                            ) [StatementListMultiple]
                            StatementSingle(
                              DoWhileStatement(
                                DoEnter(
                                ) [DoEnter]
                                StatementListMultiple(
                                  StatementListNo(
                                  ) [StatementListNo]
                                  StatementMultiple(
                                    StatementsInBraces(
                                      StatementListMultiple(
                                        StatementListMultiple(
                                          StatementListNo(
                                          ) [StatementListNo]
                                          StatementSingle(
                                            SingleDesignatorStatement(
                                              DesignatorStmtAssign(
                                                DesignatorStmtAssignCorrect(
                                                  IdentArrayDesignator(
                                                   niz
                                                    SingleTermExprPositive(
                                                      SingleFactorTerm(
                                                        DesignatorEmptyFactor(
                                                          IdentDesignator(
                                                           i
                                                          ) [IdentDesignator]
                                                        ) [DesignatorEmptyFactor]
                                                      ) [SingleFactorTerm]
                                                    ) [SingleTermExprPositive]
                                                  ) [IdentArrayDesignator]
                                                  SingleTermExprPositive(
                                                    MultiFactorTerm(
                                                      MultiFactorTerm(
                                                        SingleFactorTerm(
                                                          DesignatorEmptyFactor(
                                                            IdentArrayDesignator(
                                                             niz
                                                              SingleTermExprPositive(
                                                                SingleFactorTerm(
                                                                  DesignatorEmptyFactor(
                                                                    IdentDesignator(
                                                                     i
                                                                    ) [IdentDesignator]
                                                                  ) [DesignatorEmptyFactor]
                                                                ) [SingleFactorTerm]
                                                              ) [SingleTermExprPositive]
                                                            ) [IdentArrayDesignator]
                                                          ) [DesignatorEmptyFactor]
                                                        ) [SingleFactorTerm]
                                                        MulopMul(
                                                        ) [MulopMul]
                                                        NumConstFactor(
                                                         2
                                                        ) [NumConstFactor]
                                                      ) [MultiFactorTerm]
                                                      MulopMul(
                                                      ) [MulopMul]
                                                      DesignatorEmptyFactor(
                                                        IdentDesignator(
                                                         a
                                                        ) [IdentDesignator]
                                                      ) [DesignatorEmptyFactor]
                                                    ) [MultiFactorTerm]
                                                  ) [SingleTermExprPositive]
                                                ) [DesignatorStmtAssignCorrect]
                                              ) [DesignatorStmtAssign]
                                            ) [SingleDesignatorStatement]
                                          ) [StatementSingle]
                                        ) [StatementListMultiple]
                                        StatementSingle(
                                          SingleDesignatorStatement(
                                            DesignatorStmtPlusPlus(
                                              IdentDesignator(
                                               i
                                              ) [IdentDesignator]
                                            ) [DesignatorStmtPlusPlus]
                                          ) [SingleDesignatorStatement]
                                        ) [StatementSingle]
                                      ) [StatementListMultiple]
                                    ) [StatementsInBraces]
                                  ) [StatementMultiple]
                                ) [StatementListMultiple]
                                ConditionSingleTerm(
                                  CondSingleFactTerm(
                                    CondMultiExprFact(
                                      CondSingleExprFact(
                                        SingleTermExprPositive(
                                          SingleFactorTerm(
                                            DesignatorEmptyFactor(
                                              IdentDesignator(
                                               i
                                              ) [IdentDesignator]
                                            ) [DesignatorEmptyFactor]
                                          ) [SingleFactorTerm]
                                        ) [SingleTermExprPositive]
                                      ) [CondSingleExprFact]
                                      RelopLS(
                                      ) [RelopLS]
                                      SingleTermExprPositive(
                                        SingleFactorTerm(
                                          NumConstFactor(
                                           3
                                          ) [NumConstFactor]
                                        ) [SingleFactorTerm]
                                      ) [SingleTermExprPositive]
                                    ) [CondMultiExprFact]
                                  ) [CondSingleFactTerm]
                                ) [ConditionSingleTerm]
                              ) [DoWhileStatement]
                            ) [StatementSingle]
                          ) [StatementListMultiple]
                          StatementSingle(
                            SinglePrintStatement(
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  DesignatorEmptyFactor(
                                    IdentArrayDesignator(
                                     niz
                                      SingleTermExprPositive(
                                        SingleFactorTerm(
                                          NumConstFactor(
                                           0
                                          ) [NumConstFactor]
                                        ) [SingleFactorTerm]
                                      ) [SingleTermExprPositive]
                                    ) [IdentArrayDesignator]
                                  ) [DesignatorEmptyFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                              NumConstNo(
                              ) [NumConstNo]
                            ) [SinglePrintStatement]
                          ) [StatementSingle]
                        ) [StatementListMultiple]
                        StatementSingle(
                          SinglePrintStatement(
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                DesignatorEmptyFactor(
                                  IdentArrayDesignator(
                                   niz
                                    SingleTermExprPositive(
                                      SingleFactorTerm(
                                        NumConstFactor(
                                         1
                                        ) [NumConstFactor]
                                      ) [SingleFactorTerm]
                                    ) [SingleTermExprPositive]
                                  ) [IdentArrayDesignator]
                                ) [DesignatorEmptyFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                            NumConstNo(
                            ) [NumConstNo]
                          ) [SinglePrintStatement]
                        ) [StatementSingle]
                      ) [StatementListMultiple]
                      StatementSingle(
                        SinglePrintStatement(
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              DesignatorEmptyFactor(
                                IdentArrayDesignator(
                                 niz
                                  SingleTermExprPositive(
                                    SingleFactorTerm(
                                      NumConstFactor(
                                       2
                                      ) [NumConstFactor]
                                    ) [SingleFactorTerm]
                                  ) [SingleTermExprPositive]
                                ) [IdentArrayDesignator]
                              ) [DesignatorEmptyFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                          NumConstNo(
                          ) [NumConstNo]
                        ) [SinglePrintStatement]
                      ) [StatementSingle]
                    ) [StatementListMultiple]
                    StatementSingle(
                      SinglePrintStatement(
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            DesignatorEmptyFactor(
                              IdentDesignator(
                               eol
                              ) [IdentDesignator]
                            ) [DesignatorEmptyFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                        NumConstNo(
                        ) [NumConstNo]
                      ) [SinglePrintStatement]
                    ) [StatementSingle]
                  ) [StatementListMultiple]
                  StatementSingle(
                    SingleDesignatorStatement(
                      DesignatorStmtAssign(
                        DesignatorStmtAssignCorrect(
                          IdentDesignator(
                           i
                          ) [IdentDesignator]
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              NumConstFactor(
                               0
                              ) [NumConstFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [DesignatorStmtAssignCorrect]
                      ) [DesignatorStmtAssign]
                    ) [SingleDesignatorStatement]
                  ) [StatementSingle]
                ) [StatementListMultiple]
                StatementSingle(
                  SingleDesignatorStatement(
                    DesignatorStmtAssign(
                      DesignatorStmtAssignCorrect(
                        IdentDesignator(
                         niz2
                        ) [IdentDesignator]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            NumConstFactor(
                             0
                            ) [NumConstFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [DesignatorStmtAssignCorrect]
                    ) [DesignatorStmtAssign]
                  ) [SingleDesignatorStatement]
                ) [StatementSingle]
              ) [StatementListMultiple]
              StatementSingle(
                DoWhileStatement(
                  DoEnter(
                  ) [DoEnter]
                  StatementListMultiple(
                    StatementListNo(
                    ) [StatementListNo]
                    StatementMultiple(
                      StatementsInBraces(
                        StatementListMultiple(
                          StatementListMultiple(
                            StatementListNo(
                            ) [StatementListNo]
                            StatementSingle(
                              SingleDesignatorStatement(
                                DesignatorStmtAssign(
                                  DesignatorStmtAssignCorrect(
                                    IdentDesignator(
                                     niz2
                                    ) [IdentDesignator]
                                    MultiTermExpr(
                                      SingleTermExprPositive(
                                        SingleFactorTerm(
                                          DesignatorEmptyFactor(
                                            IdentDesignator(
                                             niz2
                                            ) [IdentDesignator]
                                          ) [DesignatorEmptyFactor]
                                        ) [SingleFactorTerm]
                                      ) [SingleTermExprPositive]
                                      AddopPlus(
                                      ) [AddopPlus]
                                      MultiFactorTerm(
                                        SingleFactorTerm(
                                          DesignatorEmptyFactor(
                                            IdentArrayDesignator(
                                             niz
                                              SingleTermExprPositive(
                                                SingleFactorTerm(
                                                  DesignatorEmptyFactor(
                                                    IdentDesignator(
                                                     i
                                                    ) [IdentDesignator]
                                                  ) [DesignatorEmptyFactor]
                                                ) [SingleFactorTerm]
                                              ) [SingleTermExprPositive]
                                            ) [IdentArrayDesignator]
                                          ) [DesignatorEmptyFactor]
                                        ) [SingleFactorTerm]
                                        MulopMul(
                                        ) [MulopMul]
                                        DesignatorEmptyFactor(
                                          IdentArrayDesignator(
                                           niz
                                            SingleTermExprPositive(
                                              SingleFactorTerm(
                                                DesignatorEmptyFactor(
                                                  IdentDesignator(
                                                   i
                                                  ) [IdentDesignator]
                                                ) [DesignatorEmptyFactor]
                                              ) [SingleFactorTerm]
                                            ) [SingleTermExprPositive]
                                          ) [IdentArrayDesignator]
                                        ) [DesignatorEmptyFactor]
                                      ) [MultiFactorTerm]
                                    ) [MultiTermExpr]
                                  ) [DesignatorStmtAssignCorrect]
                                ) [DesignatorStmtAssign]
                              ) [SingleDesignatorStatement]
                            ) [StatementSingle]
                          ) [StatementListMultiple]
                          StatementSingle(
                            SingleDesignatorStatement(
                              DesignatorStmtPlusPlus(
                                IdentDesignator(
                                 i
                                ) [IdentDesignator]
                              ) [DesignatorStmtPlusPlus]
                            ) [SingleDesignatorStatement]
                          ) [StatementSingle]
                        ) [StatementListMultiple]
                      ) [StatementsInBraces]
                    ) [StatementMultiple]
                  ) [StatementListMultiple]
                  ConditionSingleTerm(
                    CondSingleFactTerm(
                      CondMultiExprFact(
                        CondSingleExprFact(
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              DesignatorEmptyFactor(
                                IdentDesignator(
                                 i
                                ) [IdentDesignator]
                              ) [DesignatorEmptyFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [CondSingleExprFact]
                        RelopLS(
                        ) [RelopLS]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            NumConstFactor(
                             3
                            ) [NumConstFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [CondMultiExprFact]
                    ) [CondSingleFactTerm]
                  ) [ConditionSingleTerm]
                ) [DoWhileStatement]
              ) [StatementSingle]
            ) [StatementListMultiple]
            StatementSingle(
              SinglePrintStatement(
                SingleTermExprPositive(
                  SingleFactorTerm(
                    DesignatorEmptyFactor(
                      IdentDesignator(
                       niz2
                      ) [IdentDesignator]
                    ) [DesignatorEmptyFactor]
                  ) [SingleFactorTerm]
                ) [SingleTermExprPositive]
                NumConstNo(
                ) [NumConstNo]
              ) [SinglePrintStatement]
            ) [StatementSingle]
          ) [StatementListMultiple]
          StatementSingle(
            SinglePrintStatement(
              SingleTermExprPositive(
                SingleFactorTerm(
                  DesignatorEmptyFactor(
                    IdentDesignator(
                     eol
                    ) [IdentDesignator]
                  ) [DesignatorEmptyFactor]
                ) [SingleFactorTerm]
              ) [SingleTermExprPositive]
              NumConstNo(
              ) [NumConstNo]
            ) [SinglePrintStatement]
          ) [StatementSingle]
        ) [StatementListMultiple]
        StatementSingle(
          SingleDesignatorStatement(
            DesignatorStmtMethodCall(
              MethodCall(
                IdentDesignator(
                 printArgs
                ) [IdentDesignator]
                ActParsLeftParen(
                ) [ActParsLeftParen]
                ActParsYes(
                  ActParsMultiExpr(
                    ActParsMultiExpr(
                      ActParsMultiExpr(
                        ActParsMultiExpr(
                          ActParsMultiExpr(
                            ActParsSingleExpr(
                              SingleTermExprPositive(
                                SingleFactorTerm(
                                  NumConstFactor(
                                   5
                                  ) [NumConstFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExprPositive]
                            ) [ActParsSingleExpr]
                            SingleTermExprPositive(
                              SingleFactorTerm(
                                CharConstFactor(
                                 t
                                ) [CharConstFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExprPositive]
                          ) [ActParsMultiExpr]
                          SingleTermExprPositive(
                            SingleFactorTerm(
                              CharConstFactor(
                               e
                              ) [CharConstFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExprPositive]
                        ) [ActParsMultiExpr]
                        SingleTermExprPositive(
                          SingleFactorTerm(
                            CharConstFactor(
                             s
                            ) [CharConstFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExprPositive]
                      ) [ActParsMultiExpr]
                      SingleTermExprPositive(
                        SingleFactorTerm(
                          CharConstFactor(
                           t
                          ) [CharConstFactor]
                        ) [SingleFactorTerm]
                      ) [SingleTermExprPositive]
                    ) [ActParsMultiExpr]
                    SingleTermExprPositive(
                      SingleFactorTerm(
                        CharConstFactor(
                         B
                        ) [CharConstFactor]
                      ) [SingleFactorTerm]
                    ) [SingleTermExprPositive]
                  ) [ActParsMultiExpr]
                ) [ActParsYes]
                ActParsRightParen(
                ) [ActParsRightParen]
              ) [MethodCall]
            ) [DesignatorStmtMethodCall]
          ) [SingleDesignatorStatement]
        ) [StatementSingle]
      ) [StatementListMultiple]
    ) [MethodDeclaration]
  ) [MethodDeclListMultiple]
) [Program]
INFO  03:24:18,256 - ===================================
INFO  03:24:18,259 - Line 20: Using local variable name: z
INFO  03:24:18,260 - Line 20: Access to array element detected. Array name: args
INFO  03:24:18,260 - Line 20: Access to formal argument detected. Method name: sum, argument name: args
INFO  03:24:18,260 - Line 21: Using local variable name: d
INFO  03:24:18,260 - Line 21: Access to array element detected. Array name: args
INFO  03:24:18,260 - Line 21: Access to formal argument detected. Method name: sum, argument name: args
INFO  03:24:18,260 - Line 22: Using local variable name: z
INFO  03:24:18,260 - Line 22: Using local variable name: d
INFO  03:24:18,260 - Line 28: Using local variable name: i
INFO  03:24:18,260 - Line 30: Using local variable name: i
INFO  03:24:18,260 - Line 30: Access to array element detected. Array name: args
INFO  03:24:18,260 - Line 30: Access to formal argument detected. Method name: printArgs, argument name: args
INFO  03:24:18,260 - Line 31: Using local variable name: i
INFO  03:24:18,260 - Line 32: Using local variable name: i
INFO  03:24:18,260 - Line 32: Access to formal argument detected. Method name: printArgs, argument name: num
INFO  03:24:18,260 - Line 37: Access to formal argument detected. Method name: inkrement, argument name: inc
INFO  03:24:18,260 - Line 37: Using local variable name: pom
INFO  03:24:18,260 - Line 38: Access to formal argument detected. Method name: inkrement, argument name: inc
INFO  03:24:18,260 - Line 38: Using local variable name: pom
INFO  03:24:18,260 - Line 38: Access to formal argument detected. Method name: inkrement, argument name: a
INFO  03:24:18,260 - Line 40: Access to formal argument detected. Method name: inkrement, argument name: a
INFO  03:24:18,260 - Line 40: Using local variable name: pom
INFO  03:24:18,260 - Line 40: Method Call detected. Method name: sum
INFO  03:24:18,260 - Method sum has varArgs with 2 args
INFO  03:24:18,260 - Line 53: Using global variable name: ibool
INFO  03:24:18,260 - Line 54: Using global variable name: i
INFO  03:24:18,260 - Line 56: Using global variable name: i
INFO  03:24:18,260 - Line 56: Using global variable name: ibool
INFO  03:24:18,260 - Line 57: Using global variable name: i
INFO  03:24:18,260 - Line 58: Using global variable name: i
INFO  03:24:18,260 - Line 60: Using global variable name: ibool
INFO  03:24:18,260 - Line 61: Using global variable name: i
INFO  03:24:18,260 - Line 63: Using global variable name: a
INFO  03:24:18,260 - Line 64: Using global variable name: niz
INFO  03:24:18,260 - Line 65: Using global variable name: niz
INFO  03:24:18,260 - Line 65: Access to array element detected. Array name: niz
INFO  03:24:18,260 - Line 65: Using global variable name: a
INFO  03:24:18,260 - Line 66: Using global variable name: niz
INFO  03:24:18,260 - Line 66: Access to array element detected. Array name: niz
INFO  03:24:18,260 - Line 66: Using global variable name: a
INFO  03:24:18,260 - Line 67: Using global variable name: niz
INFO  03:24:18,260 - Line 67: Access to array element detected. Array name: niz
INFO  03:24:18,260 - Line 67: Using global variable name: niz
INFO  03:24:18,260 - Line 67: Access to array element detected. Array name: niz
INFO  03:24:18,260 - Line 67: Using global variable name: niz
INFO  03:24:18,260 - Line 67: Access to array element detected. Array name: niz
INFO  03:24:18,260 - Line 67: Method Call detected. Method name: sum
INFO  03:24:18,260 - Method sum has varArgs with 2 args
INFO  03:24:18,260 - Line 67: Using global variable name: a
INFO  03:24:18,260 - Line 68: Method Call detected. Method name: verify
INFO  03:24:18,260 - Line 68: Using global variable name: niz
INFO  03:24:18,260 - Line 68: Access to array element detected. Array name: niz
INFO  03:24:18,260 - Line 68: Method Call detected. Method name: ord
INFO  03:24:18,260 - Line 69: Method Call detected. Method name: ord
INFO  03:24:18,260 - Line 72: Using global variable name: i
INFO  03:24:18,260 - Line 74: Using global variable name: i
INFO  03:24:18,260 - Line 76: Using global variable name: i
INFO  03:24:18,260 - Line 79: Using global variable name: i
INFO  03:24:18,260 - Line 80: Using global variable name: i
INFO  03:24:18,260 - Line 80: Using global variable name: i
INFO  03:24:18,260 - Line 80: Method Call detected. Method name: inkrement
INFO  03:24:18,261 - Line 81: Using global variable name: i
INFO  03:24:18,261 - Line 83: Using global variable name: i
INFO  03:24:18,261 - Line 83: Method Call detected. Method name: verify
INFO  03:24:18,261 - Line 86: Using global variable name: niz
INFO  03:24:18,261 - Line 86: Access to array element detected. Array name: niz
INFO  03:24:18,261 - Line 87: Using global variable name: niz
INFO  03:24:18,261 - Line 87: Access to array element detected. Array name: niz
INFO  03:24:18,261 - Line 88: Using global variable name: niz
INFO  03:24:18,261 - Line 88: Access to array element detected. Array name: niz
INFO  03:24:18,261 - Line 91: Using global variable name: niz
INFO  03:24:18,261 - Line 91: Access to array element detected. Array name: niz
INFO  03:24:18,261 - Line 91: Using global variable name: niz
INFO  03:24:18,261 - Line 91: Access to array element detected. Array name: niz
INFO  03:24:18,261 - Line 91: Method Call detected. Method name: sum
INFO  03:24:18,261 - Method sum has varArgs with 2 args
INFO  03:24:18,261 - Line 91: Using global variable name: niz
INFO  03:24:18,261 - Line 91: Access to array element detected. Array name: niz
INFO  03:24:18,261 - Line 91: Method Call detected. Method name: sum
INFO  03:24:18,261 - Method sum has varArgs with 2 args
INFO  03:24:18,261 - Line 94: Using global variable name: niz
INFO  03:24:18,261 - Line 94: Access to array element detected. Array name: niz
INFO  03:24:18,261 - Line 94: Method Call detected. Method name: inkrement
INFO  03:24:18,261 - Line 96: Using global variable name: a
INFO  03:24:18,261 - Line 97: Using global variable name: i
INFO  03:24:18,261 - Line 99: Using global variable name: i
INFO  03:24:18,261 - Line 99: Using global variable name: niz
INFO  03:24:18,261 - Line 99: Access to array element detected. Array name: niz
INFO  03:24:18,261 - Line 99: Using global variable name: i
INFO  03:24:18,261 - Line 99: Using global variable name: niz
INFO  03:24:18,261 - Line 99: Access to array element detected. Array name: niz
INFO  03:24:18,261 - Line 99: Using global variable name: a
INFO  03:24:18,261 - Line 100: Using global variable name: i
INFO  03:24:18,261 - Line 101: Using global variable name: i
INFO  03:24:18,261 - Line 102: Using global variable name: niz
INFO  03:24:18,261 - Line 102: Access to array element detected. Array name: niz
INFO  03:24:18,261 - Line 103: Using global variable name: niz
INFO  03:24:18,261 - Line 103: Access to array element detected. Array name: niz
INFO  03:24:18,261 - Line 104: Using global variable name: niz
INFO  03:24:18,261 - Line 104: Access to array element detected. Array name: niz
INFO  03:24:18,261 - Line 107: Using global variable name: i
INFO  03:24:18,261 - Line 108: Using global variable name: niz2
INFO  03:24:18,261 - Line 110: Using global variable name: niz2
INFO  03:24:18,261 - Line 110: Using global variable name: niz2
INFO  03:24:18,261 - Line 110: Using global variable name: i
INFO  03:24:18,261 - Line 110: Using global variable name: niz
INFO  03:24:18,261 - Line 110: Access to array element detected. Array name: niz
INFO  03:24:18,261 - Line 110: Using global variable name: i
INFO  03:24:18,261 - Line 110: Using global variable name: niz
INFO  03:24:18,261 - Line 110: Access to array element detected. Array name: niz
INFO  03:24:18,261 - Line 111: Using global variable name: i
INFO  03:24:18,261 - Line 112: Using global variable name: i
INFO  03:24:18,261 - Line 113: Using global variable name: niz2
INFO  03:24:18,261 - Line 115: Method Call detected. Method name: printArgs
INFO  03:24:18,261 - Method printArgs has varArgs with 5 args
INFO  03:24:18,261 - Compile successful!
